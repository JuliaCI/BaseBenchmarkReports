cset: moving following pidspec: 21990
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.991984573 seconds)
loading group "string"... done (took 0.615324088 seconds)
loading group "linalg"... done (took 9.799806233 seconds)
loading group "parallel"... done (took 0.184991745 seconds)
loading group "find"... done (took 1.557233591 seconds)
loading group "tuple"... done (took 2.2098029 seconds)
loading group "dates"... done (took 1.523235426 seconds)
loading group "micro"... done (took 0.241334983 seconds)
loading group "io"... done (took 0.599000578 seconds)
loading group "scalar"... done (took 48.45974117 seconds)
loading group "sparse"... done (took 14.660143107 seconds)
loading group "broadcast"... done (took 1.268102703 seconds)
loading group "union"... done (took 13.192235085 seconds)
loading group "simd"... done (took 2.721935222 seconds)
loading group "random"... done (took 11.399353756 seconds)
loading group "problem"... done (took 1833.218401295 seconds)
loading group "array"... done (took 27.555202175 seconds)
loading group "misc"... done (took 1.214023402 seconds)
loading group "sort"... done (took 3.969977261 seconds)
loading group "collection"... done (took 20.011769932 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.778152254 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144087724 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.219811636 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.379507968 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.240644433 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154303823 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.169002155 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.598351529 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.99309185 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.277460054 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153298421 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.571556899 seconds)
done (took 6.377110426 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.322407554 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.386692022 seconds)
    (2/2) benchmarking "String"...
    done (took 0.176757448 seconds)
  done (took 1.206747504 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072116138 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.181641417 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109956653 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095868492 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.115531479 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113388352 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.115246467 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112898801 seconds)
  done (took 1.491074117 seconds)
done (took 3.744602838 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.564377934 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.873735943 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.587812063 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.1733297 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.2054029 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.183582717 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.323475873 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162937507 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.122288729 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.106392066 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.22022587 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.348720726 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.505660121 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.102237061 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.104379274 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.110399882 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.097213315 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698343624 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078579396 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131523725 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.586054103 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.097501879 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120611816 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.135698849 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.202116414 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116077594 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167004903 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.108073768 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.672699306 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10250861 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.2300617 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.081667044 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.173558037 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.25210175 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.077272786 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.104675678 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674016419 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.183855658 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114677226 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098589777 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671884957 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080567644 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.24858145 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105824509 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.096222789 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191242295 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115114382 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.096727306 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084203568 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099143064 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159632823 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.450886516 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104156504 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170489987 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.104265148 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688635708 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094693932 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152122732 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.135141305 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105085856 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.078286288 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.108813547 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154257196 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110522858 seconds)
  done (took 20.154859701 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.157977448 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165832973 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.08961508 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138907584 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140570584 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09251617 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079459533 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091187461 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127924264 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.234353604 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139223928 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.168769922 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088415408 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08273313 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.143721017 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252437164 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120572151 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119812337 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083637317 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103582383 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138175212 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093771124 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106836355 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10807275 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166946094 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202092108 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104766502 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119518741 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097987647 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117996055 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140862399 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148866379 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090958052 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082736998 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18713691 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12006514 seconds)
  done (took 5.30902842 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.219066617 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.115645287 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.230677997 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.167424822 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141560156 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158063707 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156882571 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.283277499 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.254022487 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.174976907 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110047411 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109815533 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090937232 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076978953 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.090499487 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.733141171 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183686314 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155695733 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.152898762 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107142693 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098478315 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.384022822 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085743622 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097897558 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085725833 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.093279346 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.202387683 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10336897 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.377873609 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119454525 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108983189 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129828415 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199981923 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.136712764 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13733205 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122770084 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085403963 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.09622233 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.211204039 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106359831 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.15467612 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09123602 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108436804 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133442323 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13089025 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098341198 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107723302 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.228331616 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095822937 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117839556 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.171084235 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198760512 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.138685504 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07837629 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.391898736 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100945498 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10705032 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099651264 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.339157327 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139110804 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080371265 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093852348 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0858837 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094666957 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.447532816 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092077041 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.989296621 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096135571 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165115903 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10267366 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105577001 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101588122 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085197743 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.120474798 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07864386 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094170553 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077696538 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094776413 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099675593 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.1024691 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100079124 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093820882 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146639427 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119549449 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102368254 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125007059 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101094207 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078496372 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128809588 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096964346 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082615727 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099644548 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.173749225 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10621926 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079076068 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121205602 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103078333 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14194096 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099703769 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.234383811 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080628681 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125430607 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100575546 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127114457 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106639882 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096390564 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099408998 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076609009 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096275984 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145698519 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094438546 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07764371 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098880131 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111701893 seconds)
  done (took 24.547690021 seconds)
done (took 50.658961369 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.530326751 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.123233465 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11934081 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.120154056 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.116341267 seconds)
  done (took 1.734966793 seconds)
done (took 2.432476534 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.37988689 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.185774929 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.119028992 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.184555117 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103195397 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.188621336 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.190557762 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100256402 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220134941 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097247577 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181349492 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098137628 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087750175 seconds)
  done (took 2.865191305 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097092449 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120677536 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082247457 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111308914 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076361549 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113308281 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108675089 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116472025 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110410882 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086712701 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092941197 seconds)
  done (took 1.81389008 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092254984 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11602608 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082871475 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108193125 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078542139 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112843046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093796933 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122769418 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110700839 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090165318 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095914348 seconds)
  done (took 1.799941083 seconds)
done (took 7.167534067 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.226467462 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.977826169 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.151296702 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.204393292 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.372711995 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.250668622 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.625009602 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.185310874 seconds)
  done (took 12.901944778 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.117501337 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.139936654 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10057766 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100021509 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082743228 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099093776 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083579311 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097657165 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084557189 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098581147 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083216049 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098984995 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097729518 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083712351 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09699504 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08444841 seconds)
  done (took 2.315796702 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121167117 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121188077 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10718879 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111735944 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088365695 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10464528 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107028923 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090214669 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102181372 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102355264 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095548467 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108681654 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107333012 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08614486 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105702057 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111507598 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087168755 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107170167 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106331506 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091205827 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110519575 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.088776185 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108802317 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10876667 seconds)
  done (took 3.291439749 seconds)
done (took 19.207822466 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.18172516 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097870798 seconds)
  done (took 0.983902813 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.150644036 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153016495 seconds)
  done (took 1.011712957 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113421968 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096607291 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142022066 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117761526 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.097897372 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083644769 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.13591436 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098338214 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082169305 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097670369 seconds)
  done (took 1.776839017 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087379252 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102046194 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.094575303 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.162796914 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.09599643 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.101725179 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101452593 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086449788 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103979397 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084569759 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106913421 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12252701 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.104464415 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.109584167 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102735848 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.108000096 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.096536925 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105612668 seconds)
  done (took 2.59004363 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081780849 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098264085 seconds)
  done (took 0.892957185 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088109463 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098232652 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088169579 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101911778 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098197371 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083589009 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098068161 seconds)
  done (took 1.368510202 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.55317764 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.275183705 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.378358445 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.120378027 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.1436466 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.395880374 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143292145 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.115974145 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.115198911 seconds)
  done (took 2.994296934 seconds)
done (took 12.326990997 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.205940373 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.23445501 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.579473864 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.121464044 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.081931626 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.153910276 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.317179827 seconds)
done (took 2.408526484 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.359346271 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.157589226 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089786119 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096224026 seconds)
  done (took 1.416229122 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076710696 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104791036 seconds)
  done (took 0.899299922 seconds)
done (took 3.039882696 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080373553 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093621407 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.115189022 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097487592 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07802024 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096587792 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078145481 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095915895 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079404073 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094421892 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.078469812 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.094816672 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07809925 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09382443 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080141355 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095343461 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07828383 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094247103 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07915068 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094248289 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079162089 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094569053 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078549582 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093525175 seconds)
  done (took 2.877984287 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104725076 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100333705 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103966375 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087741211 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104028592 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102165444 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087778913 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099995514 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086901691 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098969644 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104403841 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087225134 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098189653 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.103719528 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082510038 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104106506 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087477233 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099464986 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097624483 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08974962 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103113308 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098399302 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089718099 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103332459 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102990018 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089875889 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099025816 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084453356 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10258008 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102980662 seconds)
  done (took 3.631752714 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089529459 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.091582163 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081155501 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104370735 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077287936 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096613091 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076799945 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094322996 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083061221 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096137806 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082533412 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096514454 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077212061 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098289102 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082102895 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099288387 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106134411 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078271495 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091537875 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082902139 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099172514 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077744389 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096393525 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080372498 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095587974 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077671655 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096235305 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080222614 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095635299 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080557407 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098267564 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084045062 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095262362 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091188927 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098867372 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080339509 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102085092 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.091576514 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.083768165 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092278195 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077503985 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094765079 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078536566 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102273554 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08065395 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097900206 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077452824 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09797569 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081787966 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101033061 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077862318 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093271304 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084290075 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098242004 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084312757 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093046559 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081931558 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.092526623 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081899468 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097301846 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.078285002 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093242725 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101597174 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082209903 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111133164 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087185634 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094408145 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08339281 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097263576 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085997556 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099599938 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107272597 seconds)
  done (took 7.205659523 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097837206 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10876445 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082649687 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098570015 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081660882 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097672844 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104481389 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082967075 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098377877 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090326773 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096800563 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082376897 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098340028 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097309769 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082678838 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098100644 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090503661 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097558753 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080563974 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097835781 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081414677 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105390204 seconds)
  done (took 2.782210767 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.262499035 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088498694 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.150860035 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116336141 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.121853843 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114692708 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086580542 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104143147 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085680794 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107848368 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109690411 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086951304 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120425047 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108014214 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109011582 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095011246 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10140592 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11086828 seconds)
  done (took 2.813499244 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100758223 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100900974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.123547303 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084849226 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100837411 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083750759 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108464879 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116683915 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083438155 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099874162 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110752553 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084474768 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100018765 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084181748 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100432188 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10032498 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.084346861 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100400162 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094343753 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108638628 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.111745546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110410275 seconds)
  done (took 2.926983099 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102067672 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100417191 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.136699781 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088686002 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.100356401 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082748501 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106470231 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.100342044 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09257361 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099893363 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083868284 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099408687 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108789062 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084479446 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107643178 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085967738 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099906723 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101343649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084433094 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098418697 seconds)
  done (took 2.696449311 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.180829485 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09891051 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115329038 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130716338 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11558104 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099918207 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129062632 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116086772 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099372379 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131274595 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116238595 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099381607 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129276118 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123894567 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11580327 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114451881 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12949138 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129191864 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116986854 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098754173 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131800818 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116622591 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130711732 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100362224 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115397254 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11472797 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099671538 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124099851 seconds)
  done (took 4.06068674 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081704999 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096546422 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081663532 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096586574 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081736898 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097422549 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082083343 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095914132 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081639304 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095598677 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.0819425 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09613444 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081072054 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.095520032 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081712571 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096923837 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080890196 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095711253 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080774331 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095809827 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080866922 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096147891 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080298851 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097789526 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0817476 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095843116 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082198649 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096012723 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08099577 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096253436 seconds)
  done (took 3.404348467 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09489542 seconds)
    (2/2) benchmarking "in"...
    done (took 0.125439896 seconds)
  done (took 0.957845989 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.091611844 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119587535 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080562009 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.098994586 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.108849309 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08260581 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111384465 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108016538 seconds)
  done (took 1.540409989 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.150426183 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.151486206 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088749272 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112020229 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.151170267 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.143641041 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.147253652 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089721538 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102755699 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078392923 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.146759984 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097146204 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104689306 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084438517 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104552183 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093991421 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099843325 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108276057 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092119425 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100647044 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088424468 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111463891 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105619905 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095102971 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.097903105 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091115405 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108231907 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.113180709 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084671655 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108573109 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085835732 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099393498 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.087364733 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104827491 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099659235 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.14891989 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097225542 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102591091 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.088034122 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106242638 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1093739 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082669892 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106915094 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084730739 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107273043 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104798692 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090040828 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100983658 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.079183461 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.099806928 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.083651431 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099220953 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.082354449 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105081975 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105109785 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096918123 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.101249984 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099800359 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085697495 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099253777 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086009044 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100287171 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089641986 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102735593 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106374528 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088249864 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104391213 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.083126819 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.102462716 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084354371 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.104450825 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122298682 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089220227 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106625379 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105990725 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083575113 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102320139 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090016943 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103988057 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105508344 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088004544 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108313552 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091525468 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100802655 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084544636 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10712611 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.102430149 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086160109 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096722817 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098374661 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103164323 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083631313 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096197089 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.102808211 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083362698 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104219313 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081551029 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105960848 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.082415732 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10580106 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088990194 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104175313 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107264886 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089020885 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106736957 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.087934499 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.144666661 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102102187 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.100436782 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.086284066 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107249986 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.081037259 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10780683 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.082478377 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102619849 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082270629 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106148689 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106092129 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085621449 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105655084 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091234868 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108949815 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103020272 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082042911 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102114814 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088150624 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111837909 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090813759 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104276457 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.101585481 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084029648 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10506517 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08750137 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103784265 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090610071 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103054073 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.0828887 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101480629 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107145169 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.089040329 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100834117 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087071773 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10643321 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103762402 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086101195 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107517897 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081898695 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097669875 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106416036 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084777572 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.101719995 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093900578 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101801118 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085290167 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.101981244 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111802453 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084994508 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108599477 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086115638 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107037043 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09004124 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.096768288 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101622649 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086858164 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108840455 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084877214 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.102457858 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08265034 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109432826 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080665996 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105087929 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097068604 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085177687 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.108162428 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093774476 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.106391883 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083390663 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119461587 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11633754 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091339022 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106911217 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088431794 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106835687 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104637221 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088600433 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108725455 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089764815 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.103300191 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104154952 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091335916 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101585091 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.087907383 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104530521 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089721601 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097717481 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084746486 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09805543 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105806621 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090456276 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10682133 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.090459306 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103867918 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086679157 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112494517 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.110521724 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.0887075 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098072238 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088731434 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.113563167 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090614373 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109160022 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109878985 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086376621 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.10231134 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094587055 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10450606 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105891456 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.085779235 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098904084 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081603754 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108757472 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087999483 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102069587 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082683962 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108385306 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10828223 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086087741 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097836594 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.089300006 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111370846 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083064725 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107435293 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.101839951 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087008047 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114867716 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080819632 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102476798 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109756859 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089203539 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100344386 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088364032 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10463327 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.089119569 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104888025 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085826095 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103618591 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110146003 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.086297047 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09957272 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084586146 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104009712 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080198027 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.104372056 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089015263 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10281419 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10162091 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093537719 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109972594 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.090288359 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104570542 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.106834593 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.090594126 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10883438 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086467382 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109484054 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.083007197 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.09884819 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102769501 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080735753 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104650074 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084320799 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.107749188 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085391505 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105230743 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087644842 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108939011 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103838728 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08983801 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117657332 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099812195 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080901691 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104433792 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088038826 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101119954 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102789696 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08615901 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108898406 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088927321 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110166533 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083792877 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102128321 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106546677 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084483399 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108165032 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090400248 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.109445012 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082787183 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106939933 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084762835 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112250471 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099062142 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.087449914 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105630771 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105869803 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084528056 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104255042 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083182984 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099072238 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085096057 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.109069433 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103684711 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088876184 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105851162 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085070397 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102860825 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083425258 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110344618 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.104930255 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.092104712 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.102215813 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081632664 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099628278 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.089627036 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106837702 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.090646393 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101936472 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105685002 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092908907 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.106206559 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084945029 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112495805 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091465789 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.109384546 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113572497 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081069753 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104126161 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094664517 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.102037494 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086942756 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104200704 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081320567 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110613525 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.109126352 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091375203 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105010408 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080217609 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103172325 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.109635509 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08696895 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.10578535 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085869893 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10736962 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083697538 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105859773 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090635675 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108066584 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110010293 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089018691 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106240008 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085230315 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.110073114 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083786967 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099806487 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080838882 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10361389 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108671207 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081849442 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.106864974 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087967599 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103887929 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087643023 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.108030893 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083455871 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109888925 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10805654 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085986331 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114487989 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084448762 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105051133 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08855443 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.108712372 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100008223 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086799142 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106126963 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092733473 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.105662325 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.107467345 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089050436 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108372383 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085893946 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107395631 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08940304 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109792565 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081182793 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.110049514 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110694781 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08648887 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103167244 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086704266 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102355233 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.087149792 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.111118242 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104938806 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095349144 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109620388 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085895224 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.103835541 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090270861 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106285106 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11158408 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084169683 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109686878 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081358186 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110960167 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105895796 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.092034096 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103569204 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082448553 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107466656 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088261876 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106210394 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109567923 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.09156658 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099482004 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081586515 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105128399 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085994678 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114602019 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11311384 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086746377 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105168251 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.085168426 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102926809 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092736142 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101075728 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08439778 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107946773 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110958452 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086089491 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10224303 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087868107 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106501416 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110305119 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088052022 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101734473 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088097023 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.110884237 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105392847 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085621031 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10333897 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092256914 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106670999 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084748459 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10014723 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114284784 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090707423 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111397497 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085082346 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.107447734 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103945277 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086789019 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.110638861 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085691031 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107375545 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086857291 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108379393 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114980701 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081065667 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103149511 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098904311 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107629541 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109014611 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.086804739 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105862073 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093992652 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111700864 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.086911092 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100154339 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082935703 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105036604 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100727715 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.087190284 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114742641 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088173697 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105911728 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088846233 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106677034 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.087152378 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.104531056 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101111581 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093505189 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105383664 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093864439 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101675263 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082029862 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.107585803 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090744213 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107083417 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108101588 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085357138 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.106436185 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082729292 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105338922 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09345705 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107972382 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108103998 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087987282 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105634042 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08699714 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114908314 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08596194 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108336377 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117054661 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.092256739 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108077824 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089731144 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112240432 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.111722151 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08738505 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.112004697 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086174865 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107763295 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.111131516 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.093772352 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119920531 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088226767 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100872426 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.089600687 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106251894 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100427646 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094246312 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114459271 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.092604461 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108909088 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104010026 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093100987 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112840618 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089076402 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10536604 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104843444 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090022582 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104361942 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.087739361 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104160252 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.092870188 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.112694023 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089709729 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112148517 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101650672 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097565257 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112951413 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.094001853 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103823407 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082484824 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102213791 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.087176997 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.112508681 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.110860238 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089440665 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106506937 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088905256 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10906337 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088921766 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105335232 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.112260672 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.090344971 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.103735585 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091196198 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106497969 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090142568 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.104291139 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090913981 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111732014 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110351429 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098192438 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.110694621 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087286252 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105188692 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108024733 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08796255 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109484072 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089128383 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104038421 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082367304 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109815559 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.09263155 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107898937 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112834219 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095145446 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106630997 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092065123 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113572733 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.109724353 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.085433797 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109591887 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.088118246 seconds)
  done (took 59.675864167 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.165222909 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094370026 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105978655 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08816448 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135381923 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108556862 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087954534 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10768013 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089683055 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119564526 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106247027 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087842132 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.131189494 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139368302 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135688055 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122104505 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106621509 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089707879 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107018324 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089347546 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129203421 seconds)
  done (took 3.137825339 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111587756 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.126365398 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125125427 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127726966 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116700828 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.105538729 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.124419545 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122975244 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.128604286 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118355964 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108518248 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12440264 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119930481 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.120025737 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100454898 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119541386 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.128089005 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118921666 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.124650705 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10675009 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119389966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125577292 seconds)
  done (took 3.411534725 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096541184 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.109495648 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091583257 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.10580418 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.09140066 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.106073709 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.096062109 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.105785153 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.097153746 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.10744742 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.10279867 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087902602 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111624634 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.086934284 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.104356991 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.087825992 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.115554203 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.090125649 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.111734113 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.085582011 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.123296671 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.106087796 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.088614726 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.103866656 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.118809919 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.092950945 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.109244011 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.090717098 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.103369651 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090753712 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106072794 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088472169 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.110468394 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.08380767 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103261439 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108744122 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.091393178 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.106329287 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.086738899 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110297672 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.088294978 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.111838524 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.094362352 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.106560247 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.085901219 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.107798626 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.11046328 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.086729533 seconds)
  done (took 5.597945352 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.151705203 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168386043 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.095995762 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136694412 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131667648 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.126657548 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.113320236 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158482622 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093706509 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.113851493 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.134724839 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.13477274 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.1203739 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103465523 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111745003 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.09472363 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.118314743 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.114282152 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.120908509 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097267494 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.121425544 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.120624959 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114327612 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130093403 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117816522 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.113447769 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100131329 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.121789268 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.130469328 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.122436048 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.099745694 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124837365 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.1318561 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.120591261 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.094976153 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.120169167 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136983587 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.116806331 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096185368 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.112188227 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.099554036 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122400774 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11694413 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13533912 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.095972745 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.119506871 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.115662378 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.091651955 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.133483222 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.120293495 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.127026609 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113652852 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.118957556 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.116132291 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123259904 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116807964 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.115941133 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.112674524 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.09779202 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.133885231 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.113461534 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.098655333 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133424929 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120986071 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.125973109 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133567343 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.098497248 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11793323 seconds)
  done (took 9.002419349 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123776394 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.118006779 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132874659 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133176379 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099178451 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117569785 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117688164 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.098860641 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118288653 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126855612 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11771991 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.210539794 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113546655 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.105967886 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118787219 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118296638 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.098886802 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118694683 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118807007 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098154754 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118583129 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131510147 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117648697 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133013359 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133759232 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.094291872 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11873476 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098775633 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132581414 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117554471 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134137079 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.117919179 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098948638 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132035943 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134640029 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.118776037 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090345859 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118359375 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.119051327 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098324875 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113916719 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133933905 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11916929 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.09434186 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118586893 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118954137 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113149701 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135793985 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124179208 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127071481 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.119017232 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131527473 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100257228 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120256909 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.132243358 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143334867 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132859283 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132234396 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099725779 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.132572247 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13282392 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142725407 seconds)
  done (took 8.28426379 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088291803 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106743443 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088159878 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.107462286 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088084578 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106977352 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086828104 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.106837727 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08786397 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.106306574 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08818961 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10746304 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088124397 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107532654 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087665197 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107257888 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088088288 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107953041 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087313774 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106953955 seconds)
  done (took 2.751344803 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.100788187 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.133414231 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.11218342 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101916482 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.112202363 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.120954425 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091179952 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111151979 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091885267 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111202264 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.123806522 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105202965 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110984374 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.12082166 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124413621 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101231695 seconds)
  done (took 2.574155952 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.115670987 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.13318931 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.170912056 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.115451031 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.111829115 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.099905009 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.111094353 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.093224012 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.110351356 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.097659445 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.116298028 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.11701627 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.09198501 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.111267042 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.091994902 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.116263456 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.089763655 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.11672208 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.11135883 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.171153734 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098473067 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.115723484 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.113104354 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.095691944 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.11534134 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.097376587 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.120728425 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.111232126 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.094268316 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111922579 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.115657892 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.102647766 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.110973161 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.098780048 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113291909 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.093226142 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.111337456 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111833022 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.097395531 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111896414 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.09335488 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.114624109 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.110986699 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.095317464 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.109203169 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.093406669 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.109666179 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.099867269 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.113664346 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.116313094 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092040419 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.118247041 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.097057476 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.123446403 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.120179466 seconds)
  done (took 6.849449326 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104906552 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11497003 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10654112 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109840213 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.111943528 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.094050044 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11335561 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095500664 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114892221 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088322223 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115740413 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112831958 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094892352 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113732316 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095407179 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113398033 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.108457728 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.094937412 seconds)
  done (took 2.711137279 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098629211 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111017389 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097218625 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.113185407 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092808487 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112839293 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090594143 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109757583 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110449804 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091882864 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111343576 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091986025 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108862312 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090494914 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112188682 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091194065 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111711159 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089395665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112647489 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108920407 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091628456 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108945272 seconds)
  done (took 3.069580462 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103739427 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.170309609 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121591768 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.180708625 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112094184 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.089255766 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12201266 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.111524831 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.108872366 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.108522056 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.108549686 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.089566882 seconds)
  done (took 2.236390244 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121421954 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154772 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112321981 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093108191 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125700932 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119052368 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09894834 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118685178 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13113987 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136694832 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098479751 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132639839 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130210345 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132070434 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125723442 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123935846 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100349661 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118759871 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092885553 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164039187 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099401821 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132181637 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118092557 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098616805 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117648379 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133770008 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130576165 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13558433 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098522285 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131518033 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12469766 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118659105 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130100937 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115784801 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112139495 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13215172 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119091923 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144130061 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107054739 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132851172 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111611406 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126178894 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110527232 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128583799 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130812341 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119590095 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128340767 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099209509 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119710113 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151802582 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126239947 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133332264 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105437459 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131720533 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131872636 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150749075 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135801829 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133696827 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125253591 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13669856 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13357097 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106653516 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134570913 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136397007 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125821979 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135217522 seconds)
  done (took 8.991248515 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159342967 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094198528 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120498003 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13725703 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134691014 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099574175 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119398341 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119450309 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099602624 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114232152 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171767693 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118884484 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134218875 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113794402 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119859897 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119248166 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098525341 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132550537 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114168932 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.153687399 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120033152 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133521174 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134512314 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113881523 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13684 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125644411 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118762914 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099921005 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119696888 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119398823 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127923274 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099415053 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133017866 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113854964 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134123983 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099515118 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119926178 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127872692 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099269825 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127221149 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133638836 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143953151 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11952637 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099547566 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136809702 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120487022 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12014196 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095877148 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119297 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114915969 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116656785 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138011753 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137202846 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134304758 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119186801 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120807541 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099848338 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11894781 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119766189 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107258576 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13447267 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119607005 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154425642 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119465788 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100306316 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134632891 seconds)
  done (took 8.880009603 seconds)
done (took 162.788618611 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.155481683 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.177263697 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.152680012 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.150214618 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107006388 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120820778 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140512002 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.153724708 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084915801 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.106568254 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085440309 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110688745 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172999567 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085775488 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105949027 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089780426 seconds)
  done (took 2.816286046 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.207418134 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307093989 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.13093613 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.090260666 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.117648568 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109654478 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090433192 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112350868 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088471103 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.122148363 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109985762 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089176267 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12141351 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088766455 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109114666 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108476336 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.101201007 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109155971 seconds)
  done (took 3.039836411 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.1144812 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.161940131 seconds)
  done (took 1.102345078 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125409431 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.193792691 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314722679 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168849294 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.138419135 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.134812105 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147659707 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129702344 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202390433 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133473992 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.132571956 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.114161134 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141207374 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100533732 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.124919814 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114332074 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123512527 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.123466441 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.122308369 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096055251 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136741029 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.115309846 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.100667342 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.12508328 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.192604228 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133269476 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.116975782 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.095128067 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11712971 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.101979271 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.121553614 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.133309679 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.133442688 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181493804 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121364345 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.200204088 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102877376 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113902321 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.101890434 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115673941 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120390479 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120229414 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111130762 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115765028 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.09451812 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124081662 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.116307872 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.094719529 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.125236401 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125991223 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.124741464 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1019591 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.196916734 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125221471 seconds)
  done (took 7.966159815 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.906703347 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.134518265 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115137765 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.02968191 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147002382 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129842741 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.889405684 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138247718 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.278317146 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.899552569 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107884493 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126930974 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260605875 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.292599204 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.18950725 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375771554 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.764023632 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126353985 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.120669336 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.183584051 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100851554 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.38161359 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138223491 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.441708788 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.113965289 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090928957 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120575562 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125811931 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178709652 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.110799686 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095894384 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.222009582 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.283729029 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228717959 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113457518 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089803037 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111518254 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187752602 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.318767686 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.247220461 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184352096 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087446675 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111949824 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126363728 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115185357 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108278296 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180873482 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.214098576 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193060764 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118171596 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125716345 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122941629 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104502842 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.200002815 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.088271143 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.37685791 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.412180633 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090221266 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122584227 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132290074 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.291145783 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089678195 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.277049876 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120075217 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240976478 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11200388 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81493685 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.183190202 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112535611 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122505835 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09929365 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118544417 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12460415 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17902862 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39355373 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130340074 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116043584 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090650133 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.267501583 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090717429 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111808042 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182878861 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115084316 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121446338 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108705964 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127591699 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.210909046 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268694876 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128291429 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121526862 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097869533 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127178891 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.113821577 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234889808 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.24809784 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.197539424 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233515596 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127070643 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181270284 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.204315049 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125406133 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189759614 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12271243 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131758517 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105268323 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.266517724 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154396841 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.09153411 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117164953 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11986696 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155171577 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09412949 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122348124 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.18813847 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.503461343 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183183951 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111143099 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093480569 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123512189 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201015094 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100116627 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.289012764 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124187138 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185678452 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123099142 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10909846 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101984165 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.204089945 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128193414 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100693421 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127647133 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121475825 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.269692731 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24843217 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12898975 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.262643728 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187962905 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123050903 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191525391 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122220191 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.206062807 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103050887 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125522756 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113554809 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811388904 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106167791 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122443593 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11865009 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20351788 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089972602 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113873451 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.089862365 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108359852 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.839699612 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092329431 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.109603329 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.11213683 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104672172 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123004471 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120497441 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097891599 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.200893996 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266747483 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127212971 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100991502 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.112114693 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178541408 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115471293 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.111151805 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091656123 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.111258231 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102617686 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118189434 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092165594 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.21528371 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176292885 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.273723205 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.55496726 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112579699 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.111243771 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.263395822 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091765801 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.336861692 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123442164 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.257071865 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.207189637 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088146353 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.395406756 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190022012 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201936912 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.115455021 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192246169 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110290732 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.101134165 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.20000679 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090549575 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122239234 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.198302479 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109409424 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129457402 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.192846814 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11282001 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247730441 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111041542 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188003863 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114658013 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125967186 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.340999089 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090446679 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136727569 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.201656749 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097095657 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.11444689 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.741456509 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.091897652 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125594726 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122440547 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.25682858 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184334177 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123358736 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122587368 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104785459 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.203007784 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232457645 seconds)
  done (took 47.656754813 seconds)
done (took 63.403100604 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.330356965 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277035472 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.326459001 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.201956042 seconds)
  done (took 2.066727191 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.238875166 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155767905 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.216764253 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089610235 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.205479845 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.112385186 seconds)
  done (took 1.871209524 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.536961395 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.399612226 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.358931747 seconds)
  done (took 2.149299343 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.26852252 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.299392364 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.365522492 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.500203456 seconds)
  done (took 2.397351238 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.288080352 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116162939 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.129612998 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.187373213 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.257655126 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.284337361 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.157670313 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.184986205 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.140999394 seconds)
  done (took 2.65120481 seconds)
done (took 11.988787058 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.364986996 seconds)
    (2/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.315206061 seconds)
    (3/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.303327998 seconds)
    (4/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.159289754 seconds)
    (5/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.168336853 seconds)
    (6/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.208906265 seconds)
    (7/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.243817285 seconds)
    (8/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.295329587 seconds)
    (9/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.227868765 seconds)
    (10/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.169925063 seconds)
    (11/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.10444266 seconds)
    (12/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.169159669 seconds)
    (13/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.25341701 seconds)
    (14/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.167913674 seconds)
    (15/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.203359701 seconds)
    (16/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099253087 seconds)
    (17/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130840067 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.201989515 seconds)
    (19/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.18859183 seconds)
    (20/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.241350371 seconds)
    (21/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.133469657 seconds)
    (22/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.25117065 seconds)
    (23/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096695217 seconds)
    (24/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.1639536 seconds)
    (25/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.14336136 seconds)
    (26/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.227967375 seconds)
    (27/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.288797041 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131196649 seconds)
    (29/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114715355 seconds)
    (30/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.208533349 seconds)
    (31/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.236334378 seconds)
    (32/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.117204569 seconds)
    (33/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113220801 seconds)
    (34/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.201550262 seconds)
    (35/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.246902989 seconds)
    (36/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.131296809 seconds)
    (37/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.228427518 seconds)
    (38/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.107266174 seconds)
    (39/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.212384793 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.150645519 seconds)
    (41/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080839405 seconds)
    (42/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.153886095 seconds)
    (43/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.152177266 seconds)
    (44/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.15445768 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.119470353 seconds)
    (46/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.214796847 seconds)
    (47/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.125612391 seconds)
    (48/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143516796 seconds)
    (49/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.087297302 seconds)
    (50/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.290564861 seconds)
    (51/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100432893 seconds)
    (52/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.219240739 seconds)
    (53/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.103114925 seconds)
    (54/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.176915634 seconds)
    (55/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121933406 seconds)
    (56/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.122511034 seconds)
    (57/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.093795569 seconds)
    (58/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.197549075 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107085485 seconds)
    (60/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198924107 seconds)
    (61/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.103058925 seconds)
    (62/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10427751 seconds)
    (63/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.168764381 seconds)
    (64/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.112319047 seconds)
    (65/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.240272891 seconds)
    (66/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.097903727 seconds)
    (67/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.080220771 seconds)
    (68/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119306212 seconds)
    (69/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.123590441 seconds)
    (70/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.082495874 seconds)
    (71/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.180673652 seconds)
    (72/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.119927832 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097279096 seconds)
    (74/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.161216932 seconds)
    (75/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083206832 seconds)
    (76/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.10850872 seconds)
    (77/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.161885292 seconds)
    (78/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103223335 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.151985665 seconds)
    (80/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.196849803 seconds)
    (81/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.21676091 seconds)
    (82/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088528103 seconds)
    (83/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.104360138 seconds)
    (84/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.140382741 seconds)
    (85/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.197491713 seconds)
    (86/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.249300701 seconds)
    (87/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.134638622 seconds)
    (88/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.214934551 seconds)
    (89/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081649967 seconds)
    (90/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.120579677 seconds)
    (91/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.099743712 seconds)
    (92/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.121891909 seconds)
    (93/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082241847 seconds)
    (94/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.129252867 seconds)
    (95/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.159975228 seconds)
    (96/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.140404011 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12145062 seconds)
    (98/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.086965586 seconds)
    (99/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.270375045 seconds)
    (100/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.111976213 seconds)
    (101/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.10474928 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097281163 seconds)
    (103/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.145103168 seconds)
    (104/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.111445436 seconds)
    (105/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.144511545 seconds)
    (106/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.118075382 seconds)
    (107/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.083294557 seconds)
    (108/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.210502672 seconds)
    (109/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.146392407 seconds)
    (110/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117945661 seconds)
    (111/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135583854 seconds)
    (112/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089851877 seconds)
    (113/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.125057512 seconds)
    (114/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090031525 seconds)
    (115/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.122078738 seconds)
    (116/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.13073997 seconds)
    (117/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.107872477 seconds)
    (118/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.172927514 seconds)
    (119/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097015318 seconds)
    (120/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.105365507 seconds)
    (121/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099454355 seconds)
    (122/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.104895177 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.097997517 seconds)
    (124/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117193722 seconds)
    (125/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.080131751 seconds)
    (126/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11149817 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096905196 seconds)
    (128/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131830861 seconds)
    (129/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.136882593 seconds)
    (130/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.095848214 seconds)
    (131/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.153065905 seconds)
    (132/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097602885 seconds)
    (133/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.199954583 seconds)
    (134/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.106198743 seconds)
    (135/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098692711 seconds)
    (136/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.157893465 seconds)
    (137/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09931728 seconds)
    (138/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.155490925 seconds)
    (139/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.155552368 seconds)
    (140/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119336224 seconds)
    (141/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081551493 seconds)
    (142/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082240234 seconds)
    (143/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202031025 seconds)
    (144/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.104065307 seconds)
    (145/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.096096232 seconds)
    (146/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.082604522 seconds)
    (147/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113779912 seconds)
    (148/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081142174 seconds)
    (149/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.104113836 seconds)
    (150/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082605959 seconds)
    (151/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.197005615 seconds)
    (152/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083133392 seconds)
    (153/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.122552011 seconds)
    (154/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.143143639 seconds)
    (155/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.111867125 seconds)
    (156/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.135022451 seconds)
    (157/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093241284 seconds)
    (158/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.214442205 seconds)
    (159/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.127544755 seconds)
    (160/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099027787 seconds)
    (161/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.129672429 seconds)
    (162/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083208946 seconds)
    (163/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.119921298 seconds)
    (164/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.120620864 seconds)
    (165/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.100011929 seconds)
    (166/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.118992616 seconds)
    (167/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.082303287 seconds)
    (168/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120904727 seconds)
    (169/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.099651364 seconds)
    (170/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.167536685 seconds)
    (171/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.1063829 seconds)
    (172/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099149692 seconds)
    (173/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.121412752 seconds)
    (174/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083791875 seconds)
    (175/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.104640248 seconds)
    (176/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.137404899 seconds)
    (177/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.106029923 seconds)
    (178/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083147689 seconds)
    (179/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.105841915 seconds)
    (180/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088886683 seconds)
    (181/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.08285333 seconds)
    (182/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11337203 seconds)
    (183/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.148125658 seconds)
    (184/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.08778301 seconds)
    (185/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.113702601 seconds)
    (186/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08985159 seconds)
    (187/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.121476641 seconds)
    (188/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.217809572 seconds)
    (189/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084127284 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120754458 seconds)
    (191/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.083278099 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.121590667 seconds)
    (193/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083989875 seconds)
    (194/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.137085487 seconds)
    (195/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091612435 seconds)
    (196/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.12171248 seconds)
    (197/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083624754 seconds)
    (198/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.122333579 seconds)
    (199/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.109893759 seconds)
    (200/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.168045675 seconds)
    (201/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082675072 seconds)
    (202/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.113930077 seconds)
    (203/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.084028517 seconds)
    (204/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.106758208 seconds)
    (205/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098336954 seconds)
    (206/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.215458245 seconds)
    (207/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.151045637 seconds)
    (208/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.099844646 seconds)
    (209/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.107801363 seconds)
    (210/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084110927 seconds)
    (211/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.152092 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.135961097 seconds)
    (213/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.083991921 seconds)
    (214/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082576552 seconds)
    (215/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.128580609 seconds)
    (216/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114044406 seconds)
    (217/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.110359872 seconds)
    (218/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.125494688 seconds)
    (219/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108094786 seconds)
    (220/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.105579918 seconds)
    (221/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.082099838 seconds)
    (222/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.10734001 seconds)
    (223/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083795846 seconds)
    (224/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084080501 seconds)
  done (took 31.760967993 seconds)
done (took 32.624476069 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.507437232 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131359342 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102721368 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126698047 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.185438658 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104428426 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.134734193 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.130766626 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.107430189 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.122796021 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091850036 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.131624603 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.126781872 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.186391632 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.104576303 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.119986277 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118705171 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.107173733 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.133859706 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.13564463 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.185781016 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094610292 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.132365422 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.094510449 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.209778869 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095622819 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127158831 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102585117 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.132846216 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099974519 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.126410591 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117626606 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111612194 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.134768272 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091309837 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.123982099 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115585438 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.092178071 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.123820068 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.101642691 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.132644325 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.101131665 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.128644807 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.119782442 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.101941249 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.123257378 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09276807 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130348841 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.115378319 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102188208 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118230064 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.111383234 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.123000589 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.115842195 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.09280314 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.119305095 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.107029236 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116681271 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.108235279 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116401432 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.118879247 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092782735 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.125845566 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092865063 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.123905291 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095209663 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.123378462 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.125950443 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.099608545 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118609996 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093257982 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.122548745 seconds)
done (took 9.841845911 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.099275094 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182189418 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.187234894 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.191511521 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.151023397 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.135710935 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.139334645 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12393051 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.134291505 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14366368 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.155072664 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.124501936 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.220945432 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.10785894 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.136456688 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.125105245 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.109467963 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.126822206 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.195109468 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.144487071 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156076356 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.107760688 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156162308 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138549247 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.101430415 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.157868524 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.127780569 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.126003037 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.101153685 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.133100638 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143223611 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.101303551 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.126633079 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.116723567 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.136968569 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.130647134 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113463362 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.126405414 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.123125851 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.099964062 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139813176 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135747663 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098985985 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.136313643 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.125933535 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.109734369 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.131937343 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.131248859 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104246509 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.126895305 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10318266 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156113571 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.131194996 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.135788704 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.107946959 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.130879546 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.109040356 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.131085838 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.125901127 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.106259366 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.122780639 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.101153487 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12813853 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152948745 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.126613822 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.108077289 seconds)
  done (took 9.574285189 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120530171 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157864614 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.134908947 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.134620881 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.10776133 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.114232293 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090227464 seconds)
  done (took 1.773855293 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092243109 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189739626 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186485994 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.190112839 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.182438363 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.221593007 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1137815 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116499874 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.15739618 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.103361409 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188342105 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.244797308 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.099502837 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.135109561 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.18975726 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116649899 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.192669811 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092947122 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.1302626 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.187767399 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.134095136 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.148951926 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.107560122 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.117947253 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.182451113 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094579946 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.268715294 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134454514 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.100354079 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.126587898 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.105485176 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.225727234 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185456503 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.109677066 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120510489 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.186534195 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.18424629 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.129171189 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.2005865 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097728386 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.183425795 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.130484816 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.130630986 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.106897367 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.128605139 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.170886091 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.111002114 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.131652462 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.127914608 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19164091 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.104669466 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209729685 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.100842729 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.130893452 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.104596551 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.131818388 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.135093127 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.105674635 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.19004087 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133834829 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184951429 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184202084 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183030716 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.18472535 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140634522 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184727123 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.181906727 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.127842383 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102126415 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.146948895 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185946173 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.12786448 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.107030877 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.17115767 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133842589 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.187403511 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186767222 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125402581 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.109006365 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.122856101 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.102262845 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.117995222 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.17540273 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10554127 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126785359 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138269915 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.106782739 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.131217572 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.121815641 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120472195 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.130251112 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.132761439 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.109527439 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.129036631 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135437223 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189713566 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.131138857 seconds)
  done (took 15.05510127 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095644163 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118138257 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.101042226 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.119257715 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09499686 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.119448257 seconds)
  done (took 1.572512901 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.128397647 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.132931965 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.142471194 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.108708293 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187920887 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.192740365 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.220537965 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106432524 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.149357393 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.143212675 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.195005595 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.197392737 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.208681704 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.134719932 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.196554173 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.133819301 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.19702521 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103999592 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.141463659 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127640147 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114044751 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.133686561 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128830813 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.185874005 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.134405311 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.10958434 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.132062852 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.140532982 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.116035869 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.13115369 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.133754088 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.109583801 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.126777456 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.129070939 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.197231424 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.101359004 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128277714 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.138514357 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.109169175 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.135108048 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.195904288 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128177156 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.140020848 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.114172862 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13020471 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12679231 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.114362795 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131863161 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.196200304 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.139516018 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.139124085 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.107613169 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.135440565 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.138210841 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12613783 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105935343 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.138904448 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.196012874 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.135490122 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102621739 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.133688184 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.135911024 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129355305 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.113590582 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.134958303 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.137494585 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.103104234 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13297081 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10292571 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.134820404 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.140050327 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.132202388 seconds)
  done (took 10.988903422 seconds)
done (took 39.867258623 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.105166481 seconds)
  done (took 2.032667174 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.010791433 seconds)
  done (took 1.939446844 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.027168109 seconds)
  done (took 17.994679999 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.567006377 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.651339603 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.958466258 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171409978 seconds)
  done (took 3.278788355 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.981787829 seconds)
  done (took 1.932927125 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.324355878 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.27954807 seconds)
  done (took 1.539975558 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.93191993 seconds)
  done (took 1.874893408 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.389728792 seconds)
  done (took 3.336514009 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368047376 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.197855705 seconds)
  done (took 1.516535477 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.68266418 seconds)
  done (took 1.627406348 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.315990463 seconds)
  done (took 36.264713805 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247067926 seconds)
  done (took 1.206194866 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.315892342 seconds)
  done (took 1.267461584 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.573489809 seconds)
  done (took 4.524754037 seconds)
done (took 81.270154353 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105661908 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131815347 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108765595 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129508219 seconds)
  done (took 1.42089605 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.115770121 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.131207766 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.110403836 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.130054792 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.140794361 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.106566613 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.130077237 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.138382207 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.106227395 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132507444 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.106646871 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.131224838 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.132239736 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.104274177 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.129469146 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.108144848 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.134089943 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.129776387 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.10755817 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.133040175 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.104846886 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.131646077 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.133199216 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.106435576 seconds)
  done (took 3.88829814 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106472336 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.123751011 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102258809 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122488395 seconds)
  done (took 1.413510944 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.114547545 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.147996444 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.145593245 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.11360968 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.149271743 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.145335334 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102542941 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.126295682 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.104443505 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.138743906 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.102618207 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151404844 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.146504293 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.131657247 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.116471046 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.123970597 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.108045413 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.146502948 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.137507885 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.1160416 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.126432897 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.113460783 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.128272972 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142830125 seconds)
  done (took 4.040871461 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.217507134 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119240033 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147374106 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.184258589 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.150984888 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.102602795 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.151069786 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134790318 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.11251412 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.134586376 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.132404974 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.190733568 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108768798 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.135804426 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.106401814 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.137937459 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.136138256 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.107485684 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.136361866 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.1437699 seconds)
  done (took 3.74935236 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106995013 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122722113 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09379012 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123226069 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.105949944 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12609785 seconds)
  done (took 1.639129853 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094120243 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.120295429 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094796593 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115819815 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098121684 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116121001 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091872947 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11723724 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092693619 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116025427 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093198026 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114794263 seconds)
  done (took 2.226643712 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.31080965 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.099935798 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.126564648 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.121618976 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103080561 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.123069148 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.137837924 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09812322 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.259095264 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.097832362 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.140940209 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.199375938 seconds)
  done (took 2.778335934 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232134064 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107601389 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289536614 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389552044 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174676201 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182402309 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287495855 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182869282 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20800636 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153188014 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213866796 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17093583 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167903183 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197905478 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154834712 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.180186187 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193400208 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219163864 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162458191 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226397566 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207304363 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183467998 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199583588 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165614241 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124768846 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177423189 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.132458951 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138918143 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191897088 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187214345 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192253016 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164598676 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154671299 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22229967 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267067064 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197487481 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.323627899 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147318063 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.206743383 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201099427 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279074404 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152817041 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216231198 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168010312 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143278176 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199677317 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171927843 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.199083089 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145799359 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151387049 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206371068 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193282473 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204234476 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15153499 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.334008859 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137140714 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159950457 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191476228 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23512088 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20992003 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182725409 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.131513945 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199789577 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19893038 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196808392 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162486232 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187494662 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139221403 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194207334 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213637797 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22421553 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184315541 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.202947831 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146229378 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178993388 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186208157 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167217438 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195982856 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174918745 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103901588 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163733005 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149386039 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13719902 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174080473 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133620435 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223604138 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146035827 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.204788313 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247331762 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173224197 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177071949 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180096458 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184394333 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132971139 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.132553194 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160229396 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.176705942 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1727104 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141177499 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144569339 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158680235 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13993088 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165896947 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.131639006 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14825316 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.148633894 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182680386 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177961093 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.142802416 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179963033 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162872987 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.173847687 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188079162 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204136639 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141915288 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118355371 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235379609 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145908687 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151174157 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191744186 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232998666 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.155269578 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150250442 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186021588 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240997963 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127696573 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233397336 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154499704 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117959328 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.168912779 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172513557 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171389558 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.168560969 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138759874 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.141957419 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241264743 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.110225929 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1500749 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189907917 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13885735 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138205316 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130723179 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148537821 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.154454278 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.166192862 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153216021 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169409409 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147850622 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167596004 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174177356 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155710812 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242964315 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117111061 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.174809325 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159825447 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.129347013 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202531487 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202527075 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139409333 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205192685 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187832811 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235147828 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179949982 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114007086 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197744881 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141159671 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.132419193 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18462115 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176795848 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17876275 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203292658 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207088952 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.214839472 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.141622864 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163222974 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184576896 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.218176648 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175281368 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.130904841 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179023926 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185642052 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.132843698 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.136780438 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113744272 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151331257 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142310542 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116693035 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227159238 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181679276 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201785612 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173979632 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151401562 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200832327 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.139460287 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181671363 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.192799787 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150149898 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.207832379 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19906289 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183407674 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155477404 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188519575 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.131054425 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108997803 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14775993 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185239583 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143941817 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118064942 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158002059 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198191762 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219368716 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134585906 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245773341 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183428447 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208769194 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.13307416 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.175578274 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188550718 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172028821 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.198239044 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121242055 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.175375059 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194187581 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157532468 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211794398 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179365107 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183739607 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249393365 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.170202431 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140272354 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136420814 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210533238 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126708767 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179488461 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158506436 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148005545 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167972496 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.149285894 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113038011 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226303966 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128490404 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229297024 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.170087844 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193489143 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13451833 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132302257 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173899022 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158007671 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.129815619 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187279534 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210431871 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160012551 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17305952 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191246983 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140563333 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.319793418 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209585204 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203277627 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151746986 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156547184 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177606495 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17448396 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180280732 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200036027 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157293975 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198408745 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173476663 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.155749851 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119491396 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161081867 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165054552 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16850645 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148249238 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170968964 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.126484071 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231863313 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157786193 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172533025 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180073265 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.133450038 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.163769038 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154042801 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220891869 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173953115 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195074357 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.171078023 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.186598652 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204279961 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13485576 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109777026 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.141564121 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199648704 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144020658 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173242392 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195523078 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234851829 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176523701 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1861994 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121791927 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.138212252 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175570993 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162372125 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214341921 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154487607 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.151058829 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21226 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.165327873 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141398746 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178665992 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293037077 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158132303 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19116133 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105187416 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288481899 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137878386 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142242804 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172739468 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189024203 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136050164 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.196772303 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179400637 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157813172 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175474386 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149220305 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204232013 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223183239 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214921188 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195411236 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.15637621 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174045225 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179231382 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19437649 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155405694 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.132860597 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175798329 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198795347 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.235545203 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11936029 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178381791 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176929315 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174511774 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221010072 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118249482 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205088338 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143442777 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182671796 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153051504 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136003182 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173178706 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196147346 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144149377 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192889568 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171329188 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115183447 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140503276 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166806859 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173730176 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156076785 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.114000945 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224158073 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.111187496 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178142224 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197889635 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140058249 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170205189 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131717993 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144997286 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1573467 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158601016 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119557995 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.182224497 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201135525 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.149875096 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19452203 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188777071 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182023075 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201404316 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129225659 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.677301687 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.141538317 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199238896 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158651991 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212031268 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162588632 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181839142 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176253604 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13528276 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212221131 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137025875 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.238017916 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183792521 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17785246 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14298097 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157217323 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158850846 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117562056 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16596906 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176650236 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154250117 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151364667 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.174895575 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159535875 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.131266501 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150716923 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200847958 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161971256 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203373192 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202867927 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152191924 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182261057 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195121747 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14168514 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180077235 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189618135 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15774529 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169564918 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.144821876 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.122963257 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196393881 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.135200092 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176109826 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176365329 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176734691 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179839085 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.122377499 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175439593 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155503799 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175711097 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139881606 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.175552979 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171629286 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11762134 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.141359096 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169223691 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17591453 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.172590715 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138370033 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.15729923 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199649658 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.13453538 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144737146 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295117596 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173897402 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213170848 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168948122 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117570568 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156056916 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172088672 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.170331903 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174894072 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.140967113 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115583842 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146199015 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.196300529 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172200712 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170225825 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195041251 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17708138 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206092386 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.156842575 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280682724 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122347598 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168640844 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.146066201 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.144240097 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12660914 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147960415 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159798553 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20878424 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196013984 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165490138 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.158414771 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137808608 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107709825 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143479812 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17635601 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16840578 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170732433 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130456011 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.1310917 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159880177 seconds)
  done (took 84.675337479 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212493314 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.219683798 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.161471513 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204439822 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173818746 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269448613 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213612817 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236737713 seconds)
  done (took 2.736111054 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.108677302 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.143155256 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149903336 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.133360181 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131238367 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.417799397 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.145956515 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.132029967 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.194142233 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.1455289 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.128585653 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.669877118 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.128847485 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.128933495 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.099263275 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13074391 seconds)
  done (took 4.027936258 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.649790355 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.580010302 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.144055851 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.263340608 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.245596958 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.190948177 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.774704601 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.179889844 seconds)
  done (took 13.07738707 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136471785 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150372682 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.353058821 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.226577122 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.169864042 seconds)
  done (took 2.091089187 seconds)
done (took 128.711374623 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.109670421 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.152008805 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109939552 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154990076 seconds)
  done (took 1.569585958 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.158151305 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.12072587 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09469006 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119341074 seconds)
  done (took 1.547901562 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.53547491 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091317129 seconds)
  done (took 1.711532973 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.132614233 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.15568304 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.151305715 seconds)
  done (took 1.499392435 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117248161 seconds)
  done (took 1.166889062 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.109148504 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.137604381 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.195229929 seconds)
  done (took 1.497953794 seconds)
done (took 10.048858553 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.130749211 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.434149431 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.419217742 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117225653 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730291463 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.411524205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.027114396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164507998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198365372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125944252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144897409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676310965 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.04236657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345923157 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.027129208 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.465949926 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681655494 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126336814 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104562571 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127063645 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.029013283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097888784 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126293171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10044878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703379098 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.411338296 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124747322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.486352653 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096882632 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129029916 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387061893 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124733899 seconds)
  done (took 17.365018776 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144482007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192142859 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135677285 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099195402 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130359143 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098918793 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.136137158 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14044698 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200986159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097429357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147716555 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123926492 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103952476 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126062837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.12118697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.125790473 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100013501 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127684142 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132872956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09960671 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147410079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096098774 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127718231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126269362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09802952 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.151070833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097118815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139567145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123897427 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103220513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.13003499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098881535 seconds)
  done (took 5.082956936 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148524533 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.199746735 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135256674 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15893938 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178862614 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100521663 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217627424 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166090127 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200042432 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12487806 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119799802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125879288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164821562 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098893184 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149736017 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096919935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.129656068 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100541941 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134628159 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126719163 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11937809 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125226305 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099526457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127981202 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125169629 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.126733076 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12666731 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138651602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09868446 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129471507 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104447502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126715066 seconds)
  done (took 5.39289298 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.111408959 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.139205949 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121041872 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.149840556 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.132788665 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.111367362 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.138743545 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.105440491 seconds)
  done (took 2.071677744 seconds)
done (took 30.966066244 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124087879 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.14404578 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117312305 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.140425204 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.205346615 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100047993 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.144905553 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100176624 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.141118476 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.119320637 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125753071 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.103045304 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.147100915 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.134458235 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.188273873 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.113115439 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.191946533 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.188762965 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.131778929 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111793711 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.133176506 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.196094379 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.108982097 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.13338186 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.198468233 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.10148762 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183676933 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.137058539 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.107895515 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129825321 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.190136275 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.109017478 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.133294586 seconds)
  done (took 5.689320348 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.208491662 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.216030431 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103937948 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.133614239 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.217522925 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.103586139 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.206761698 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.133059154 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.102273347 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.132247868 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.101448494 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.207217058 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.245035423 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.197774051 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.276658192 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.217582331 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.204951466 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.215449757 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.203813702 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.222363288 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.205774181 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.102514918 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.217146802 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.220386663 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.131688369 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.102190239 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.241942072 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.216035782 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.271238294 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.172852401 seconds)
  done (took 6.600903109 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113062913 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14301035 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124017284 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201004987 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.171056803 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.140894368 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111326764 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.15066087 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.124734098 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.126976649 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.108567039 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.166882684 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144808626 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.109738914 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.133966563 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.118536821 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.15340559 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.128304751 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106347562 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147644585 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.117155913 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.145612473 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141834919 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108983969 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.126880263 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11025878 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.132782628 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.139310063 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.108210872 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.137000703 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.104530847 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.133527997 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.101625953 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.137785037 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.130807908 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.11290946 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.155902648 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108318338 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.141563703 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.164350488 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.107086006 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.13352571 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.148161208 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.145874579 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.129672142 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.11215609 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.140980666 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13628985 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099691344 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147748894 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113636032 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.128620158 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.151550062 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.100199421 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.126280994 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107742669 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.128442785 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.10278167 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.137185089 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103059179 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.153980947 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.1357727 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10598362 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.130256219 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104926285 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.127363617 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098202312 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.135458595 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.15076392 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106664598 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159018336 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099596392 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.13924227 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.135579103 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10568495 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136496723 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100374838 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13498566 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107874672 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.135905696 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107672841 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.132276642 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.103013904 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.148250033 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.149891334 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.138267768 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.110390998 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139024549 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103350876 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.128776097 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111560547 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.130390209 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.103289873 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138438511 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.129176548 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.103899276 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.138912729 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.108521802 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127760869 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119104753 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134663483 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126906632 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.116584821 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.129634285 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.104242884 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.139671074 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.111100346 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129432056 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107690819 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.140396123 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.127824244 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.105108668 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.131895779 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099065885 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.146253853 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110382897 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.133812847 seconds)
  done (took 15.943512276 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.309925576 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.316069909 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206843177 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.405479877 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124855002 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.204385053 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.311991658 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.234810814 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.129587274 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.173281742 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.192097833 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.243824543 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.129841502 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.162394 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.287352146 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.377682145 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.16354361 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.175642403 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.174284471 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.155711799 seconds)
  done (took 5.564230036 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.124811099 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.172561077 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160100449 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.163223357 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.107286424 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.14489189 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099291423 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.15499361 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.137206124 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.107652549 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.127793343 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.144284551 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.109059579 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.138392212 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.118994584 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.177806918 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.134731942 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.106818365 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.154224421 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.1362059 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.112527366 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.159528945 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.142659825 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.156951537 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.116443167 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.144313139 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099134784 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.137045655 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103859375 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.134800134 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.133701493 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.123314817 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.137942545 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106148661 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.139182109 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.141142245 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.103707127 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12998153 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.102778045 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.131580304 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.118767194 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.139358114 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104854795 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.126216636 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.113658626 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.131611118 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.112777605 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.139555654 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.141792487 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.116890975 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139051062 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.112412215 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.136828978 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.148460407 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.104287317 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.145064583 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.114305573 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.141112342 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.136528031 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098974622 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126591926 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104752085 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.133862351 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.11336207 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.139471145 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.153060395 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.115982038 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.130986052 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.134680336 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.105194855 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133168812 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.119565998 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.154723875 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.134886081 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.104258609 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.151433146 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.104458015 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121526905 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.110813303 seconds)
  done (took 11.28740813 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132237875 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.134842375 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122895651 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.16777905 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.15034646 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106567939 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.134854332 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.121349652 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.142930368 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.114002824 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.144172134 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.143569216 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126805615 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.143603946 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.134274319 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.11811403 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.140522019 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.173163243 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.121354781 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.165248644 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.146498063 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.106462597 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.144771987 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.114212566 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.166279063 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.112424563 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163196528 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.140687624 seconds)
  done (took 4.935953405 seconds)
done (took 51.08809672 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.233658401 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.378762596 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.164317039 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.162453095 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.208786669 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.185738559 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.16229205 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.35563515 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.852926682 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.14961396 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.163875503 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.162659395 seconds)
done (took 27.26902445 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.242102122 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.738192453 seconds)
    (2/2) benchmarking "String"...
    done (took 1.462763237 seconds)
  done (took 4.304238409 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.157418169 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.15855416 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.403182487 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.170493729 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.15857607 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.175072817 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.158994927 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.17773685 seconds)
  done (took 15.487760748 seconds)
done (took 25.280317918 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.189312705 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.522960831 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.463691601 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.178631996 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.157932337 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.160220281 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.151997124 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.233247349 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.159562088 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.159994363 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.159487682 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.463038031 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.158173978 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.584907978 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.156868717 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.17612988 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.176189597 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.532676777 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.163604091 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.211731392 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.155246455 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.152030061 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.196227765 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.205078076 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.166949804 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.173542465 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.160942735 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.159633052 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.471547418 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.166415117 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.214976612 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.16430624 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.175167098 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.164489676 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.266161618 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.186019353 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.470909164 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.156573736 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.15414115 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.169073389 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.466473652 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.558344338 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.17233261 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.153325557 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.163332838 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.195188786 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.160026814 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.871050462 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.172334392 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.154710162 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.197714744 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.584617916 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.162419084 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.163098962 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.166213868 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.491438815 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.162201089 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.238895436 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.196012877 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.164814279 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.163309285 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.178320359 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.184014848 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.172681736 seconds)
  done (took 141.670469864 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.161819215 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.162337406 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.166815792 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.22981691 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.171054365 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.162386507 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.161560543 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.159972597 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.162962032 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.164197328 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.166745156 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.162010146 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.166190892 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.132139083 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.166508048 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.177350713 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.161850318 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.177229389 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.172047604 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.16083249 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.166031282 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.166765362 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.177080815 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.162133706 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.192471088 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.249436293 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.197086607 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.174277768 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.167903849 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.161566357 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.204647728 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.178912794 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.741188723 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.026820404 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.173701526 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.175340965 seconds)
  done (took 78.753623255 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.161357873 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.162639137 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.162383028 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.202095331 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.161417581 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.858381814 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.863547453 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.958770393 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.70948116 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.44583387 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.409420616 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.163768773 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254653913 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.177146428 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.16349895 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.179584377 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.208502091 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.165235557 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.164439132 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.860910106 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.181657113 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.157370259 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.341222045 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.179680658 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.205363791 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.564142774 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.16418593 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.204009972 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.491939697 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.210820066 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.165716204 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.491880177 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.873997822 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.163353252 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275324547 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.167001698 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.20622454 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.16372717 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.44083819 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.165456539 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.163919852 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.165038687 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.169695556 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.782497222 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.164646888 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.858728967 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.169203068 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.098215123 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.165128688 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.163391088 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.359983312 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.754987975 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.180213854 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.164637665 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.167431038 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.164792192 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.166129542 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.205724864 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.343991286 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.278390786 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.186092559 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.167621241 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.205277212 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.166143819 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.68218911 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.169961283 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.517118627 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.246740107 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.291389009 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.856851182 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.17177201 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260147719 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283646211 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.165263101 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.163948718 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.165171921 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.165694417 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.274010215 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.165331223 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.576850397 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.336362052 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.18229645 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.470720924 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.261131919 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.166605242 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.524547499 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.172362708 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.16422138 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.893796542 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260858706 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.165604938 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.166207366 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.166235539 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.168590172 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.166601757 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.577897178 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.855448323 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.403352084 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.171593128 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.821095764 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.170535976 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.576698854 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.685561929 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.829053484 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.17151954 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.27587543 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.333316493 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.184186014 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.165913735 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.43131679 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.166291456 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.225563914 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.164700001 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.561443532 seconds)
  done (took 362.947377074 seconds)
done (took 584.458837545 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.874571615 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.823773536 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.952646664 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.852762456 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.815719477 seconds)
  done (took 10.409107246 seconds)
done (took 11.500354637 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.348755156 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.349001701 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.22285315 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.353600544 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.195695599 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.364855489 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.328716769 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.184284516 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.266187225 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.242825793 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.26531344 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218027168 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202314676 seconds)
  done (took 17.631929422 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.426644144 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.176779991 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254241916 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412986274 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216413171 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430795995 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.471580581 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.178725084 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.331459175 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.183187865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.183495651 seconds)
  done (took 17.357682942 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.43830569 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.178370586 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257938105 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.43865661 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.218690865 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.452256543 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.468160183 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.178667644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.347017004 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.183950225 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.184477085 seconds)
  done (took 17.437104491 seconds)
done (took 53.51879198 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.208868041 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.334756436 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.199396106 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.186034191 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.179420336 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.181328139 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.185425278 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.178926938 seconds)
  done (took 10.747339496 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.179586027 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.178081402 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.17876251 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.177463621 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.178540569 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.179211525 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.179844813 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.179457487 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.178480172 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.177971766 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.179197102 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.180514393 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.179554917 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.179541282 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.179174476 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.179624739 seconds)
  done (took 19.959095976 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.182726013 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.180613983 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.179024008 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.179360213 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.17948396 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.18133873 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.181638803 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.179671262 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.178953773 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.180972704 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.17954839 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.179825438 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.180058242 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.179948912 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.179844589 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.180270025 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.179674702 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.180915889 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.184235072 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.180635425 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.180988807 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.179821061 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.17956687 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.181788647 seconds)
  done (took 29.425425758 seconds)
done (took 61.224814627 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.17804591 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.175752875 seconds)
  done (took 5.44659285 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.240557888 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.240080203 seconds)
  done (took 3.575188607 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.181694925 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.180888006 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.181748772 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.1818229 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.179916183 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.180328223 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.181663751 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.181151677 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.181884702 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.180284495 seconds)
  done (took 12.905451335 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.18200323 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.180516199 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.182304725 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.17993625 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.182803183 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.181613739 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.1827774 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.181495338 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.181812044 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.181615711 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.182713797 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.182024327 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.182115753 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.181599298 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.182843863 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.182917432 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.181974231 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.182702169 seconds)
  done (took 22.371691324 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.195679851 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.202865848 seconds)
  done (took 3.493459104 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.325830885 seconds)
    (2/7) benchmarking "second"...
    done (took 1.223187803 seconds)
    (3/7) benchmarking "month"...
    done (took 1.299537389 seconds)
    (4/7) benchmarking "year"...
    done (took 1.289071448 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.244177767 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.204180095 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.22428862 seconds)
  done (took 9.906216211 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.184350098 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.366019868 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.472586074 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.743008103 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.183295256 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.226731554 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.05602519 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224672851 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215410593 seconds)
  done (took 13.7691726 seconds)
done (took 72.562947254 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.174085724 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.214682654 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.195032971 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.191831081 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.476451684 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.222966996 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.176714944 seconds)
done (took 15.750457564 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.167785614 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.171896989 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.17337201 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.184786745 seconds)
  done (took 9.793893638 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.150604811 seconds)
    (2/2) benchmarking "read"...
    done (took 1.545765545 seconds)
  done (took 4.793053048 seconds)
done (took 15.686137564 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.187096549 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.185650365 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.184914697 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.185469986 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.183801117 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.185425486 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.183115761 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.185626568 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.184472399 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.186206129 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.185161005 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.184418393 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.186699096 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184543895 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185117763 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185161789 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.184548966 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185143235 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.184295768 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.185243833 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.185267011 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.185615924 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.184926073 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.185477341 seconds)
  done (took 29.541832255 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.185880662 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.185934335 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.187893611 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.186935081 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.186734963 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.186259627 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.186183963 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.185123807 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.185583263 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.186599059 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.185920211 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.187045512 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.186135223 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.188164502 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.186897753 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.187439477 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.186578264 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185741257 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186368652 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.187219093 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.188609435 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189498036 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.186790181 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190441498 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.188281811 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.18628002 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.186592811 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.185962581 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.187086778 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.188784524 seconds)
  done (took 36.708589687 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.192044386 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.193495919 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.187693853 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.186962404 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.187817422 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.188987145 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.187128025 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.186896502 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.187568683 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.188741264 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.188688053 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.187511421 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.186919704 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.186734943 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.187597074 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.189533263 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.18859437 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.188307648 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.187593286 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.18814221 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.187654201 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.188525688 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.189002048 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.188779212 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.188766511 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.190375012 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.188912286 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.187322712 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.189281072 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.191977292 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.189146229 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.188819785 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.188747737 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.188637672 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.189613176 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.18907603 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.193221156 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.194323223 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.190512747 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.192360938 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.189626131 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.18853347 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.193572114 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.189791355 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.189871021 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.189691661 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.189983005 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.190052695 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.191296931 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.190638271 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.190349258 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.191278841 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.190346128 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.190418808 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.189327994 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.191478571 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.191904547 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.189907222 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.190295366 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.192553868 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.190723033 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.190916315 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.191864343 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.192437788 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.192178053 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.191251296 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.192305987 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.19230351 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.191414873 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.191072428 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.192369659 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.192269199 seconds)
  done (took 86.777047965 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.192574183 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.198115938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.19412758 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.193232087 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192825927 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.192252574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.193013125 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19276685 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191505444 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.191568025 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191914156 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.191674925 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192118471 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.191637812 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.192406863 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.193871368 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.192683036 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.192836538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.19397401 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.194717891 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192704832 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.192337458 seconds)
  done (took 27.34981526 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195432673 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.193858426 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.193384337 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.19489791 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.194363397 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.194624684 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.193926106 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.195607005 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.1951449 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.194829232 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19391016 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195028054 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.195873481 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193789016 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193590208 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.194996402 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.195108461 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.19634722 seconds)
  done (took 22.609466908 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.19588002 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.19574961 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.194249418 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.1944366 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.195776832 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.195654599 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194934618 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.195570934 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.196792581 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.195352132 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.194812922 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194978291 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.194904408 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194729824 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195376459 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.195438805 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.195504861 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195161697 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.19442966 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195075836 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.194645933 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.197327365 seconds)
  done (took 27.403240935 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197114565 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.195793821 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.196856139 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.196216599 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.195594413 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.197656594 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.194962553 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.195721141 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.197611504 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.196968991 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195689817 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.196347145 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.197284847 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.195024514 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.195736084 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.197439366 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.196233525 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.196292056 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198150087 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.195241614 seconds)
  done (took 25.035577038 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197804265 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197575119 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.198096787 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.198254015 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.199062 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.197942966 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196542985 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.198122295 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.198177047 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.198671044 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.199724222 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.197235449 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.198378156 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.197429893 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.198726121 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198376055 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.199209606 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.199274241 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.199938419 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.198949856 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.199675461 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.19899056 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.199259262 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.201030616 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.200993624 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.199620829 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199480251 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.200973887 seconds)
  done (took 34.676771621 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199904898 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.19888087 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.199344201 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.200157888 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.197441917 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.200048986 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.197949826 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.200074765 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.199436896 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.199693663 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.19841752 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.200238984 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.200745069 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.200984347 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.201925914 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.202217768 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199395866 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.199499201 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201741483 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201135136 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.201771631 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199444976 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.201315606 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.199823317 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201244875 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.200478219 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201242758 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.200377953 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202367994 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.200187426 seconds)
  done (took 37.118537529 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.248376939 seconds)
    (2/2) benchmarking "in"...
    done (took 1.248621787 seconds)
  done (took 3.608416894 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.201388895 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203243568 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.200251962 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.201866436 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.201457638 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.201630634 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.201716407 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202392303 seconds)
  done (took 10.72603496 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.197935522 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.203377262 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.201464743 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.202010543 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.20302126 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.197981038 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.205884705 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.209159319 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.198101693 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.198919445 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.203234879 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.203234566 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.201602458 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.199904559 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.198574651 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.202808806 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.205803485 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.20275669 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.204544645 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.203993898 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.202383305 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.201719143 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.203990931 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.20757303 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.199383814 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.207600332 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.208309181 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.207722146 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.199529692 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.204295577 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.201142908 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.205929111 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.20443464 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.205173002 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.20561108 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.204241033 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.208881109 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.223909995 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.206235872 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.209980557 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.204848198 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.203768816 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.202560287 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.202417073 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.203612257 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.206781486 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.205775212 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.205460907 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.199252418 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.202823502 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.210955386 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.199260635 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.206829555 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.204649923 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.203864043 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212699095 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.230872207 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.204012573 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.20782815 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.210241276 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.217869164 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.21464052 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.204881466 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.207582629 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.209534962 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.217560414 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210450233 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.212465298 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.208320246 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.207575621 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.208704647 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.218488601 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.21827879 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.206851927 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.206282578 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.207854038 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.201826461 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209095993 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210905551 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.210938039 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.209369165 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.20616221 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.21019748 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216794104 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.203150107 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.206940998 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.208415657 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.206832502 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.204382592 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.213831399 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.231855976 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.207402247 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.203022431 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.205802983 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.204808488 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.211447357 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.205280588 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.205214209 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.209051668 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.207939145 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.207692099 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.20694161 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.213399979 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211673771 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.206980131 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.211908548 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.213578931 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.203699987 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.212268205 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.212847442 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209543412 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.206289809 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.209710032 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.210344202 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.206072046 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.21234071 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.209451626 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.207087166 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.212005394 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.212248397 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.212467134 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.225484156 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.21354335 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.21035066 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.207890764 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.221180852 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.209623695 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.208188215 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.214054523 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.210169426 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.211130534 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.207200035 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.211014392 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.206159042 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.211374612 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.20668989 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.211923096 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.20976083 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.208869071 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.207383518 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.208652492 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.210055829 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.210292335 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.211878868 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.211490078 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.210018147 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.215971788 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.211027829 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.211142356 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.209227565 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.214535775 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.212235172 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.209445552 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.212456519 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.209563413 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212703176 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.207687947 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.212994187 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.211940859 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.210983814 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.212002314 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.207251001 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210619344 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.21336843 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.212619341 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.211158017 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.213340988 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.214128382 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.212158893 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.207403649 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.213510983 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.206705305 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.21124064 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.21810418 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.213535677 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.212571644 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.212036409 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215784151 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212912707 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211312572 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.21186389 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.216101081 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.213495894 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.214639853 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.218312094 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21545569 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.214471349 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.210069684 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.211252566 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21336133 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.210928021 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.221080471 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.221634574 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.225722436 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.212673947 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.21896697 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.21002449 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.216290308 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.214462671 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.216210554 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.214636071 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214752085 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.208957439 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.213328122 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.211160858 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.213983748 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.2097235 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.215435576 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.216446111 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.213858994 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.216371478 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.212847042 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.211736019 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.216263561 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.215642097 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214518291 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.210994551 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.21720374 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.213190712 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.211881717 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.217046773 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.214687656 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.220476752 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.223852322 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.212904678 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215381312 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.213605802 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.211302955 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.21755114 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.213524328 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.215976049 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.22174835 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.218926498 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.214014248 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.220057434 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.235556712 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.212113393 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.216074976 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.221175734 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.216518269 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.214422015 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.223928928 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.217929788 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.216397274 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.215402571 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.213388284 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219207938 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.218638693 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.222580144 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.21414918 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.219555748 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.213488856 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.218192815 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.214055594 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.214430022 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.216681251 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.21842467 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222026216 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.218210848 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.21414991 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.221392293 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.21809268 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.218295925 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.216572177 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.224619519 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.219968476 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.2170561 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.217657908 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.217036807 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.22202887 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.21378624 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.219664999 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.21427752 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22996826 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.234112421 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.220738218 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.221115917 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.221196988 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221414061 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.220557681 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.218367727 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215876074 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.216772965 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.217565064 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.217187589 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.220152105 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.217386434 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.221063481 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.217909142 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.218089175 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.223307186 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.219305076 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.217170086 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.222223239 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.218641585 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.220527883 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.214509264 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.221528744 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.218171936 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.220171528 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.218770573 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.21736197 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225132928 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.222885826 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.219187492 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.217336947 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.218283787 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.21839402 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.219726377 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.222380058 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.219632537 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.228442472 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.219308982 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.225564667 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.219134586 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227833632 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.225810707 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.219192967 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.226960516 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.223389342 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.215580315 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.217636845 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.221421382 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.225504862 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.227233457 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.218877803 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.225282675 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220566192 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.221609206 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.224527995 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.22186945 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.222569617 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.221368703 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226344663 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.242075355 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.220788409 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.22333422 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.225222454 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.221853829 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.223911287 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.215879838 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.223321679 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.228723374 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.219592254 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.219202487 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.219389282 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.224928593 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.223573433 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.224225846 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.223591028 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.224010786 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227585614 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.228175207 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.226592696 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.223942871 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.22605137 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227159417 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.227131039 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.228257935 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.220209288 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.225271027 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.225212375 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.219041271 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.219059939 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.223046783 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.227980171 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.219831398 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.229446209 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.223934037 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.223971968 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.22193101 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.22649508 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.220097659 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.228018991 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240545166 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.220444459 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22744518 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.225409956 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.222946993 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.226547449 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.223515591 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.219832922 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.222641169 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229104372 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231428137 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.221169252 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.228059403 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221486805 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.227050236 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.226389733 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.224902985 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.226385064 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.225910693 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.220820552 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.228411445 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.224317327 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.229536644 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.223586395 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.224089952 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.223627118 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.23244504 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.230428794 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.222822205 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228368152 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.227943765 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.223049452 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.224943753 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.22862699 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.224443769 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228467748 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.22308204 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.228172104 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.225961184 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.227404253 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.225173224 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.22895065 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.221992562 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.225144962 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.227335628 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.228390582 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229818426 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.223943066 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.23047451 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.22453065 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.222712259 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.229594054 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.224072023 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231086867 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225430573 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.229650975 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.224820785 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.230710816 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.228178137 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229619082 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.222796124 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.224995425 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.233827433 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231304006 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.232897444 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.230292223 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.231334932 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.223966598 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.227429494 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.232073548 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.225116148 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.226883267 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.231270691 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.224738678 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.226221356 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.227252009 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230467491 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.232193561 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.228562024 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.22541685 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234440925 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.250756769 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231243148 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.225068935 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.228455773 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.225612689 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.23174641 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.231474188 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.224719784 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.23612898 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.233717836 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23196461 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.228018002 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.228316351 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.22695587 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234274397 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230500182 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.226126294 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.235788711 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.229143316 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2337193 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235150043 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.232721252 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.229259181 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.228882017 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.235578815 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.234299384 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232395129 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.22916194 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.229514172 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.229308883 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233795428 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231780465 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.232520434 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.233744187 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.227693077 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231937112 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.226064093 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.231278035 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.230323884 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.228649513 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.23625856 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231436833 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.228449584 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.236664149 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.238878367 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.233321769 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.227960911 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.231453341 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.234011218 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237057457 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.234932878 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229590868 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.232329814 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.237843612 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233674995 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.234483129 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.231442205 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24530034 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.260108456 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230729988 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.232022096 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.234659937 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.238308795 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.235957179 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.234652305 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.232541697 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.234644042 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.240403474 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.232348017 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.238790022 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25436736 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.231192745 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.237607616 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.232025058 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.236017119 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.235356901 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238813171 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.233552295 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.234518549 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.245970522 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240661038 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239228888 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25468341 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.237666872 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.234438103 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.238657338 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228777236 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.237321516 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.232536225 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.237913319 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.236174654 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237804632 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.236677275 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.231304754 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237728266 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.236254445 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.239972179 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.236643573 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.229738419 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.233128194 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.238222374 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.235641 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.238416492 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.235353753 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.236794918 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.236068983 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.232698288 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245835814 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.248722232 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.239689413 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.236869918 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.236102906 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.236542724 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.238803276 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24113452 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.243039556 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.237899555 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.235928877 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.23582637 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238935629 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.239453664 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.232396905 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.233594678 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233219895 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.242306646 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.246201146 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250513678 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.238351264 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.235225135 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237677524 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.239045988 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.234114105 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240830338 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237798968 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.23414292 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.23581678 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241099385 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.239768221 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.239500347 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.235596085 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.243823526 seconds)
  done (took 728.878849948 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.238636033 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238293216 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238585092 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239629847 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239540712 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240939903 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240144457 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239851062 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.239934236 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23988192 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.240084466 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240876262 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240010587 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240006775 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239055663 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239231775 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241463515 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242290574 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242322743 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242168428 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241099875 seconds)
  done (took 27.190240904 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.241257368 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.241161177 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.241406701 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.240407439 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242434184 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243760811 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.242623255 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240032645 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241508107 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241536854 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.241952149 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242712474 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.244028047 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.242498993 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243021467 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242518842 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.242200871 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243435877 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.240686413 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.242572893 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242130388 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.241194263 seconds)
  done (took 28.472126082 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.241620618 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.240330451 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.235910839 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.242632684 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.241586649 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.242857148 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.241057367 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.240627226 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.243111825 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.238311839 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.236975854 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.239873858 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.243656752 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.247707264 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.240971002 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.244924544 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.242927567 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.24293465 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.241532233 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.243566243 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.245643906 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.249872811 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.241849219 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.23709564 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.24402828 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.243693794 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.242904934 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.243369779 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.239954384 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.24528885 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.242338879 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.239775836 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.243953116 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.240996877 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.240429619 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.246126095 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.244183609 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.244645068 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.244461448 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.248002413 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.262090429 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.244359396 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.245101688 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.251948519 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.246814543 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.242749626 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.251119828 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.247753189 seconds)
  done (took 60.843583917 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.821970128 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.843947346 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.838242311 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.851588994 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.846361584 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.840593792 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.839693379 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.846503728 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.857960096 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.8513021 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.843797526 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.848367709 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.853382626 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.843563011 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.853968049 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.861461077 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.839939047 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.845494038 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.869807635 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.905713851 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.874543719 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.843277154 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.8532244 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.849095924 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.853570107 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850392585 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.840811724 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.842887968 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.841090287 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.856714136 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.858709863 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.845364481 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.851430278 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.852365328 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.842844171 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.840295606 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.848943286 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.843882687 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.852123493 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.847216546 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.844156669 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.844138494 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.863107738 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.851433404 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.852958109 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.85628112 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.872632671 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.870339195 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.923657108 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.92822756 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.856879471 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.905399131 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.884166191 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.867942303 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.851746403 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.872797236 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.882308211 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.852249975 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.850715203 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.854818145 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.867740415 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.854637491 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.861587032 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.855102171 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.883276453 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.850146942 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.843574578 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.857381965 seconds)
  done (took 127.4050964 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248311201 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.249640329 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249931652 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249464443 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250429699 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.253640268 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249566359 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.250629905 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.249757491 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.248986483 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249329469 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.251435713 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.249885197 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.251169632 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.251692433 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250944995 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.251479116 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24950237 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250368012 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251219066 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.249653739 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.251831255 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.252330018 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.249759055 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251299564 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.2505107 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.249394484 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.251873345 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249300161 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.249324881 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.250150435 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.250245769 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.250419944 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.25106589 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.250977994 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.250064977 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.251502226 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250722867 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.25054242 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.251694891 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.250972902 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251964644 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252232258 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.252280037 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25352225 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.252477702 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.251796224 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.251131045 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.253964573 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25213643 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.252058796 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253251428 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251898068 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252818408 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.251526046 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.254086052 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251646008 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253051251 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253276132 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.255893916 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254001694 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.253629399 seconds)
  done (took 78.73761998 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253688358 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254651118 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.252979989 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.253835312 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254085706 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.253675669 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.252682035 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.25621066 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.252395055 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.253967851 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254221762 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253398486 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254983799 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254539609 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.254139843 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256132386 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256456864 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253811542 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253878149 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.254218307 seconds)
  done (took 26.241605955 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.25408012 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.255995437 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.254533558 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.253806895 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.253831807 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.254694055 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.254096473 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257405716 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254512708 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256004098 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255514516 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.255298774 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256088269 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.25647041 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.255850447 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.255279685 seconds)
  done (took 21.24271033 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.255277436 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.256790322 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.255746208 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.735377931 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.256349047 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.256377466 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.259814508 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.254674177 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.255848385 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.255967231 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.25667134 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.255911198 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.257696999 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.254577298 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.255649524 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.258736985 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.256724012 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.257394493 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.257799851 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.256580087 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.256441084 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.25581332 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.257443869 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.257531517 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.258212813 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.258756572 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.256902187 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.257328578 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.259083551 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.258683223 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.257346382 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.257286687 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.256090284 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.258061865 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.257300204 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.256988356 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.257282891 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.258338152 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.259035892 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.258507155 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.258979989 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.259362649 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.258791159 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.258953467 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.257441918 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.258559458 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.25851111 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.262275725 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.259590349 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.25804984 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.260299336 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.26049008 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.25940102 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.259445421 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.259975057 seconds)
  done (took 70.813968211 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258142118 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.25864472 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.25867252 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.258992492 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.262008927 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.260805459 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.259216366 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.261316003 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258579327 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.260210023 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.2607308 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.261478953 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261529832 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259277793 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.260670176 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260754731 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.260618295 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.260778752 seconds)
  done (took 23.844948028 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.26000132 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263120073 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.260602051 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.261623834 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.263140724 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259957388 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258440284 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.261856823 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261479174 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.261230036 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260443787 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.26093474 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261475908 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.259867404 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261026543 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260222957 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.261429459 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260774625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.261616843 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261527364 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.261721533 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262393238 seconds)
  done (took 28.909370047 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.254228321 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.255083537 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.256186814 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.272602189 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.271152614 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.255094818 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.256106708 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.25430767 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.275614554 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.296986944 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.293151256 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.273096053 seconds)
  done (took 16.377077208 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262079049 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261377858 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261702889 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263004483 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26150826 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261915582 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262148795 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262117035 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262569609 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264326753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263345017 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26263296 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262473385 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262749056 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262341859 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262845693 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263476284 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262670844 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263729871 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264277517 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263851106 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263375151 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266686308 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264186868 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263453603 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263694944 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263762684 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263326378 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264663665 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263987048 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263861956 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263691338 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26382892 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264318147 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265043109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265193796 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266709539 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267245271 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265799244 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264131572 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264837281 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265120047 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264103955 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264267653 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264413462 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265190676 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264294869 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264584287 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262833544 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264753168 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264041091 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264747242 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265427273 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265309152 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264559429 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266325729 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265432723 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265167846 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264951396 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266645735 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264939482 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268411923 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264186734 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265607901 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266682847 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265075728 seconds)
  done (took 84.604435946 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266498116 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266391902 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26613226 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267551668 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266759536 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266926559 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267342424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266553898 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265680739 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267803763 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266695512 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267442759 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268314793 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267747276 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267787217 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269190028 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268075621 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268034349 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267128881 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268375889 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268221336 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267938395 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267678334 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266936964 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268606122 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269082496 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268389532 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267694582 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267106081 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267753037 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26806394 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267615851 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267609391 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268728429 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269019164 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26769036 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269809192 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268977538 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268308758 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269639418 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269017963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269629238 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268394738 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270148719 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268536056 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269473082 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27049072 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270593304 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268595238 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268667595 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269607495 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267859304 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268575471 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269592019 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26896461 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269058534 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271292903 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270260909 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269752139 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272024667 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269793274 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269682285 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270691202 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268768973 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269089745 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270626078 seconds)
  done (took 84.893490528 seconds)
done (took 1751.109080657 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.429110144 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.383484245 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.263334329 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.27367645 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.264502149 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.288431429 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.280410276 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.264833582 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.263484604 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.264009281 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.26414531 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.455145132 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.320160261 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.264255372 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.264569319 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.360275882 seconds)
  done (took 26.077586676 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.295145547 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.272752296 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.382328201 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.289456584 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.293282236 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.463338387 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.326202283 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.270057887 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.438069805 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.28708786 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.267894711 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.290989223 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.268702643 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.268511421 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.286122429 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.464350232 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.51627614 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.269286889 seconds)
  done (took 28.12533925 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.731068723 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.265594726 seconds)
  done (took 5.169738526 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.287496771 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.269376664 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.269001866 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.268360169 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.262720803 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.276482932 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.268178123 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.266790424 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.267508333 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.395794018 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.275589219 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.283178194 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.287196156 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.269658664 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.275668218 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.312850129 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.468566955 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.275746132 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.272623453 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.274277233 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.269349079 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.366460233 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.31260108 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.281455148 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.391513072 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.27227344 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.276714587 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.279238485 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.4311824 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.275872305 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.269447152 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.270010548 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.27123605 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.270624444 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.738190597 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.279612772 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.279732251 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.297620877 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.275893525 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.422463487 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.271190174 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.277268494 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.267183662 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.740514477 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.428509203 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.391793626 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.287444408 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.276728798 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.273936084 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.338120491 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.274087424 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.272125287 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.330347155 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.07756391 seconds)
  done (took 82.051209354 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.295502817 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.265189714 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.443814907 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.28862596 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27390047 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.267644517 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.284726188 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.546465008 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.30017679 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.266229458 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.546525238 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.893510855 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.282067563 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.325747504 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.137385084 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.384039026 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.268593131 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.282328923 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.266903287 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.27136947 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846771458 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.265987324 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.284792594 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.405717486 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.305134003 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.777586676 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.266035723 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.286042103 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.287526616 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.266852676 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.792183775 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.294343919 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.346907313 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.267605779 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.535253749 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.640920886 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.601318992 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.27227734 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.300864684 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.266347596 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.278000067 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763712245 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.620129487 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.268291037 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.26743328 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.774235401 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.266523964 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.281426112 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.274055079 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.516192015 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.267313486 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.272177706 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.283230227 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.285189085 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.267499771 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.310338381 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.312820978 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780062276 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269173022 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.268562788 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.30522596 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.269845706 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.27292855 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.268291867 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.28830123 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.627381049 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.422683607 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.273693825 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.625926065 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.792350582 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.291019328 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.870852682 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.291434451 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.293089491 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.490309454 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.282871589 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.274024979 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.790218756 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.314465357 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.268289395 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.605420209 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.2729591 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.565730065 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.287154897 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.270653614 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89193282 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.278007973 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.281141671 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.270851555 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.274471945 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.271974399 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.274958793 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.546753433 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.320943097 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.27070375 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.270123747 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.297642998 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.270188637 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.271761331 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.280150089 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.851813728 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.297813181 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.27128578 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.279179446 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.270729606 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.286571965 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.27079357 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.273427508 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568508093 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.272077658 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.27823595 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.273451458 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.271565051 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.272516476 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.413674712 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.281438611 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.578517268 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.274812133 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.271226555 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.292031121 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.270408666 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.283695474 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.272352396 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.275607122 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.141840006 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.554518622 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.290743555 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.288515631 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.273776259 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.277543466 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.273639982 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.275357311 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.323977871 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.277234866 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.271450823 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.27924406 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.295926137 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.272666417 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.283288899 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.273097675 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.27919474 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.274110429 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.569192636 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.551599916 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.42146963 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.274003727 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.290673382 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.200495365 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.305843296 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453740788 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.292079697 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.273951846 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524015468 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.506971944 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.27643086 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.273868393 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.277082635 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.534309173 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.274299854 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598178298 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854883712 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.289997374 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.281092051 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.274373121 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.959246554 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.27996758 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.275852299 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.556098996 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.289770221 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.27553964 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.276293524 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.275704166 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.290417687 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.293421473 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.281772431 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.27641796 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.274690255 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.318981919 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46576617 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.292017872 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.283000283 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.782420527 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.296149383 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.276795563 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.278322636 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.281178072 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.276638604 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.397132111 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.28200982 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.289250843 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.27797036 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.279687131 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79598614 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.27608845 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.27697131 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46812403 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.123649031 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.297158883 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.275814716 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.302351501 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.174872271 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807325853 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.329397842 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.582976884 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.286302774 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.316641497 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.279362202 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.393026571 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806524962 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.27714028 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.293773997 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950108587 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.299408677 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.817083424 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.277751384 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.279253777 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.89221402 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.300193078 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.280853153 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.276983407 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.279502379 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.636279662 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.278934155 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.310768472 seconds)
  done (took 486.091224875 seconds)
done (took 628.68832579 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.279631728 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.278084622 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.276423499 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.283258438 seconds)
  done (took 10.307380241 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.291709807 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.284492574 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.290236722 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.283623782 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.29238212 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.284954482 seconds)
  done (took 8.918218621 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.281675124 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.279399212 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.285036683 seconds)
  done (took 8.036452798 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.486665992 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.306698137 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.607821583 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.303052588 seconds)
  done (took 8.894754738 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.291507095 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.290209659 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.290493651 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.292573371 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.29301024 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.295215499 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.292278454 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.293012497 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.29462067 seconds)
  done (took 12.822315755 seconds)
done (took 50.169626649 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.281922323 seconds)
    (2/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.040816602 seconds)
    (3/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.514086608 seconds)
    (4/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.331049026 seconds)
    (5/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.360087115 seconds)
    (6/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.427881312 seconds)
    (7/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.490910535 seconds)
    (8/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.187606473 seconds)
    (9/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.436887936 seconds)
    (10/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.433541314 seconds)
    (11/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.327157977 seconds)
    (12/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.350371172 seconds)
    (13/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.287781997 seconds)
    (14/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.346999656 seconds)
    (15/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.314642807 seconds)
    (16/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.314267197 seconds)
    (17/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.461433162 seconds)
    (18/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.394922541 seconds)
    (19/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.285146431 seconds)
    (20/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.282509145 seconds)
    (21/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.50108348 seconds)
    (22/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.027395228 seconds)
    (23/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.450291967 seconds)
    (24/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.321875797 seconds)
    (25/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.395394938 seconds)
    (26/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.942424183 seconds)
    (27/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.298741251 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.328058546 seconds)
    (29/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.301364865 seconds)
    (30/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.035385319 seconds)
    (31/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.30715635 seconds)
    (32/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.279466964 seconds)
    (33/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.297392526 seconds)
    (34/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.283707914 seconds)
    (35/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.297548833 seconds)
    (36/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.33182303 seconds)
    (37/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.343436826 seconds)
    (38/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.467708873 seconds)
    (39/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.392531911 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.384120984 seconds)
    (41/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.429250489 seconds)
    (42/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.302635725 seconds)
    (43/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.421036846 seconds)
    (44/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.358016482 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.49615848 seconds)
    (46/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.073426753 seconds)
    (47/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.632383621 seconds)
    (48/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.303129026 seconds)
    (49/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.341664814 seconds)
    (50/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.119633003 seconds)
    (51/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.32444656 seconds)
    (52/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.536677116 seconds)
    (53/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.493214415 seconds)
    (54/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.277009171 seconds)
    (55/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.348824914 seconds)
    (56/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.321355286 seconds)
    (57/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.336629304 seconds)
    (58/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.013828273 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.379564963 seconds)
    (60/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.099948494 seconds)
    (61/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.390630839 seconds)
    (62/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.315239295 seconds)
    (63/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.400059067 seconds)
    (64/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.340472045 seconds)
    (65/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.275096395 seconds)
    (66/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.344475287 seconds)
    (67/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.337536579 seconds)
    (68/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.39948902 seconds)
    (69/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.584878657 seconds)
    (70/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.276051159 seconds)
    (71/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.384762707 seconds)
    (72/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.383704766 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.385526091 seconds)
    (74/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.323361317 seconds)
    (75/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.278215066 seconds)
    (76/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.2125918 seconds)
    (77/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.397702108 seconds)
    (78/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.420410824 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.444093793 seconds)
    (80/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.417072639 seconds)
    (81/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.422356348 seconds)
    (82/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.550330865 seconds)
    (83/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.976418458 seconds)
    (84/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.277511815 seconds)
    (85/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.453715584 seconds)
    (86/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.277960786 seconds)
    (87/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.362857924 seconds)
    (88/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.278421017 seconds)
    (89/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.168012375 seconds)
    (90/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.450804686 seconds)
    (91/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.335824523 seconds)
    (92/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.317164136 seconds)
    (93/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.204962593 seconds)
    (94/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.322860422 seconds)
    (95/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.381092247 seconds)
    (96/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.355243541 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.379700318 seconds)
    (98/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.349069692 seconds)
    (99/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.980042032 seconds)
    (100/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.369741396 seconds)
    (101/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.446736494 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.407667782 seconds)
    (103/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.407566344 seconds)
    (104/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.36943565 seconds)
    (105/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.493610541 seconds)
    (106/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.28279428 seconds)
    (107/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.97912525 seconds)
    (108/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.279331396 seconds)
    (109/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.443599491 seconds)
    (110/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.317133159 seconds)
    (111/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.33644405 seconds)
    (112/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.399970912 seconds)
    (113/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.323199806 seconds)
    (114/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.279189352 seconds)
    (115/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.554608734 seconds)
    (116/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.328896503 seconds)
    (117/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.305474759 seconds)
    (118/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.446363223 seconds)
    (119/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.44261015 seconds)
    (120/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.282778734 seconds)
    (121/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.360172984 seconds)
    (122/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.280768176 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.432583268 seconds)
    (124/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.294347137 seconds)
    (125/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.410723727 seconds)
    (126/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.494075331 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.399321886 seconds)
    (128/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.306750795 seconds)
    (129/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.489399967 seconds)
    (130/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.286441289 seconds)
    (131/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.341848598 seconds)
    (132/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.394583382 seconds)
    (133/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.952709376 seconds)
    (134/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.477684529 seconds)
    (135/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.341362638 seconds)
    (136/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.343558948 seconds)
    (137/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.326069187 seconds)
    (138/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.338322917 seconds)
    (139/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.290944191 seconds)
    (140/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.362713552 seconds)
    (141/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.281949483 seconds)
    (142/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.464851884 seconds)
    (143/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.312023455 seconds)
    (144/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.443132164 seconds)
    (145/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.283842299 seconds)
    (146/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.28321524 seconds)
    (147/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.393061524 seconds)
    (148/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.428958063 seconds)
    (149/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.373691812 seconds)
    (150/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.006403123 seconds)
    (151/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.060351625 seconds)
    (152/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.303004494 seconds)
    (153/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.323937259 seconds)
    (154/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.496671437 seconds)
    (155/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.421542251 seconds)
    (156/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.367115725 seconds)
    (157/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.294151859 seconds)
    (158/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.09029659 seconds)
    (159/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.522328509 seconds)
    (160/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.29202208 seconds)
    (161/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.441585497 seconds)
    (162/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.097314948 seconds)
    (163/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.406273385 seconds)
    (164/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.454081879 seconds)
    (165/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.329266858 seconds)
    (166/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.398593297 seconds)
    (167/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.052296336 seconds)
    (168/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.334886978 seconds)
    (169/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.329172412 seconds)
    (170/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.462322136 seconds)
    (171/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.282690374 seconds)
    (172/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.33785514 seconds)
    (173/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.291877644 seconds)
    (174/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.296672134 seconds)
    (175/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.332736746 seconds)
    (176/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.375633131 seconds)
    (177/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.285740152 seconds)
    (178/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.493141071 seconds)
    (179/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.439145558 seconds)
    (180/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.470942816 seconds)
    (181/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.088680942 seconds)
    (182/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.416419018 seconds)
    (183/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.334582517 seconds)
    (184/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.450294139 seconds)
    (185/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.483231514 seconds)
    (186/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.353389412 seconds)
    (187/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.320891468 seconds)
    (188/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.431859512 seconds)
    (189/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.308845432 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.411263791 seconds)
    (191/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.39757798 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.347558105 seconds)
    (193/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.474302798 seconds)
    (194/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.420209635 seconds)
    (195/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.393913308 seconds)
    (196/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.329020707 seconds)
    (197/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.937278667 seconds)
    (198/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.328843296 seconds)
    (199/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.336363012 seconds)
    (200/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.352870803 seconds)
    (201/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.299714221 seconds)
    (202/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.478713879 seconds)
    (203/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.288423934 seconds)
    (204/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.044479096 seconds)
    (205/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.317189355 seconds)
    (206/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.953681232 seconds)
    (207/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.34245469 seconds)
    (208/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.329142161 seconds)
    (209/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.284445255 seconds)
    (210/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.286351719 seconds)
    (211/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.352464702 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.49265932 seconds)
    (213/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.285089841 seconds)
    (214/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.285971511 seconds)
    (215/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.515256876 seconds)
    (216/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.374308242 seconds)
    (217/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.303109445 seconds)
    (218/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.346097613 seconds)
    (219/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.312546814 seconds)
    (220/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.329531724 seconds)
    (221/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.381156921 seconds)
    (222/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.436235776 seconds)
    (223/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.990059347 seconds)
    (224/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.287064559 seconds)
  done (took 377.846430959 seconds)
done (took 379.038801239 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349297991 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.483906359 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.301730467 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.303613162 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346159856 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.301865854 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.348838387 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.308988168 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.311599944 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.312373032 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.30178277 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.317526241 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.314217282 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.341103079 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.416931878 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.310036147 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.302499709 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.30977195 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.350104169 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.369575714 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348316642 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346883312 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.32249937 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.304365039 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350878987 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351729945 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.310200999 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.307978015 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.310249363 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.351820429 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.295894698 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.311841619 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.361530461 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.359553849 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347661848 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.309497759 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347560419 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.48601243 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.346169678 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.343930175 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.315559001 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.361518268 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.314410788 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.3160209 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.361135727 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.323085107 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351372111 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.428596897 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.296674902 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.297536417 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356152409 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.36990696 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.31576654 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.30366857 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.305972498 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.431244788 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.312199999 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354171971 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.313493444 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.348660948 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.417710228 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353207677 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.371534691 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353257271 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.312505926 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.318860233 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.312253276 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.371663069 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.31294408 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348644053 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351515048 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.316804446 seconds)
done (took 105.645019578 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.429700481 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.306928363 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.446691967 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.312715154 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.469132828 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.455610384 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.31133702 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.312572601 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.310962418 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.133364795 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.311785536 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.312221121 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.300834103 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.312200015 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.435597066 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.311145596 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.31031693 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.024435553 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.312946092 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.446079718 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.302488301 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.31300674 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.312331032 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.136778056 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.307294646 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.304514801 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.447798285 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.313058254 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.0329967 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.302299955 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.306092365 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.034249377 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.44762971 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.332094386 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.323337186 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.3225962 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.471111587 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.332974964 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.431675301 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.432196536 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.448024487 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.352677758 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.303823865 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.308005992 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.314994652 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.312964123 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.314161223 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.344300686 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.310782689 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.312948361 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.025113088 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.324320928 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.314905381 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.315130232 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.313975724 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.343916625 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.315321831 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.316952404 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.448925919 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.315399408 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.434516264 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.136647476 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.132183196 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.315492711 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.307693024 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.317321364 seconds)
  done (took 106.98328691 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.375844464 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.384796635 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.422969875 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.328561988 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.361620461 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.425653617 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.328145016 seconds)
  done (took 10.839045187 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.316449537 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.314574426 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.359851628 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361932213 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.314644491 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.465873769 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.316231351 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.321337595 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.316182806 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.362855728 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.316148984 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.316461899 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.326332591 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.311073765 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.358781821 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.323051457 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.426342684 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.312651014 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.315120609 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.46900357 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.316061669 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.325294413 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.362162873 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.322012764 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.317108206 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.317342825 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.081333662 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.318565439 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.321704781 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.318055312 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.316599015 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.365664707 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.317873965 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.312412549 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.31775748 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428974035 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.318151715 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.319130639 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.318795991 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.314339601 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.317639843 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.318641894 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.318903352 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.318340906 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.317628676 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.338200381 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.3185295 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.319377677 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.320033484 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.322358545 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.362740968 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.319811039 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.320131396 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.318424192 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.372704811 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327919574 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.318506632 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.320889062 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.319211194 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.318029683 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.470128615 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.362260096 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.320262506 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.362171976 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.31996954 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.321190506 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.320431161 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.320195331 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.405459391 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.320294728 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.363174705 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.319551551 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.496534636 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.338644034 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.321717806 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.317542384 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.316793133 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.319997739 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.311980627 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.32160896 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.319876567 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.318225587 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.32170845 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.321505517 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.321173031 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.472665264 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.424899225 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.320810489 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.327874183 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.324699951 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.321550322 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.368985302 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.324490085 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.320069104 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366695411 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.42969328 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.370318571 seconds)
  done (took 135.903298868 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.328784784 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.328684903 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.319755503 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.343366951 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.318337344 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.315669452 seconds)
  done (took 9.172800839 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.31876973 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.325154526 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.323402274 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.322215555 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.322227754 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.321707766 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.323642258 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.318377566 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.326621761 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.322618122 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.323742188 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.323605125 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.324298415 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.322652205 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.324169993 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.324018336 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.322661176 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.323806105 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.323711803 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325595709 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.318223267 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.324573655 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.324393669 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.320076479 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.328242221 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.324027877 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.338621765 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.32399051 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.323334713 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.324303136 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.342503521 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.323561647 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.320538674 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.32365847 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.327633519 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.32131711 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.329189468 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.32530266 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.324981809 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.323957621 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.326000394 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.324713575 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.324556946 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.326224187 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.320894869 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.323574147 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.330397276 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.339285084 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.324945742 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.326089039 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.327445995 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.327062636 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.327457688 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.327104124 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.32297936 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.340859249 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.328658531 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.326189355 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.326236088 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.32219794 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.330011763 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.327470763 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.32227437 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.32843016 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.326411932 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.329367411 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.32252579 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.329789411 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.326180941 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.325733022 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.327253974 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.325794652 seconds)
  done (took 97.660904202 seconds)
done (took 361.767718499 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.123182842 seconds)
  done (took 4.344741911 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.456616492 seconds)
  done (took 3.680548112 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.496663133 seconds)
  done (took 23.726717806 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.427741508 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.369746088 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.322259467 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.320941751 seconds)
  done (took 10.663181469 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.600400563 seconds)
  done (took 3.822121295 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.321193627 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.33678855 seconds)
  done (took 5.882331601 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.581118195 seconds)
  done (took 3.802659062 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.751094537 seconds)
  done (took 3.983159626 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.349302756 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.335108347 seconds)
  done (took 5.913831968 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.307238329 seconds)
  done (took 3.529988027 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.029788081 seconds)
  done (took 37.253490224 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.328653851 seconds)
  done (took 3.553752825 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.367002452 seconds)
  done (took 3.59088797 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.116146247 seconds)
  done (took 6.338606989 seconds)
done (took 121.309625824 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.317008521 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.327949027 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.326283702 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.324020435 seconds)
  done (took 10.518446922 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.380562426 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.380509149 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.380819189 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.380361101 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.3790296 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.381209205 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.354424219 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.354151591 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.3819413 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.381822328 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.380725356 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.380088154 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.380734567 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.354416205 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.380759916 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.380735793 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.380494782 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.385051328 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.354821097 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.380884072 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.330437973 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.3817328 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.38027335 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.330810146 seconds)
  done (took 34.162504983 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.84191489 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.39741693 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.48064703 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.377125829 seconds)
  done (took 7.321655793 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.406105311 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.409886518 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.42104858 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.460991777 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.473236198 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.421436586 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.356530179 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.353975769 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.338727193 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.40858066 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.460778946 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.399818445 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.486991727 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.33059264 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.537760542 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.331272266 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.333660401 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.408628061 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.459476984 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.474258998 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.333093729 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.409470782 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.410235295 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.400330568 seconds)
  done (took 35.052425635 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.344239058 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.346637489 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.339840581 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.3481285 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.332920558 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.340462777 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.334274764 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.340424829 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.334118611 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.333551311 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.340239811 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.348271855 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.338388629 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.333431747 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.345726787 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.335566374 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.340605048 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.338903075 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.340673724 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.34035467 seconds)
  done (took 28.024284777 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.322799207 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.322177064 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.673127384 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.577663713 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.32274183 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.322759286 seconds)
  done (took 13.770202339 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.398453302 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.566159298 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.333294283 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.691287149 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.783571768 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.334203282 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.329263772 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.583204288 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.904705704 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.881467551 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.393109372 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.402598616 seconds)
  done (took 19.829006083 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.327498923 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.328147927 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.335573773 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.344453182 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.384970457 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.350525449 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.334878024 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.324623196 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.389310221 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.404801813 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.348968998 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.384452058 seconds)
  done (took 21.489543188 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424168809 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329464147 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336418332 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347938659 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335518557 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170363612 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342867639 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.052751607 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.354800228 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609581286 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345636463 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428226093 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.584636332 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330198282 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336363305 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.316007734 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576865863 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821203376 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333583583 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336861914 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364238385 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342631399 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337444014 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.549144279 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336403775 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329722628 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.638019546 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331322288 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619184143 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344075999 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342598797 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33113514 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608143301 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998958705 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449398951 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546986029 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332825889 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352225764 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.348224613 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.337181534 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336817456 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334321061 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342802922 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332462692 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335014201 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339954692 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060104577 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.360479533 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.334698419 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338006974 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594651933 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428139644 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.338497054 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333886776 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327338139 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336883095 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.337704396 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476492745 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93228963 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338629474 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346073624 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.339062118 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344527153 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342082331 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951002228 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.342694662 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.341143017 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340187219 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334276736 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338689421 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352958231 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333240529 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.358820417 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335468226 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06405402 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335703606 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351436516 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883844642 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340585564 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.339573154 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565892223 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335618095 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335427589 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.334010853 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334885349 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041010449 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343309048 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.32017423 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397440635 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077768763 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.57328139 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353887597 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365239645 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557765824 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.320471356 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336901741 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.338511012 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339083885 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35832397 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.05737449 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35936638 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.341269159 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592500023 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.548914368 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345664116 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.339906653 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821136178 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355286883 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.377155606 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345717176 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.55850572 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.929198303 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356978544 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337034226 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373258295 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335703419 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071904097 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338171316 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.444014255 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336566463 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615926676 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.128630281 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337849543 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403850065 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340347685 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336983998 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33637074 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360876701 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336301268 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.54437829 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373519718 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.352500929 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.337168622 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337528658 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.347817977 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338323146 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.339322881 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558410215 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337536742 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637408242 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339215442 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337057098 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337499892 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.559180256 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.338751137 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.681202325 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598159134 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35372392 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354665123 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353382671 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357018299 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441098558 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359521312 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.338896701 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.616008859 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.3441133 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.345926949 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338618079 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365238325 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345072845 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.347308801 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353937457 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938479638 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326445035 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347152577 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.230401776 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.355957315 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406466428 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348438568 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556942228 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.344787895 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346844117 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.347392799 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.352453819 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568025156 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34836471 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.345723539 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417164891 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.818849354 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951398744 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356118424 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.341923928 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.34038049 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.339032568 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340564185 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34123364 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339132287 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558626963 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359924897 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340916237 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.957308305 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345150387 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355401132 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.353454669 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352869066 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.348573019 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342537222 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.343361811 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345138713 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378518838 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.356756703 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487984449 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.358670062 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341137915 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.858310771 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348068728 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344359287 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342424061 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374537757 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349968638 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155888534 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620953866 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356558935 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608606756 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355488414 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.363835044 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.342439342 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353702095 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345039713 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.358065361 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350252132 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.353146427 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351183015 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345540941 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918217295 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085087268 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896708614 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360562117 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.34515718 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366854786 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.066361569 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362939912 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34335312 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582780228 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086886668 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364124262 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828045675 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.367615821 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123206326 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607036054 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575452796 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358705759 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.353344447 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609812151 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555920244 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378489435 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.344907508 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371720698 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.330435707 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907021356 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367719298 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426741024 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071334678 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374263726 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346572742 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.413602257 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.358835379 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759694015 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364921993 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346802093 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3458784 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350827919 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163117143 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371868966 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344804096 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964698216 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361871664 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.833649049 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366409521 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.566755668 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.36230759 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.349515638 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.34962239 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.351954183 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.59932243 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613143239 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349082221 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361861306 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895666054 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.217292858 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.36127187 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348136232 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087717955 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350365261 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641149892 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.351199439 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.358840786 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349287234 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347899483 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348834629 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.346736448 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352705216 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320754469 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83981507 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.34946047 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376610422 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353798456 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35269937 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600899241 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.36400318 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.946398668 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578495828 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349691364 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37134956 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.35349616 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347650609 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.353684682 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349273399 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35103875 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412632102 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.576485441 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368828361 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.340570709 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369571123 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.562388179 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349225713 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348214045 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594582226 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.352392194 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.369726778 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090118305 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399820221 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352642956 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353047983 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348375103 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409242795 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41969783 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570834278 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.359827362 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.360095992 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765217977 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368596953 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352041835 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.363499955 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445374373 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364004652 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.367091219 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.128730436 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951442082 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098498635 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.94891127 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617214997 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352907493 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360456031 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352139078 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512938943 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352216899 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626952404 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352320661 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.349006946 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379141694 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351792395 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360089823 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566573898 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628596148 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352386792 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356429483 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357479772 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.352800155 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362372255 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.562205711 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856969858 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915116038 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355739572 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357311203 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08732639 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647049888 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353668459 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353161533 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35379879 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.374563332 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.370658889 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.362518777 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361272111 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498905667 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617551471 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028814997 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.382430263 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.38814394 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.873380809 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366176371 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608854434 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357006279 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.578274995 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962595976 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.074523478 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625841113 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422155764 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577743162 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.359946842 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515664599 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.358415495 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359400687 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354612499 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354831911 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.353143071 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.363717325 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954312039 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621063851 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.359619853 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.359661498 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389692057 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.363207254 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.577447194 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07160677 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577394042 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363687921 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364060322 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35512009 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95657268 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625625741 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358705673 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.361233634 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599937211 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359972816 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380526709 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.875274453 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.355389981 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909316431 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.327789562 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378591583 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361459778 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.076503446 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956991204 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.358672954 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857543418 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360577572 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369689606 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638409285 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.363440772 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367484968 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639514689 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.363732103 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366977411 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585439321 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.954956809 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154585335 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.363066673 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359463645 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.378504366 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358136998 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422927521 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357996505 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358619622 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.787533141 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377260324 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357813946 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371045562 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.365759579 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371162225 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.364475876 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357945908 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.366367972 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.377745487 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.347532083 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366757106 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489875898 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929718455 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378413549 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.038709702 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.684985428 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611874218 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371558275 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.350630248 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.365929229 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360599703 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362039481 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360293806 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35526722 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917348686 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.372799682 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.376254559 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366188394 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.361374061 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571414282 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367599397 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588975712 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372701193 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384021419 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.346701856 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362133742 seconds)
  done (took 963.784414717 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.394539095 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.387133585 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.368038592 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.408749023 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.37984932 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.475707446 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.36522662 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.379427087 seconds)
  done (took 20.417337325 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.355514725 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.36469119 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.358274173 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.38098114 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.368941323 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.847416852 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.39005818 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.366565023 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.380001963 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.359564011 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.373392239 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.347154914 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.367554898 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.362658857 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.353763208 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.371372078 seconds)
  done (took 32.614195487 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.648404649 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.639551457 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.627878087 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.398458454 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.366110941 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.371489296 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.695968838 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.376298652 seconds)
  done (took 27.384330443 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.368782548 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.367175754 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.367708889 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.368361922 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.368966654 seconds)
  done (took 8.100100333 seconds)
done (took 1223.695045152 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.368299722 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.369272859 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.368273363 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.367265215 seconds)
  done (took 6.734806655 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.348078673 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.350012641 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.350246168 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.367305536 seconds)
  done (took 9.674044606 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.078479875 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.005002749 seconds)
  done (took 5.342974038 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.846780881 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.856054481 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.84847213 seconds)
  done (took 6.810666147 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.637809081 seconds)
  done (took 2.897452746 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.253312032 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.364197045 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.084887917 seconds)
  done (took 7.962188254 seconds)
done (took 40.682273999 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.359082759 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.625852629 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.518471213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.364680236 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.519547374 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.517998331 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.091125128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.364769659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.360274478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.359200381 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.358885754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.522555138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.067483594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.612336326 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.067826516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.703084095 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.524264786 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.361732424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.37281656 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.370813077 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.088868247 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.359346354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.359787229 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.360083787 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.523257121 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.503572741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.359725202 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.702689381 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.36019144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.360620778 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.506133844 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.359353889 seconds)
  done (took 82.149187196 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.360557193 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.360086263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.377256308 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.381732094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.385712851 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.360492265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.381277641 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.364317792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.360962387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.386320919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.362737902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.389072711 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.363803229 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.361190915 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.363081745 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.36271363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.364274254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.363107581 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.361023921 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.367995429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.364309935 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.361734075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.368861032 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.361034722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.363534705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.364511179 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.377753247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.395877937 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364476894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.362786067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.363236352 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.378626948 seconds)
  done (took 77.067651238 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.363140794 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.382876824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.36344439 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.362237644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.37367706 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.363779571 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.36697243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.363595738 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.387035854 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.369799884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.362283001 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.374025207 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.361598245 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.373032738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.36311988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.370715275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.364745938 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.363653507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.363473499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.364450188 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.36424989 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.364191662 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.364335974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.380334215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.364960903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.365825437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.363058569 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.381781752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364081318 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.364564591 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.38348143 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.377762783 seconds)
  done (took 77.063376165 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.649402405 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.375273211 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.376782379 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.370450387 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.378683587 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.376553601 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.371758427 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.656264989 seconds)
  done (took 14.820945713 seconds)
done (took 252.36336113 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.369028139 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.89779186 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.415105519 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.37095737 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.409860451 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.397837047 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.595287722 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.413687057 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.599409368 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.40378064 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.394331463 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.369487064 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.212263883 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.52006674 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.233983377 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.351356596 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.279574562 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.366093075 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.955380727 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.656162129 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.39671759 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.370539594 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.226804829 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.303675607 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.356571908 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.454127034 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.472033894 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.597664744 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.531982538 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.452613961 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.898396781 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.372247707 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.37255283 seconds)
  done (took 64.286095449 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.372450306 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.49984814 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.37835325 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.377620637 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.501303554 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.399455535 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.373905672 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.379465946 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.377463387 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.379911071 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.380920264 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.379921564 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.380762393 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.42737765 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.504652246 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.397558917 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.375157145 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.495891037 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.375558961 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.370974482 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.42842716 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.379276926 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.38131307 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.427852452 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.380610015 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.380554833 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.50108102 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.403065956 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.380616207 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.495827177 seconds)
  done (took 43.555776229 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.381078806 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.973018246 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.128428641 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.384328604 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.376327281 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.378698917 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.672609698 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.381803027 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.379370621 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.379423496 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.881500866 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.38325053 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.412874878 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.149645039 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.380630771 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.3823009 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.381984021 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.376302505 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.987768737 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.386751191 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.691704845 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.384848347 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.67107993 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.387884786 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.400028194 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.378928995 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.383124102 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.207121686 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.401295825 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.883912381 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.187801768 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.672402836 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.143316365 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.161062607 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.189239467 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.388080669 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.381898216 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.885667205 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.382108015 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.378592377 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.672241974 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.37874316 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.136216744 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.064667596 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.39736428 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.384042021 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.216505424 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.901988376 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.628755259 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.387620129 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.165134047 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.382392764 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.387571632 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.383520426 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.630142881 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.38161122 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.380337652 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.226112912 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.405962094 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.675300855 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.388045265 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.379944357 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.983089831 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.380917006 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.980894083 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.38375074 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.388555342 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.400756932 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.144205541 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.383738185 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.090626585 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.39823838 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.383666049 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.879826291 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.98273108 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.29470206 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.382944727 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.987949208 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.16767505 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.69469556 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.38570487 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.18693544 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.696889547 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.385694413 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.387223003 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.387690044 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.387792628 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.465283511 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.673133889 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.02918396 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.082794212 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.246737855 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.699813936 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.394242983 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.382785267 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.230067063 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.407956271 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.386937204 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.134232579 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.082516482 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.400920104 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.390871314 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.095302758 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.402795704 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.680175591 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.389809992 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.148352181 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.384407659 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.467640848 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.389392345 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.391506096 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.407118858 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.680025024 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.388600946 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.388255264 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.069935497 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.915110038 seconds)
  done (took 194.281751925 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.37971409 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.378378137 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.380836557 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.38014437 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.379490673 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.385420757 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.377814935 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.378565641 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.383736662 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.379240451 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.378078696 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.385841551 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.384115119 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.378466237 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.388510565 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.380248386 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.381954427 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.380244534 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.380322604 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.380491318 seconds)
  done (took 44.899964002 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.389878608 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.960269739 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.950768647 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.389992752 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.391524383 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.385485881 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.442873925 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.390625573 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.390963466 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.692392072 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.565013399 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.408483954 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.390730205 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.390618647 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.935226191 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.380611797 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.693167097 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.958843047 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.390343865 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.961534607 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.381584313 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.391302872 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.384888672 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.961895898 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.718758855 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.681735327 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.444475221 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.964419264 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.408972047 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.391245954 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.962258384 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.392269961 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.387165094 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.96138171 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.411629533 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.406254807 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.392173183 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.447425741 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.446163151 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.696480481 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.046202953 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.707821111 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.402553762 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.566471357 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.394210946 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.381227918 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.973025455 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.411114199 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.38046648 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.39478699 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.398508469 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.946196271 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.406597369 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.947210759 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.410103726 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.395271618 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.965994669 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.948480595 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.959036159 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.566698647 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.410263062 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.683809341 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.393534406 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.97303745 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.410211521 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.394985748 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.396421573 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.572198709 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.989715885 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.688510433 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.702508146 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.703982523 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.398302826 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.457957106 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.411749972 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.767980498 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.452890911 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.795801211 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.701610287 seconds)
  done (took 126.880183223 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.670017487 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.503697757 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.804682688 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.012591169 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.391293422 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.525931602 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.504072152 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.654533317 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.396080185 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.467858122 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.052098993 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.509080908 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.143249808 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.478611655 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.495886919 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.539029279 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.800017948 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.386683133 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.094553026 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.038561324 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.395050707 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.514309369 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.962465558 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.619446973 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.397644356 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.980238096 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.374474124 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.071810819 seconds)
  done (took 54.066670537 seconds)
done (took 529.238531662 seconds)
SAVING RESULT...
DONE!
