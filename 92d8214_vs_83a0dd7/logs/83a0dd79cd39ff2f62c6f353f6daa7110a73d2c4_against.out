cset: moving following pidspec: 29130
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.105430032 seconds)
loading group "string"... done (took 0.618908926 seconds)
loading group "linalg"... done (took 9.880104413 seconds)
loading group "parallel"... done (took 0.185488689 seconds)
loading group "find"... done (took 1.571020227 seconds)
loading group "tuple"... done (took 2.204762367 seconds)
loading group "dates"... done (took 1.543976401 seconds)
loading group "micro"... done (took 0.243130553 seconds)
loading group "io"... done (took 0.600370802 seconds)
loading group "scalar"... done (took 47.85848598 seconds)
loading group "sparse"... done (took 14.586728265 seconds)
loading group "broadcast"... done (took 1.282061994 seconds)
loading group "union"... done (took 13.055412337 seconds)
loading group "simd"... done (took 2.740257358 seconds)
loading group "random"... done (took 11.080490013 seconds)
loading group "problem"... done (took 1833.527690521 seconds)
loading group "array"... done (took 27.874291803 seconds)
loading group "misc"... done (took 1.208426958 seconds)
loading group "sort"... done (took 4.021822715 seconds)
loading group "collection"... done (took 20.303944489 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.769393788 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142344987 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.21739155 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.373261166 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.240236823 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.150379366 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.171383695 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.600324588 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.012007692 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.273237589 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152821517 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.60305775 seconds)
done (took 6.420091918 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.333386115 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.391745322 seconds)
    (2/2) benchmarking "String"...
    done (took 0.177804221 seconds)
  done (took 1.228013985 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07333922 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.18620204 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110492244 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097140043 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.115235126 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111593347 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.112446873 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112333443 seconds)
  done (took 1.507880197 seconds)
done (took 3.807003718 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.55834646 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.915436361 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.574963028 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.170781924 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.203405485 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.181852516 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.322300091 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160262538 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.113419176 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.106787136 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.221756798 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.364356317 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.503694351 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.005351365 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.102350317 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.108078477 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.094591164 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.699901503 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078498158 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130660135 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.597410941 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.115379801 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116599672 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120708798 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204257338 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130761763 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.156371782 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.109551402 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.675670382 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100971836 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.232153033 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083269203 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.173244438 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.256967054 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079381087 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106811184 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669054866 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.179929947 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.116294862 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099295655 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673062722 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079115405 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.244676307 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105453847 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.095851 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.194381268 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118578355 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.097877159 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.085865788 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.098526355 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162369344 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.456947246 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104565552 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170007949 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107198835 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.698601799 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094672154 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15396483 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.135616057 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.104592986 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.081638097 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.109602027 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156379102 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111726337 seconds)
  done (took 20.145258269 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.160490455 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167833492 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090527865 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141070395 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14349348 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094192908 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081191754 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092043738 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128104995 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.237036293 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140291741 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.170725114 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089063263 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083728642 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.143824606 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252141736 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121541674 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120502776 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083269809 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105098862 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141233171 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094543731 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109644307 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110713844 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168938169 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202092961 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105532489 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121324345 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097943032 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116487336 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13929133 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147079009 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.089303311 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08147267 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.186885606 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119917778 seconds)
  done (took 5.356010709 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.2289086 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117006731 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.239793539 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180044381 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148893451 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183239535 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144562306 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.303926948 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.240229644 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182906697 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126813163 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095721923 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092245466 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0778823 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091383994 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.723896367 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.181645084 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150618416 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.151970188 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104260324 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097045034 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.383447316 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10025497 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079365388 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101414261 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.07452445 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.211728696 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.208140138 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104086805 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.380547794 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.11810747 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107777207 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128185033 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190186784 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133944874 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141682522 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086210637 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096989685 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.220862061 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109269558 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075097714 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127792072 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132063425 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131842081 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096324023 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093701252 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.247639206 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09655206 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103599801 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.193525848 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199229723 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.137867187 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077691869 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.389063402 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095005966 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105612477 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.096637876 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.350541557 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138506847 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080379319 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097181378 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076496741 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102334186 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074967353 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.447611724 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10749508 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.354205362 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079245895 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163652747 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098860922 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104585027 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099674067 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083675885 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116269135 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077047818 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093271549 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.093013796 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077081015 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100674951 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10155819 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096433778 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098289226 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077557337 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159914943 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117682264 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096290047 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124811419 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099051529 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076585963 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127958343 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094959976 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081724591 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.189974448 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086041692 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120527857 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098877451 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140056587 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094868158 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.227814015 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079277523 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096579399 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123210605 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.082622591 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125931895 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120973621 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094987246 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098176895 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076761921 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09367576 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144930726 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092383222 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076886497 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098572412 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11055584 seconds)
  done (took 24.897165762 seconds)
done (took 51.057280983 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.520282459 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.12152279 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.122788247 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.120739586 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.118677262 seconds)
  done (took 1.742170601 seconds)
done (took 2.450619319 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.386564714 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.187435691 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.120312634 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187377439 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.105119387 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192117513 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.191398162 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100661776 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.224087589 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098644544 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185813547 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099230252 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087265369 seconds)
  done (took 2.90548223 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098006286 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122510822 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082967911 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113545855 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076729701 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112831615 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110231007 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118384124 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11171198 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08823603 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094019246 seconds)
  done (took 1.839289684 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094281187 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116395937 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083491032 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1096165 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077383353 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1109257 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092262889 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121885003 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10904243 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089688327 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092872411 seconds)
  done (took 1.805514841 seconds)
done (took 7.24967172 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.239968366 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.845650417 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.153818059 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.206750253 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.387245965 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.254788143 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.654561771 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.191600382 seconds)
  done (took 13.857341056 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.17685007 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08539936 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102663524 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101059063 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084452658 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101173089 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08321046 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099470651 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083642334 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09760249 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083837696 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100682721 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098963492 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084717359 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09948588 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085076799 seconds)
  done (took 2.347276223 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.123222095 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121598446 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107035183 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113807078 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088185206 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105449202 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109161772 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091377996 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103156394 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104100666 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.096508516 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110362519 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.108800273 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.088273276 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106668076 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.113922297 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088688041 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106742406 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108459706 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094009547 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.111047567 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.091269729 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109024406 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110553932 seconds)
  done (took 3.338033609 seconds)
done (took 20.251906622 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.181180423 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099349436 seconds)
  done (took 0.996758542 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.152510695 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153130259 seconds)
  done (took 1.026863807 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114209571 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096125579 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142744248 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118663996 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098314978 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083344467 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137933255 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099271942 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083380898 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098744997 seconds)
  done (took 1.797731392 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089339783 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103396104 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.097549143 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.164819243 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.095828073 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103700839 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104146206 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088564756 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103908262 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.085265089 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106951938 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125123112 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.105920667 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.111863983 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103524274 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.108399061 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.098779393 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.106571546 seconds)
  done (took 2.630656962 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082898729 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100541482 seconds)
  done (took 0.91049954 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091095401 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098650748 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089507397 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102826513 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098790545 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083223494 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099479373 seconds)
  done (took 1.38962095 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.553181399 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.276270754 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.379075126 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.238831805 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144665528 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.400151248 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146281254 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.118136197 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.115346109 seconds)
  done (took 3.140085111 seconds)
done (took 12.614479217 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089111026 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.242084381 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.605204373 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.122498062 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083499775 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156705532 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.318286199 seconds)
done (took 2.344711708 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362523692 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.158812209 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090801942 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095983415 seconds)
  done (took 1.435512235 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076970511 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10549096 seconds)
  done (took 0.914193364 seconds)
done (took 3.08702294 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082251151 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.132566632 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080120936 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096892756 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079446798 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097607452 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.080125791 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096248853 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079971307 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094982645 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079981423 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.096397961 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.0800678 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095386981 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079887056 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095200876 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080429235 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095468535 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080392035 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094849372 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079687192 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095513865 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080026836 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095955877 seconds)
  done (took 2.921344642 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108319939 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100692872 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104262879 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089344926 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106101834 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104380832 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087751968 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101711006 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088130127 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100415913 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104958014 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090666397 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098463158 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.10475548 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084021933 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105672316 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088215611 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100513824 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09828995 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091267718 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104160396 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098746414 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089257828 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104780082 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10393069 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089421425 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100061252 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085148278 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104070908 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.105814868 seconds)
  done (took 3.680471059 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.092884303 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09279676 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081328381 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.107246239 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077948142 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098199784 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078923876 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094965473 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083746828 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096061919 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08444356 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097102419 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077548614 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098694892 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082463818 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099476332 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107744233 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078450279 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092912101 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08368559 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100812832 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077853867 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096492424 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081290405 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096754901 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077908632 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096425012 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081660497 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098225709 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080396734 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098769705 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085209315 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097052945 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092939092 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099795716 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.082256128 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.104229209 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093921054 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082851006 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094024482 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077777999 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09644191 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078372914 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103237165 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083044829 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097740506 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07872029 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099080422 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082258419 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101449461 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077443109 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094032527 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085160825 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098934826 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08466061 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094957366 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082167054 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.093071515 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082714308 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097355395 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.077756175 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093700072 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102871272 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082408899 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112729618 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088511992 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095099746 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085240479 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100398883 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086879743 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101373647 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107735725 seconds)
  done (took 7.292679007 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098340472 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110709009 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085012631 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099560865 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083643202 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098018068 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106247662 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081751282 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100936889 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093037211 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097756475 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084207011 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100931947 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098393404 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083365757 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099598032 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091952286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099326956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081419298 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099180917 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082260228 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107178535 seconds)
  done (took 2.824358796 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.270589529 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091571372 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.152452502 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11742077 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.124723606 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117904816 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086647969 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105377958 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086037155 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10967138 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111750195 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087396722 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122184442 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111187133 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110009765 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096637414 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103886248 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112022576 seconds)
  done (took 2.867555352 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104144809 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.105386596 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128544337 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084737705 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101513372 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085879357 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1098052 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117308744 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086005982 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101101339 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111890121 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084987843 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101504738 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085551968 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101682053 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100996999 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086605534 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101879175 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097352711 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111039961 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11245497 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112039023 seconds)
  done (took 2.98280931 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105861028 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103196699 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.138886791 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089360895 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101081744 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.083769304 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108677702 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.102605527 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093719356 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100715388 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085917843 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100675469 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.110403195 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085944274 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108377038 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086415858 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101638741 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102148621 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084707868 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100506161 seconds)
  done (took 2.744484316 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.187710435 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100308501 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117229953 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133028512 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115939411 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101623688 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132245223 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117579507 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101236596 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133889793 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118412903 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101951738 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131071306 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127125157 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116391539 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114806465 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131807395 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132339797 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118768169 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100621675 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133891621 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117386669 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131615987 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10072018 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.1167605 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11664357 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101558027 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124949762 seconds)
  done (took 4.128557231 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084995602 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098142533 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08184504 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097878293 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081473577 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097281993 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082846735 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096926868 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081960671 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096562907 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081692212 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097195199 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0812879 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097088812 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082029086 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096773842 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081405155 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097487996 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081701004 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098705193 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081657698 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097044564 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08205478 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09771286 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081846639 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097162396 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082141104 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098070961 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081677137 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098205687 seconds)
  done (took 3.448372756 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097854321 seconds)
    (2/2) benchmarking "in"...
    done (took 0.126148992 seconds)
  done (took 0.976015176 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095091478 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123815449 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082032119 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100622396 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.110304326 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082938998 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113812171 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110004624 seconds)
  done (took 1.578794382 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.159070502 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.156906255 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089315545 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113056625 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.153417012 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.14543011 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.148872666 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089022838 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103613577 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079692441 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.148621375 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096964008 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105473452 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084969143 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105860811 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094976436 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099462428 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111063733 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092545624 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.103144076 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088841289 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113992298 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107845843 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095738092 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099625808 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091721944 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111447448 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.115072351 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085034695 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108592378 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086361181 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.100933464 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.087374339 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.105507601 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101713398 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.153294148 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097959669 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102195675 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.088738424 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107942469 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111237297 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.084023473 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109096008 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.085482393 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108849807 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106244319 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.089134265 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.101227786 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.079884778 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.100593601 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.083391047 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100824403 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083164897 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107167881 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107525346 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097086088 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.102446068 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100525946 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084495844 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.098845905 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087704932 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102050112 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090451627 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.105071089 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108833422 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089376701 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106176823 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.084334258 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.103315611 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083610761 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105469065 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123005572 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090805731 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106747156 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107590943 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084517377 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102345833 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090457121 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10505489 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107067394 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089540143 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109944799 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090629539 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101495088 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082887525 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108312992 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.103241426 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08755906 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098948971 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09829529 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103272246 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084227279 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098137056 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.103959741 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083649671 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105353406 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081636022 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107526843 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.08466798 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.107210748 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090978697 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104404495 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109609456 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091110666 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107495165 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.088187453 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.146208475 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10299242 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102029609 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.087630461 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108131412 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084937006 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108722161 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.082654264 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102833892 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084563648 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107723341 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106813963 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086906557 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.106989144 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091589511 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108481968 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103125145 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082853174 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101469186 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089402338 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112920034 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090692098 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.105093201 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.10250159 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084836965 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107245739 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08792346 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104194235 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089945428 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103652601 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09970321 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084679849 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10751429 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090307849 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101346769 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087182073 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108154349 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105335314 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087624717 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107742664 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082897044 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097434302 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107257743 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085158832 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.10282401 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095211829 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101719462 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086106014 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102444543 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113336791 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085808735 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108225488 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086005385 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.1063376 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089932053 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098038511 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103636198 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086337494 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110191799 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085021228 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.10238089 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082801889 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109844197 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081451899 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105515998 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097752823 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086322368 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107737989 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08584525 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.107556865 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084452146 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130554785 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117443047 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091552481 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107283135 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088268251 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.107180313 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106584217 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088098404 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109915943 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.090128384 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.103650488 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104650253 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091562097 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103204054 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090422969 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10620959 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09013822 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.09893685 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084876941 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097841124 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106688496 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092129906 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107422276 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.090927045 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104234462 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087624741 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121645975 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102980255 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088254477 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098816561 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089704441 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.113814235 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090615507 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109432762 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109551713 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087465923 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.103741311 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09434624 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104913727 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106693771 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.084952798 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100371036 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081303092 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.109859159 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.088321971 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101244725 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.083995533 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110362978 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109429715 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08670148 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099974281 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090333779 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112295183 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083278301 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107179853 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104518424 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087279462 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11637729 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081046814 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103844099 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110240085 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089898683 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.10235936 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090407365 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.105433406 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.089791617 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.106255695 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086446027 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104920565 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110255427 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087286741 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.101295636 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08433912 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10492108 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08107477 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.105732759 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089263519 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103863338 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103014035 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095225734 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110264007 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.091788352 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106280303 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.107514442 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092050702 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.109966971 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087169516 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109012966 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.083148351 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099106358 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103702413 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080655813 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103210688 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085285908 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.108158508 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087261275 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10635547 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08864765 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110292011 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104874241 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090822534 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119471056 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100889043 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081956451 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10587102 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088852474 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102623353 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103317461 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.085344603 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110150424 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.089841061 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111114413 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085956142 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102008699 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108435739 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085023266 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109408904 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.091333284 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.110712339 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084128054 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107786028 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103001466 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095731575 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100062594 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088235606 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105980712 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10652996 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085719465 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106160858 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084134411 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100321592 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084505673 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.110565309 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105124881 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08944643 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107887652 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08667103 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104134719 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084678006 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110610906 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105248866 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.092359553 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.103650485 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081587058 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099890783 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090247235 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107771084 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.091979367 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103442319 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.107373909 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093024256 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.107656829 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084787179 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114139907 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094355064 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.109607398 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114666573 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081663977 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10487656 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096474958 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.10275852 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086695143 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105517962 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099783991 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092355217 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.11049756 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091631502 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106479308 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081935229 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103849738 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.11007396 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.088426378 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.107684298 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086763539 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108540535 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083414936 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106726949 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090810899 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108171872 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110034931 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09003154 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.1077024 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086834089 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.109608437 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085467265 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100677211 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081796622 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105518907 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109679247 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082149385 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.107990204 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090259415 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104084115 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087013708 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107888604 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085199956 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110689814 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108719091 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087119826 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116496285 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086022362 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10527682 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08991706 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.108696725 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10156859 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087614711 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107927483 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094068092 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107113107 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.107822558 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089991426 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108372975 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087378445 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.109034713 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.090338866 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109786848 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081888852 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.110711618 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113181247 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086452796 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104275296 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087182792 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.1023837 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08808595 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.111027935 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104764969 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094465458 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.11011651 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087732605 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.105004221 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090474047 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107196585 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110241811 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085935432 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110706976 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082052902 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113552647 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106548083 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09206497 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10449129 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082299333 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108693242 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089280273 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107104164 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.11105104 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093119258 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100556433 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082691851 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10551562 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086137061 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115760152 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113223521 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087374997 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10672503 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.087159635 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.104615813 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09300042 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101219435 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085108555 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107746121 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111708186 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087418282 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103168403 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088446977 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106704126 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111843864 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087995424 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102500623 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089274808 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.111341479 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105599807 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085972105 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104642562 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092384985 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107934636 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08612383 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102512715 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116474323 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091996766 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112165492 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085522301 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10915393 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105186777 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086864519 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.110784945 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086822022 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109414709 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08645902 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10953 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116223008 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081887755 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10628024 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099847476 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108824217 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110220258 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.088681248 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106566519 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094682253 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112011638 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.087744737 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101138348 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083826288 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106062822 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100953347 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.087593063 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11628465 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088841661 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106039978 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090260966 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10751241 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.106490129 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.087975758 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102042304 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093461482 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105547616 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094826351 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102407693 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082677866 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.10606237 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09129446 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108130542 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10946515 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086797543 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.107280734 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083508705 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10643257 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093939674 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108223473 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.110655964 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088741231 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106413139 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.087657325 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117026216 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084974287 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107901387 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118111054 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.093371863 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108680887 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091061279 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113661635 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.112224936 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.087621141 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.112641609 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087720057 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107643478 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112170733 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.095696552 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121467982 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088763989 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103067512 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.090046753 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107066337 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103121439 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095415426 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114060379 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.092433946 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109709026 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105338968 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094535639 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114580321 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089947518 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105406807 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106146226 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090635526 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106618504 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.089288404 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105383787 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.094716199 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.111969526 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091513427 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115010801 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101626087 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097725695 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113028569 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.09380124 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105829366 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083951581 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102658864 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.088140832 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.112197484 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.111870706 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.088880697 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.109738587 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.089143828 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109285881 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089673416 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10622223 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.114422623 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.090746918 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.105348887 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091589382 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107496857 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091420804 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.105456438 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091808992 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.112880083 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110307936 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098995799 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.111865189 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087742765 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106672063 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109471953 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.089583053 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110402842 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089808699 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105536867 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08407824 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110530701 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.095174526 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108878649 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113219077 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09627912 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107399431 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093606587 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114116573 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.109856018 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086390109 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112391327 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.089930389 seconds)
  done (took 60.2399204 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.170647654 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095062292 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107572059 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087770061 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137642597 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109791737 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087978844 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10973812 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089500503 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122190074 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10816101 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088241421 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.131502298 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140164132 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136436183 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123231958 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108230389 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08975266 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106994235 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090789439 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12941756 seconds)
  done (took 3.179468054 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117934523 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.127583621 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126936954 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.130153027 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117532465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.106464809 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.125634945 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124199361 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.131178475 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121103913 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111038473 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125825109 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119959781 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.122121574 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101583522 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12128624 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.130360465 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.119120919 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125196105 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106531767 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119865244 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125876526 seconds)
  done (took 3.463058303 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.101718476 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.112404404 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092382444 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.107244051 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.091139508 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.10699978 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.097942228 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.106549938 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.0972413 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.108376888 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.10347891 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087758144 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112535807 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088234599 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105088516 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.087216726 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11676478 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.091643282 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.112793097 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.087128485 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.124881945 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.106913457 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.08777263 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104490706 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.121710781 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.093036221 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.112065411 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.090958574 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.10375905 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090753151 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106851788 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090538245 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111237966 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085041795 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103769272 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.110393833 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.091609357 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.106994669 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08825165 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.111297836 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.089211673 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.111816677 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.096235804 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.108027125 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.087687074 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108913931 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.111386847 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.08764325 seconds)
  done (took 5.666688309 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.159914959 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.170825117 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.096800323 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.155789198 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.114253182 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.128610134 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.114266871 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.159109604 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.095529192 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.114817441 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.136325015 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134373367 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121256701 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104180402 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115163847 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096499206 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.118511083 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.113289772 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124538467 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.095803159 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12491012 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.118463093 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116457672 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134630335 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118792597 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.11497161 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.097376344 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.124738325 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.13462694 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127218443 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10137242 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12125401 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134029783 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.122237216 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.094947257 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.118695715 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136249225 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.12150148 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.101076252 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.111790206 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.098831383 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.119910414 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.123747385 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138608534 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100154783 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.119505896 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116065274 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.093449729 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.13289647 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.115721882 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.128824874 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114926025 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124453736 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.119280338 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122116388 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114635842 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.116714178 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.117398806 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10161941 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.1334556 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.115185254 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102293482 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.13394738 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.116588526 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.125712699 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.138006362 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.099877582 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123789438 seconds)
  done (took 9.121804958 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130179187 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.118982674 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13600224 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135263596 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099834489 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.119324863 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120423568 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.099144104 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118822192 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128139628 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119035997 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.214994045 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.115447411 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.105926921 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119905368 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120371921 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.100695577 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119484222 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118224571 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099448159 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118417379 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132958184 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.120272855 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13434158 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136291334 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.095857537 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11981967 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099623947 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134595848 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11789464 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137234774 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.120677867 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099881951 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133778486 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136685678 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.11997771 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091836148 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11950383 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.119412915 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099337197 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.115532336 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133990358 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11901174 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.095486024 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119886425 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118887213 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11430974 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13588783 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126224945 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127890705 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11922589 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134151363 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099763284 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119708578 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.13319803 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145170774 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134513368 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135704314 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099743008 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133759382 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134908151 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.144914054 seconds)
  done (took 8.391243164 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093902296 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10829554 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088457051 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.108383139 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088505093 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108444972 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089347394 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107613573 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0876046 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10963342 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088552271 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107885454 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088479936 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107817005 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08890833 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108895098 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088579689 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107947001 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087775699 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108665649 seconds)
  done (took 2.797289697 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10749084 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.134551793 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.114000422 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102730382 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113492664 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122412673 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09353444 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114149851 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093816766 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112543094 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125242493 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105226655 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11281847 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.122289835 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124758519 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102370354 seconds)
  done (took 2.624852639 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123749677 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.135651184 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.173313393 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.116593449 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.092545445 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.122170348 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.113686067 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094393718 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.111383762 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.100408317 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.117252129 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.11731854 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.093294618 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.112439583 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.092764144 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.116889026 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.090647401 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.117098634 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112987783 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.174181712 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100372612 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.116451537 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1146228 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.096161941 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.117268126 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.099242421 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.121354853 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.115676512 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.095015596 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.113948437 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.096274963 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.124788238 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.113149795 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.097827207 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113691997 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.095455603 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.11315485 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.114495187 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.098043308 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.112806851 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.09397786 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.116688011 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.093140575 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.116900303 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.112133039 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.093546281 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.111480114 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.101471208 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.115458976 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.116173762 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092881926 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.119990654 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.098363262 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.12440631 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.122542686 seconds)
  done (took 6.958733312 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114040872 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115636688 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.107440456 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109656667 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114224419 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.095730602 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11504739 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095250754 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115816556 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090220347 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117197291 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115188523 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096114636 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114397051 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095924755 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114878645 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.110226307 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.095885698 seconds)
  done (took 2.763416382 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104159042 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112485455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098962219 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.113692884 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092616297 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114513625 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091383763 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109919015 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112392358 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092735024 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113472246 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.09316531 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111062598 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092726082 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113350729 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092513945 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113609303 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092310966 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.113366662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112266864 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093233879 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111245128 seconds)
  done (took 3.129780543 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110898054 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.174972836 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.123316073 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.184739327 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.113198402 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.090519229 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.123833002 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.112268509 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.110282067 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.111394784 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.110860502 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.090574641 seconds)
  done (took 2.289852757 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128953903 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156528248 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115133019 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093387749 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128523628 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120786235 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09965632 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119449002 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132973471 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139965973 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100267713 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134876321 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132461555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134034682 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126943045 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127765904 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100169898 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120830695 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093943137 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165449738 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101204735 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133232148 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120683729 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10032147 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120163802 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135893718 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132776907 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139249336 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100392669 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134055273 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126491755 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121075205 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133067781 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118910635 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113708588 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133938257 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121320943 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146167089 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108069243 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134976713 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11295322 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127828494 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113036298 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130106077 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133848559 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120738917 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129727272 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100703867 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11952475 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15350846 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127680852 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137151697 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106825364 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134409153 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132566252 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153877904 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138494367 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134386358 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127535769 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140551826 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135724789 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106969177 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136443428 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138789348 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128470816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138927214 seconds)
  done (took 9.1487939 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168889929 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095434661 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120752084 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141156091 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136451298 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101066163 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122427701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121915059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101334137 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1165054 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175653945 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121285629 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136821648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114226941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122762034 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121456069 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101870353 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135361479 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115088569 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154039599 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121607265 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136495661 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136064423 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115498298 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138767617 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129568798 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12170226 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100479591 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121383416 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122031128 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131273365 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100832503 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136496797 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116523378 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135729371 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102134595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121929434 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131161453 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100049407 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129074239 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13649417 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146013882 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120946202 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101009117 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138135598 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121436142 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121671163 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097258906 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120951962 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116765346 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118369259 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138591621 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139137292 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135732157 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12095146 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121577877 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101589954 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121482568 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122722516 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107648819 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136866935 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121370945 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155054629 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121824347 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100375724 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13599569 seconds)
  done (took 9.035284846 seconds)
done (took 164.987732006 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.163906754 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.179480444 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.154251497 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.153534352 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107710536 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.123279377 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.142523256 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.15782655 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.086579049 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.10844585 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087079887 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112977249 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.176019644 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086620606 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106553354 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091201023 seconds)
  done (took 2.877541924 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.215194746 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.308162927 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128960967 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.091062271 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.117886589 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110765011 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092014829 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114945426 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089291514 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.123536769 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110454141 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091038867 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122460614 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090425644 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110671713 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.110355265 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10211503 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.111752435 seconds)
  done (took 3.084976774 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120969689 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.165399599 seconds)
  done (took 1.129182115 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132463805 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197265798 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320729089 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170274508 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.141248421 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.134667995 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14977604 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132087072 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.204217803 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134593214 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.136377169 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115787326 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143249567 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101854492 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.127304663 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.115869591 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125624409 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.126664904 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.124853021 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096972801 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138676682 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.116700219 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102427773 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.126605645 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.197981791 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134426542 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.117911516 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.09672607 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118115379 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.102875462 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.124048661 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136060393 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.133804078 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.184904758 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122772953 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.200191461 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104794549 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115155421 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.103693989 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115747379 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121511386 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120712857 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113295726 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115984828 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.096089855 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125999565 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.117079326 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.095495494 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126310469 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126028036 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.126076191 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102988519 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.199277203 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128044418 seconds)
  done (took 8.090760884 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.917791973 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.13612323 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116143816 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.046480243 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14917046 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131919609 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.901785917 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14017389 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.281648405 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.919738356 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110834218 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131895799 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264761583 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.295568779 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.190847284 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.377375821 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.018101025 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129931416 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123640932 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.187057873 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102134008 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14726751 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138177817 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.455943396 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115646898 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093685221 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122108405 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128611416 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182499806 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113983776 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098185082 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.225259356 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.286634879 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233376636 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117117224 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091636206 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113172949 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188596189 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.32340318 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.250578673 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188585852 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089169265 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112001152 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128454694 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11694527 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109885422 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184540046 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.216759477 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193982132 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118372725 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128452271 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103212094 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128234714 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.203548161 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.089746188 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.373058203 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.400287841 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090669733 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12583053 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135936678 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.297939396 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091597336 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.283074072 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122752275 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.247186634 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11354593 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82021921 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18674417 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113935791 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124597025 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10057291 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12247811 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127259332 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182797594 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397138503 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132258137 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096979741 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113426629 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.253333817 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091459195 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113522454 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184900717 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116610528 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124455588 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110201826 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130719242 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.212472608 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270841212 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131522671 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124195695 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098030481 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129177344 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116475815 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233952329 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2543939 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.199033951 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.236807321 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1298235 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184406841 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.209041356 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127868059 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193592223 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124162784 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133737748 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107043686 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.272567925 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155744874 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092466795 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119996525 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.101091315 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.180891245 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096341311 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123485518 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191129298 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.515715323 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18625449 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.113420968 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095738833 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12557281 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202125035 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100945286 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.292166647 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125211745 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189732952 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122804833 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110409316 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102535332 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.207595944 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129486322 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103810912 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129524362 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12320968 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.273259593 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.252972373 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132187021 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269055918 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191981024 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125655299 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196140341 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126553287 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189767698 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126021523 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128242202 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116233632 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812416606 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108357704 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12430378 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120412177 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.206664844 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091860929 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115630876 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091508903 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111272171 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842278698 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094297298 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112081396 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093125439 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124980642 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123892242 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121922457 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099697905 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205646765 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2710667 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129529694 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101242125 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114724449 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182195525 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117472664 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092434651 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11415559 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114410073 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104213717 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120922124 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094367014 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.216687781 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179694431 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.276029739 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.556046565 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114494862 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.11361302 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268550842 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092012225 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.341586851 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125387953 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.262461269 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.209855389 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089406687 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.394356506 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.191500117 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20784227 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.117564672 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193080778 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111712705 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10161849 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.205363024 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092218506 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124240535 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179202953 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133691776 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132847928 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.195288786 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114364231 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251587998 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111347931 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191100875 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117536385 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127820458 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351171929 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093249946 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137202511 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.204349149 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099921424 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115259139 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.790561175 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093540352 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126944458 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102997028 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.282752046 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187613397 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124669481 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126010808 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107314016 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.205818065 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233669764 seconds)
  done (took 48.336711151 seconds)
done (took 64.361877156 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.336904739 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.291626078 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.34392241 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239758631 seconds)
  done (took 2.171867226 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.248952295 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165295334 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.222342815 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.091515093 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.230833711 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091372171 seconds)
  done (took 1.92210622 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.561407591 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.455133224 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.386298775 seconds)
  done (took 2.281274272 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.275979805 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.30319667 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.375992512 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.507520721 seconds)
  done (took 2.451257584 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.297786358 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115425577 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.132176042 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.190674934 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.264139424 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.289094046 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.161196505 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188165143 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.140692201 seconds)
  done (took 2.709760373 seconds)
done (took 12.415494762 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.383813071 seconds)
    (2/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.16265456 seconds)
    (3/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.307265098 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.274570804 seconds)
    (5/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.35092543 seconds)
    (6/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.185227044 seconds)
    (7/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102039507 seconds)
    (8/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.167584942 seconds)
    (9/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.347124922 seconds)
    (10/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.329221418 seconds)
    (11/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.310733199 seconds)
    (12/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.221510616 seconds)
    (13/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.122816093 seconds)
    (14/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.10071009 seconds)
    (15/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.246660252 seconds)
    (16/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.330053297 seconds)
    (17/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.171788632 seconds)
    (18/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.107635639 seconds)
    (19/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.122624535 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.207388108 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.15200403 seconds)
    (22/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.098014617 seconds)
    (23/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.205193233 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09916726 seconds)
    (25/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.123235864 seconds)
    (26/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099159541 seconds)
    (27/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137076039 seconds)
    (28/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.238154655 seconds)
    (29/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.10155431 seconds)
    (30/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.155692188 seconds)
    (31/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.22718364 seconds)
    (32/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.162786913 seconds)
    (33/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.232363446 seconds)
    (34/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.096897352 seconds)
    (35/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133423849 seconds)
    (36/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098908443 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.154633243 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.121179755 seconds)
    (39/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.100215991 seconds)
    (40/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.311197027 seconds)
    (41/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.154622659 seconds)
    (42/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.167522766 seconds)
    (43/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.219102192 seconds)
    (44/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.099101569 seconds)
    (45/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.107634522 seconds)
    (46/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.126312657 seconds)
    (47/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.125215033 seconds)
    (48/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.109953888 seconds)
    (49/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121468914 seconds)
    (50/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.230602953 seconds)
    (51/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.224370673 seconds)
    (52/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.158352389 seconds)
    (53/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.149037338 seconds)
    (54/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.213845233 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.121580803 seconds)
    (56/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.102102068 seconds)
    (57/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.197468142 seconds)
    (58/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.211717074 seconds)
    (59/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.107136947 seconds)
    (60/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.097182928 seconds)
    (61/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.233771573 seconds)
    (62/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.197735957 seconds)
    (63/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.107356633 seconds)
    (64/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171704492 seconds)
    (65/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.147061849 seconds)
    (66/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083706353 seconds)
    (67/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.147559255 seconds)
    (68/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100646027 seconds)
    (69/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.166588268 seconds)
    (70/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.106197698 seconds)
    (71/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.150344057 seconds)
    (72/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.144693348 seconds)
    (73/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.219990207 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098698943 seconds)
    (75/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.208345676 seconds)
    (76/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.106322112 seconds)
    (77/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.146735087 seconds)
    (78/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.133451541 seconds)
    (79/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.121605559 seconds)
    (80/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.124143236 seconds)
    (81/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.217972656 seconds)
    (82/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.190817323 seconds)
    (83/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.088755513 seconds)
    (84/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.173573966 seconds)
    (85/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.132698029 seconds)
    (86/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.111610401 seconds)
    (87/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.107332833 seconds)
    (88/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112863608 seconds)
    (89/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.105342756 seconds)
    (90/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097774607 seconds)
    (91/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.109232982 seconds)
    (92/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.133306865 seconds)
    (93/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.196797057 seconds)
    (94/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.132781384 seconds)
    (95/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11392709 seconds)
    (96/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.083137894 seconds)
    (97/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083458762 seconds)
    (98/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.166387784 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.131895908 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099966887 seconds)
    (101/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11312518 seconds)
    (102/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091672323 seconds)
    (103/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.149576166 seconds)
    (104/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.216012477 seconds)
    (105/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.201112555 seconds)
    (106/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.113802366 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.12130866 seconds)
    (108/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.135915119 seconds)
    (109/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.124034993 seconds)
    (110/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129470908 seconds)
    (111/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.203563993 seconds)
    (112/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091307037 seconds)
    (113/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.106457238 seconds)
    (114/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.155580174 seconds)
    (115/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176385297 seconds)
    (116/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.165109182 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114466537 seconds)
    (118/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11132825 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.124970793 seconds)
    (120/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084001499 seconds)
    (121/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.107278785 seconds)
    (122/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.206139168 seconds)
    (123/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.144381807 seconds)
    (124/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.107609621 seconds)
    (125/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.145873586 seconds)
    (126/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.134079482 seconds)
    (127/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.132700696 seconds)
    (128/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103644114 seconds)
    (129/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.200238584 seconds)
    (130/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.122245619 seconds)
    (131/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100760102 seconds)
    (132/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.106989121 seconds)
    (133/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.103097601 seconds)
    (134/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.106843844 seconds)
    (135/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.08424727 seconds)
    (136/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.171227485 seconds)
    (137/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.101712588 seconds)
    (138/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.155746962 seconds)
    (139/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.088215038 seconds)
    (140/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.157560682 seconds)
    (141/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.133850964 seconds)
    (142/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.142614525 seconds)
    (143/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.157018559 seconds)
    (144/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.124335069 seconds)
    (145/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.082885617 seconds)
    (146/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083908003 seconds)
    (147/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113594216 seconds)
    (148/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.083418198 seconds)
    (149/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.106511973 seconds)
    (150/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.101257494 seconds)
    (151/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.123911179 seconds)
    (152/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.19960997 seconds)
    (153/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096626444 seconds)
    (154/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.10701455 seconds)
    (155/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099531842 seconds)
    (156/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.10816547 seconds)
    (157/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100449584 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.13755751 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.137857676 seconds)
    (160/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099193552 seconds)
    (161/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.13376404 seconds)
    (162/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083786539 seconds)
    (163/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.218539567 seconds)
    (164/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.107778761 seconds)
    (165/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.08939875 seconds)
    (166/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.085057684 seconds)
    (167/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.12476115 seconds)
    (168/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.123151752 seconds)
    (169/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.175048041 seconds)
    (170/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115212768 seconds)
    (171/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.084248544 seconds)
    (172/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.105969599 seconds)
    (173/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.202633634 seconds)
    (174/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.102029094 seconds)
    (175/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123767331 seconds)
    (176/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084925773 seconds)
    (177/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.106511605 seconds)
    (178/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.152416833 seconds)
    (179/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.107272048 seconds)
    (180/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092016623 seconds)
    (181/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115842604 seconds)
    (182/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110664523 seconds)
    (183/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.106730533 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099653175 seconds)
    (185/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.138275429 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.12215747 seconds)
    (187/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.127752486 seconds)
    (188/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.107220495 seconds)
    (189/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083396306 seconds)
    (190/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.143759535 seconds)
    (191/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083313214 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11561113 seconds)
    (193/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.082487281 seconds)
    (194/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.123799372 seconds)
    (195/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.100990035 seconds)
    (196/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.138060752 seconds)
    (197/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.082812214 seconds)
    (198/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.106068522 seconds)
    (199/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099653905 seconds)
    (200/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.136629304 seconds)
    (201/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.123170285 seconds)
    (202/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.083983885 seconds)
    (203/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083546117 seconds)
    (204/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.114283996 seconds)
    (205/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.082684706 seconds)
    (206/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128151991 seconds)
    (207/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102722671 seconds)
    (208/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.137062359 seconds)
    (209/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.084068769 seconds)
    (210/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.107600665 seconds)
    (211/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083872741 seconds)
    (212/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.106681149 seconds)
    (213/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09779877 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.124107266 seconds)
    (215/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.100308472 seconds)
    (216/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.112560781 seconds)
    (217/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.102545551 seconds)
    (218/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.112111589 seconds)
    (219/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110203923 seconds)
    (220/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.1084447 seconds)
    (221/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092235235 seconds)
    (222/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.107444303 seconds)
    (223/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084448315 seconds)
    (224/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.131652223 seconds)
  done (took 32.266722338 seconds)
done (took 33.153646563 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.521966267 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133052156 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104566652 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128061996 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189694297 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105748683 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.135920828 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.132305422 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.10838219 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.124337387 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093670473 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.132310099 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.126903114 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.189729814 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105881759 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.121843163 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119765919 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.109690706 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.135255391 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.137457802 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.189341907 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095838806 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.133312825 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.095609732 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.188911384 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12056995 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128283583 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10405002 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.133421293 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.101558956 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.126795536 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118447569 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.113731113 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.13585632 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093856907 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.124331844 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093727189 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.115272483 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.126059696 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.102318752 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.133147745 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.102760064 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.131416496 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.121647315 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.102775581 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.125203317 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093879787 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.131811318 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.116796503 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103684569 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120216058 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.113843906 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.124096948 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09320012 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116836304 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120155981 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.108828346 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118548171 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.108889329 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117685142 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.097090354 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118595466 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.127937946 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093476137 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.125269456 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095363247 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.124647807 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104109515 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.125146416 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119944904 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094112756 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.12447997 seconds)
done (took 9.979387119 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107271343 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184774145 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.191635905 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.195527802 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152848778 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.138602124 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140569273 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125594756 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137705353 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1449809 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.157541321 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.125082483 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.225962947 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.108991489 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.138593781 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.129156821 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.110381076 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.12878371 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.199376259 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.146806988 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.158722894 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.109604583 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159198394 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141428968 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.102105936 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.149538157 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.129570605 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.127164635 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.102362912 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.143887323 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.145805085 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103288363 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128632732 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.117255095 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.137765094 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.131885274 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113767438 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.128025013 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.124255704 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.099991887 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142443361 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137646829 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100118224 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138102566 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127892525 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11160691 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.133804437 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.132296001 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104531712 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.12870634 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104587433 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157537323 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.133365065 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.138476204 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.109540133 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.132339161 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.109216175 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.132536531 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129244433 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109277444 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.125601379 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.102360708 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130414858 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154540938 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.128111293 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10992377 seconds)
  done (took 9.73358818 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129137436 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.159696899 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13571291 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.137468197 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109035327 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.11600662 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091630112 seconds)
  done (took 1.817966133 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100602764 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.19301445 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.19126764 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.191485816 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.184647995 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.226333445 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116015264 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.119264689 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.158238516 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.105990199 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.193340986 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.250992302 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.101299545 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.137891743 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.194103006 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.118068963 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.196013285 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093910095 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131074425 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.193035315 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.136451073 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.151853355 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.108373256 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.119665209 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.187512066 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.0951188 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.274922055 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136504909 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.101140495 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.128725177 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.107528915 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.229690337 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.188316976 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.109776645 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122749405 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189174377 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.187560987 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132440127 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.204297462 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098798211 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.186522952 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.131010905 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.13189453 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.106642825 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.130466966 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.173610558 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.111638705 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.132737257 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.130385108 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.194775445 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.107232854 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.187359876 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.126667675 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.132604134 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.105465059 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.133966706 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137621236 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.107198887 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.19398066 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134197304 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187848374 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188321501 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.188159392 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.189442205 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144156801 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.189941212 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.186992366 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.130166785 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120516307 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.132441571 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.191769869 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.129981999 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.107577973 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.175586848 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135712087 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.190030399 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.191334533 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102203888 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.136341295 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.125969476 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.102965397 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.120440181 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.180031572 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.106878273 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129069723 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139591106 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107807552 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.131544915 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.123880876 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.121124539 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.131036891 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.133568779 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.111661469 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.131022316 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137757327 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.193079306 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.132368642 seconds)
  done (took 15.325614671 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.102174654 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.120298325 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.102026891 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122735367 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096011366 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.121195007 seconds)
  done (took 1.616786372 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.13451796 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.13455038 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.144036837 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.109932516 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191135542 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.198856981 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.224728373 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107625429 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.15127357 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145280514 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.200196488 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.201936207 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.212711423 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.137336777 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.202088832 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.138320609 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.202491491 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105886222 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.144395947 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131309551 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115580029 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.136094128 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130489139 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.190360034 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.136576707 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.110805078 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133264426 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.143205142 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.115755693 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.132770197 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.135536734 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.112160678 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129323934 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131664313 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.201531849 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.104262654 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12923648 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.140856647 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110495132 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.135123337 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.200642809 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130686078 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.142724609 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.115499162 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.132470509 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129297853 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.114747628 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.132430097 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.199493154 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.141451051 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.140252219 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.108722097 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.137364455 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.140424672 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.129782201 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106980972 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.141136412 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.201257961 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.137407006 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.104597973 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.135808359 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.138443317 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131781905 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11447586 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.136666014 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.140680205 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.104166219 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.134568278 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104940261 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.137222729 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.14108373 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.134089984 seconds)
  done (took 11.190973711 seconds)
done (took 40.614364395 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.140713881 seconds)
  done (took 2.093534751 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.997391207 seconds)
  done (took 1.955030657 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.535108257 seconds)
  done (took 18.531549248 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.570526079 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.670419387 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.984776197 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173928623 seconds)
  done (took 3.357208263 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.999378749 seconds)
  done (took 1.97609115 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.336758606 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.287203379 seconds)
  done (took 1.583584053 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.963191637 seconds)
  done (took 1.933257193 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.433908195 seconds)
  done (took 3.403028702 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.395564238 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.201273629 seconds)
  done (took 1.574835538 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.686232136 seconds)
  done (took 1.65893118 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 34.840845518 seconds)
  done (took 35.811754595 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.252687415 seconds)
  done (took 1.236637437 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.321738817 seconds)
  done (took 1.296666649 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.656497331 seconds)
  done (took 4.629026433 seconds)
done (took 82.001962904 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110018504 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134787273 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108724973 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.13165608 seconds)
  done (took 1.455559545 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.119227664 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.133632905 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.112044862 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.133030569 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.143921495 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.108760108 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.134084056 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.139407581 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.107560772 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.13444341 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.108282003 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.133314582 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.13448787 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.105834723 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.130500941 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.109569714 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.136328317 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.132401992 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.108684282 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.133488279 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.107206012 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.13455509 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.135763447 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.108162553 seconds)
  done (took 3.963260434 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.110589885 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.12445394 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102142822 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.125280832 seconds)
  done (took 1.44863711 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.119409972 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.149172595 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.148551052 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.115031656 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.150045883 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.147977064 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.104684309 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.127877351 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.105132648 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.141121848 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.105340285 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153088771 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.149075067 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.134394254 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.118109441 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.126176865 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.110424091 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.149605967 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.139758098 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.117534986 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.128662492 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.115820202 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.129863354 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.147332583 seconds)
  done (took 4.115238773 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.221999542 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.120678573 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.158106031 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.186061218 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.159292391 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.10358218 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.160437873 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.137206229 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.113824639 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.13654358 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.134313364 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.193774174 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.109611117 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.137077016 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.134102579 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.114502404 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.137545192 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.134169726 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.111835446 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.146032018 seconds)
  done (took 3.835423267 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.112181929 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12540597 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094183028 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124698968 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107278775 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128466862 seconds)
  done (took 1.677990097 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099535111 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118344346 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095485351 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119096179 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.099817657 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118249206 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092462355 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118818979 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094335909 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119454161 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094301223 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117109004 seconds)
  done (took 2.27298601 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.317614693 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.100961172 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.131274104 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.124686345 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104473105 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.123178692 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140438816 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.098419553 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265267133 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.099296273 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.14205083 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.203273501 seconds)
  done (took 2.834649055 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238360962 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108955298 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294804148 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40194586 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176746466 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185605804 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293665812 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185163774 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20964565 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154934494 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218291013 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173753062 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170947564 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200129662 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155824232 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183694675 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194613249 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223095668 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165241007 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255811039 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183943358 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186765737 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203757287 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167835787 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126203784 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177838752 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.133033549 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140617002 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194774254 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192478427 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195710001 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166389628 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15731776 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226241611 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270538528 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202409137 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.337848564 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148820787 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.211486284 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.203522133 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285927932 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155341425 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22055668 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172186467 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145309417 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202362452 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17541818 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.203009583 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.148323609 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155289191 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209783019 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196622515 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.234513869 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127175167 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345736956 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16440739 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.137374542 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193900141 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241873578 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214380691 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185392775 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.134062053 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203805269 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202523831 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199924 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164038541 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191571996 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141269841 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197531047 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219285691 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228679245 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187556495 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.207042562 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149900626 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181575993 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189454254 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171197749 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198593377 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178984298 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.105900997 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165897724 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152181997 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14171868 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.203892007 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1083555 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255691248 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122415175 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.206877735 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254925896 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177681299 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180943274 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184583524 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188787678 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162963272 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.108401491 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162831297 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.180872248 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176254274 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145274696 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176216421 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134657006 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.14244911 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168759815 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.136334411 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177253367 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.122837512 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187115679 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182849386 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.14654721 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184143186 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166307319 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.17836188 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193735224 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209565895 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14656613 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119466713 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244496316 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177555296 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.127805456 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195111541 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238740498 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.18631774 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125444072 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219118711 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219041504 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157911191 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210201546 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158206201 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120583897 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170961715 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177133072 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175485083 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.172324249 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142654831 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.172363785 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217679978 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.140478983 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122104001 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193626021 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142187259 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141953147 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160368235 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124757243 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.157438201 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.169280252 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.157860287 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174270829 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176828391 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168879046 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177165487 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13057136 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24946478 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146346644 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150140296 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163675159 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.132597104 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205398268 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206822579 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143519663 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207155196 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.19214105 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241444122 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181819601 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116519468 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199900519 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144229843 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.134181207 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187046516 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182000637 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181794438 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208559021 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236538754 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194255054 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.172485006 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137033189 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215633265 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.19456949 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176364239 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.133295022 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180113105 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216673747 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.108164828 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140369821 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114579138 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155851883 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145407024 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145392404 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204660563 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185035879 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20580986 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17711915 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15602929 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203939933 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.142156986 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185596362 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.196039989 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154579184 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213351179 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203539078 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184798024 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157542551 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191009465 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.134115404 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110438361 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.150808659 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188728524 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145856231 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147568171 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133192243 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229954374 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196288617 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165877927 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222767337 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186181117 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242850187 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.107929845 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.180691242 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191013707 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175188259 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.201533002 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121870924 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.178737472 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197714109 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160821187 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242923707 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182463815 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187002356 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225970704 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.17630109 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145156979 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165711002 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186275226 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128233392 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184133323 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162563406 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150756294 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171591138 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.153464156 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1154269 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232472801 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130261425 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233062889 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174234745 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196430177 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138639648 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1601241 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150504357 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160077381 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.132822331 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191356462 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211751624 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162262266 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176167465 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196296311 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143432023 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.328403187 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211624574 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233946707 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125291988 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16025431 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182255853 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178069491 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18346398 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203389915 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159829553 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200723995 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177905293 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.158707211 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14835505 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136394837 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167840456 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170591977 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151529515 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173700566 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.156875845 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209663002 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161039773 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176613697 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182695459 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.136062073 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.174508467 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157749398 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223436708 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174894154 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197573632 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.17243321 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19064132 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236030218 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109851951 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142042988 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.114176248 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202578881 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146874342 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178057952 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.199929087 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242962356 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178733375 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189601529 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152486529 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.111435918 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178027351 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165394297 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216768963 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15709171 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.154022234 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214385802 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.169485062 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145676669 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183981201 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301831403 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160356367 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197055725 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.10647135 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.315353539 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112254691 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146378615 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178241904 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191967266 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.166365939 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.174015531 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181051454 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160683932 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179073793 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154170273 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208593284 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255897194 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19544623 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198271133 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.160923576 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178367366 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18370911 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197685215 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158433451 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.162528276 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152115364 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233347835 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.214354031 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.149432489 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181896644 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181270519 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150317299 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22646578 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12057204 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236695088 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117195951 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185610711 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155597567 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13985084 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178092799 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199834501 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149483815 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197431528 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174970742 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144784334 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114417398 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169476638 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175818282 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16046578 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.142880052 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203050713 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.112918044 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181115497 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200454347 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144382117 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174411097 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160270715 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12004447 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15927024 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160862082 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150079571 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.159350697 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228853874 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.120609013 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197748113 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222645595 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186071459 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179991482 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131156248 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.679767125 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.144624071 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203689337 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164665421 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213827281 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166809341 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185856945 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179425703 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16482818 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190807078 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168107269 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.240559142 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187775082 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179826537 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116582406 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160209961 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162121918 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14780425 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140766538 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181193193 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156134863 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155259117 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177235154 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162798132 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.161488871 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125152648 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206270398 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164439481 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206505456 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234255484 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125896869 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184797759 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229992074 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114504965 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.184420082 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192556957 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157547994 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171171247 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.148250154 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.12324795 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198307994 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.137359837 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180241934 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177469472 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179883466 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181419514 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.152582611 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177917831 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129543143 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179223596 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142222044 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177503541 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174579985 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147021741 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.115850852 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173293453 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178459111 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.175678831 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142330889 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160662007 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200340508 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.137163366 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148752107 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302169656 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177871103 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216331467 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.173380087 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149549918 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130619678 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174798745 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173679624 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178441879 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.145222641 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146738853 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.120631374 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.202343908 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174379539 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174334092 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200008484 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181352347 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209957438 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.16232559 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284853729 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151924323 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143795144 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.147899036 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.149253213 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155908232 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121022784 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162230306 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209524787 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200610478 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.168423246 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.160699001 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143859242 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.109102606 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14733533 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179371882 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173590125 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177876476 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160888715 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105845604 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162278256 seconds)
  done (took 86.331895106 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198442977 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.182952851 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.228785311 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.232702814 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181010653 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.274816949 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.219600294 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242220629 seconds)
  done (took 2.830314695 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.110885331 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.145614427 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152825944 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134690231 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.135719622 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.430289989 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.148346823 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.134254113 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.197093396 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148590957 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.130576477 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.68142623 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.131515399 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.130780958 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.108730157 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132937862 seconds)
  done (took 4.114802614 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.483785595 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.557872594 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.979505731 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.264688505 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.246594673 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.194693034 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.759980404 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.182817244 seconds)
  done (took 12.740337336 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.138628118 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152761178 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.361156214 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.231410096 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.173630441 seconds)
  done (took 2.134119088 seconds)
done (took 130.728150949 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.111460813 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.154861903 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.110971888 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156400961 seconds)
  done (took 1.596155279 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.162738809 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.123314171 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097283396 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121453326 seconds)
  done (took 1.578129384 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.546602931 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091996191 seconds)
  done (took 1.743515216 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.140853202 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.157837471 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.15786797 seconds)
  done (took 1.5376134 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.118220147 seconds)
  done (took 1.190293689 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.111181028 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.134473596 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.196407099 seconds)
  done (took 1.520272947 seconds)
done (took 10.242089896 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.132340575 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436421224 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423078578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117918663 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.733776403 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.414292266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.019347274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.168415076 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203025293 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127273751 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147980327 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678953509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.032590456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348649273 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.016878983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.379924582 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681902331 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128768393 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10676008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129428133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.023916975 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098536781 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128033616 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102163972 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706885436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.412909784 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127275501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.39456762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097999857 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132020466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.388215054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127631435 seconds)
  done (took 17.235039315 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145334799 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194461177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137530635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101392805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133329706 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099858583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.139926803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143277918 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204576465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098815896 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149294463 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127335907 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106888529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.129038407 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122414478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127196788 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101646576 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.131469261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135153036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101744236 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148688554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097750257 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129840617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129095423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100145341 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.154806244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098711767 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.143057728 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126068828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104545612 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133787351 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100480374 seconds)
  done (took 5.177616178 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150593097 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.204380583 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138607959 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.162386777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18234546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101693877 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219511392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170031985 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204999548 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127808748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121109305 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127472374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.168231867 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100336048 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152212917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09887207 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.131388479 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101596977 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.138129978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131772292 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120546456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127112285 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101466194 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130659867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126730766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.127052564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127712973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141329107 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100308076 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132160071 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.105944198 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127797953 seconds)
  done (took 5.489679311 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.11201595 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.141883601 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.122586903 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.151395109 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.135788247 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.113261812 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.141906105 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.107029656 seconds)
  done (took 2.109901988 seconds)
done (took 31.087875502 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125033329 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.146302214 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.119666248 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.14234461 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.208727891 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.101730757 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.145456799 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.102516764 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.143379271 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.120503755 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.127930222 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.104304526 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.148384437 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.138009804 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.192542077 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.113833353 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.197797474 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.193202637 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.134096779 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.114142172 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.136846918 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.201301376 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.11164905 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.135551669 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.204272893 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.1029002 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.189818176 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.139729707 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.109510415 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.131911249 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.193299021 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.111402054 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.135326397 seconds)
  done (took 5.800480724 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.214543619 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.22237116 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.105237615 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.134437323 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.223772301 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.104422687 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.214165549 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.135840562 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.104656518 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.135268231 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.103713342 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.213135731 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.250559331 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.202954458 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.280802315 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.223230165 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.211984824 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.22030257 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.209122135 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.228513893 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.210759558 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.104641795 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.223932824 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.225369188 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.134673094 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.104430616 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.246651864 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.224149381 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.276907639 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.17817078 seconds)
  done (took 6.764290791 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113820652 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146504959 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.126129704 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204198686 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.174157949 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.143640214 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.114206592 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.153548984 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.128150355 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.130311079 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.111373357 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.168197005 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148376207 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.110902185 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.136426233 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11972766 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.156229168 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.131155897 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108238763 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150379966 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.120385101 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.148149324 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144489986 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.111476683 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.129670736 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113164998 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.134791501 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.142461898 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.110204075 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.138783098 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.106292942 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.135371445 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.104073719 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.139202004 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.134855452 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.11465152 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.158183186 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109324397 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.14370185 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.166474314 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.110345132 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.136358289 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151296255 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.149978047 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.133599043 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.113159389 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.143888141 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139655319 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101238903 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151180149 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116162751 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.132438072 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.152700496 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101189618 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129455157 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108729933 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.132504675 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.103802877 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.14020585 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105404212 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.156531029 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.138931406 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108361553 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.132692052 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106187886 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.129700829 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.100739271 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.137575459 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.154250951 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106434325 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162880188 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101205817 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.141977799 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.109727777 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13694477 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139400156 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.101484004 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137396407 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110754097 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.137359963 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.110731828 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.134042311 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.10498766 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.1516481 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.153392258 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.115229963 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.14111613 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.141867698 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104879864 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132134932 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114002688 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.13276603 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.104817579 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141504925 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.131756435 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.104088893 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.142182367 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.111646668 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.130646894 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119312927 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.137428526 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.129065087 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.11918796 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.132282338 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105212232 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.142521859 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.113376813 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.131779703 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.110218545 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.14326819 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.129902209 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.10756384 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.135432296 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101621075 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.148177038 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.111919463 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.136257824 seconds)
  done (took 16.254764591 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.315906348 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.324093001 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211292481 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.416308229 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126825021 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.208779029 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.319844744 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.241031333 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132533083 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178332433 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.194494711 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.249819713 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.133756912 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.164090909 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.294800555 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.387560676 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.167224191 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.178672279 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.17851678 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.157481467 seconds)
  done (took 5.691550067 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.129086997 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174915338 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163962638 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.165940064 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.108947107 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146547571 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.102434249 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.15590849 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.139176756 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.109534205 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.129829955 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.146591585 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.110471262 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.140517824 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.120740885 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.180219361 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136994444 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.108620222 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.15604924 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.13918665 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.114366661 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.161586043 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.14364647 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161036285 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.11795159 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.147539098 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.100695061 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.138702532 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.104818807 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.13692961 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.136746662 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.125712967 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.13877113 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108409494 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.14190873 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.144459272 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.105698614 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.133353428 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.104036037 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.134711966 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.120808954 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.141203847 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.107912806 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.129341557 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.114892505 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.134946305 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.113518905 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.143464398 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.145005822 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.119490403 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.141408687 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.113242653 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.138516451 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.151193892 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.104696845 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.147943495 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.115392687 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.143642324 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.138987671 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100362868 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.127965903 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.107438679 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.13580962 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.113612065 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.142070185 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.155976492 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.117844109 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.133036308 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.136689484 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.107567068 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133486286 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.120982092 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.157945248 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.1360454 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.105727399 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153274942 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.106102685 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123338647 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112987909 seconds)
  done (took 11.482311858 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136215488 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.138041367 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.123962733 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.170960915 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.152559541 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.108226689 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.137638857 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.123182583 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.14668471 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.115957418 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.143902913 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.145959659 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.128407904 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.14633557 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.135903033 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.118665587 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.142704659 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.176246877 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.123278091 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.168694032 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.149698361 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.108673584 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.148370336 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.116072892 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169145059 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.113997625 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.165308587 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.143115798 seconds)
  done (took 5.028431869 seconds)
done (took 52.112094789 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.300074074 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.422569173 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.202316405 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.200058394 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.258497135 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.211632804 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.20299092 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.393603815 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.96875004 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.188487903 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.200326099 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.205615856 seconds)
done (took 27.878899936 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.237264798 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.802044015 seconds)
    (2/2) benchmarking "String"...
    done (took 1.528264713 seconds)
  done (took 4.464293617 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.193086457 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.194297067 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.434019814 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.195997303 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.207816791 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.20719107 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.194451825 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.213073278 seconds)
  done (took 15.763037301 seconds)
done (took 25.776870824 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.24619471 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.490325244 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.456934217 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.201577302 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.183788853 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.184648554 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.181230252 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.227730401 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.184898883 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.182750232 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.201689439 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.46977548 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.181715116 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.58488351 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.178841651 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.183625059 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.202042281 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.448829071 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.198184195 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.180606393 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.202602175 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.178360193 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.221768869 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.224190037 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.208061905 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.198842926 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.199670426 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.17777399 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.421688828 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.187589787 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.236349864 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.183889819 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.194661798 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.186311481 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.295782617 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.204067381 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.401825595 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.198226278 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.179582317 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.187934856 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.409799281 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.583623697 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.193832904 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.183640353 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.193617208 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.250689803 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.1822399 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.010532957 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.186397509 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.181369467 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.206165422 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.584490465 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.200903507 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.19593669 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.192312772 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.452434379 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.215738895 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.215143281 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.213589711 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.199592693 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.187977109 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.185923795 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.218040709 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.186248806 seconds)
  done (took 142.80744665 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.18647895 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.187653127 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.192271983 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.216371031 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.188013821 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.192376178 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.186866521 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.186677206 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.192371246 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.185956493 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.186379141 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.187913141 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.190916681 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169621718 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.191724904 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.205893217 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.18955692 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.187101519 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.210103293 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.186827854 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.20693396 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.189634754 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.205061992 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.187988817 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.216510138 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.267880367 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.221712758 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.203624898 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.194608385 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.185451175 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.225917997 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.20424406 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.792863804 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.047275787 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.205697873 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.196346753 seconds)
  done (took 79.685622137 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.186854851 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.186410867 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.187002276 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.218045411 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.187190715 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.736532732 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.743879154 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.9412935 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.537239426 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.456904711 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.431227067 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.18663366 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279217593 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199498143 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.188201453 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.202741164 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.230123211 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.186395377 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.187411817 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.741940555 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204579921 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.339637235 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.360600374 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.203519419 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.216848497 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.589901507 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.186318827 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186243655 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216168707 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.516193955 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.235083673 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187232812 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.513383401 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.141463076 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299919444 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189090279 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217519006 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.186988429 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.46861046 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.187434 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.186794747 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.190400255 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.809933294 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.188423441 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.739555871 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194157007 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.107866903 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.188790191 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18810088 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.421126539 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.766480438 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.204909232 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.188175571 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.1893748 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.187961525 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187680725 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.21947554 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.39935386 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301372628 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204024709 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.188022414 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.190688852 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218189922 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.187759462 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.367751256 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207571704 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.333975491 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.264460265 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.298606403 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.740830958 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191989146 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284254457 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306663343 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.188187133 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.188957509 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18991021 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.188485963 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.297368368 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.189060894 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.603075459 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.190970691 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.36186637 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.206203831 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.446651861 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.286182443 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189713425 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.546274933 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.189904629 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.189605308 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916201709 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286370441 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.189967869 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.191337303 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190347957 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.604120902 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.743021515 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.413177745 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.190834234 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.730455232 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19195727 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.190509118 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.612059319 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.723265439 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.828206913 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.192596572 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303517767 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.361491704 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.209304231 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.191635362 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.445191527 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.190860674 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.245851643 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.191217109 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.588694322 seconds)
  done (took 363.197570552 seconds)
done (took 586.80877891 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.928016431 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.876298897 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.01317314 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.905906243 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.87278292 seconds)
  done (took 10.71026977 seconds)
done (took 11.827701951 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.380451846 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.377103876 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249954568 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38153867 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225537487 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.396431948 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.359912066 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.212409647 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.297526234 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.270220454 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296455183 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2420513 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224052364 seconds)
  done (took 18.029494021 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.463524287 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.20122902 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279059609 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.437647006 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238589752 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.495966141 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.497946636 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.201057383 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.354606917 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211403426 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210843991 seconds)
  done (took 17.708697043 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.459059687 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.199819632 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284667975 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.450008921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23930074 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.461884579 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.501934005 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.202483842 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342691944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213277118 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213708779 seconds)
  done (took 17.687352115 seconds)
done (took 54.540982899 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.236116723 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.362697184 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.2245449 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.213415547 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208463335 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.209151596 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215143629 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.209092144 seconds)
  done (took 10.996516368 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.208662166 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.207284559 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.206524983 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.20707939 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.207242102 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207086565 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.205483381 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208203665 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.207551871 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.206383822 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207004659 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.207285267 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208922687 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207939723 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.20722035 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208303801 seconds)
  done (took 20.438712115 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210051341 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208270997 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.207482666 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.207996505 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.207970352 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.208535595 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.208426308 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210166386 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208209072 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.20743813 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.208242601 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207963178 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208690628 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20827317 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.20621571 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209510141 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.208565762 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209089885 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.211668268 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209075801 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.208685398 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208334763 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.208506719 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.208841414 seconds)
  done (took 30.126212766 seconds)
done (took 62.6787404 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.203456156 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.196815986 seconds)
  done (took 5.518526962 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.268639162 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.271948449 seconds)
  done (took 3.664162173 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.210221605 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.209681093 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210164502 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213123646 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210624792 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.208723802 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.210204552 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.209616885 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.209533714 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210835139 seconds)
  done (took 13.22478917 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210941704 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.209657278 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209817531 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21110275 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.21089739 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211063249 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.209599977 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210448007 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210998203 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.210527422 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211317378 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.210357494 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.212888185 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.211296313 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.210133892 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.21165002 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211675292 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211383084 seconds)
  done (took 22.917530473 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.224131739 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.232589153 seconds)
  done (took 3.577578126 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.350686518 seconds)
    (2/7) benchmarking "second"...
    done (took 1.253245007 seconds)
    (3/7) benchmarking "month"...
    done (took 1.32701258 seconds)
    (4/7) benchmarking "year"...
    done (took 1.31987904 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.253530087 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.231624787 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.252332242 seconds)
  done (took 10.109021556 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.212450295 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.402800275 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.537950827 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.79198288 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.212862727 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.252490486 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.035518948 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.253291324 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.242954817 seconds)
  done (took 14.064561877 seconds)
done (took 74.196974323 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.198740137 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.287223567 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.223387294 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.228780489 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.516175433 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.201522939 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.19897052 seconds)
done (took 15.976905289 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.204809795 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.210520051 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.19567991 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.213236028 seconds)
  done (took 9.945219305 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.200404359 seconds)
    (2/2) benchmarking "read"...
    done (took 1.575491899 seconds)
  done (took 4.898709411 seconds)
done (took 15.967110472 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216288605 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213616035 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.214717345 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.213034211 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.213018702 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.215749792 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.215064983 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.216035469 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.214721497 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21395983 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.215085043 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.21461277 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.215765765 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213429887 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215868976 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214501863 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214412777 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212716941 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.214855211 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215299475 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214730006 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213751095 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21323965 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.213848831 seconds)
  done (took 30.272857441 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.215438314 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.213759113 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.21481314 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.214986212 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.214843237 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.214048946 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215355329 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.213226082 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.214077752 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213532993 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214539459 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.213951916 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215180226 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.214398654 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213452761 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.214816911 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213981136 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213427772 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213777143 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.214542341 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216270032 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215215176 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.216137796 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215560098 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.2153158 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21572019 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.215560738 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.21630919 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21499298 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.216717932 seconds)
  done (took 37.568618611 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219916254 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.222267413 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.217715495 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.216696455 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.217022686 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.216897466 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.216240762 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.216940433 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.216594579 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.217286372 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.217370519 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.217046565 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.216504046 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.216063528 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.216097575 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.217168469 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217014161 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.216147758 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.2167774 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.216511063 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.217510444 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.218021736 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.21809531 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219945276 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217894615 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.219410669 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.218341277 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.217770593 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.218002993 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.217737134 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.215980233 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.218090072 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.217606133 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.216014578 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216736736 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.217041508 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221196869 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.222757819 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.217653961 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.218990683 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.21900058 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.218936528 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.221024671 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.219060605 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.219334936 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.219526435 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.220145598 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.220690153 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.220635559 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.220314814 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.220992636 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.220962338 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.220581879 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.21972125 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.220101341 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.221185749 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.219554159 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.220588487 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22094133 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.220066752 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.221520365 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220400938 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.219983422 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.220428348 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.222282683 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.220343681 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220825307 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.220148976 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.220878662 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.220668527 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.22140853 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.222626084 seconds)
  done (took 88.892919961 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22048263 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221055656 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221285465 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.220122596 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222432677 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221299648 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.220720049 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220550789 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220160901 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22067543 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221171242 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222466585 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220734927 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22167589 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221553968 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223216493 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.22121677 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223682399 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.221360167 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221388489 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221415465 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22350279 seconds)
  done (took 28.003161493 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221982944 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222661987 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.221328371 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223515063 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224687186 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222771393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.221636365 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22180096 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222274443 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222477445 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220328551 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222673048 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222978973 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221754446 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220080248 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223707087 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222377238 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223607584 seconds)
  done (took 23.133630046 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.22412589 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.223643577 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.222536334 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222243221 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.223285914 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222445208 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223428866 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224813618 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.223591301 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.225076219 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222722141 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223281303 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.224775892 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223572521 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225217913 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224254177 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.224883754 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223739202 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223848035 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22381315 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224379589 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223999772 seconds)
  done (took 28.055040552 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224353257 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.223639542 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.224731408 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223581902 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224447076 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225004476 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.223986885 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.223114271 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.224444704 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.224278242 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224900299 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223501131 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.226699476 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223733901 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.224487621 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226551663 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225404752 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22379499 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223807448 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.224700143 seconds)
  done (took 25.62232844 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22617919 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227894778 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.226648891 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225519967 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225578963 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225015711 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227735074 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.226061725 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22480548 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226060114 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224828178 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.226364437 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22611414 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.226767008 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227993515 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226679453 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227512294 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227462547 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22665445 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228348696 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225564166 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226507565 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227009606 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.226990434 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226742944 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228392148 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227835682 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.226898543 seconds)
  done (took 35.479864112 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227057617 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22771057 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.225282979 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228153902 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.227406983 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.227576255 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.227620311 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.227433739 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2271658 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228098125 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.226952415 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.227013621 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227375512 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.228747488 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228755464 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.227750903 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227126589 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229356359 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229819199 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228236491 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.227535973 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229373422 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.228358137 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228483109 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228886679 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.229703522 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229192262 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.23057362 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229010766 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228160994 seconds)
  done (took 37.98007728 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.276035245 seconds)
    (2/2) benchmarking "in"...
    done (took 1.274619817 seconds)
  done (took 3.687878341 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229645681 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229795468 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.229071845 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230030098 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229615249 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230551376 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230216541 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229910626 seconds)
  done (took 10.975502266 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.225457961 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.232270346 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.231208543 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.228808125 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.230852093 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224158217 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234256722 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.237146042 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.224774644 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.227144355 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230541221 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.230474864 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.229197245 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228852259 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.22623625 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229094795 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.234265767 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.231624265 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.230338498 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.231262752 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232132989 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229179348 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233447751 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.234696262 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226908108 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.236246763 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.236641035 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.241225373 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226374418 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232246565 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.230024714 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.233920574 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.231114257 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.23193958 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.231992762 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.23149291 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236979033 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251756346 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.237206154 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237244125 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231311619 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.232182315 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228810057 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.230742161 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229751136 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.234680671 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.233045414 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.232573339 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227908088 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.231190068 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.238649726 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227362744 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.235265397 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232243202 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.231819824 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238102816 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258132058 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.231699698 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.235172056 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.238583318 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.24407981 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.241999906 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232442971 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.235742608 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236445482 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.243595744 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240605217 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.240099724 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.236732249 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.236381436 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.23910062 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247344274 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.243552842 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.236498259 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234120392 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.236726114 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231337451 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236384132 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237607037 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.23948136 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.23901742 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235518177 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23774627 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244323905 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.230609291 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.236612667 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.235749682 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.235343715 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.232228073 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242720777 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258632277 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.235690736 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.230019001 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.231465889 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.232297402 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.234743885 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230047485 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231231397 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.237080691 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.238011382 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234726559 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234997959 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24105816 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237146318 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235295962 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239043939 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.240373532 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230195899 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.239455367 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.241487655 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237336012 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.232597276 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.237669774 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.237326929 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233004386 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.238452871 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.238016273 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.233499005 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.237907051 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.237163061 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239343697 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.251805056 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.240311932 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.237773315 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.234019047 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.244249282 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237284329 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.237286025 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.240487367 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.238261167 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.237739976 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.23527438 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241881077 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.233305738 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238639394 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233916694 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.239297116 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.238770918 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.237406267 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.234910569 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.236129374 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.235253233 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.236001022 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.237855679 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.239578484 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.238014743 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242485181 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.236648016 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.235242145 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.237925711 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.241514751 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240124017 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.234997632 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.239162044 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.235480751 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239876614 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.235838517 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.240792604 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242070738 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.241381486 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242034091 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.234880688 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240261293 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.241358093 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.239616411 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.237972737 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.242545006 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.241726078 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.241490104 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235982244 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.241977121 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.234418293 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.240111727 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.246015578 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.240931973 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.240386676 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.239265436 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24206289 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240096791 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238828717 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.237363545 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.242033823 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.241571229 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.244933964 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.24439171 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240596964 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.241717 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.236593482 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.237198219 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241313708 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.23807592 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.247555018 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249618178 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250997165 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.237867258 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.245895329 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.237154136 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.242979758 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.241835788 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.244184427 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.242169118 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241090561 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23675357 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244173336 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.240421148 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.243370811 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.236155433 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.245155841 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.244459399 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.239818044 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243656751 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.237636671 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240001202 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.24280229 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243245352 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241708977 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.238272774 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.24451858 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.235570832 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.239210738 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.244376132 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.242506803 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.245752718 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246963685 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241780176 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244306566 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.241183987 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.240812755 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.243975834 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240969645 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.242361351 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246640589 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.245222766 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.239936258 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249072353 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.26367113 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.238076792 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.244039652 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24674439 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.24399486 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.241399111 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.251298793 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.247050451 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.242782806 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.243246767 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240090518 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245409594 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.247148286 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.251188023 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.239219592 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245993909 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.241579678 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.246605072 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.241523357 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.242219681 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.242423617 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244706429 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249310699 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245881506 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242346846 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.246344749 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.244513799 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.245401875 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24229122 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.250575287 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.245355895 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.244382128 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.244926049 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.242044875 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.250261962 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.240586516 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.246379892 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24212405 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254829481 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.261005814 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247663491 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.247963432 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.25307606 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248144127 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.246269211 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.244318595 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24296685 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24425083 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.242300784 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.241366948 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.24889289 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24195383 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248171085 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245345452 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.244785846 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.250297201 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.247312348 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.242212533 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.248768385 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.248620855 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247962285 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.24088831 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.249023412 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.245341177 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247329845 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.244957412 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.244226654 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252669171 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249259769 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.245216242 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.245041762 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.244579196 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.243034114 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.245833337 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.250527481 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.247340199 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.254287948 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.244792294 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.250540978 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.246899972 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254812508 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252178448 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.246911283 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.256957168 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.249337416 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.244655464 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.245118285 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.25016759 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252533643 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.254837566 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.24528107 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.252387323 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25009752 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.247905342 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250780865 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.249804904 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249885284 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.249044914 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254569112 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269390376 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.248330051 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24912973 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.253315205 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.249181081 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25126165 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.244853937 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250267066 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25385877 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246508543 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247811108 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.246826697 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250570723 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.250766014 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.250930615 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.251324999 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.251028204 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254085406 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.251802256 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254083203 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.252915978 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.256000749 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256029994 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25633695 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.257813065 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.248042866 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256758554 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.253689275 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.249014987 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248340901 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.249076489 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.25277949 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.249383352 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.25705396 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.252472675 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.250187185 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.250410151 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.254142934 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.246901205 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25577726 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268420941 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.248451777 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25537778 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.253571245 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.247520756 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.257014115 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.251529759 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.246333465 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.251766062 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254536704 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260360576 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.247779465 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.254703654 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248514813 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254830734 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253773528 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.253466252 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.253087362 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.253567223 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.248180938 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.254936714 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252364226 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.25712427 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.249834066 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253116519 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250414615 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.260641387 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.260037902 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.252195916 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256103573 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.258317193 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.249770445 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251507644 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.254839334 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250457168 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257827627 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.250175009 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254456456 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.254923081 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.255578669 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.252979377 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.254857424 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.24955654 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.251690183 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255538316 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.253685412 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252893505 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.252736172 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.256101209 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.250882944 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.249866132 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256359584 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.251008231 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257207073 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252959094 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.254696243 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251926489 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.258958525 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.256651169 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25921314 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.24962544 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.253119474 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.261328851 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25710194 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.258907709 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.256866244 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.258235017 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.252746043 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253952067 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.257044402 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.251332409 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.253779633 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.256963407 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.254432478 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252655304 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.254295525 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257919773 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.259872995 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.256298783 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.251804937 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2638662 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.279230085 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257862411 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.25391762 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.255938679 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.254484535 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.259219948 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257464732 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.253687528 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262250614 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.260399968 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257267368 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256416743 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.255402881 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.256247016 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261365051 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259288674 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.254845452 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263119254 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.253616845 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260581001 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259889047 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.260085726 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.252944089 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.253833031 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.257189545 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.259736548 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.260668841 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257030515 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.2568652 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.257861713 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259881764 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261708337 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.260252836 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.261217379 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.254480471 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260554277 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.253767208 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.260838879 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256554017 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.256113465 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.264171741 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258328655 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25598803 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262519391 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.267429424 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.261213418 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.255480183 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.257761841 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.261917254 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262749428 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.26078383 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257101179 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.257573899 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.262568846 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261751949 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.261105323 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.256961686 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270774503 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.288736967 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257747387 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.259005032 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26246323 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.265019228 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.262685148 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.262802504 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.260069109 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.260654817 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.267210874 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.261620317 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26654078 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280187434 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.258992734 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.265909963 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.258360985 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.262019371 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.261962635 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264520035 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.261903408 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.259613917 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.270503139 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267722329 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265199613 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281753325 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.264191101 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.261799754 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.264657589 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259134223 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.262857334 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.260617626 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.266007088 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.265217939 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2655775 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.265101495 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.258711914 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263306217 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.263880948 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.268846719 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.263948017 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.257900894 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.26219928 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.265771361 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.262925162 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265740948 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.264551923 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.264717886 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.262797057 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.25958787 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272739225 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.275159778 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.267199362 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.264920561 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.265940804 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.265286717 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265737606 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268315428 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.2697211 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.263921197 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.263720349 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.261754866 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266845175 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.266089386 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.259466816 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.262408883 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260529197 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.2674138 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.274314917 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279504908 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.266778852 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.263859083 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265171219 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.265987839 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261416588 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26617208 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266399826 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.26091727 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.262835178 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267122701 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.266900247 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.266826455 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.262172359 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272820599 seconds)
  done (took 745.193249183 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266968606 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266991961 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267169149 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.2663965 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267583229 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267519234 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267798388 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267774445 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267065939 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267447338 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268054225 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268006922 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.267577336 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266972425 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26834643 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267417035 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267328879 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268279809 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.268233937 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268732988 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269530096 seconds)
  done (took 27.792137407 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.267647359 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.268667206 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268218065 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.267637609 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269468933 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.269021036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.269218572 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268314561 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.267165176 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269953947 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.268999354 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269674234 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.27078236 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.269050945 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268518148 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270123019 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.270702399 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271364628 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.267933229 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.2718631 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269034796 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.269184545 seconds)
  done (took 29.095370699 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.26807853 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.266434214 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.264797709 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.27188163 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.269830739 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.270865633 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.268244483 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.26885709 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.271162959 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.264156491 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.264193582 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.264530971 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269885497 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.275210657 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.266743087 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.270146944 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.268629835 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.268224499 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.269482583 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.269838816 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.271311162 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.276328922 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.270873496 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.264385447 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.27031152 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.271127088 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.271014276 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.270600861 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.266150099 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.273202513 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.271394926 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.266770907 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.268536645 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.267217513 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.267353483 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.274630755 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.2694269 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.269658335 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.27156074 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.273999033 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.286663749 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.271719512 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.274158313 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.2767636 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.271562604 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.268242402 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277991638 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.271507857 seconds)
  done (took 62.150726544 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.878260099 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.929098992 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.91031244 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.898516391 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.897175863 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.907839504 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.98624184 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.982573296 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.985028093 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.989385604 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.892499973 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.89516718 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.897466208 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.8892528 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.915544139 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.891494885 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.976736591 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.980161132 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.966475436 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.965716945 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.981694883 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.957060127 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.971298472 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.894821107 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.888905611 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.899442067 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.899903451 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.893817909 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.89180414 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.91428461 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.893996896 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.894806925 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.894904815 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.908144731 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.906819984 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.901772578 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.902800273 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.929557882 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.904957298 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.928949629 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.897835421 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.943145479 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.924069316 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.957569682 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.900759125 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.897234054 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.895714756 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.951026955 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.915179341 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.980638577 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.902981577 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.946072662 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.933890595 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.951290464 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.921331769 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.989057573 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.962045902 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.912976539 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.965524254 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.007303909 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.958840813 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.989362202 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.908676321 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.900172356 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.908929303 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.906237463 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.904462545 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.903562887 seconds)
  done (took 132.208828369 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280174386 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.276794495 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276634835 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278537846 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279004154 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.276785925 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277062624 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.277533739 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277818574 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277285722 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278128011 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279289919 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.277140038 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279703732 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275628563 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276701812 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278955466 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275983994 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279153846 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277974121 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.276876853 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276699428 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.278372107 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279003988 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277648455 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276844687 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277310807 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278213446 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277126725 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278815441 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279213136 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.278266119 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277097124 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277857913 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.278197263 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.279347625 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279556884 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27935125 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.279840132 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.27921402 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27791886 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279941892 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279034957 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.280484919 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278844762 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279105587 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280467811 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.28067325 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280601804 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281376637 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.279621732 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279622524 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279594301 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279752596 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279237859 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.281253182 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279681434 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279472606 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281095269 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279497474 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279920973 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.282257622 seconds)
  done (took 80.473199786 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280430128 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281479701 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280416233 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.282756337 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282415011 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282284174 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282033685 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.282128784 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282815315 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.778928639 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282426525 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281717639 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282867985 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283731271 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283424534 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284702001 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281735326 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283068953 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283989264 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.284101633 seconds)
  done (took 27.330909361 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.281848183 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283717111 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.282812351 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283461594 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.283208121 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281732985 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.283102582 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281986651 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284267743 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28351045 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285305901 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284101736 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284061869 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28241256 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284312409 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284602703 seconds)
  done (took 21.719764548 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.2841091 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.284613376 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.282387877 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.282785859 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.2842345 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.286236789 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.284297331 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.284640198 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.284501828 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.286138136 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.284845838 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.286429555 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.288173606 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.283887515 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.284716341 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.285108918 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.284868556 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.286960196 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285669526 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.283590344 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.286326712 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.286120985 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.286024759 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.284890963 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.285322098 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.284897153 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.284718252 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.286145509 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.285305333 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.286129394 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.28380833 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.286832607 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.285848579 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.285515711 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.282778568 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.28497689 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.285471265 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.286569173 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.285312168 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.287207754 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.286945663 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.286668159 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287141948 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.284691887 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.285899085 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.286767935 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.287415779 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.287637263 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.28667947 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.286816443 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.286625662 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.285856352 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.287023981 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.287233553 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.286555592 seconds)
  done (took 71.896844996 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286618245 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286179906 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.286119519 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.288321538 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287977078 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.289947138 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288179023 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290803639 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290402547 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.291570484 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287238573 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28896401 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287750389 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288322742 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289854427 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288987518 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289520237 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288711015 seconds)
  done (took 24.384209303 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287759472 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.289001372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.288384394 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289469047 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.288875988 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.288289567 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288593534 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.288785017 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287243308 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288470719 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290399695 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.289090397 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288681011 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.288379219 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28961982 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289878239 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.289309807 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289121869 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.288753801 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29228601 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288155005 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290112574 seconds)
  done (took 29.550885982 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.281370792 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.282500268 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.281508921 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.299346445 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.298167383 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.28160963 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.280959437 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.281870962 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.300320155 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.32040779 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.317976615 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.297519953 seconds)
  done (took 16.714293643 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289357977 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29121431 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290575935 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291628131 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291009766 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28952518 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290645439 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291140517 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291456114 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29167063 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29077109 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290897141 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292581848 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291921778 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292410517 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292720936 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293328418 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290840883 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290950885 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291842153 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293197331 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291447882 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293031942 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292588922 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291282983 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293019538 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293178839 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292276379 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294921835 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292953549 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292834068 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293572079 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292159914 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293168796 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294562416 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291433152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292613729 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292649726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29085666 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295242076 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295264314 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294009924 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292711605 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294217637 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293803717 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293343501 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292545338 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293946659 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293219192 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296033445 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294715365 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293967511 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295286443 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295248174 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294611712 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29312565 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296898821 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299188638 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294749073 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297001182 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293842744 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294826481 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294687805 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295684969 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298106591 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295667709 seconds)
  done (took 86.545162495 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295271216 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297948061 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296032363 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298382971 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297535512 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295253723 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294984534 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295612602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296217855 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296324649 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296736105 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294366544 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296161963 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296282835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296533194 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295460804 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297734024 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296614077 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299483071 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29807563 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298545862 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297607181 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296087225 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297895296 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296770185 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297851724 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298955433 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298719476 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297951772 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297423248 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296396279 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296637558 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299097055 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300499182 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300111871 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299661985 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300272552 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29878194 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29658092 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297868614 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299925178 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299996364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299684432 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298671634 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300580996 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297335055 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301008698 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29998127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299389289 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300134519 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300771682 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30014675 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304408364 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303643886 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298667464 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300673395 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302798153 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299116065 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3004169 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29859912 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300189851 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299004588 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301355159 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301405391 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300053259 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304515789 seconds)
  done (took 86.905914044 seconds)
done (took 1792.758632162 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.461173434 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.414748777 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.294304065 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.350168471 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.29216761 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.314866699 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.308546836 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.29193762 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.294666471 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.29211922 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.294856866 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.482072025 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.316299656 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.293625323 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.294437903 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.389412248 seconds)
  done (took 26.590254019 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.326612649 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30114533 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.416398506 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.316381935 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.326767445 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.496594824 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.354182808 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.299371352 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.476838547 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.319692275 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.299048649 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.322959359 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.298710573 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.295990582 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.314997743 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.501161408 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.561602557 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.300377859 seconds)
  done (took 28.73528731 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.771361521 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.29351308 seconds)
  done (took 5.267873497 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.328799776 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.30613158 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.304908357 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.303910281 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.312382033 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.293608915 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.303196472 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.308781028 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.29682701 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.433066549 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.309896378 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.318790315 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.321320276 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.306739947 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.312481442 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.356442731 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.456505731 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.313935596 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.312594376 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.311886129 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.306254485 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.39653196 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.354546962 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.312467343 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.433354352 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.310458156 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.306778146 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.31407714 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.448296406 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.316590027 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.305754254 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308624974 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.306656046 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.302135398 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.792029675 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.316089302 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.311387045 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.333634757 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.31224072 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.45793473 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.307547557 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.313552428 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.299390349 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.769185374 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.443703132 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.427629204 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.318566885 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.304604703 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.309777462 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.375879049 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.309949561 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.311298427 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.372225784 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.119053213 seconds)
  done (took 83.954833278 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.306427083 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.302394423 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483777398 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.323598141 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.299428625 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.298139451 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.298552592 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.597204538 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.322755673 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305033266 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.590732798 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880848122 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.323048218 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.355451049 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.218861059 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.385140894 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.302888982 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.31847758 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.303358787 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.300611214 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865035383 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30423192 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.314922977 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.479912739 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.339600614 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.825478656 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.297987974 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.321729664 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.30438842 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.299688802 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84164297 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.329864238 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.368651078 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.302911735 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.581313125 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.695084487 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.663819321 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.303697867 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321282524 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.300449095 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.309827401 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82299468 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68032182 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.305397828 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.300081092 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827772678 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.303832714 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.311470246 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.31287408 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.552742718 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.304711878 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.303238241 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.319318981 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.305501984 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.303974771 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.309532485 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38643645 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.832088264 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.300405699 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.301267976 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.366531008 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.305893742 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.303314558 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308340046 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.323940558 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68256976 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.458122638 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.310949675 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.684878664 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.841672648 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.319900456 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.897592794 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.322094718 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.325924041 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.524110646 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.304038804 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.303287837 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.850926135 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.329549455 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.301037831 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.659518935 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.301918727 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.599887518 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.321364312 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301506378 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874921116 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.310787906 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.309585803 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.303863892 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.3007293 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.303581552 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324576917 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.587431312 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.331051066 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.305359243 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.308492541 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.351518417 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30045854 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.303392008 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.307471007 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.896905396 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.323736602 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.3063014 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309813501 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309542865 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.307480236 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.304341644 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.30780144 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.576523041 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.321521298 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.311981127 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.308307583 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.303042764 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.309983049 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.491481112 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.311138033 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.623968508 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.30470527 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305720632 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.326428077 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.308355225 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.30660556 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305450647 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.309478993 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.217667604 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.6034498 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.323907828 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.319094936 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310085375 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322885129 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322843761 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305459941 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.350357416 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.310174644 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106144913 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325440912 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.314203485 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.308518357 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.321912207 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.309882596 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.308710038 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310296597 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609778926 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.589786233 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.45041759 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.308095741 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.304656801 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.100602465 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.33671157 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488447417 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.328971118 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.307857976 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.561625531 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.537566031 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.311630865 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.30565622 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.308242906 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.570034859 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.310452079 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617145912 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.873781427 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.325887666 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315152166 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.115785564 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.015459007 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.313868697 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.310295409 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.597608264 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.322322854 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.311974399 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.310906301 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.31164573 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.321121446 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.332142269 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.315007066 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.311478485 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.313913491 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.354240941 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.506925787 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.328262663 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316794812 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.838598716 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.355138713 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316860775 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.322230564 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.309421064 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.310696912 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.378189246 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.312519505 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.329921114 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.31389812 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.315098822 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.889837945 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.31294284 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.31571829 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.506746629 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.024869795 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.331376284 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.314003673 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.326502167 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.218666949 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.858347685 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.349450278 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.633088417 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.311899244 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.353173468 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311941329 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373058601 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.854288992 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.310416234 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331259183 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.988128458 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.327198594 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.841492426 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.311734922 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.313204319 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934214072 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.32978307 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.311019243 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.320782088 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.315308309 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.612277907 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.315482479 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.327033681 seconds)
  done (took 493.302367154 seconds)
done (took 639.054508309 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.315896396 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.310199745 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.308819532 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.318437256 seconds)
  done (took 10.473739723 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.33401216 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.323894218 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.32955943 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.322310507 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.332152206 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.323894028 seconds)
  done (took 9.187311068 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.31807538 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.314287064 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.318716763 seconds)
  done (took 8.171903741 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.53132797 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.33448092 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.654923824 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.334452978 seconds)
  done (took 9.079392713 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.329220841 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.329281457 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.328509376 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.330671243 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.332692692 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.334665527 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.329933219 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.330568986 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.334490233 seconds)
  done (took 13.200481286 seconds)
done (took 51.331768843 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.013598117 seconds)
    (2/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.351451664 seconds)
    (3/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.316052932 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.531718175 seconds)
    (5/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.305524444 seconds)
    (6/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.370374378 seconds)
    (7/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.360863317 seconds)
    (8/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.486003748 seconds)
    (9/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.308214747 seconds)
    (10/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.326064018 seconds)
    (11/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.412358977 seconds)
    (12/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.325889337 seconds)
    (13/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.377455368 seconds)
    (14/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.350548138 seconds)
    (15/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.308954124 seconds)
    (16/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.336957627 seconds)
    (17/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.441967073 seconds)
    (18/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.335200065 seconds)
    (19/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.349711959 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.429236342 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.403993851 seconds)
    (22/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.313490077 seconds)
    (23/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.365095413 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.535931909 seconds)
    (25/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.346505535 seconds)
    (26/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.420965065 seconds)
    (27/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.381341835 seconds)
    (28/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.203163871 seconds)
    (29/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.381307562 seconds)
    (30/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.32409688 seconds)
    (31/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.379301762 seconds)
    (32/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.393087747 seconds)
    (33/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.508462471 seconds)
    (34/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.312058467 seconds)
    (35/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.356080289 seconds)
    (36/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.492703214 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.453987527 seconds)
    (38/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.418793202 seconds)
    (39/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.36277752 seconds)
    (40/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.579537898 seconds)
    (41/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.451181609 seconds)
    (42/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.502020144 seconds)
    (43/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.982026824 seconds)
    (44/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.356692517 seconds)
    (45/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.309721339 seconds)
    (46/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.687221543 seconds)
    (47/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.068341961 seconds)
    (48/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.433660206 seconds)
    (49/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.416282189 seconds)
    (50/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.475344098 seconds)
    (51/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.505582773 seconds)
    (52/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.410321359 seconds)
    (53/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.478323806 seconds)
    (54/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.320515005 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.416804113 seconds)
    (56/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.352747854 seconds)
    (57/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.979767601 seconds)
    (58/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.476033898 seconds)
    (59/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.015135391 seconds)
    (60/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.312845352 seconds)
    (61/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.47950966 seconds)
    (62/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.322458573 seconds)
    (63/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.536681866 seconds)
    (64/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.426798821 seconds)
    (65/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.484844519 seconds)
    (66/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.331147515 seconds)
    (67/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.429733736 seconds)
    (68/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.353100241 seconds)
    (69/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.358068644 seconds)
    (70/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.255362412 seconds)
    (71/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.477679583 seconds)
    (72/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.54549345 seconds)
    (73/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.31593053 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.466153271 seconds)
    (75/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.310501591 seconds)
    (76/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.317636176 seconds)
    (77/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.479796157 seconds)
    (78/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.524433161 seconds)
    (79/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.373473659 seconds)
    (80/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.341795272 seconds)
    (81/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.017747655 seconds)
    (82/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.236728661 seconds)
    (83/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.455409794 seconds)
    (84/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.507311427 seconds)
    (85/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.400377096 seconds)
    (86/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.530904714 seconds)
    (87/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.31685728 seconds)
    (88/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.396862597 seconds)
    (89/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.408831684 seconds)
    (90/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.483252809 seconds)
    (91/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.116499547 seconds)
    (92/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.342827167 seconds)
    (93/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.460856389 seconds)
    (94/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.342245327 seconds)
    (95/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.489391265 seconds)
    (96/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.013038991 seconds)
    (97/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.319187027 seconds)
    (98/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.338952434 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.414081205 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.540335876 seconds)
    (101/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.525219751 seconds)
    (102/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.44302032 seconds)
    (103/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.387187137 seconds)
    (104/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.45830212 seconds)
    (105/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.478996014 seconds)
    (106/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.418082927 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.427059922 seconds)
    (108/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.39893349 seconds)
    (109/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.334311903 seconds)
    (110/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.366812403 seconds)
    (111/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.467605392 seconds)
    (112/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.426314573 seconds)
    (113/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.541054838 seconds)
    (114/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.324860461 seconds)
    (115/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.100437794 seconds)
    (116/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.377206333 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.437411535 seconds)
    (118/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.367595958 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.355722823 seconds)
    (120/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.315915823 seconds)
    (121/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.258963091 seconds)
    (122/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.326090043 seconds)
    (123/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.403454462 seconds)
    (124/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.981613232 seconds)
    (125/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.387640147 seconds)
    (126/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.364683389 seconds)
    (127/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.34386521 seconds)
    (128/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.635148893 seconds)
    (129/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.460550214 seconds)
    (130/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.473957761 seconds)
    (131/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.36467531 seconds)
    (132/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.333385963 seconds)
    (133/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.361985175 seconds)
    (134/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.079051834 seconds)
    (135/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.317930998 seconds)
    (136/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.395618586 seconds)
    (137/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.364233169 seconds)
    (138/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.372441509 seconds)
    (139/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.386882564 seconds)
    (140/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.381146124 seconds)
    (141/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.371716014 seconds)
    (142/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.412293436 seconds)
    (143/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.362153932 seconds)
    (144/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.361605094 seconds)
    (145/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.366243883 seconds)
    (146/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.318958834 seconds)
    (147/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.598420452 seconds)
    (148/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.321705363 seconds)
    (149/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.540205254 seconds)
    (150/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.374442263 seconds)
    (151/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.358433829 seconds)
    (152/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.497950175 seconds)
    (153/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.359630164 seconds)
    (154/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.48256424 seconds)
    (155/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.340722207 seconds)
    (156/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.992266048 seconds)
    (157/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.336018138 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.452496834 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.405861516 seconds)
    (160/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.406110052 seconds)
    (161/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.446286068 seconds)
    (162/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.141031001 seconds)
    (163/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.143244471 seconds)
    (164/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.335993519 seconds)
    (165/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.485029197 seconds)
    (166/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.321178538 seconds)
    (167/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.357727879 seconds)
    (168/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.419439257 seconds)
    (169/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.4935389 seconds)
    (170/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.411914316 seconds)
    (171/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.365914652 seconds)
    (172/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.429587659 seconds)
    (173/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.094161818 seconds)
    (174/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.377225301 seconds)
    (175/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.344877205 seconds)
    (176/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.317172719 seconds)
    (177/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.086413087 seconds)
    (178/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.364411355 seconds)
    (179/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.517782266 seconds)
    (180/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.436673513 seconds)
    (181/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.330917408 seconds)
    (182/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.346337658 seconds)
    (183/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.170739486 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.41588499 seconds)
    (185/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.348996331 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.442211961 seconds)
    (187/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.380635407 seconds)
    (188/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.330713147 seconds)
    (189/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.093329263 seconds)
    (190/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.558217794 seconds)
    (191/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.476193037 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.396553425 seconds)
    (193/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.421081157 seconds)
    (194/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.377728398 seconds)
    (195/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.371430647 seconds)
    (196/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.437967115 seconds)
    (197/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.430112542 seconds)
    (198/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.045551629 seconds)
    (199/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.415006567 seconds)
    (200/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.342591028 seconds)
    (201/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.334673461 seconds)
    (202/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.326012675 seconds)
    (203/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.148116597 seconds)
    (204/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.520136498 seconds)
    (205/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.41541933 seconds)
    (206/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.544401426 seconds)
    (207/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.408554298 seconds)
    (208/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.523850233 seconds)
    (209/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.322614823 seconds)
    (210/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.197253575 seconds)
    (211/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.045693311 seconds)
    (212/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.467306434 seconds)
    (213/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.367217093 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.478677014 seconds)
    (215/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.320246671 seconds)
    (216/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.388726891 seconds)
    (217/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.372460148 seconds)
    (218/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.446978909 seconds)
    (219/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.353827193 seconds)
    (220/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.323387115 seconds)
    (221/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.410277139 seconds)
    (222/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.339965254 seconds)
    (223/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.320581309 seconds)
    (224/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.539737489 seconds)
  done (took 385.972076918 seconds)
done (took 387.193493649 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388612915 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.523998127 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.337976328 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.338905046 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38467493 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.337040363 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.391372661 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.347689023 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.362943213 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.361755885 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.338145549 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.358455025 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.352741448 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.391902297 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.455261763 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.34673315 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.339692017 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.358060017 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.399833809 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.41700501 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383448452 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385208546 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.372638544 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.33839103 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388258972 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388187123 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.346325233 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.337727627 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.358893162 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.402985669 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.333141145 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.347557959 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.411351954 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.407907307 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386118831 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.359499294 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386464851 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.525776369 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.3961486 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.393092803 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.36272632 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.409469732 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.351629905 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.356871783 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.411048062 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.372930117 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391171103 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.467114147 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.333685749 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.349235304 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38668463 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.419974782 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.366483372 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.33478566 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.332842937 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.460653198 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.361573098 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39134495 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.362634074 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385411755 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.455992907 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392889593 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.420865045 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390395512 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.361627228 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.355546028 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.361590512 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.422442332 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.359975939 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385977484 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388050615 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.366603329 seconds)
done (took 108.689570658 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.474052027 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.343649823 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.48597819 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.349014911 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.511582723 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.490951729 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.346688413 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.34997133 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.347969194 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.196778575 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.347919462 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.3507071 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.345685677 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.350060229 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.478386222 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350680691 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.349006829 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.086529216 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.349648453 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.487433843 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.343565804 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.350908997 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.35169586 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.209638929 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.344119968 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.341295027 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.489085957 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.351509225 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.102427312 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.338722948 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.340920705 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.103023457 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.490472694 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.371494973 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.360004454 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.361371397 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.515528927 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.365951578 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.477253095 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.477235707 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.489834616 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.390215444 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.341068508 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.346692239 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.353561889 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.350343294 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.351341519 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.381841247 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.346942641 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.352481766 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.090842728 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.361270763 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.35187701 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.353511968 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.353031269 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.380665304 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.352693296 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.352873238 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.493665242 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.354284482 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.476549986 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.214671569 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.202324557 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.351529764 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.34310641 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.353375139 seconds)
  done (took 109.810688192 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.41231856 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42286011 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.462629792 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.360215159 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.399206598 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.464431155 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.358741847 seconds)
  done (took 11.122075112 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.352570026 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.352013917 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397507639 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.398025359 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.352842026 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.501787385 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353024016 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.359298627 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.35357588 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.402077523 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.354549911 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353511015 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.363635989 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.345218022 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396361117 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.359852592 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.462662192 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.351227456 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.354115711 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.506533681 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355344018 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.363705954 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.399691008 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.360528978 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.355915598 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.354078043 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.118459625 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354037722 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354702333 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.355811116 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356012865 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.403814709 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.35427801 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.348268968 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356480633 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.466608748 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.355789176 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3550595 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.355957083 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.350946144 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.356230861 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.356009132 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.357866153 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.357166759 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.355422417 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.37525393 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357729265 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.35558535 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.3559841 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.356472137 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.400473132 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.360346515 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.357847194 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.358229143 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.406901103 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367380834 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.355110412 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.354174778 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.358890785 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356219177 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.510392216 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.398668885 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.354994101 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397488225 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355439802 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356855817 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.35728334 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.356526718 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441369103 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.357183743 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.398444444 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.35643175 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.531178235 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.376842626 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359066549 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.354754011 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.354943035 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357030798 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.34523142 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.359537775 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.358944728 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.352777418 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.358767011 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36012971 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357898578 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.515206822 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461627881 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.356415956 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.36638131 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.35866637 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.359367715 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.406663581 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.360020755 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.360466496 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404616279 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.4687241 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.405282471 seconds)
  done (took 139.543514022 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.369374074 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.366132761 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357137143 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.380104858 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.352061074 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.352872678 seconds)
  done (took 9.425334763 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.355411859 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.361576064 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358167911 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.360077199 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.358569205 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.359224497 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.358562058 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356353126 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.362940399 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.361458287 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.360293493 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.361893686 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.362271441 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.360586027 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.358272786 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.359067041 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.360584282 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359353221 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.361381755 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362426155 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.355142402 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.359529163 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357487774 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.355447876 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.365354265 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.360513349 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375319399 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.359645436 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.361920846 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.360663107 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.376719688 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360837356 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.356656232 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.362437271 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363847498 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.356210417 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365279674 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.362229193 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.36117706 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.362313833 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.365119766 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362140786 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.360795509 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.363165785 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.357534133 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.361605004 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.366465608 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377194915 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361189926 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.36314639 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.363086432 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.361918933 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.363489552 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.364592813 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.357739841 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377536046 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.367645636 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.361065122 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.360861568 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.360416821 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.367153387 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.362369645 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.359005309 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.366926228 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.363576159 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364134709 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.359302664 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.366443412 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361600301 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.364980116 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.365784298 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.36404715 seconds)
  done (took 100.329993125 seconds)
done (took 371.470313473 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.22086265 seconds)
  done (took 4.472333355 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.596029246 seconds)
  done (took 3.848666628 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.428917818 seconds)
  done (took 23.688779599 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.412036014 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.460312266 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.390909693 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.354609507 seconds)
  done (took 10.868067894 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.655697666 seconds)
  done (took 3.906524048 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.358399126 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.379842925 seconds)
  done (took 5.990912571 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.623824528 seconds)
  done (took 3.873954401 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.830206604 seconds)
  done (took 4.091272399 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.366654865 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.373920488 seconds)
  done (took 6.000975977 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.343713604 seconds)
  done (took 3.595695354 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.373645977 seconds)
  done (took 37.624436415 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.359509514 seconds)
  done (took 3.616088015 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.41202935 seconds)
  done (took 3.665755177 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.202262765 seconds)
  done (took 6.455142833 seconds)
done (took 122.95149107 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.353019995 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.350415572 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.348827275 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.350815628 seconds)
  done (took 10.656122436 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.418225697 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.419129685 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.416354815 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.415746894 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.416875142 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.41660533 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.406605996 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.38987329 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.416651962 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.417087512 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.417086817 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.415512064 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.417708649 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390580161 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.41459652 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.417580075 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.417625562 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.41730986 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.392375907 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.415899217 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.365743936 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.416234258 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.418358355 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.366091876 seconds)
  done (took 35.068047991 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.856611799 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.432318034 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.513933781 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.412712583 seconds)
  done (took 7.46862086 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.442550105 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.444348737 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.456003451 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.4969167 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.506792571 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.457350689 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.393774186 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.387754811 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.374695903 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.443307533 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.492799049 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.435191254 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.521143125 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.367383838 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.574359094 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.364970124 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.367658727 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445245097 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.49589811 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.50690332 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.367464901 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.443828173 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.445629956 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.447632913 seconds)
  done (took 35.933651511 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.378102839 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.383667028 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.368989588 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.384627098 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.367921481 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.369971255 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.371036531 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.378295968 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.370430225 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.369300789 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.369229432 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.385848007 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.37286974 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.368591214 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.377802711 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.372088907 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.376089605 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.371539229 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.370134687 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.375909683 seconds)
  done (took 28.738067494 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.356918352 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.356410284 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.709353891 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.612084257 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.357992191 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.358541512 seconds)
  done (took 14.006468816 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.437166494 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.602001248 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.359900132 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.739313912 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.829356672 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.360121977 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.364446571 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.625218216 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.949570569 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.923847831 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.424202354 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.43628422 seconds)
  done (took 20.310048141 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.365060442 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.35666696 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.35817065 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.374759921 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.420262033 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.382268731 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.369906112 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.355965931 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.42055692 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.441812447 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.384454443 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.424200836 seconds)
  done (took 21.912935608 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461354172 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365074458 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363618827 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426579715 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363071852 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.233732459 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.425835147 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.090395403 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386348865 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640206966 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370473185 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464309877 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.621398021 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373410786 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365587952 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.353404953 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615780017 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864709163 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364172369 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374278952 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399844679 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374187521 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372018434 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.591157985 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367773167 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365669304 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.629304088 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367089984 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659173009 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37751785 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377433252 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365631997 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643195608 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050257179 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486250736 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587220914 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381539926 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365899817 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.365041703 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.397808061 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387080699 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369117909 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377673694 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366400154 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365194862 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375077083 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100379462 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.392147144 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.367720967 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365372453 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634386694 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466826704 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.3752965 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369267195 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439616098 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363846753 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.372143852 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498733749 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964161628 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384212053 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38453574 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.368887496 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363162143 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396905724 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000612383 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.375865811 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.373366529 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371603905 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369187958 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378287044 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390679034 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368743466 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.392189769 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368016167 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093526285 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376379768 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371391278 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926926811 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380944717 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.369163094 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599378721 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368479994 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368350212 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.368136822 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368944426 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096142 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376835945 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.356164776 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410513613 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133689501 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608168404 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390719602 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402430556 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59481792 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.355545792 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370444464 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.372716321 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376730823 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389879086 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.113333037 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385078571 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.375627421 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630564657 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.584350142 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385270756 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.359513995 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86845332 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40242408 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.394217026 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386020461 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598105835 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.974558679 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391175919 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386035002 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391237406 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372720279 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135711825 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371334924 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.496148361 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372121126 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65917104 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.199652251 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372159024 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439265434 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376825633 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374463934 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374336073 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393622422 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373614059 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.588517449 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390360055 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.403032611 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.371649791 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374889919 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.368880687 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392144542 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.376172266 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595543028 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37216994 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670191625 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372998523 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368597294 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368586937 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.5936593 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.384619914 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.709282531 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637745156 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371753962 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411175743 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385617293 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393597521 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476598421 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395606305 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.373978551 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653282019 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.376828349 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.381244457 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373370684 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394066368 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377070275 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.384104625 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372717826 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979493467 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350476268 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379441861 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26754682 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.392219705 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4424876 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383407508 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600673721 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.382957245 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368258907 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.380765545 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.375240265 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606247337 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385154344 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.374414647 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473050352 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.869695119 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999761573 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387107532 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.374577744 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.374461086 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.377378313 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374926939 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377646168 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379176384 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.601802132 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387348308 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377790615 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.983695064 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375950873 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374963822 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.408148146 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388106027 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.383824766 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377859287 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.382438502 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378117844 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397500363 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.392931907 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520960571 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.395261447 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37594728 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896487197 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385928871 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379490594 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376693607 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414180305 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378401985 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223409353 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654865832 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37695374 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656521689 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397202386 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.405928177 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.37956702 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382444246 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381919767 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.385836717 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38376693 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.389628508 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378517346 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398581315 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948800868 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130247449 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931418877 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384825361 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.377410825 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380628754 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121843128 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393888684 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376045693 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626640502 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139835392 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395303379 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873593464 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.393908533 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184672954 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649031946 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613903247 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381213487 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.381223145 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657165724 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592818015 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415031218 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3816329 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381802495 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.363125565 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95371651 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395487789 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462867766 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123185372 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400087736 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387044817 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.418180125 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.38597323 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807595349 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401134775 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380622183 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381560659 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398468374 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212670658 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403936616 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383574589 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016189946 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380824696 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.877984364 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396328974 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609229432 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.394102403 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.387946382 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.391891887 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.396778547 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.63819971 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656973091 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382464313 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381620898 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946123014 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.253401143 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.390132271 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384128167 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153612443 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385422958 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679723415 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.388618143 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.395515306 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387170208 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382463594 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382194834 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.38010216 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390536739 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360618831 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88353439 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.377976062 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397625643 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385796809 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386401067 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63770349 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.399002908 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.992139023 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613249407 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385978782 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404708621 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.388851812 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39687566 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.375531906 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384021577 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385462281 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4614658 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606376036 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384996464 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.367272425 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449902348 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594620097 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381810294 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385033395 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659059134 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.382362594 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.4030589 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138994923 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428889615 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384556509 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406169727 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377176369 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442291661 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455245534 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612319577 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.400529492 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.397148465 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820244379 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410299795 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387787242 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.402079525 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479927167 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383557283 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.39818559 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.160996141 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001005396 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1346282 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.996758165 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657227496 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39215679 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397707112 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383811827 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545258174 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388016612 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661668335 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385846272 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.377483082 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42504968 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403648548 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398586855 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601120386 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660385416 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388724601 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393836197 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387529165 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.385616801 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398558684 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.600668677 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895080347 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956322976 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384991594 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392938202 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.132685215 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680818063 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385234964 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384597014 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387662497 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.406600212 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396497674 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.394009518 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38973113 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533908673 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659100357 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08178896 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.415043079 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.417103887 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.90761642 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384285284 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647808917 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386471472 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620166978 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999272397 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117610297 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653389732 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458880364 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616703651 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.389806275 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553072846 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.395153662 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389754805 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390947926 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391316118 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.388537684 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.401389797 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006907347 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655252519 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.390997629 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.398516921 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42188346 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.399161086 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611560673 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131791656 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614228489 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39783655 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392107031 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388922575 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010017523 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663233714 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390784597 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.393665681 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641403409 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388950277 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413883992 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.08058334 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.392966894 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958037509 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.361492018 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411404621 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401486783 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125173059 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002052909 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.39057057 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914568262 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390182277 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406217424 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667629176 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.397614368 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40185348 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67228455 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.395867043 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405510648 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621783919 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.998404123 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207659838 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.41575199 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391864539 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.396788003 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390456981 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398855864 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386871429 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388592506 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.839307634 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409335137 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392634814 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40142433 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.39209791 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403061381 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.395202207 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391446248 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.395594569 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.381735944 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.396090033 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407930744 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522355357 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969171351 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411584319 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.069980572 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.715836233 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646742239 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403479678 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.380512965 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.401980041 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391854594 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393210281 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389973523 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384280539 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976263801 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.409099679 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.407168583 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398011913 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.393026335 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605927549 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396222109 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620625359 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405932781 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413918319 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.379916465 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394250994 seconds)
  done (took 981.425630314 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.426442679 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.417872663 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.417753605 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.441606591 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.400797046 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.407141468 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.413607439 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.438578851 seconds)
  done (took 20.648830495 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.395806148 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.393622697 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.395054369 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.395890449 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.393998424 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.893788502 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.408574956 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.394555449 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.410376584 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.389524391 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.390268306 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.377838728 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.417593316 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.391801072 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.397318111 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.398872667 seconds)
  done (took 33.13088301 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.460685705 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.581935515 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.490217523 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.392877009 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.43063583 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.402649932 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.673935976 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.404469653 seconds)
  done (took 27.125613579 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.39948183 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.399720276 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.399260373 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.402633141 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.400754782 seconds)
  done (took 8.28934852 seconds)
done (took 1245.967914355 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.401115692 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.400376706 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.399984111 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.401460796 seconds)
  done (took 6.888496167 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.38181754 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.383823562 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.383322866 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.39704193 seconds)
  done (took 9.834074813 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.129611679 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.04131427 seconds)
  done (took 5.457321498 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.887115131 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.922796221 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.899411978 seconds)
  done (took 6.997948599 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.678562547 seconds)
  done (took 2.965035666 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.300431836 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.391545681 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.090911722 seconds)
  done (took 8.068211935 seconds)
done (took 41.499092335 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.396616529 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.631890107 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.547631395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.399687824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.547106545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.545172936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.127391536 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.399323438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.386941204 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415443495 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.396019665 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.585281511 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.108864443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.636435903 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.10887554 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.632511082 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.549838527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.389700589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.388737191 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.385960964 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.127628215 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.389847632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.414605975 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.38594757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.593134699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.534185461 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.397933968 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.637181962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.397625838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.402832392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.532056169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.392283643 seconds)
  done (took 83.073683099 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.389711237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.390986474 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.40415761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405218616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.385535332 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.407411379 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.388851966 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.394808466 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.391082631 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.386961908 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.38809845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.406059267 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.384999441 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.386956479 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.38759039 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.386816087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.387649157 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.389994159 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.387188514 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.397097767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.387781829 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.388680321 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.395168389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.394159429 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.399582844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.386421822 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.418357456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.386497107 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412492566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.398875567 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.387865445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.406815558 seconds)
  done (took 77.90042743 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39026801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.388402647 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.39073747 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.387755779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.390997353 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.389158921 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.389974695 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.387861029 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.398832349 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393314794 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.386551766 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.39181651 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.390171838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.389443803 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.407569268 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.388138017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.392604665 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.391916538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.387324687 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.407339889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.393184885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.388570725 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.391902008 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.389401023 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.394137635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.390378638 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.388471521 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.407092 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.406088143 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.38870762 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.408494542 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.399576708 seconds)
  done (took 77.874088903 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.676657336 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.402341888 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.405564948 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.395759891 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.404269818 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.402734779 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.395812511 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.682161413 seconds)
  done (took 15.052884323 seconds)
done (took 255.189375265 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.40341309 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.913132411 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.439520443 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.397603058 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.438893082 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.427679064 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.626579381 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.440697957 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.627314243 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.423854483 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.416059176 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.398059817 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.234104754 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.553795004 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.253106398 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.361974474 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.313460827 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.390629583 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.978443722 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.686391789 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.420066867 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.392487212 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.272416551 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.343004099 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.384249013 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.480567571 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.498681871 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.62552801 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.561086994 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.479746184 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.922222832 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.39903762 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.398269074 seconds)
  done (took 65.196418928 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.400034031 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.526436286 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.407514627 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.404263429 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.532761112 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.429755606 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.402062661 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.408560402 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.406776766 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.404481242 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.406148061 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.408879562 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.411514409 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.459344396 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.532634819 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.419827773 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.404837681 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.526835259 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.401078881 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.40124681 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.457562537 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.407013204 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.412010532 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.461939697 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.407300443 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.406458311 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.525583296 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.43298783 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.41007692 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.52604242 seconds)
  done (took 44.437461672 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.412532201 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.004205141 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.163294189 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.408460062 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.404945495 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.407413552 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.703620991 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.410075742 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.407778864 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.407805188 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.920432271 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.411389762 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441017257 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.188108013 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.406764059 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.412522605 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.408909055 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.407461846 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.021073037 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.41218625 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.727259546 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.409914899 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.703328895 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.414142062 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.430886223 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410082137 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.413840526 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.254813405 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.429404726 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.922047568 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.220300719 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.70334445 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.161736232 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.189636822 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.223963293 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.41554146 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.41484093 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.919364852 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.406854659 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.409404671 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.704715235 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.404808282 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.172559 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.103267433 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.425940995 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413751537 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.275606968 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.939457454 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.661407702 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.412636865 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.196802539 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.409827925 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.415013109 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.407774131 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.664663578 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.411326484 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.410567137 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.276746995 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.431767539 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.708109429 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.413066937 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.410931192 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.020664489 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.409368446 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.01805338 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.410954035 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.417398466 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.427871627 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.177367499 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.40953089 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.122351968 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.42718397 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.412719162 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.917036342 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.013907205 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.330639324 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.408669059 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.017920897 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.193694913 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.725750738 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.411319269 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.228311034 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.728137291 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.412675485 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.41527463 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.41591402 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.414469705 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.495684509 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.70460059 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.060522935 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.123067714 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.290360115 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.732552526 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.419017022 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.413013885 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.262665896 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.43524724 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.418205936 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.172672895 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.126183786 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.429174712 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.421429469 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.129145469 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.429788615 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.714070523 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.415472322 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.185260326 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.411431337 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.496014511 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416457907 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.419465463 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.436753306 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.715713088 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.41243341 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.418288889 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.115067583 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.95575432 seconds)
  done (took 197.975354981 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.410285442 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.405441218 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.408075156 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.403804971 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.408254561 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416728585 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.407608946 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.409157715 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.413451694 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.406728048 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.408622713 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.416929665 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.41543555 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.407493097 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.409305448 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.423488778 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.409798895 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.410335851 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.422338488 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.407559603 seconds)
  done (took 45.524974987 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.420153805 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.995962003 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.987548946 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.418695539 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.421970977 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.415936982 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.471655154 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.417063933 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.423232262 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.727542209 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.590205047 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.442151675 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.420211147 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.419565643 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.970856754 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.408360547 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.723730394 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.995878442 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.420833021 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.997949012 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.408652377 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.420543819 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.415607134 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.99672216 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.752402724 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.713454569 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.473452301 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.997781784 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.43702993 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.4196132 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.995547764 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.419053485 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.41527537 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.997326678 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.437985731 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.435957289 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.419534017 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.47667458 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.472428838 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.726599709 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.088953079 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.741639223 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.433449269 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.599772071 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.422120485 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.409422474 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.007166933 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.441463353 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.413138546 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.423123791 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.424342309 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.979492715 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.435135754 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.984496897 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.441530047 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.423789344 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.002991379 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.98322698 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.99562724 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.595363865 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.437490589 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.717252851 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.421610901 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.008752247 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.440749049 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.420762451 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.421792622 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.595214964 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.025994981 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.716648845 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.729916326 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.729456643 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.422479742 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.484850403 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.439941268 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.811040314 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.480632014 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.822767281 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.731576204 seconds)
  done (took 129.333164988 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.70693386 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.536163721 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.836451705 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.036961078 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.417434887 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.556413216 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.533188416 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.679244419 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.434174754 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.50185616 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.086141821 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.547588252 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.173846357 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.506403766 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.524611285 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.563098795 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.8231448 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.41303141 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.163338512 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.067964918 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.42166035 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.550369964 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.9921689 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.643035654 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.410099992 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.034326437 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.408107707 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.102060112 seconds)
  done (took 54.977929155 seconds)
done (took 538.737783955 seconds)
SAVING RESULT...
DONE!
