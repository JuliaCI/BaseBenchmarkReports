cset: moving following pidspec: 32411
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.345681531 seconds)
loading group "string"... done (took 0.547201391 seconds)
loading group "linalg"... done (took 7.030301345 seconds)
loading group "parallel"... done (took 0.1514645 seconds)
loading group "find"... done (took 1.102606222 seconds)
loading group "tuple"... done (took 1.812786143 seconds)
loading group "dates"... done (took 1.173204762 seconds)
loading group "micro"... done (took 0.211645644 seconds)
loading group "io"... done (took 0.918223237 seconds)
loading group "scalar"... done (took 36.130754547 seconds)
loading group "sparse"... done (took 11.123389675 seconds)
loading group "broadcast"... done (took 0.909107389 seconds)
loading group "union"... done (took 11.798643042 seconds)
loading group "simd"... done (took 4.123399382 seconds)
loading group "random"... done (took 8.46873624 seconds)
loading group "problem"... done (took 1.846337217 seconds)
loading group "array"... done (took 19.746291762 seconds)
loading group "misc"... done (took 1.626822962 seconds)
loading group "sort"... done (took 3.132704347 seconds)
loading group "collection"... done (took 16.349197769 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486246774 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122883229 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115089894 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118443375 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145466978 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114211403 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122882243 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083348608 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.785404947 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147833818 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119086336 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415707309 seconds)
done (took 5.078000421 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173978282 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082705455 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081502312 seconds)
  done (took 1.286463156 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065379932 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120874482 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068545226 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066774305 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066384845 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066123001 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067005788 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067839784 seconds)
  done (took 1.645962346 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07316464 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069326383 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068616664 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071437759 seconds)
  done (took 1.403997916 seconds)
done (took 5.70761347 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.766607913 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202520411 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182636426 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397979851 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12897847 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154420102 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637683775 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330491842 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183297119 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081570484 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104608559 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.31670637 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107345688 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63813373 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076961398 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09043394 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138834262 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.402912729 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06719529 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081769726 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088468639 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127929016 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085595437 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074466253 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142790008 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067724335 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130548327 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080352682 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066734012 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207994611 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171842362 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655898862 seconds)
  done (took 10.15024017 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09560351 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097563435 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068700664 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136412067 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096080454 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069679034 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071280482 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067040219 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086913484 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127997359 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089004007 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101623387 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065469644 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068650024 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084874377 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20377202 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080007734 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081513122 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070630992 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075911291 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11930377 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078384524 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078058522 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077587437 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128050933 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17907492 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098219563 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097023702 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067065523 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080501563 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11539608 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126670757 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065787643 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066520096 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124579902 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094382688 seconds)
  done (took 4.591690911 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.28438697 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139368291 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090755698 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132616487 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064812266 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106884208 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065846208 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080708658 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199995156 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.371342685 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575231929 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110387084 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103758387 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067958139 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068067522 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067037993 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.351995841 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110815543 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106432724 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082892707 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070445282 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068568096 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340920046 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067304467 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06357351 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067744861 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057732854 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083039201 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122536311 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067323638 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.927418183 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125246323 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067199824 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100965757 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168820815 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08724208 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273363896 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068543688 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064272948 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150129518 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070028543 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067006405 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084012306 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104040815 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112899142 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065477391 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066838695 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162540399 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064661907 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079372386 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.001054341 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094557013 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151734952 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076569374 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063773697 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245817658 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08595117 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068921547 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065016688 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.173409668 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134801578 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067511556 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066389678 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067762616 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069123839 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.362893301 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068731446 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.850356747 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070131227 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076765041 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069549507 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069599596 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073030803 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074684512 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085162772 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06602078 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075367174 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066049302 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066240957 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066751979 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084147777 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35823151 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066431225 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067943851 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064850957 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08598888 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097410206 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070693454 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065330298 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100301246 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067648076 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.168250612 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106633244 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066928587 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084423083 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06444531 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113236233 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069183797 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066827006 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091980887 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067518293 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065043408 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096975025 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070227749 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099471364 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081387698 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068702554 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398380629 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065331209 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065092177 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068611671 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065802436 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068013452 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065987384 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078864861 seconds)
  done (took 21.070631966 seconds)
done (took 38.21833032 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268664069 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077785691 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075484062 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075341594 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075422385 seconds)
  done (took 1.786677095 seconds)
done (took 2.981380307 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119858167 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099656175 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063460897 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095139237 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064074555 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099518125 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099805174 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080893651 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099066519 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064455083 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095577775 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064075587 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064053008 seconds)
  done (took 2.321741894 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082483446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083483574 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07001567 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083010233 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063881831 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082218003 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080630346 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088063104 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080442196 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072050942 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063489841 seconds)
  done (took 2.035548561 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081340197 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083948499 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069681563 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08210593 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066597164 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08128133 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081143321 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085103603 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081016021 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073121606 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063585778 seconds)
  done (took 2.030621382 seconds)
done (took 7.568475544 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07698214 seconds)
  done (took 1.251512566 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591139619 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.15269348 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081561474 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112665545 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183136478 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120292392 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281069941 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086843975 seconds)
  done (took 8.965075549 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088298655 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082849122 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069479316 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069968543 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068779609 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072702094 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069388421 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071020053 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07183342 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068608542 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071100851 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069433948 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070695609 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071172719 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071646102 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06849656 seconds)
  done (took 2.402334618 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092260928 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091430211 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074191434 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07460792 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072128426 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072224311 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074689694 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073458303 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071045308 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072022401 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074963359 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073794525 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071352629 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065213967 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074018044 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075865578 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07092082 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074303864 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074770198 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075411024 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074661324 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064508376 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071526695 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074328675 seconds)
  done (took 3.066155822 seconds)
done (took 16.867595531 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1147147 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071780293 seconds)
  done (took 1.369808923 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08184375 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083615683 seconds)
  done (took 1.355315511 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085366793 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065677225 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093522569 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078939395 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066251875 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065998569 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090394747 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066060987 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066294233 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066131453 seconds)
  done (took 1.935891085 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06886942 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080155991 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072192375 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081488946 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074202002 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06512621 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073225749 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068200398 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079336891 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063267439 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07178989 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082677591 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071539848 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084669361 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072901042 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069103427 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071624808 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06791324 seconds)
  done (took 2.513101037 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065620007 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067444625 seconds)
  done (took 1.329217878 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067818295 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064922082 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067942763 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067491528 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063662086 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062729146 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063958032 seconds)
  done (took 1.651144175 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392082313 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110283677 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.298767292 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070460229 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081452558 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249107993 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065628043 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070291749 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07042915 seconds)
  done (took 2.643734197 seconds)
done (took 13.995085174 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078190719 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084942471 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094813501 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362289244 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091852148 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065736616 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113653396 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19000751 seconds)
done (took 2.28875286 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213190618 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612117634 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386893357 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197127181 seconds)
  done (took 2.395708715 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330124247 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086758454 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058770437 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066664622 seconds)
  done (took 1.750402818 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066033295 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068950418 seconds)
  done (took 1.339968974 seconds)
done (took 6.90303092 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06697884 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085200611 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065549561 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063089397 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065990423 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063173836 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063536393 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063441797 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065818673 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065772599 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.06885442 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065663997 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065652606 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063460753 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063331079 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065657849 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063569348 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063342824 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063194478 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068813269 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063434787 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065462971 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063267325 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063474674 seconds)
  done (took 2.815843043 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084117232 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066717142 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072718003 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070902722 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070031915 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071614899 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071516657 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06641399 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071081815 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067839873 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069962174 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070050743 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068476665 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069998341 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068001672 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07030972 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071561048 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066587909 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067910335 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069958875 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071140389 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066178955 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069757981 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071104585 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069524896 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069948856 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068012488 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066539657 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070806271 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069473707 seconds)
  done (took 3.310247134 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070324819 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063768937 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064491887 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070803007 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064441503 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065447826 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063000113 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063817803 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064315144 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063326612 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06494615 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063087049 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063375206 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064339773 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064061511 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067353086 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078943496 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063886443 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063520473 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063883749 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06657964 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063278971 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063193185 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.175796397 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063181495 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063290367 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064341816 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063302394 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064397336 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063133677 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066218987 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066853781 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063250036 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070022746 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067035973 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062934162 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066966562 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063077805 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063677439 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062904007 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063104517 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063383346 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063308032 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069972879 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063310071 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065081761 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063353776 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064328997 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063911239 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066080864 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062578572 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063408471 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065269438 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064537432 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067022745 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063330116 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06410576 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06326488 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064904259 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063117222 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063083806 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062912022 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065749508 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063871182 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077149311 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070123225 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063162407 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06535475 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06412646 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0656495 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06476381 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076114391 seconds)
  done (took 6.018439804 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09107696 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088103131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0656982 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064740341 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061700454 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063917674 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067430019 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065391734 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065401564 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069790317 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064113284 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065338178 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065340069 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076755576 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064424639 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065258786 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070134646 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062139801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064176698 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067241085 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064485647 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06734687 seconds)
  done (took 2.72638238 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154132805 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071075422 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105666442 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07302476 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067729512 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07331718 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069746591 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070122916 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070022928 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068594566 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068143071 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069788904 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067581268 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068019048 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068098143 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068187542 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069933536 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068712708 seconds)
  done (took 2.590655219 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077023849 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065993954 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086352148 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066479059 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066059369 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068185492 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070719179 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074337086 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068443804 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066263099 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07432057 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068186283 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068100508 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066070164 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068533716 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066015208 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068456264 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065684863 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074148456 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070630138 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071075554 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074244288 seconds)
  done (took 2.765883249 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079290651 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068265589 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082508734 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068826157 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061914835 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064377045 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07020727 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066513637 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070071567 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067661 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06579414 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063873954 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069411571 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065989007 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069360509 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065742482 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067762861 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065662041 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067529477 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062036816 seconds)
  done (took 2.585175279 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086821204 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068251016 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067855692 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07609756 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067501145 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067441973 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075691035 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067573506 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067135716 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088631106 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067843712 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066969361 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074914872 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071768911 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066704459 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075053453 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074762077 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074937834 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067039103 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06726744 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087094048 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067342336 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074729214 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067162507 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06699292 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066867788 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067432528 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07228607 seconds)
  done (took 3.233476233 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066086656 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06551848 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063444076 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063283244 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064181747 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063663079 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063242472 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063814646 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066211946 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063379921 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065903406 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065809113 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065884959 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066206629 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065654154 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06584819 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065891905 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063192729 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063359033 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063215958 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065439608 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065576247 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065839288 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063226205 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063319821 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065989715 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063257221 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063905482 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065511565 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063655555 seconds)
  done (took 3.166778435 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075668207 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073105919 seconds)
  done (took 1.37659601 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063822669 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080676576 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063199766 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069447056 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070449163 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066615528 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073425823 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070416981 seconds)
  done (took 1.782143509 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081892848 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07748863 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067647063 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080576843 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076777729 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082830823 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132958875 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06721366 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072835077 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064000491 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079817028 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065024606 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07224244 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066460461 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071917098 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072888094 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064101347 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072396339 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068589205 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064415742 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067974675 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074649945 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068545054 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061664602 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06721238 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088009045 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07726567 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065550669 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069394307 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073156124 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071626831 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060166076 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065631814 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066445616 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064285942 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075627668 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080896519 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069130391 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074683583 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066622758 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076840221 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061215149 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070559541 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072477097 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075668687 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066202937 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066816643 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061622058 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063825382 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068079062 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061340407 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06590722 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060527854 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075616737 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069457237 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076614409 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064977659 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067705466 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069000216 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069356196 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072675481 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068333734 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068699973 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065935167 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075824175 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070657364 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075339959 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061849143 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060472446 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064322045 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076198617 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088855867 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07216078 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066931759 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067401411 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063947563 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06913935 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067764698 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071823683 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072537236 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066777164 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071964539 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073846974 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066899144 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069184896 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.0752763 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065048766 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069448646 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064526356 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083046164 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065495439 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064388201 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06445534 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076849089 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069899716 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066145154 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064161905 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073300051 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060192491 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066388352 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066201676 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065992246 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075441927 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069730882 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070244128 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073362593 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072240399 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065082271 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0678822 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06218859 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065884391 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063917068 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072025139 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059345036 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067815954 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065711754 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065361707 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199251248 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066957761 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067488375 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074243013 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072509868 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065282939 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063936463 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070680279 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067247973 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06944867 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074216285 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065669218 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062335235 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062302388 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070117461 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067035159 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070420613 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071824256 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070398474 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061736194 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065139447 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072017925 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075527036 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067445716 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06737794 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072278713 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067561655 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06595702 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07318053 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069610568 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06596028 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07257952 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06848975 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06288067 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070297174 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069400069 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065887557 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069606665 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070638621 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068639597 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06803824 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065801202 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074500657 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06737591 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065807436 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067799064 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065497252 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077177931 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068608363 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062576128 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063845388 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075066938 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064575345 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066513455 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065958546 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068269039 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067945174 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064952244 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066205487 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068671185 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077595408 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070710887 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067663915 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072490197 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077523579 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066355813 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069373016 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065858111 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067891253 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067809145 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075010432 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071750765 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071023742 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068902016 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06298041 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071778168 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073970965 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.0659687 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064240534 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065523426 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070416038 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071964782 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070647084 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066892518 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064269031 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066692405 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06955416 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068987739 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066023585 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065400645 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073054248 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064822212 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073748552 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06696929 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076280726 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069307 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061243228 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069183813 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064089825 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072009227 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06155172 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064104401 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065326425 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066570161 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064137869 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067860893 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059057496 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07145964 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07210902 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065450361 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064679714 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065452319 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072101764 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067014566 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068629925 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068841526 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071125887 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075486736 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064594058 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068658776 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.203042904 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067798045 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061373891 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072387613 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.0658139 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06617407 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065817145 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065022738 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069599548 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075429396 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073636919 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06112034 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069992973 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06589267 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066405238 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062048783 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071300131 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070304611 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067782589 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074131338 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067536405 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067786387 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070682099 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066515064 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068166424 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068016709 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069678686 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067278247 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068420777 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066250742 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069740812 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066748595 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06488472 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068774457 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067845249 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067678684 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072933982 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066722021 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067542222 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069615329 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067230725 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067404733 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06814396 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065974425 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070097348 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067480789 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067434956 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069457625 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061742833 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073644663 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066318848 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073669029 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066467173 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063978919 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074606795 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069032202 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072801213 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067338806 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067828375 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068022662 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066779848 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069236335 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073733936 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065058368 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07709202 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074149309 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067760349 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07005909 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06678697 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068140302 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065356476 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067107991 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067392138 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066846468 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066285882 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070803468 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068536192 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066556968 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067915482 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066646378 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066861677 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067134392 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060840595 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06584344 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065895375 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065984673 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076267667 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066818735 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066500972 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065357944 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067607663 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065573269 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06362391 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075035156 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076325003 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067219875 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073564836 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065709159 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067850866 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076766338 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060628955 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064267066 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064066579 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064494892 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073572174 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066795173 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075450335 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066231886 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064913274 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062472549 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066365593 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063803785 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059727794 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062847791 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068389621 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064309705 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064102445 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065254132 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06739418 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065575821 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074483864 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064129814 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065941863 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065434802 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.193909015 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066179217 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066884246 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070203017 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067272509 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064523584 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063612225 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066289509 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067315883 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068167084 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066716257 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068890874 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076497833 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066512307 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069801863 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070468271 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061857158 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069867506 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066547395 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065986294 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065858582 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070427875 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069725987 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068649069 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075101933 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066560045 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06751745 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066337707 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064577178 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06736265 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066350943 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067735294 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066019231 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068372552 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075038609 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065143377 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069736606 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066858515 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067273571 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074039541 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067788041 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070181012 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074114213 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067226423 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068595214 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074672705 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07101426 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069972999 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067680125 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068371289 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072967282 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065486219 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073341015 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067779989 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068247099 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068153941 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064443205 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067130039 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066557454 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066091434 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072661229 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067458782 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066000218 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066398155 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064631624 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068058523 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070304247 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074659352 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068776133 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068910547 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061829738 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06330555 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068191783 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064401448 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06833003 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068952715 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072133505 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06844074 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067037554 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064976687 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075253079 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072044734 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070174776 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064550092 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069806255 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066947575 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068402265 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067112124 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066323446 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067211371 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070085516 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06776244 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066189797 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073077322 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069924815 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067096852 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067940883 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06752562 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067452789 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061791564 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067127432 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068509424 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071588736 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068480722 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066629596 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076600666 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064272107 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066231274 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068999219 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065218378 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070163414 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060933879 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066986889 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065905652 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066409136 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060529576 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064225023 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062853711 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067079659 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064607287 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060598311 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074828325 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073843189 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068002977 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064147558 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.196179054 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061986235 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062537329 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065817578 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068251609 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069430581 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076866419 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066144547 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065301234 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061738656 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06743046 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069876131 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070288484 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064994068 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062603552 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066688348 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070136176 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072312224 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06576891 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06601653 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069631263 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069036628 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064935273 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070553029 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064262871 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070339548 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079986898 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068150404 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067236232 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07303302 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074232305 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067863522 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06200122 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066748437 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070131314 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067674559 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068205919 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068669236 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081441809 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070476529 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06598367 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064891038 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069712659 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065893586 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075022247 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067431007 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067285761 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07063417 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068459942 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076445807 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069790703 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074013314 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069797858 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.0696676 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06537996 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066927553 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064398584 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065285256 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067854165 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067528613 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071328767 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074895404 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065808633 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077020981 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075310919 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068273621 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063476974 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065606889 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065886955 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061710187 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067293624 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064742042 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064663233 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064289695 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065129321 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067312558 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07161127 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067238144 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066689531 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066517087 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060605863 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068285293 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068437851 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066872747 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063290514 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065880618 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06683336 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070437618 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069685279 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064169467 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067665757 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068272151 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067334358 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061786241 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073247599 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06553696 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068106107 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065858214 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066929286 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067194755 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070578656 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071432162 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067615749 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068482342 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07063077 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068666266 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063745086 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064139643 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071126693 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063728834 seconds)
  done (took 42.567909902 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099432343 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063766773 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06238625 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061865253 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074316225 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062798165 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061777683 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063072615 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063580596 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065397201 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06180228 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062257592 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070788823 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07797627 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07391592 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066623219 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062151311 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062984053 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061824186 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062930299 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071172221 seconds)
  done (took 2.740176489 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073529538 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069869829 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072949037 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075796591 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067413785 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070545616 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072704776 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071086589 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076525045 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067136154 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084627145 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071004014 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067315838 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066926024 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067336299 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070756138 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075931571 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067444335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070620446 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072435942 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071280262 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072714016 seconds)
  done (took 2.878841119 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067049313 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065460255 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067729748 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06129909 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066188168 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060853201 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069606292 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063764899 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069334081 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065047736 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065008632 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064908636 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067114373 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061115658 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065813344 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063457135 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108589014 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068937337 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065040912 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066240295 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061176079 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068023792 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061254483 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061754576 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064880338 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069589796 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066781865 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064018831 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065503854 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065008218 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065606236 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063634642 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067397058 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066455469 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064788214 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065074362 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066028823 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065290442 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061302167 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063803809 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065890523 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061785166 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06585951 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067164435 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063943604 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063618365 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067094824 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065614176 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061060874 seconds)
  done (took 4.538155557 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080109301 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108201944 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067902483 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088249936 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080096997 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075546893 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069543399 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089467216 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063073043 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064068032 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081599538 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07983119 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065879729 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070498753 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072257275 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065932062 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066614552 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064666595 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069626314 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065136292 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069726804 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072143625 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08002497 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079146511 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069521778 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064662366 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064854103 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069837915 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078535482 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070015183 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070440639 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071361401 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081170014 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067191544 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064773265 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067493592 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081485649 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065920544 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06791847 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063092801 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067569904 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0697945 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07172926 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081707751 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065970667 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070544783 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065198411 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063187564 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078068662 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067638978 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073463597 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079798423 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069211411 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065435964 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069891316 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08034079 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06549069 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063765515 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068230688 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077868154 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062881764 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069248142 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079415924 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067102137 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072795197 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079596656 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.0707505 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069851058 seconds)
  done (took 6.335863895 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074242107 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07261931 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081587193 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080141109 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072096154 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072324326 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072418789 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072461348 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072737187 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07719611 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072605443 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093014774 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067753793 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07495759 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072526147 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072718119 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07252115 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072773517 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072369668 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072716385 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073059397 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080123503 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072013153 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080056784 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097902759 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067738538 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07210473 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072327111 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080341023 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07204613 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079527064 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072324662 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072363644 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080597879 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079594103 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071918575 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064946701 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07187609 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072237024 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071856309 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067693163 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079871436 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072010308 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067344426 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072274185 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07141661 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080460237 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07910954 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074577214 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076697783 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072221246 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080138952 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071647961 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072628805 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079877057 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104202043 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079727951 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080056129 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072274551 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080003768 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079746359 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086344358 seconds)
  done (took 6.025253854 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083668869 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075342752 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077231885 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061319414 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063896564 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06973474 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063952519 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063930449 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074732554 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074266715 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076958813 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069458668 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073079673 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077354081 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069494223 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072688583 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069813249 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069735714 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074683527 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069667367 seconds)
  done (took 2.760151752 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073756329 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08309546 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06711717 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071667801 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068638333 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071592837 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068005863 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068694432 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066795016 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069345185 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076118118 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076145391 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066644103 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071870424 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076091376 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071475823 seconds)
  done (took 2.467704617 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074739965 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072738857 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08006611 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066230081 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064064386 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062598108 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066022652 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061309559 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062267455 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077703836 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066011344 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068378403 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065717677 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064349995 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062974437 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069337413 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062251053 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063782783 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065691737 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077962688 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076718254 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064669908 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066682385 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065604414 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065946346 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071095298 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065381494 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063400161 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063101707 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06617736 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066216269 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069157737 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063066726 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063959101 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064286572 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063519195 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065584501 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065685715 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068337126 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065294244 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06354172 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065337133 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065775242 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066365873 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061780804 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065685274 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06220219 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067943516 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063860514 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065740066 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065387077 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067952565 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066326598 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072202001 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068695381 seconds)
  done (took 4.98960387 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078336143 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06897261 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062792352 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064263088 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06860291 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067598052 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069682255 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067733529 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068318987 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064825793 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068061205 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068303242 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067397736 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069309296 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067931965 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069326568 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061617509 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067391919 seconds)
  done (took 2.554117099 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071146898 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066385112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072251089 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066164256 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066454272 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067874212 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061768658 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064370023 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06442314 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065556608 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065817648 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068041895 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064356281 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068008261 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065964132 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065664638 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068066287 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064890502 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065744566 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06188183 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067854788 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064688813 seconds)
  done (took 2.785864508 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092401714 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081313155 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138355524 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078349202 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083054124 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071765689 seconds)
  done (took 1.87500498 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091293773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07933146 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06672052 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087942486 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073349899 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067334897 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067279969 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067611005 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076207164 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076182832 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067939589 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076259025 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07594949 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07548318 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073425915 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073421919 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067397052 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06740462 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06616666 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084079945 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067498903 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075868525 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067452702 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067354614 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067448801 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075204579 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076011947 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076263995 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067379531 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075604811 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072916854 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067489849 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075963582 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076207799 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068777258 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075955231 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067660646 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084408887 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073411653 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076023293 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069046794 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074441543 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076286785 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072455792 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076268527 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067900849 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072675336 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067530219 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067587445 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085763197 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073333154 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075380331 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073455634 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076316949 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076098837 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086133333 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075985509 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075396612 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073188636 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078964761 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075856665 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073177586 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075040651 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076049112 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073846681 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075618785 seconds)
  done (took 6.212294034 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081910073 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085755652 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068156947 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076264643 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075720874 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067784705 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067484792 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068332091 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06776177 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067136408 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108129604 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067906239 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075512704 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07584688 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067779335 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067599201 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0677253 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075938882 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067295637 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086355047 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067916589 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075878828 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075967107 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075566888 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076371424 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073279832 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06761566 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067557807 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067628982 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067399086 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072768393 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067855351 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075757046 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067124252 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075640287 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067745352 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067538333 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07331879 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067439445 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073078544 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076169777 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084583277 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067621207 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067391527 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07595938 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067428749 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067538287 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067128758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067391667 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066900819 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076169442 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076164879 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076335595 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075593079 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067608548 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067850228 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067613968 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067397075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06749341 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07361556 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075332382 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067183276 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086316075 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067706689 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067364438 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07545734 seconds)
  done (took 6.120860835 seconds)
done (took 128.425748701 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182523068 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164611697 seconds)
  done (took 1.673277951 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068507578 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097063765 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076794894 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128728411 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066917199 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100042036 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099382425 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077591486 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06584629 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065943853 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066426073 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068966123 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131402218 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066318428 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066000262 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068819047 seconds)
  done (took 2.653870827 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097428552 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157682809 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099534644 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06515232 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097279301 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073261536 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064404717 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07519254 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071025905 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065316297 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073033419 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070538838 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065139966 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07047529 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070822585 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072862931 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064758352 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073087568 seconds)
  done (took 2.768973693 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10140702 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091126723 seconds)
  done (took 1.536573958 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154652194 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106047815 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149637039 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345218474 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167980363 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228898747 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126990514 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127123603 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117059454 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123613138 seconds)
  done (took 2.9887466 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097298949 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152457997 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255841481 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115600239 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073067549 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095307408 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116485449 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077847446 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08093918 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080604976 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080621361 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076536685 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099021197 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073678692 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073158998 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076136228 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10236778 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072216068 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074285222 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076937452 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098964896 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065586345 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073437277 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07197364 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077684981 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077179 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065196677 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065653016 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076594366 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074103664 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076921055 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09407814 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077449061 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10809236 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070190706 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108776976 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07626238 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073835446 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073790827 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073647234 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079087129 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079034061 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072315042 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07618184 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065021945 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07653607 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065063223 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065592821 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078040482 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066747629 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077919235 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076769825 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107216464 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066663057 seconds)
  done (took 5.953508049 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10117389 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104796056 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071195877 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110778551 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099936524 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071188016 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101118352 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09340516 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103114133 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070316796 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068303573 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070633601 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082331258 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083336513 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112120968 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104271727 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073778254 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070196712 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103731445 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102476819 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068430219 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095138042 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089387926 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101901895 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067796431 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070380528 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068605977 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070538116 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07693027 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078780583 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069775286 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081124111 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084449607 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078599535 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067186327 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067533198 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068467962 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08036311 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07999911 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079051827 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078092907 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067650711 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067911202 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069944951 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070279058 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067819775 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079222844 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080564846 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079048165 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069714795 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070310188 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067924109 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069410745 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080387894 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077783842 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080820535 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080066004 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068290791 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068611013 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071613501 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0812874 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079178639 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079888826 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069736537 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079088658 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068121442 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08046135 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084543375 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068360144 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069500993 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068499044 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069456149 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069222154 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078135388 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078084111 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07009975 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069384551 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068234827 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080573733 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079017516 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067997909 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077949217 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06706287 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068364668 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069974799 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069877147 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078062985 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079972366 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070104037 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067999624 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068911581 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067887187 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066358079 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076003396 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078779697 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077486648 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077594013 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068455157 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077763668 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077484976 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068712558 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079755003 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06757761 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197396853 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070388368 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080434141 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078914969 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080735603 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069813212 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06824585 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079480554 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081420778 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069049953 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079369912 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082477168 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080917312 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068036224 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081954697 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068293132 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081255124 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0704307 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079921462 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069318593 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080240552 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069093029 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068711485 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069232566 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081062782 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070491743 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068952533 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069873168 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070435968 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080597716 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083508077 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070536885 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082086017 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079301491 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069843247 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079896599 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068940841 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079883169 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070738609 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069547562 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067686401 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082763371 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06839301 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068920839 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070461996 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081402191 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069116412 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080460284 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078329408 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067940362 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082123897 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080673005 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078739207 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080720392 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070516507 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068836776 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068300186 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07041698 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078606846 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080596478 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071025855 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068778298 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078878182 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079209433 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067455567 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078680833 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07812234 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078664773 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06875623 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069328201 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080721968 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081351026 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078897635 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078879667 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078896056 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068468553 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077935219 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07880388 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068460035 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084709346 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067870339 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082624684 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079681048 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077285736 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079279936 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080614387 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08077091 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080484128 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083332208 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068158763 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068102424 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07987427 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067890983 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068599174 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077316497 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068886572 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068889497 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081697527 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067544437 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078368958 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066975202 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077700743 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066655596 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068919078 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082452765 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198448945 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070156299 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081349128 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070304861 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079823798 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081710481 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079152842 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068863424 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069445847 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080844613 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078796858 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068280871 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069333498 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070904177 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078719899 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078038233 seconds)
  done (took 18.665407042 seconds)
done (took 37.589222117 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209834718 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151658012 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199524372 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119131215 seconds)
  done (took 2.126616498 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122608237 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10186315 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095732202 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065786852 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102490704 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065539819 seconds)
  done (took 1.936185874 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31473884 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212657776 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184053224 seconds)
  done (took 2.098500838 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208174363 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191039192 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.401998582 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257667363 seconds)
  done (took 2.551365759 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145688164 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090206076 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067594554 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083680028 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135637642 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161992139 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102246724 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12713262 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078631234 seconds)
  done (took 2.431493327 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148527904 seconds)
done (took 12.680663125 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.121774953 seconds)
    (2/309) benchmarking ("sort", Int8, false)...
    done (took 0.171122247 seconds)
    (3/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077567236 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07498944 seconds)
    (5/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.209865907 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08240185 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073742644 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078427482 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.10966778 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073077039 seconds)
    (11/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081001665 seconds)
    (12/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.203347529 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.169788816 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081308329 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.114935071 seconds)
    (16/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071879421 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090953408 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.139674038 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.199906863 seconds)
    (20/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.176451778 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.183625349 seconds)
    (22/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199125733 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.221120013 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185738862 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065048598 seconds)
    (26/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.11921517 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051147339 seconds)
    (28/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.095660626 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.219346964 seconds)
    (30/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099047647 seconds)
    (31/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073819794 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074159677 seconds)
    (33/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.20474009 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090129131 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.171750161 seconds)
    (36/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072101365 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071762805 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090610508 seconds)
    (39/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.107942151 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174756821 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089778986 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095054527 seconds)
    (43/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.201552965 seconds)
    (44/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.194112751 seconds)
    (45/309) benchmarking ("sort", Float32, false)...
    done (took 0.126575381 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071568427 seconds)
    (47/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.145054874 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090137015 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066448795 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072674557 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071888932 seconds)
    (52/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076503661 seconds)
    (53/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088170592 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065587047 seconds)
    (55/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075551849 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138210078 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.153153093 seconds)
    (58/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.093996947 seconds)
    (59/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.185801387 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072575834 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067671298 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093747687 seconds)
    (63/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052199517 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.222263145 seconds)
    (65/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.149037629 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173410089 seconds)
    (67/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070746138 seconds)
    (68/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.161366336 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051855514 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080514347 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136551883 seconds)
    (72/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115192441 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111510819 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071495148 seconds)
    (75/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148513053 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064811775 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094444534 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052806623 seconds)
    (79/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064243704 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086691611 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.065969499 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.327232174 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.094245008 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.149799853 seconds)
    (85/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100977514 seconds)
    (86/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.320516688 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052400813 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166279556 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137272103 seconds)
    (90/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114827773 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073626667 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.112545703 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.207715236 seconds)
    (94/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186230438 seconds)
    (95/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052598363 seconds)
    (96/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.10868803 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069641373 seconds)
    (98/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073240106 seconds)
    (99/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.157426327 seconds)
    (100/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054957016 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052489446 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053726007 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051892353 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122495146 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094139501 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066002512 seconds)
    (107/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15265319 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072829523 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073144705 seconds)
    (110/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087543408 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181296947 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108877121 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050897779 seconds)
    (114/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072631162 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136020863 seconds)
    (116/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06460862 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076044681 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.0724262 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107863654 seconds)
    (120/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061842371 seconds)
    (121/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076772297 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066580599 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053552077 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052008468 seconds)
    (125/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051073814 seconds)
    (126/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051529077 seconds)
    (127/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072277652 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.133056031 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074162134 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128314148 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065314231 seconds)
    (132/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06845857 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072218729 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094468674 seconds)
    (135/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052538448 seconds)
    (136/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076682671 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088525477 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070937497 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071962991 seconds)
    (140/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.146836262 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051197529 seconds)
    (142/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.10960743 seconds)
    (143/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051766929 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072011769 seconds)
    (145/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077463962 seconds)
    (146/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066475492 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17355519 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184424959 seconds)
    (149/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073523843 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065028581 seconds)
    (151/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064874754 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072479155 seconds)
    (153/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074418637 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075320056 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067733282 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073505608 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110371411 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06544164 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122505363 seconds)
    (160/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05120111 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07220768 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073045668 seconds)
    (163/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052239753 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05123667 seconds)
    (165/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061561593 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051359545 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146003902 seconds)
    (168/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074701153 seconds)
    (169/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05229986 seconds)
    (170/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06060184 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051346074 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06702567 seconds)
    (173/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.0514068 seconds)
    (174/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054213743 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.176028802 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065355021 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051387631 seconds)
    (178/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050998672 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09069746 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051337962 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07377706 seconds)
    (182/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066582771 seconds)
    (183/309) benchmarking ("sort", Float64, false)...
    done (took 0.125873676 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073339211 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065139987 seconds)
    (186/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080356911 seconds)
    (187/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065536873 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071437144 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.157961529 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065583089 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06438889 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051833359 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.185108578 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073310786 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066083625 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050737864 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.245321566 seconds)
    (198/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077931425 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091123409 seconds)
    (200/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089571491 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.0907239 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065768432 seconds)
    (203/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052840706 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051877064 seconds)
    (205/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.152038242 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064456924 seconds)
    (207/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054261784 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.15998099 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081312115 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052114035 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087063006 seconds)
    (212/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068486172 seconds)
    (213/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067287315 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167783266 seconds)
    (215/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070336302 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065722549 seconds)
    (217/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087831806 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074860702 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072560152 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076281047 seconds)
    (221/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151648661 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067305157 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066242913 seconds)
    (224/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051320439 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072247886 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12145728 seconds)
    (227/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088294024 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065863757 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052459798 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068158911 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081143848 seconds)
    (232/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060818621 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06477835 seconds)
    (234/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051974719 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066792165 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171176003 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065661401 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069729867 seconds)
    (239/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061022545 seconds)
    (240/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109427256 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071676892 seconds)
    (242/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053636543 seconds)
    (243/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052168934 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132108911 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079383194 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13902516 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073088182 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132452172 seconds)
    (249/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051813019 seconds)
    (250/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061428606 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06705758 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092588898 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071405205 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128249641 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052517705 seconds)
    (256/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07144571 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095620917 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079823875 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065134235 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095654356 seconds)
    (261/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051413774 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088171866 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073281441 seconds)
    (264/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051251474 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071538267 seconds)
    (266/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073097474 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087839651 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071231142 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.0526089 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073221995 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086602128 seconds)
    (272/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07119638 seconds)
    (273/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051814462 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064466276 seconds)
    (275/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051850503 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133093732 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065766747 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086552522 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17446636 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08603784 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068054076 seconds)
    (282/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067154364 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090348712 seconds)
    (284/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065062974 seconds)
    (285/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066116492 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072567406 seconds)
    (287/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052473486 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063764672 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052355565 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064046751 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092240236 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069715372 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111686384 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072249121 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06536455 seconds)
    (296/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052705148 seconds)
    (297/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051924907 seconds)
    (298/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051469456 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06530127 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071590042 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070965926 seconds)
    (302/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05174539 seconds)
    (303/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067902553 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052762361 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068400399 seconds)
    (306/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117628156 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065397374 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070609361 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052491367 seconds)
  done (took 30.476590205 seconds)
done (took 31.874242306 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086934037 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093306591 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075445482 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093015783 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080661125 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076590152 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073028763 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.0785834 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079921977 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081406788 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07869373 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054997649 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073866932 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074218473 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074691958 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091283139 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077838901 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072571037 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072871839 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064429796 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072873997 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065863829 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067262661 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054532233 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07715148 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071368175 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072397282 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073356241 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065790926 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065667966 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069056183 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072941121 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065774117 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077358389 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071594832 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073097697 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074679807 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076290877 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067623449 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066357722 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074011094 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06583648 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.0728176 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.0733939 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071899666 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071212573 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072856784 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077979539 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091593449 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068288912 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074035143 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076126612 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076621362 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072215591 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069716833 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073040495 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070571198 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091021529 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07339916 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067972652 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073799539 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073607872 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070854418 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072768308 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073063417 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075093108 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075105216 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070867068 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074537606 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070764192 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065560348 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072961135 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068914599 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065737112 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075441213 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076399245 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064488276 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070903689 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072406057 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071607079 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064815009 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067824108 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066902898 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071194521 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067466501 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054931947 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069147057 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071939843 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.0644929 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072793203 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071441436 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071846106 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066711774 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075237802 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064727975 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070103088 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065351812 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065490241 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066901856 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06940868 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065101115 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067584624 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074897478 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066949115 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071131165 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07884342 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065474085 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071565441 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064380392 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064921608 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07971672 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074317072 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065175763 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067739421 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064644055 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072292972 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064283217 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065180125 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064810081 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065034678 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070499425 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064598661 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067024563 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071442693 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076120214 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064538571 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067388365 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066472965 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064380008 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069402946 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064300959 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198647337 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068184879 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062355903 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068696751 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066516824 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073527644 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068616387 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072936175 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067386563 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074326749 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07012523 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07152879 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070644257 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064004724 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058705144 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068108873 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06850658 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067646787 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066533875 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067678964 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065609461 seconds)
done (took 12.437641303 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067103908 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142931425 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099230017 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094837432 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086154205 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066626468 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076351787 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102409574 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067755077 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102255656 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087192494 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084718275 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112204161 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064908479 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065747239 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069450551 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067261579 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081808529 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101000518 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086289118 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116002238 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0652528 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094268054 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089977641 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087019946 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101515452 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066919363 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070329771 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06923649 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091479578 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086440942 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069746155 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066553278 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100919121 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093236123 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083216617 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066377934 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082415205 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066475673 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065794367 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067562411 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097891611 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080353968 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080280552 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069598032 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069071289 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.0672396 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083099846 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088834835 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078795864 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086488488 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103333323 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068363603 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065550497 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064261848 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085398999 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065414481 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068791825 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066137146 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068178909 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065660928 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069302284 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080768509 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081613938 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069746893 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080109439 seconds)
  done (took 6.790681704 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083427125 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090198695 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084218406 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084037893 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065933004 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066126981 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066525734 seconds)
  done (took 2.027998622 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06714294 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088856439 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088855553 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088592804 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084233693 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087699348 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075508507 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066544368 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080879223 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067858411 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086863944 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101868343 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066980369 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072722671 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090802027 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06654064 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090149214 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066443012 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069316901 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089837426 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06839768 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082102245 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069710514 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067105393 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080731098 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066784799 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113366539 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070799976 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068200468 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069261684 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064706061 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107137176 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080285941 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075716532 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066715133 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080658103 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08111446 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064990672 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082591419 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071717458 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.0801115 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066791789 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067974348 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064538919 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070949633 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076958763 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067657723 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067311735 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069201026 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086171822 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067068802 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079982525 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070288022 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069119201 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068472795 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070934597 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076985632 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067746936 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086105909 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067810015 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083107827 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082551773 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080525708 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082475189 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068940867 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080589928 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080595005 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069090956 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068460107 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069998404 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082755147 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065043055 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068160844 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07690487 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068174556 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089281826 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089898433 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067410361 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075727227 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066819111 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066716907 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066706657 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088675729 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06841587 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066317476 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070802826 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069296056 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064999071 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065624562 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070047317 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064329232 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067864335 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06892916 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0694607 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068936689 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082332824 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068736113 seconds)
  done (took 8.755102818 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069411135 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067825476 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069716121 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068405856 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067752999 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068325914 seconds)
  done (took 1.923855951 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093702154 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070178889 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081622369 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072882086 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104718327 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08694614 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087526012 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079008447 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084217772 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079245735 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087164767 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.0888661 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093047926 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073081844 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086763557 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072205198 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087300192 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.0760596 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078692724 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07303437 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086805931 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073197003 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073146494 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081905192 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076152741 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072444843 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067291338 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078606726 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078760243 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079323525 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07241862 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07560483 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070786501 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078996047 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086696837 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070953188 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071944137 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077758614 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072667538 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075994746 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088059681 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073159785 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075137682 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077070742 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078572002 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071004983 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077576582 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076312908 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086453486 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077169879 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077569045 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072289382 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075034793 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077193334 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070464288 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078209481 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077384001 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086692718 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072035914 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07038477 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069103694 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075401788 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078068217 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075208572 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079310716 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077013672 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071054894 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072720335 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072735205 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071744693 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076771021 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069170279 seconds)
  done (took 7.094952918 seconds)
done (took 28.070185091 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54445868 seconds)
  done (took 2.025090847 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.603887062 seconds)
  done (took 2.108197043 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.569873599 seconds)
  done (took 8.070864196 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.391950062 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472769932 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.689118856 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130803195 seconds)
  done (took 3.225319379 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.672259888 seconds)
  done (took 2.184479822 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210784427 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196287905 seconds)
  done (took 1.929362327 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376742553 seconds)
  done (took 1.882131998 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.101950158 seconds)
  done (took 2.609141827 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263299813 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163614677 seconds)
  done (took 1.936362358 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460575278 seconds)
  done (took 1.966238406 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.861783588 seconds)
  done (took 6.370408313 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215243565 seconds)
  done (took 1.765775365 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240698867 seconds)
  done (took 1.748180213 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.674278907 seconds)
  done (took 3.185829449 seconds)
done (took 42.515041555 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080583044 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082268921 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081753966 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078921284 seconds)
  done (took 1.821965094 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076772569 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073140718 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076868468 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07290389 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076749026 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072894967 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074434711 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076851579 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072505642 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072997464 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072753982 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072481348 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075062209 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074533154 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070964967 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075284764 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076096037 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073170318 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075716085 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072300482 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071370946 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074678646 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075369611 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072408706 seconds)
  done (took 3.291055043 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078234761 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07322057 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075689851 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072426532 seconds)
  done (took 1.818285671 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077605008 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092514219 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088817423 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077589856 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092185014 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086030626 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069558067 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069697576 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073597288 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077243637 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068185323 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096372445 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088121843 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077289359 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079228748 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066268554 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06843972 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087154809 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07807273 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07779907 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070390847 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077450439 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068374921 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088904419 seconds)
  done (took 3.412170189 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07751459 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103494293 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078539135 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08853092 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089815853 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065632282 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074901819 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089506464 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123818032 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065777623 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070556926 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065880845 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072455011 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065765851 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076605091 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105062102 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108687654 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068802414 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09597904 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065692771 seconds)
  done (took 3.177427927 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07360577 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070443185 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065620295 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068956426 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077587158 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073603771 seconds)
  done (took 1.954128545 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068156042 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068577491 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067957925 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066537534 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072556734 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068170498 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066216417 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068011231 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067787708 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066933609 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066631571 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065927002 seconds)
  done (took 2.334280463 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.173708763 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069412443 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069585187 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066415145 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071050674 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066841957 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080102064 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06806003 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090703311 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066618831 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066795026 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068904846 seconds)
  done (took 2.482306979 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205984436 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07664508 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237668682 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137964455 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111714682 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11637213 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104608442 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11368357 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14384142 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102396687 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168605007 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167560777 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10769477 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138375594 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089571327 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098380537 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156150379 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163221397 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104331386 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16613777 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144639596 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124956828 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147340741 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101896624 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106485733 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122520144 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071077549 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080857686 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171377563 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132321143 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147388608 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111614892 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094485447 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177291223 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171684178 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142653761 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135373345 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083898432 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103158952 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135294503 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198225125 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088432086 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162482722 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246223568 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081504502 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135502891 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122477267 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120646391 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108231508 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090502167 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147571505 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183873358 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139565283 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088128286 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113551646 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116050119 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117523776 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105045392 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183393062 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161743948 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127878363 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071312552 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100178478 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154231182 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132112644 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109761408 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127511725 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095421475 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135015857 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155677104 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118773966 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144505154 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12917909 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089236453 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11953968 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140645115 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129403966 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17107894 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125450128 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073415535 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125933086 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104135572 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082174686 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143056807 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075921286 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175234752 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098428185 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106348507 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113563561 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108998029 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108701283 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161658613 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142175049 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244324622 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06698945 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10594473 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.1211029 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150250562 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088987919 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109517752 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117576204 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079103319 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141552926 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076176535 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124298993 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076420332 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126082133 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133224223 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076261011 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122749539 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102016124 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101367411 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13556695 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162161932 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09122745 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082480134 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168288427 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123740225 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105047521 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145040528 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15768001 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100362506 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103870952 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150689382 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180724017 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090015339 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164190093 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108203794 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08431034 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088420482 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124934895 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113792117 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122969782 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082806542 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120075206 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169811249 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075446996 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095899075 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134353242 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079158511 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081195861 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10342941 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100299045 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095028994 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100479137 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104575839 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137165099 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122440616 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103739024 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123125047 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096700701 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165439613 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087011885 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098634971 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101562686 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068620102 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.132678132 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152753007 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07748004 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159447079 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120465021 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103026855 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115955433 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081260405 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135904353 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076291699 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068153465 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134283076 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105830097 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105739313 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14227173 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100602067 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119651475 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.113928591 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127329793 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123716557 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123284759 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100565118 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.084251862 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106708871 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11957417 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071337861 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.087496531 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076757998 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098995547 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091474598 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080249534 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134628831 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118510047 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095863563 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107084835 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092305771 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139379241 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07323278 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12135486 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113363551 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089918979 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.143694545 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144992106 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125163588 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095081665 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137481589 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068305701 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07141006 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.347778053 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127480701 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086532437 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087461117 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120146179 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150742471 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132414093 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142914477 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115267025 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124117376 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158283701 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071682021 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118760425 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15257416 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123083861 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104807828 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093234543 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101728109 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146331467 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110547487 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186359772 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116845879 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129116601 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156406027 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101389289 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08181314 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105602916 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145383975 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106781532 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147824247 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101113088 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089599267 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11313678 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075502163 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102458613 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130455766 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12327156 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137175727 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115484864 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13458169 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077890876 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118190724 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121950112 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123935747 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063908126 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120086161 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162379685 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094933786 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119573734 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153781925 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080026914 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124775855 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.327445859 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147603595 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08592962 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111098404 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119093866 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129478407 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121668331 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141310223 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109987905 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135484671 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110402861 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086513253 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087875888 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098785459 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105760936 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.0957634 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108663864 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115621854 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096569283 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133159586 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104438358 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110328632 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119718609 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098397986 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090345467 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097791225 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174984092 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120013232 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171936414 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099464315 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146718918 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165362812 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075554155 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079572432 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078658322 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140716727 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08454248 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132003715 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098801142 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106646443 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125095983 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143470029 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095662565 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069051746 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109262055 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138392834 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11341711 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098815464 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104542877 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163040704 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100491753 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079492585 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113674934 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105351259 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102679122 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320726358 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062661954 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099319756 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076307798 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082314987 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128904969 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155246545 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081241673 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101015672 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120418582 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111107189 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128662829 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102656285 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10107479 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116009113 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152375659 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130095256 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092025051 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112703198 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131655251 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158350212 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106574638 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096624169 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17397539 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171478941 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16071782 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089098154 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11502874 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114835732 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109289744 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14023729 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083948486 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165383294 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082259644 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13733028 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105399694 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091139322 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130929737 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099606773 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088782212 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149304656 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118493181 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083657335 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078892236 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11910848 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121190179 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10676383 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075553194 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139571535 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072998366 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132960803 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168819142 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08157631 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.249820889 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098057616 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081573635 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109117899 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103763655 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090906547 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097766416 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174662019 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088562018 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15188499 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142418416 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114980338 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139630317 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101108724 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637473437 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079043119 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153827633 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118111 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175084516 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098533909 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120081928 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11084603 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124586435 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145685137 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105855562 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177740422 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132629689 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116592446 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08049118 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103483633 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103622012 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089666663 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106482086 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114335952 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117208746 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094709182 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116882596 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12460464 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082678996 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095786753 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157757367 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117894036 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145006652 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141291975 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085274658 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11808638 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138825461 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080650372 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122584874 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152410743 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106310907 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243169651 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082660312 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103513731 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173324464 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074205967 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165269286 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121685596 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111050383 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115547046 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115374495 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133399636 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109826547 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12368528 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095110889 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112323344 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114745901 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082569106 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078002711 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105200121 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113628659 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098166879 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099643913 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097694714 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153266285 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072104161 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097129521 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10497762 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146593081 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174768433 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08886966 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08339622 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120055895 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113965603 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114396187 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121567956 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079929965 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082951637 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082539092 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077855571 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108990838 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1133748 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105414087 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112453802 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165581562 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083359346 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227368006 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095860263 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105529088 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070270517 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079571583 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096798116 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098296793 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109200463 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100944153 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170427126 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094919477 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090180358 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093142877 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073894564 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227578285 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129733564 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113138569 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120118119 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099573779 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063788393 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111069101 seconds)
  done (took 59.057801486 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109198558 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082751709 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097905909 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150421924 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123497734 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212830424 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158719247 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200072677 seconds)
  done (took 2.792273511 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069635928 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.0952706 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100781556 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084020643 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067329259 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069918156 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226862035 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081942214 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066834424 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089366214 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080711069 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069623306 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423649111 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066425177 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068405104 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063764823 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06775369 seconds)
  done (took 3.445406553 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367966976 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602911911 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374346718 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07391735 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.868901842 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092003685 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.04623922 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13128511 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07437438 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.540663449 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.710400367 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125871263 seconds)
  done (took 18.672413697 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077346945 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070953467 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08503066 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085162409 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073534694 seconds)
  done (took 2.052026848 seconds)
done (took 107.880815269 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081820505 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393804888 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054026391 seconds)
  done (took 2.136380403 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083803492 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084762002 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086063195 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083401085 seconds)
  done (took 2.007896828 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074962134 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076873293 seconds)
  done (took 1.814261251 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225747181 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140350755 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087552892 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083104857 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078457413 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079137296 seconds)
  done (took 1.908039258 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073291725 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075891204 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073476126 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07660074 seconds)
  done (took 1.961646791 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076853024 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052910428 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055230324 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056033439 seconds)
  done (took 1.903710442 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086423221 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079659499 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079003395 seconds)
  done (took 1.908133398 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101959911 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08496545 seconds)
  done (took 1.851075456 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082517845 seconds)
  done (took 1.746927275 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099116193 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114636344 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129404694 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110257094 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137000717 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109951774 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085916186 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087277821 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078048982 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08795389 seconds)
  done (took 2.7036988 seconds)
done (took 22.136949722 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079063936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362855322 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362024327 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089836666 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668832435 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35706588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993853839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09292014 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114696129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068305325 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084525018 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649968697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.019170651 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324485936 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.008484768 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324150405 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651799272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068573168 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068176869 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068262621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979250942 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0679929 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068391459 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06949836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650448704 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372236962 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068706212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319375752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068319215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070443521 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356221499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068795098 seconds)
  done (took 16.263534344 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07133057 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119024872 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073908408 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084620671 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071166788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070331098 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07200789 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069686257 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120538885 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068654361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085566355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067907398 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072332872 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069783191 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087606229 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068850251 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069423522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069455542 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068754755 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06921971 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087377364 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068663745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068735227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068775121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068488119 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080093958 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06928266 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068972435 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069146938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070887223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071634162 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069866556 seconds)
  done (took 4.089508303 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116779089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126869095 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075068525 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104309987 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113487082 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070676051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144775222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093447909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128662826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068933868 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085296894 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068584899 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10164616 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069517996 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088490477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069495523 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070204178 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069424392 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068877196 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069499864 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088307108 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068755723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069375414 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069570911 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069378943 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082527911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069799647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069369681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069059213 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070860848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072497755 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06987782 seconds)
  done (took 4.355511446 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073376317 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076530336 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08340994 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085309069 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069602358 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072202056 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073295465 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070303121 seconds)
  done (took 2.286394808 seconds)
done (took 28.664051951 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079279742 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06970235 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073500796 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081374147 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074191265 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079515672 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067630928 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075303467 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072695099 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073603059 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075711922 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06860052 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071906773 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067545048 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074613716 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068688212 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079770789 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07223982 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079836587 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080218495 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070554803 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073611799 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074690999 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080015354 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079787832 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079763003 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078425581 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073943517 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069714149 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071660852 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078012722 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084586399 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069497163 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080101741 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068520455 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068562752 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072241878 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068348505 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080370431 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077541247 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070183418 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076752255 seconds)
  done (took 4.791397685 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089260568 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092601476 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085460816 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061986378 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067342219 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066161119 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089139041 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060133222 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060326118 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08891071 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05632352 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059903276 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063576098 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054703697 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059752033 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057285143 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062193078 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05609909 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059715307 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06003393 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058655592 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054846122 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060807843 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063293432 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059541919 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062929218 seconds)
  done (took 3.40602241 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075255185 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085379079 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089014991 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129293259 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105683913 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077824998 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078966955 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093165328 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086412164 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067502909 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071632894 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094093031 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08925064 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074459673 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068661584 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085157649 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082697381 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069755072 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074373833 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091726486 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085203965 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084510919 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093458499 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08191815 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067726398 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070518967 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072502247 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082022204 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072697151 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076953002 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07252837 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071461881 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070062897 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079304114 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071665007 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069836434 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090914615 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077294425 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078619343 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068559602 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071816484 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069250449 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090220842 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123904063 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067415927 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074838914 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07578285 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077573636 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068281434 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086648133 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079283101 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067319005 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071009372 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067458087 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067898903 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080853574 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069791007 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069819609 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076773173 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070832339 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086097082 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07219872 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08334158 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067886015 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07563742 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06749404 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068719757 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067178079 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093099798 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069459938 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109057217 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06911801 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069191398 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076402186 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075861128 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073699736 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06851331 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083139144 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078120754 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071388086 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076600632 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071233393 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070926717 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.0882236 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070265992 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069414135 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069156973 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07440199 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070744072 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069169286 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080858597 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067991616 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070839445 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084537102 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067632623 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069186631 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073801845 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072764927 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067639664 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078970372 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072886914 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068937414 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077112283 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068152452 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071109233 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078290456 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074241702 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06722261 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073089322 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074158311 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069166977 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069594578 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070825057 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069578839 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07609902 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074478862 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072343238 seconds)
  done (took 10.670565857 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.177424548 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156275866 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071269758 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145889954 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077064636 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080121032 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149039489 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09519791 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068815223 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069076476 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06947646 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110659657 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107038193 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116204022 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079513382 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068211323 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084204646 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115039337 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150857071 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144472704 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085243884 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077745307 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071138683 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070034106 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071165939 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079037987 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086177309 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077530568 seconds)
  done (took 4.480020423 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083991932 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.098168891 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075351486 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090132517 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091618897 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068633298 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07069855 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070216348 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081097571 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079672131 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068338149 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074373755 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075485154 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072674073 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070030862 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075428356 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075686064 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07032223 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071792584 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074125457 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078568468 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08175891 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072565707 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067792306 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074866196 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068411359 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065896093 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085837806 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069172069 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09144162 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066721714 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075630473 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082507408 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069496122 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06878764 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068527488 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068303564 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068303757 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070282357 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06750738 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067544186 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058315833 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067901918 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080778525 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075148368 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057163486 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073487747 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073944119 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074103589 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066069698 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071404889 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071317537 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071946749 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076222076 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073437287 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073994905 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070073526 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067036326 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076507773 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068379509 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065958036 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067181064 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073100011 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066851764 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076598881 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073137603 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067171415 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068279416 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070765884 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074810303 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068848201 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071771876 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066464655 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070533506 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073468217 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070634128 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069758677 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067245081 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068512257 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068683685 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056397392 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068677113 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054272593 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071314328 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06668585 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066890349 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06817508 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07322157 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080861899 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070304505 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074277845 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069307629 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067577662 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071624886 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061032978 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071419548 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083544018 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084162578 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06825957 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066253396 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082854111 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072817823 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06747075 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05701364 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07569539 seconds)
  done (took 9.288875225 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091925119 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069876116 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08427651 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092313169 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08728781 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075300867 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077578805 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070159242 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082549935 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074204101 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077087312 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068782338 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077719174 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077618242 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070354035 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078136769 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072717921 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083578247 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082580078 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068839657 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076366753 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081091857 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090166511 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080892431 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.07934872 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080951591 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089888873 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072697212 seconds)
  done (took 3.953966154 seconds)
done (took 38.267371981 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.782428372 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.942577465 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.767627179 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.11768669 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.844273667 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.010518929 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.945058688 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.762722828 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.973217717 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.808515192 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.02649317 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.83258523 seconds)
done (took 65.517245926 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.827778428 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.908312306 seconds)
    (2/2) benchmarking "String"...
    done (took 2.03497264 seconds)
  done (took 5.644060047 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.063340532 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.369268137 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.007271402 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.760967239 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.76706912 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.06224006 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.567456097 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.289658668 seconds)
  done (took 30.526464142 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.921788109 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.988088047 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.45200387 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.482095835 seconds)
  done (took 15.595474703 seconds)
done (took 63.443500849 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.769972107 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.824573108 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.764399763 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.744702807 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.820866413 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.7712021 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.336410816 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.8093734 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.759042567 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.748300097 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.762718529 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.200806341 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.771828915 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.763448294 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.759869854 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.768782628 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.78368049 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.471235874 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.916115393 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.775120062 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.764314013 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.82434272 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.765379379 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.771843027 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.789202919 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.762033798 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.212579562 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.768072499 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.386797059 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.765478365 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.797808634 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.879941321 seconds)
  done (took 203.509658662 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.763470757 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.727417241 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.785905132 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.805096895 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.10809611 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.949243777 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.867910094 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.288491738 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.766916127 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.786584632 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.87561049 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.762464383 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.903508713 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.708468994 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.794033329 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.856441895 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.007521004 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.918448513 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.795889901 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.931586295 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.788451978 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.852244352 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.818502525 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.861542949 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.766310575 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.838448214 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.785944254 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.77692418 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.953077518 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.973532223 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.796035316 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.794746379 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.896555422 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.63563885 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.767976033 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.772229155 seconds)
  done (took 169.186087091 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.917494532 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.764893776 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.765671838 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.765029566 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.77176928 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.766321399 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.886729143 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.887844851 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.216873013 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.794411885 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.813063898 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.577793529 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.763661399 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.833119749 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.777082996 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.765095198 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.781120722 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.793514025 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.766116396 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.767267487 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.890665551 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.776186642 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.940320529 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.773870852 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.766107441 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772543062 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.135549748 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.764454583 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.766709074 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.772609941 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.011187361 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.766234812 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.765368833 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.653690305 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.127797863 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.037428788 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.767059722 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.772506509 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.766422633 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.995888455 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.766583183 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.768524771 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.769641278 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.046266264 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.764857748 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.889337351 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.766727573 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.27446723 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.766855289 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.767964143 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.819257674 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.764764807 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.455614097 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.765937675 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.768777775 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.772358504 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.768168719 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.767136696 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.773981812 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.626104539 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.846200082 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.769760329 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.770932228 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772719786 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.769145464 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.944846026 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.766182175 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.950677494 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.819605712 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.987825627 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.887774392 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.768696092 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.838745914 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.863409503 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.768600351 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.768871848 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.769544539 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.768497441 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.850560847 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.769328478 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.912081492 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.775074339 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.770984038 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.820959758 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.840337504 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.768231257 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.687924717 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.76999219 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.769763068 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.083205547 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836943809 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.768679788 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.768735677 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.769958694 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.897790865 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.769379106 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.565304577 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.892256816 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.770897461 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.629742317 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.770749945 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.770325869 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.912765053 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.768871547 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.960038976 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.769896274 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.853729231 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.774933379 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.772181672 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.770967321 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.804474087 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.773677451 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.828039772 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.771322252 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.142951085 seconds)
  done (took 401.626042818 seconds)
done (took 777.999181629 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.442480023 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.4095633 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.531672285 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.43683058 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.413998627 seconds)
  done (took 13.943398561 seconds)
done (took 15.653465707 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.860715303 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.866010362 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.796898051 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.862596468 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.793200675 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.862127522 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.843763856 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.79827705 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.827194763 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.797970034 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.830547218 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.802403228 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.784224393 seconds)
  done (took 25.436050039 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.005352536 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.015637146 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.841468286 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.01249734 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.818123193 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.004097192 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.935568315 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.926610448 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.926674644 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.788302599 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.785137402 seconds)
  done (took 22.771691952 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.012960187 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.012612868 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.847409298 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.014160041 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.822316206 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.012095029 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.938377128 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.929212591 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.932678614 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.788535013 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.787330736 seconds)
  done (took 22.81033346 seconds)
done (took 72.729328065 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.782709031 seconds)
  done (took 3.493816958 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.802970745 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.941834142 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.789301363 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.784920485 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.78292419 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.78104763 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.784861336 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.781872172 seconds)
  done (took 16.164129636 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.779739737 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.783794854 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.779854811 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.779386141 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.77953214 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.784709061 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.78005146 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.780843967 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.782858251 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.779967208 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.781245454 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.78046912 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.781449346 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.782563132 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.78206322 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.779795817 seconds)
  done (took 30.212413102 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.781041665 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.779671389 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.779029799 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.782061047 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.780191142 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.779315433 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.780981086 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.780731594 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.779546738 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.780384811 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.780084549 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.781214109 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.779170959 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.779519367 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.781385134 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.782522632 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.779265069 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.77976328 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.785324169 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.781722413 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.781961181 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.780333672 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.781628944 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.78252759 seconds)
  done (took 44.455868029 seconds)
done (took 96.036460334 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.663280993 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.166317253 seconds)
  done (took 8.543955048 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.785948892 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.783686536 seconds)
  done (took 5.322197544 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.784287494 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.783474031 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.784707506 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.784016043 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.783870771 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.785528476 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.78407808 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.784874673 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.783768144 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.78360998 seconds)
  done (took 19.557337939 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.784695656 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.784150167 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.781068585 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.784857793 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.783600826 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.781749369 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.783454284 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.785286013 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.784589384 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.783321314 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.78663637 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.783986192 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.785799827 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.782335492 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.783964786 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.782242084 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.783239585 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.782817645 seconds)
  done (took 33.823870431 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.784774193 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.786465311 seconds)
  done (took 5.28795037 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.783296228 seconds)
    (2/7) benchmarking "second"...
    done (took 1.783371198 seconds)
    (3/7) benchmarking "month"...
    done (took 1.784066163 seconds)
    (4/7) benchmarking "year"...
    done (took 1.783721347 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.783552403 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.783114635 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.783558807 seconds)
  done (took 14.201041515 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.785796316 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.946040818 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.015136846 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.445303863 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.78899736 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.788936581 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.720016823 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.79225258 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.793277535 seconds)
  done (took 19.792232469 seconds)
done (took 108.241035954 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.605340124 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.782495739 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.135989891 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.834808202 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.837826335 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.1288759 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.820994389 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.006431814 seconds)
done (took 42.869265743 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.856855561 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.335514901 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.360555668 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.089335164 seconds)
  done (took 12.501628694 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.766152526 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.305766078 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.822260642 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.383555211 seconds)
  done (took 20.020211457 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.15788967 seconds)
    (2/2) benchmarking "read"...
    done (took 2.138750992 seconds)
  done (took 6.022996882 seconds)
done (took 47.12113685 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788719159 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.789373576 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.788538594 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.785792181 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.789422814 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.78551312 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.78601535 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.785408765 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.78968329 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.787946382 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.788288854 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.788358046 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785835715 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78685678 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784981341 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789013293 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.78460723 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.785687412 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785869514 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.788036728 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785093494 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787601688 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.786050599 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.786562255 seconds)
  done (took 44.608495586 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.789170503 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.785931822 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.787757544 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.788595121 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.785759449 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.788320026 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.789401809 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.786533161 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.789631447 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.79127256 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78685187 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.786104191 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.78929154 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.787228817 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788086004 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.786522054 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.789252286 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786635566 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790234197 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.788363834 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.792034807 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786142845 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.787481429 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790251945 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.788180434 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78721434 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.790063345 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.788334557 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790264467 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.78768876 seconds)
  done (took 55.368502214 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.795273402 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.79901159 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.789890719 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.789829803 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.791877517 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.791335428 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.792073541 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.790336373 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.792366372 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.792542146 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.792255609 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.792128282 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.790231911 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.791597303 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.790582094 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.790299642 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.791349142 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.791329197 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.791715837 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.790947295 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.792340296 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.791491925 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.791156078 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.791881362 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.790601324 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.791036246 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.791346866 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.792729901 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.792543068 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.791659192 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.790818465 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.790963148 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.791500186 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.793222516 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.791576877 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.791661315 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.797462617 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.801461186 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.791366177 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.792291148 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.792868108 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.792244511 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.791655878 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.79269385 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.793110712 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.791263973 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.791516235 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.792866431 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.792463661 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.792083448 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.794985275 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.792866171 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.793722023 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.792776961 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.79325907 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.792870324 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.793309442 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.792296788 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.794416797 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.794166234 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.795080558 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.793918932 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.794703167 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.794835597 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.794667826 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.795179154 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.793945996 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.795439651 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.793169461 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.794087459 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.796013747 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.794041938 seconds)
  done (took 130.802845535 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.79418764 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.792801079 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.79301307 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.791849066 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791817013 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.794294963 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.791381512 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796872091 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793447685 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.794924523 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795024791 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.79407933 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792138339 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.795377015 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794920671 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.793531244 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.79529512 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792917227 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.794935309 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796198891 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795716658 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.792754542 seconds)
  done (took 41.193294525 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79678001 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795339626 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.793485252 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.795785856 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.793114817 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795296524 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.795110914 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.795675586 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795998278 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792979104 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792270205 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797037623 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793375707 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793209104 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795144284 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.793200381 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798587147 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.793497692 seconds)
  done (took 34.033866218 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.793701272 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.794514798 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.797415375 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.792746877 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.794050346 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.797609448 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793658918 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.796917782 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.796912391 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.794885548 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.797830079 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795850376 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.796748907 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794698619 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79672456 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.793475441 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.797310319 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794916264 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797466175 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794996526 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.794303476 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798992135 seconds)
  done (took 41.234365346 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797730773 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.798928228 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.795081224 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.79682206 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.794857584 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.798340785 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.798644484 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.794101402 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.797723227 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.797691247 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796515652 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.797686556 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.794975282 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.795973292 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.795913478 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795604843 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.79871833 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.797712078 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798533177 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.79728613 seconds)
  done (took 37.668292596 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798315774 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799783432 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.799464017 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799106299 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799561298 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.798679748 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800277423 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.797767766 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800935898 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.80128296 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.801540021 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.799378144 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799783985 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.799809784 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799977221 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799593325 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800961874 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.80065254 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.799945492 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801103833 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.800799433 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801183463 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.802002648 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.800925795 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.801506118 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.80171298 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800356818 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800676339 seconds)
  done (took 52.137784334 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800589266 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.801404209 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.798660731 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.799759303 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.797455855 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.798006917 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.798031523 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.799188584 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801226336 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.797727184 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.801666443 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.802321701 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.801331539 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.800466562 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.802265988 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.801497628 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802018669 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.799581791 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798605789 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797715983 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.801550387 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801801298 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.802306821 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.799706686 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798700485 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.801508522 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800504661 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.79998916 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.802111288 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.799731641 seconds)
  done (took 55.739597093 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.821074158 seconds)
    (2/2) benchmarking "in"...
    done (took 1.821638692 seconds)
  done (took 5.375655201 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.799854725 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80570256 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.805198379 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.801140945 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.801538376 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.802775139 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.804035699 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801470172 seconds)
  done (took 16.155720709 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.802996783 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.80319555 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.803510639 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.804124713 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.80376821 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.804034108 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.808521311 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.804459202 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.803979851 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.803664914 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.812140518 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.813386428 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.806396866 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804874824 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.804241513 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806587375 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.804598133 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.804788569 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.805484311 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.80606167 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804479075 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.80603486 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807192216 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.802642073 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.806124627 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.815544524 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.808848911 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.804412262 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.805292887 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.807044402 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.805966199 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.802510478 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.804263305 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.805677292 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.805546587 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.804714866 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.812046968 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805760855 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.810373269 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805871891 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.806963366 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.804095321 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.807921436 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.807379406 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806276638 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.807129445 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.806444367 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.803004619 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.806204762 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.810619118 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.812826932 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.80515363 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.804521338 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81035286 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.807387304 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.813010835 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.807887027 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.810094804 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.816870728 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.815452754 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.819829015 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.81664937 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808594038 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.806997074 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.81745202 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.832779435 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.811113154 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.805170035 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.803712381 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.806683466 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.812324159 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820908833 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.818906676 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.806755798 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807769713 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.806987044 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80718848 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.807628556 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.812802027 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.809106732 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.807138098 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807311677 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.81784658 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.832997939 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.806950251 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.807861889 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.808153048 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.807084771 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.808794912 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.817622996 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.808365048 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.80741124 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.809630954 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.806288031 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.808733542 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.806743587 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.808052275 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.808054337 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.805042817 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.809435998 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.807673472 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813170696 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.821056595 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.809454571 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809944346 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.815416986 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.809312227 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808416876 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.814577579 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.809769184 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808860227 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.810013165 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.816787074 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.806359057 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812366078 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.819811409 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.809038543 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.81024589 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.808923802 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.811189014 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819756812 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.83949808 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.810060615 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.810155001 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.816079693 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.825482706 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810730478 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.813462178 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.81117019 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.807278355 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.806617921 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.811328932 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.812039467 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.809693583 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810204709 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.811126283 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.80928192 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.810705878 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.810179791 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.812171147 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.811839052 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.811110585 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.810771577 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.811501194 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.811741852 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.811634941 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.815866762 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.811290089 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.81179663 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.811675609 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.809906846 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.811262656 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.812855228 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.810822127 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.810988965 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.814052166 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.81176357 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.811788582 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812970746 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.810660408 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811780434 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.812864035 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.816565451 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.812197463 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.814697417 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.809902744 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.807383595 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.810755796 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.811717878 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.812307663 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.812918549 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.809642792 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.816238365 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.820189928 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.811215889 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.812788306 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.814993981 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812519955 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813184723 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.812922049 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.814358615 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.82309886 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.812241923 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.817964325 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.812925543 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.812914544 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.812918603 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.812168168 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.815201885 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.813799918 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.815924913 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.822411134 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82507907 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.82339639 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.814128818 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.81708719 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.81410743 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.818425153 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.815897224 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.814675921 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.81418171 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.81546401 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.813239066 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813929167 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.815692743 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.814046555 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.812795251 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.812724891 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.814398233 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.813925798 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.813544157 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.815182616 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.815158166 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.812629916 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814721972 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815233219 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.814838352 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.813086514 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.813616433 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.815202025 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.816465849 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.815755962 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.82121893 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.814859358 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816469246 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816396706 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.8163965 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.814107241 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.814787907 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.81722892 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.817448614 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820998994 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.81516419 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.81594585 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822012037 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.815944371 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.813438814 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.820844627 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.81626317 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.812518741 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.81928172 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.82621662 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.814536024 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.816627522 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.816422521 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817354515 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.816848078 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.821574938 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.813925706 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.814389627 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.81775568 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.818155231 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.812865783 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.816937765 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.81741328 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.816283963 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.819202903 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.817233558 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.815921777 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817445861 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.816132637 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.816615638 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.817513305 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819667496 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.826769007 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.821970132 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.816505171 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.817609576 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.817881925 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.821570337 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.816477926 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.817862013 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.816615888 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.831063676 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.827508947 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823351722 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.820772343 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.818177516 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.82393191 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.820463697 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.823634616 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.818298597 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820052626 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.817471912 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.819366557 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.816542274 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.81939484 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.818163736 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.818616773 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.820984514 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.82365628 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.819862027 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.819788289 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.819722308 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.818483725 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.820174852 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.818594422 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.818205875 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.821346932 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.819513285 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.817335303 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.817944108 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824140881 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819834916 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.821323764 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.819863498 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.819643099 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.818688331 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.819121202 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.820357656 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.823103864 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.829444402 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.824405023 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.830874686 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.82166003 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829824417 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.819172439 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.823518044 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.829087396 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.818091465 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.81880009 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.819792252 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.820693464 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.82673853 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.819046238 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.820023569 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.824768615 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.81938133 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.820990951 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.820866431 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.820801443 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.820865623 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.82055426 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.827673143 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.822434104 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.825629179 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.823532066 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.819571039 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.820535338 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.821393613 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.819526366 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.823619351 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.821648451 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.822400398 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.820219244 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.820857765 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.820232436 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.821585967 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.82216544 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.818700696 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.821831266 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.826393137 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.822350955 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.826355458 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.82140504 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.829066434 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.822235632 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828367426 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.821742178 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.82417466 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.820780058 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.822725861 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.824186427 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.821843501 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.824251807 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.821313822 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.82336105 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.825999258 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.822152771 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.825507709 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.822057491 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.822853901 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.822490377 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831905044 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849927579 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.824569597 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.828580586 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.820914014 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.825044259 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.829160667 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.823811297 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.823887912 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.82726157 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.837176432 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.833654804 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.823978531 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.825105172 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824154826 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823722552 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.82311021 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.824628681 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.823556089 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.824262504 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.825826604 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.826585465 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.827569843 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.824356526 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.824167643 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.825427792 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.826629759 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.834863517 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.82449322 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.826147215 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.822879215 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.82521285 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.825053067 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.823979507 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.824331292 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.825700058 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.825395191 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.826541154 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.834019605 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.83458004 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.827792417 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.824695826 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.825236024 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.826032157 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.825469946 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825480992 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.824986333 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825446994 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.826547655 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.825734274 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.82638659 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.82521621 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.828488781 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.828702362 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827547372 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83008509 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.836141257 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.826794914 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.823283868 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.825160507 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.825836796 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.825527232 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.825695248 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.833009901 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829694543 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.839778901 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.837487668 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.830913847 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.82845125 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.830298307 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.836857005 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.826156158 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.827121802 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.82756051 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.827546111 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.827969274 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.830704813 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827016898 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.833213455 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.826470602 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.826211758 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.833351362 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.828237752 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.827723601 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.829719043 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.832143191 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.828308857 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.825572134 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.826391802 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.828324348 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833618993 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.829260957 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828250297 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.828764404 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.827121644 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.828260836 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.831793939 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.827843457 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.829284491 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.824683109 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.828962672 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829619115 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.828203423 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.825004795 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.827960262 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.82755098 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.831819606 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.836964674 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.825100382 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.83045476 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.827845092 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.828354043 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828086771 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828289301 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.825638711 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.826357165 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.828669517 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829066561 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.829833944 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.831374404 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.829544285 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.830220816 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.831288011 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.831464806 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.832208343 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.842758037 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.839019553 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.827562215 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.828978566 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.83015776 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.832573707 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.830494037 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.830484253 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.830178495 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.832100685 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.829355524 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.830259896 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.830065585 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.832793664 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.847628308 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.829898977 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831286603 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.831877888 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833923012 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.830300405 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.82984604 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.830147191 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.83337045 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.833566835 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.840337549 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.831018047 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.835696657 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.831778999 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.832835091 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.835460091 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.835123295 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.840260797 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.833508704 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.830578874 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.830377055 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.836934259 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.850198811 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.831884055 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842550348 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.86498346 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.83190649 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.833179155 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.832853768 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.831230336 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.831923258 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.834148 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.832588712 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.834002758 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.833857294 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.833007387 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.833884133 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.840506019 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.834051253 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.832960957 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.835057803 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.834301767 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.833815084 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.831090909 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.833848017 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.833099349 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.833080146 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.833486716 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.833493922 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.833343738 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.846810813 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.845537889 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.83293674 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.834198677 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.831105389 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.836512129 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.837684284 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.846923147 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.842816999 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.833012081 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.833775208 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.83465477 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.8340019 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.832255735 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.833850573 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.834695986 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833816133 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.831853657 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.846704863 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844707 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.837754634 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.834259208 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.83483352 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.834926531 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.834983599 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.833963212 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834400489 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.837020058 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.836234813 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838992242 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.834468025 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.833502012 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.837522202 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.844286962 seconds)
  done (took 1087.091503604 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.833302486 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831721794 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833265196 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.832000754 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832004611 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831610912 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833323212 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.832807616 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.833201295 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.833018029 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.83468646 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832593038 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.833387541 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832403068 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833269791 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.835395259 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834244401 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.833831847 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.833822005 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833427278 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.833636008 seconds)
  done (took 40.261195505 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.836234724 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.834056663 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.833606742 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.838092845 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833904068 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.837031547 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.833688642 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836122801 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.837513658 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833333858 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.83690626 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836640755 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.833696536 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.834410794 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833378341 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835878943 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.83754006 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834819606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.837853383 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835007137 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836579423 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.834302098 seconds)
  done (took 42.145261951 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.836715101 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.836595394 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.837215757 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.836315626 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.837045984 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.834643368 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.838380449 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.838314681 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.837363544 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.838148807 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.836242196 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.838537932 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.84700946 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.845498176 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.839347549 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.836759635 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.981944507 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.838076102 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.839293377 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.838431182 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.835775483 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.84426992 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.837274793 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.835919524 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.838525978 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.839021022 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.839331238 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.838611293 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.840329098 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.841059052 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.844511737 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.839983634 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.838079076 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.840960254 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.838851066 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.840152933 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.844611853 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.839714185 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.836058474 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.838725216 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.850084634 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.864777661 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.840318272 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.845720842 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.840464624 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.838671141 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.843976028 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.850506256 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.836429856 seconds)
  done (took 92.08249412 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.838851901 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.838971389 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.837636924 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.840314951 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.841040734 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.839891347 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.840690012 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.840207332 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.838370879 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.838656368 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.841883719 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.838604712 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839404772 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.841412344 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.842707247 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.83882297 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.838819418 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.839741396 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.841379118 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.841640879 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.838942526 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.842714385 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.84193231 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.839516077 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843287253 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.838934029 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.841206932 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.842177304 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.839479545 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.839376146 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.842501443 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.84182329 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.843566593 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.840663982 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.839903753 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.842502044 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.84160623 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.840410242 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.842650588 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.84016891 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.843630971 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.842970894 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.842820868 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.842766027 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.840441855 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.838983698 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.840613397 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.840094923 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.840270995 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.843018179 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.842115555 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.841368776 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.843800566 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.840192833 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.844140285 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.843026572 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.841556489 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.842044355 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.844275606 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.841361945 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.841310305 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.843879439 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.84189628 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.844447773 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.844498579 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.843472016 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.840911432 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.845159278 seconds)
  done (took 126.978290713 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844708511 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.844624395 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845062875 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84722709 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.84543115 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.84510696 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.8440175 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.844086861 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.84518045 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.84507135 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.84482579 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.842870227 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.846621039 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.844993127 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.844364074 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.845838268 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.845172873 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.845007383 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845031954 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845431222 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.844723903 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.844576248 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.845746353 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.844770521 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845715181 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.845127618 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.84515867 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.844492538 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84431192 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.846629491 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.845295637 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.845399188 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.844312237 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.845619216 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.845596888 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.846064396 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.846713487 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84694309 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.846165319 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.846275133 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846161908 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.847714451 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.847022086 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.845836477 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.847099487 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.847631193 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.845831973 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.848293563 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.84752392 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846482045 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.846640753 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.847322403 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.847046697 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.847329325 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846970584 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.847555366 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847413866 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848828997 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848090365 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.846914664 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.846157073 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.847177917 seconds)
  done (took 116.223696114 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.847119744 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.847083865 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.844607167 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.843918009 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849167839 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.845228648 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.847506344 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.847161432 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.846538638 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.846946625 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84824675 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846559467 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844093323 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847036641 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.844543633 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845202132 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84404427 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.843958587 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849140946 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.845904341 seconds)
  done (took 38.701592215 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.846330402 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.848723601 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.845550789 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.845475469 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.849212499 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.845122506 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.849397779 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849355408 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846713832 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849753079 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.847504538 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.849073034 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847132145 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849033242 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.849688866 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.847180837 seconds)
  done (took 31.34461824 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.84917035 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.849802659 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.848852079 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.849304625 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.846479768 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.847205102 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.847632353 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.846374084 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.846508368 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.849401633 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.849654371 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.85113746 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.850225874 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.849713798 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.847617391 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.850093869 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.847912628 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.84921421 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.849223358 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.849176688 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.847855493 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.84771502 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.851782871 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.850865566 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.848764706 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.849431921 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.848501475 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.847165693 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.847178827 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.849833514 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.848616788 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.849472865 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.848467056 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.847644457 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.850433235 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.848357967 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.850664337 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.850618544 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.851963448 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.85249299 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.850985768 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.851441959 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.851190088 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.851415971 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.851077474 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.852771 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.849126215 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.850308837 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.849207774 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.849458236 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.851720997 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.853186892 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.852753988 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.852759109 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.854109599 seconds)
  done (took 103.515812552 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852845446 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.852565094 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.850468141 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.8516687 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.852182261 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.850653629 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.852493129 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.850328561 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849957264 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.852902872 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.851304062 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.854774924 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850866363 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.851997518 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.851428121 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.854306173 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.851476021 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.851176092 seconds)
  done (took 35.115059868 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.85115056 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.852661804 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.854827149 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.850962457 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.851463875 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.854137806 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851341795 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.853072971 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855261242 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.851555303 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850735945 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.853880385 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85416935 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.854605917 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.85087077 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850647221 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.853817778 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85558976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.851144995 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.852356952 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.85469129 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.854243363 seconds)
  done (took 42.546328609 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.853944011 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.854719969 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.870130989 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.87838306 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.87714464 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.896014663 seconds)
  done (took 13.0142054 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852615555 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85568562 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853627587 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855788984 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854469102 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852979125 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852465102 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853668973 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855447289 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853692297 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853470294 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85673441 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856844775 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854504762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857357029 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856795692 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854046168 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853697589 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855599319 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857246301 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854487099 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856778729 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854235459 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854889745 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855129747 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854508905 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856831862 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85582295 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854020657 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857358192 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857438772 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855292131 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857249975 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853937203 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856468606 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856824251 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854707406 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85716724 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858557915 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852975034 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.856140291 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857141697 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857239104 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853691324 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856891589 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853815507 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853525113 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853414975 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855232828 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85433956 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855421807 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852318128 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856929147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85400064 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858658459 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856414189 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854757906 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851157603 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854697395 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853295872 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851949819 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856018165 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856491009 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854181403 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856921527 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852679268 seconds)
  done (took 124.224123652 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852717355 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.851293808 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855627259 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854673177 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854456916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850585447 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851573618 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853648822 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853389647 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847664901 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849076983 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847879469 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847378586 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847164801 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847114531 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846110503 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845981569 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846356799 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84696366 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849467105 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845235485 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846179617 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845096357 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845394375 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845989878 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850195061 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845120195 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844081494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845613598 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845842107 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847025366 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844168032 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843900856 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.844022962 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845021313 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844857827 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844188611 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845434305 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843974167 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847071386 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845226045 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847967136 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845136624 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845702601 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845127751 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845472564 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847514308 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844893119 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844762849 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844632253 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844962815 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845493126 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844996521 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845084922 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845983882 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845675249 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845458191 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846260399 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84491126 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848338752 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845734709 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845787235 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849123569 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846067995 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846390954 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846902103 seconds)
  done (took 123.689922532 seconds)
done (took 2532.972502436 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.88874867 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.853863346 seconds)
  done (took 15.522171802 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.011678739 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.963046997 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.848795752 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.883196959 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.847771283 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.867505917 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.864881039 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.848387221 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.848190016 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.848110268 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.849284687 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.033770629 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.846480791 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.850125793 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.848216604 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.940731189 seconds)
  done (took 51.98579676 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.850899113 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.852447716 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.862771613 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.85382609 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.851191863 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.863235986 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.885473851 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.856728127 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.88621457 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.864898893 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.924664566 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.864152742 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.851564466 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.901442517 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.86542871 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.867484181 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.940501775 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.930407529 seconds)
  done (took 35.555406314 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.930874572 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.864989323 seconds)
  done (took 10.584959556 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.8495873 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.849858829 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.844116411 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.858725885 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.861476935 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.895201517 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.852344458 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.862870114 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.839500896 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.873215987 seconds)
  done (took 70.368724971 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.846605717 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.842377003 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.841601137 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.841994311 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.833025136 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.838640929 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.840503036 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.837188135 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.53565839 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.876868937 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.847193655 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.846726155 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.840325781 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.843586434 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.83960721 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.864307286 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.969201434 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.839899156 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.837585728 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.847274289 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.841643929 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.9042382 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.855767908 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.842168454 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.87147342 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.538498205 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.84992571 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.84675754 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.966277878 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.838475787 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.840138891 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.841285362 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.84464811 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.228321888 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.171129481 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.839987395 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.849404831 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.8480181 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.837869892 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.966188729 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.841474183 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.845977105 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.832245048 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.149825508 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.934153335 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.882742942 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.199925729 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.843737268 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.839239312 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.867772348 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.841512389 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.840247388 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.851872379 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.355363546 seconds)
  done (took 131.233949108 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.83358108 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.124919919 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.984409151 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.832885612 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108218284 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037945295 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.782701036 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87943515 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.831643295 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.031804335 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.994286471 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.938987878 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833412512 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.827911254 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.829214001 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.829344002 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.989660229 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.898001343 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.832179181 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.827144067 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856928308 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.036621017 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.957511062 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.828774059 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.85120103 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.04042959 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.950355823 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.936969266 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.111396535 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.826670753 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894831254 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.828881078 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.827936234 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.824540095 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.983210121 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.925289929 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918237336 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.827833528 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826049615 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.825323989 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.490329875 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.022660449 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.927481617 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.969157845 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.022453581 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.031035504 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.471786049 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.825104773 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.463700263 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.98768939 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.039910808 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.033535254 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.950861744 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.827144871 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.053158686 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.824254502 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.823023886 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.063273586 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975835879 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.931489217 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827259436 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.822415631 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.82213663 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.068496662 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.825526457 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.92215335 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.827647457 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.822702885 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.923502368 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.932777765 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.966225967 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038498784 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.857377098 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.676380084 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.335134362 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.037450394 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.891817625 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058960036 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.824234136 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822010696 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907823917 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.572782967 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.981388379 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072157441 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.042307716 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857319147 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.417409236 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.820460766 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.015463283 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.008064907 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.016333017 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.030065776 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.972925014 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.018951148 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.820008908 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.818844 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.059197404 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.958405809 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.822082548 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.177543388 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053317688 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.405795434 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.840850966 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114757255 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954191796 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.202856267 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.44391213 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.819513763 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.986777215 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.858919728 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.821117661 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818387901 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.009592851 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.626374787 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.818070111 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.337706361 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.886894403 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.822653207 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.021977069 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.826426916 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028655825 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.82616145 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.055431465 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.62952109 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853809527 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.993826595 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.029137782 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.618654903 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.065931352 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.067944426 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.940162717 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.044079413 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.411613715 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.819546527 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095890074 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.822276582 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.819579522 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.987913074 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.821290911 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.969309988 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.824155544 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.050217862 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846816331 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975773517 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.823875378 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.053707342 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.857807389 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874274465 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.830339681 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.952281833 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.82931803 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.738623196 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.978481165 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.825001617 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.822747051 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.277539689 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.824097769 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.965966294 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.05328888 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850626118 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890374792 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.348598821 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.820164157 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909540658 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.848506851 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.243747668 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.825788637 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.979024831 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.768818927 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.247839941 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.821614449 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.065907817 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.007017411 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.825944421 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.824582917 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.563438258 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.516739686 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.821027175 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.980981079 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.22949557 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.47154439 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0247707 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828103406 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950389062 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.821525281 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.892427106 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.169722744 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.818661502 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.823048632 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.820602334 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.817254135 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.825578877 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.030752283 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.852375441 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.33355334 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.957459907 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039150464 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.135798467 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.045319283 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.866127447 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.827038815 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.085896979 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.824998148 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.889817392 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.82417153 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.847966533 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0594538 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.824581876 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.03428292 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07575275 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.71893951 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.873736563 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.82518604 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.820720621 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.821008798 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.970911619 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918858851 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.823462078 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.821989199 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.933012685 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.948859572 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.017893333 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.416875101 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.000311707 seconds)
  done (took 888.629883965 seconds)
done (took 1205.6592135 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.820033971 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.822735078 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.808477264 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.821584692 seconds)
  done (took 29.027149638 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.826767931 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.822631642 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.826966132 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.826277276 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.827375042 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.826465211 seconds)
  done (took 12.711502474 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.896227364 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.822394882 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.821400909 seconds)
  done (took 21.296546746 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.89856161 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.232197509 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.930535112 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.264628409 seconds)
  done (took 10.08295097 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.827921795 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.828310049 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.829285641 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.828588442 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.829262528 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.830216897 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.828056052 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.828341229 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.83037626 seconds)
  done (took 18.220205103 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.272236433 seconds)
done (took 97.366574037 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.280315302 seconds)
    (2/309) benchmarking ("sort", Int8, false)...
    done (took 4.862766986 seconds)
    (3/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.931650418 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.909098647 seconds)
    (5/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.069196413 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.005687984 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.858434612 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.86758246 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.070489731 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.943536466 seconds)
    (11/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.972835775 seconds)
    (12/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.122014716 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.83008846 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.830514759 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.215436535 seconds)
    (16/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.047057224 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.150308906 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.787417654 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.737180994 seconds)
    (20/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.199483226 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.979678499 seconds)
    (22/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.256035988 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.821269884 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.007101465 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.06926758 seconds)
    (26/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.963652496 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.196645849 seconds)
    (28/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.960238547 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.817414984 seconds)
    (30/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.910529971 seconds)
    (31/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.924706433 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.935415736 seconds)
    (33/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.814298291 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.088111818 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.045948101 seconds)
    (36/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.233874921 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.935237583 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.101854188 seconds)
    (39/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.975833889 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.833911871 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.123727568 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.857483977 seconds)
    (43/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.024670149 seconds)
    (44/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.429909455 seconds)
    (45/309) benchmarking ("sort", Float32, false)...
    done (took 5.608592255 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.977712723 seconds)
    (47/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.034214123 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.137531791 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.921596293 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.940965132 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.091196222 seconds)
    (52/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.943623536 seconds)
    (53/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.84361662 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.153451839 seconds)
    (55/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.844206069 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.830427154 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.859417203 seconds)
    (58/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.662228159 seconds)
    (59/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.185108759 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.100620684 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.891583776 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.877020425 seconds)
    (63/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.985719339 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.122211504 seconds)
    (65/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.237420537 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.836950147 seconds)
    (67/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.957268244 seconds)
    (68/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.902683906 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.20373119 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.35455576 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.840735918 seconds)
    (72/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.82028167 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.974403136 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.077883856 seconds)
    (75/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.028960866 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.134389354 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.86151051 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.137526902 seconds)
    (79/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.821509332 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.812480211 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.528453636 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.192458977 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.510057662 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.368455971 seconds)
    (85/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.975431296 seconds)
    (86/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.966508089 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.35214714 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.83849195 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.836278883 seconds)
    (90/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.788523272 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.958543388 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.083651476 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.430909166 seconds)
    (94/309) benchmarking ("sort", BigInt, false)...
    done (took 6.837163404 seconds)
    (95/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.426617537 seconds)
    (96/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.339921953 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.901518445 seconds)
    (98/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.861277906 seconds)
    (99/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.405875031 seconds)
    (100/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.823388425 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 8.071631669 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.826142049 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.585081877 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.82450283 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.871312016 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.878993621 seconds)
    (107/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.930952431 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.090669311 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.862829289 seconds)
    (110/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.853503096 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.201754508 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.042323104 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.059361812 seconds)
    (114/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.928614314 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.836601732 seconds)
    (116/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.768193914 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.841468836 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.916260676 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.345107849 seconds)
    (120/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.162389367 seconds)
    (121/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.866414106 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.836799999 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.542174573 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.827269561 seconds)
    (125/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.18982143 seconds)
    (126/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.150928255 seconds)
    (127/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.866631073 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.286171206 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.864965519 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.934041107 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.212198606 seconds)
    (132/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.860546906 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.118201676 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.887154983 seconds)
    (135/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.422178343 seconds)
    (136/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.929339328 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.021025229 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.062096426 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.09823743 seconds)
    (140/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.375180109 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.899758519 seconds)
    (142/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.988931807 seconds)
    (143/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.183540931 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.94531005 seconds)
    (145/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.948466515 seconds)
    (146/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.924798768 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.839165679 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.825911622 seconds)
    (149/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.806020655 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.173270614 seconds)
    (151/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.25044851 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.867199101 seconds)
    (153/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.950185893 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.925903061 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.925914295 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.865846505 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.913338997 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.841480477 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.008172906 seconds)
    (160/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.146920759 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.878705813 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.86313112 seconds)
    (163/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.250312588 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.0357067 seconds)
    (165/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.124610719 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.22551416 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.855519002 seconds)
    (168/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.9809906 seconds)
    (169/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.220735382 seconds)
    (170/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.015892528 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.031228939 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.844210727 seconds)
    (173/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.381643554 seconds)
    (174/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.979085007 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.014128538 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.186455582 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.140907155 seconds)
    (178/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.452769165 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.640599454 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.949456991 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.39452493 seconds)
    (182/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.00047436 seconds)
    (183/309) benchmarking ("sort", Float64, false)...
    done (took 5.6526555 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.42866522 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.191631563 seconds)
    (186/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.762250354 seconds)
    (187/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.42149325 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.978985287 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.04029551 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.842913617 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.012539098 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.077270907 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.829126946 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.911512516 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.841555936 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.82062374 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.238732211 seconds)
    (198/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.539999232 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.671870236 seconds)
    (200/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.888401242 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.856925169 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.19306518 seconds)
    (203/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.179143997 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.148483639 seconds)
    (205/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.158249156 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.901918309 seconds)
    (207/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.721179843 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.134188127 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.68793953 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.989718319 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.780965998 seconds)
    (212/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.979532256 seconds)
    (213/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.835984174 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.891318664 seconds)
    (215/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.967161453 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.188051136 seconds)
    (217/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.865907721 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.636575211 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.057621328 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.843217451 seconds)
    (221/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.174997176 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.846712401 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.288040426 seconds)
    (224/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.958770762 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.869764294 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.521115547 seconds)
    (227/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.040816258 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.139670673 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.140566059 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.915549763 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.529740444 seconds)
    (232/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.025149076 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.892783455 seconds)
    (234/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.945359913 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.847730456 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.887973415 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.507741298 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.910394112 seconds)
    (239/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.023528662 seconds)
    (240/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.165711393 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.863128866 seconds)
    (242/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.830805449 seconds)
    (243/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.979540716 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.737896801 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.448430291 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.884389263 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.853589477 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.945809648 seconds)
    (249/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.02070414 seconds)
    (250/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.145948712 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.846629711 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.727994481 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.98898318 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.951889468 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.825422025 seconds)
    (256/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.965095517 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.016177801 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.453063253 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.952913976 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.836013104 seconds)
    (261/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.518611599 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.500938019 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.882769811 seconds)
    (264/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.040977973 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.878937377 seconds)
    (266/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.855105851 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.850306307 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.928412634 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.2446718 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.238374101 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.7770574 seconds)
    (272/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.953420889 seconds)
    (273/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.299296706 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.966019941 seconds)
    (275/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.833718465 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.867805996 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.240799205 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.862334851 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.857413004 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.786409843 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.341432497 seconds)
    (282/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.075243073 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.492421276 seconds)
    (284/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.000973836 seconds)
    (285/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.885586155 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.03803957 seconds)
    (287/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.194397636 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.93681336 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.832261484 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.302180685 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.895725597 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.727212741 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.948399368 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.634288757 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.094363668 seconds)
    (296/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.101049081 seconds)
    (297/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.072011609 seconds)
    (298/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.45570822 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.009745993 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.977351829 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.889747744 seconds)
    (302/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.926345433 seconds)
    (303/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.917625889 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.711136265 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.914376328 seconds)
    (306/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.848953008 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.227483683 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.876263831 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.835067051 seconds)
  done (took 1008.798244318 seconds)
done (took 1010.852334741 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.883620792 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.874754816 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.859223905 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.882403587 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.974450392 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.889696756 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.871694259 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.863055118 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.908532445 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.911984033 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.861325394 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.886531669 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.86107622 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.860104309 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.859441708 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.876532467 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.17064265 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.888511112 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.878841878 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.870330628 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.879482772 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.859914312 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.90989895 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.888952518 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.864920966 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.865139002 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.863195982 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.879858142 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.970737188 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.864017383 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.864218707 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.872246563 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.169336446 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.887571841 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.857175343 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.880883902 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.871633751 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.871544303 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.863677253 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.891632069 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.31106016 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.867981739 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.864708535 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.864161022 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.863409675 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.867432085 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.865707562 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.868111126 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875735471 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.876357335 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.305976681 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.880830741 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.864755815 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.863587114 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.874875309 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.861816898 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.866020262 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.879989784 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.882326202 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.876343816 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.160462976 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.893395853 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.867899281 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.880790517 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.870817791 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.343905151 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.863822578 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.86728901 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.312015427 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.874561496 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.346155416 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.877957847 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.86851944 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.877108941 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.896397072 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.17300996 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.887062457 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.865213216 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.872844259 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.864175015 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.873979029 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.876606169 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.871355617 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.865874906 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.879380877 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.894355914 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.876721452 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.865033571 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.875456025 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.884600921 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.872622926 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.87629611 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.868480466 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.861904926 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.874696429 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.866658889 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.869124022 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.870080018 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.871326301 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.876834145 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.310600861 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.888680312 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.862557739 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.865020075 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.867830479 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.879923197 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.311303349 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.87035535 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.888246911 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.912000307 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.870257127 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.164486023 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.898632475 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881035542 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.877465603 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.870764926 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.86419211 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.162610004 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.337989633 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.886403106 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.868139763 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.864044683 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884627321 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.869384022 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.866322012 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.173657016 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.892520799 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.882040529 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.984942265 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.876931772 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.897868034 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.86432846 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.870277805 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.895107316 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.881974645 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.898810518 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.869377827 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.882515576 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.883034139 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.865081964 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.879275424 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.879689139 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.869447109 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.873686697 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.861706408 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.900856972 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881747491 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.880291889 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.891379956 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.987695552 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.867448548 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.1634008 seconds)
done (took 293.274050846 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.944333262 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.855231405 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.972747136 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.862729149 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.960370125 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.949031428 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.859541571 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.861806334 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.861771378 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.24137215 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.861752624 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.870753765 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.854309506 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.863814075 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.959593063 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.863525505 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.862036336 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.208028691 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.863030265 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.947781912 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.860501781 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.860315529 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.86578272 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.24271684 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.86289401 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.863273774 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.935340196 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.863903673 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.209006486 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.8625421 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.862848267 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.209807523 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.955061662 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.88292861 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.876350154 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.874663081 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.948818904 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.869747961 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.945349201 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.958955076 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.965690899 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.903258321 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.859966491 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.858550843 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.868752962 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.865822176 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.86383918 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.893079157 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.856410958 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.862855723 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.209168884 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.875698945 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.873461491 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.862983749 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.862686467 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.887064354 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.862776486 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.866858401 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.970468779 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.868674236 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.929765857 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.245112698 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.245535864 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.866049848 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.861204654 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.863111762 seconds)
  done (took 184.075968183 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.933873846 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.941135623 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.933398201 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.870092513 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.348134847 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.938243703 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.87279361 seconds)
  done (took 15.62787956 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.872022545 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.866339529 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.917141566 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.915418986 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.86502371 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.017249309 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.866568574 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.876621936 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.864997219 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.918971595 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.869933649 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.867567846 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.872590477 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.866768577 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.914728408 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.878400982 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.983344503 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.867725444 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.868657777 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.023407958 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8666859 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.873464741 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.920157053 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.879472087 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.86780858 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.875240992 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.458588184 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.868384075 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.863584504 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.867413177 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.864138386 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.912792749 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.867380182 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.865630858 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.865482784 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.982487181 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.866843645 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.86329798 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.865456364 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.865346924 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.868775411 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.86889889 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.869100229 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.864756203 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.868806218 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.893316713 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.868878187 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.869056026 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.865356446 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.868762954 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.918612543 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.869592585 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.868400027 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.866214987 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.924680941 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.876164182 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.869169128 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.86769935 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.869943196 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.865721032 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.025660586 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.916425861 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.869540434 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.916777933 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.869597382 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.869436848 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.867407559 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.868381593 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.927741183 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.868832649 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.917356536 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.868295272 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.026972682 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.895414358 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.870713926 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.872070857 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.87270278 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.869344648 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.865406243 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.876105139 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.868132947 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.873018989 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.878122729 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.868946733 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.867616501 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.982954414 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.983034765 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.866395483 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.884374751 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.877583314 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.86863782 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.922373758 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.868693767 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.86641873 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.925349296 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.985813436 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.927209955 seconds)
  done (took 205.699260452 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.874828105 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.879071891 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.872028547 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.889679687 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.870589105 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.871001534 seconds)
  done (took 13.053594268 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.873271297 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.872551125 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.870401819 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.8718222 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.87090854 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.873581755 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.873139547 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.87382773 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.874594845 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.872339609 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.870667599 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.871194415 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.87276946 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.87130432 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.871902315 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.87268847 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.872543256 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.869662283 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.87158574 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.872813212 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.026696159 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.873782343 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.874226664 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.874133242 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.876239805 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.871990655 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.880556369 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.873265679 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.872873091 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.881360793 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.876386936 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.874686679 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.872789931 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.879256352 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.876728825 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.874086351 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.875339093 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.87368635 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.870935779 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.874965085 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.877515318 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.873304496 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.874582923 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.877040068 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.875277149 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.879073988 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.880281061 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.884629571 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.874604295 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.876414804 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.876591478 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.874084411 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.874901501 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.874654678 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.875470256 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.879537003 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.87863641 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.874100714 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.877232235 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.875608978 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.875832403 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.873570689 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.874036243 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.881104142 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.872814919 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.875090938 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.876777955 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.879435802 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.874069347 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.875011333 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.876689478 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.872371594 seconds)
  done (took 137.939655671 seconds)
done (took 558.203128248 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.168185549 seconds)
  done (took 8.96915246 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.877230133 seconds)
  done (took 8.778696957 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.42009749 seconds)
  done (took 10.222411125 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.870799301 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.876583697 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.879666389 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.871002854 seconds)
  done (took 29.310751301 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.915762933 seconds)
  done (took 8.719035901 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.882188914 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.865690091 seconds)
  done (took 15.583441042 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.961183562 seconds)
  done (took 8.764482361 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.930194004 seconds)
  done (took 8.740365391 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.888227564 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.871168207 seconds)
  done (took 15.576030926 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.854235539 seconds)
  done (took 8.656205123 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.522908822 seconds)
  done (took 11.335711715 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.879593406 seconds)
  done (took 8.695513345 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.880064126 seconds)
  done (took 8.683797195 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.005403156 seconds)
  done (took 9.807465834 seconds)
done (took 163.642488311 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.873230492 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.869245 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.868627202 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.868745221 seconds)
  done (took 29.281689597 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.911196723 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.909684764 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.929645571 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.919204296 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.914653055 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.910250329 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.901165691 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.904441333 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.920346453 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.914550828 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.911953826 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.913545579 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.911508598 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.903221542 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.913632049 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.911743336 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.921099104 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.912435509 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.905026413 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.914861183 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.877070981 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.922673218 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.914243788 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.877348609 seconds)
  done (took 47.649671629 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.077761622 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.95181899 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.031965345 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.929942486 seconds)
  done (took 9.795448799 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.928336069 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.931554986 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.941317756 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.981927579 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.007274025 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.938459628 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.902042567 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.899224545 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.886157471 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.931665262 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.007574987 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.945941908 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.018931644 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.878482501 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.058543637 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.878562412 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.879566944 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.931487783 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.982426024 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.010334156 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.880538849 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.930437201 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.93783355 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.947483276 seconds)
  done (took 48.441793983 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.87828866 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.887195318 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.884628182 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.87819769 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.879519994 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.878201273 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.88457786 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.881640076 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.899075421 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.880046493 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.877993055 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.878712921 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.878808854 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.879192812 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.877517237 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.89095299 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.892380174 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.878950226 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.882927741 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.885542221 seconds)
  done (took 39.459668452 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.873984754 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.727152533 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.226003302 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.128590687 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.873545347 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.877124298 seconds)
  done (took 31.512632197 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.890065989 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.886629825 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.879520568 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.93902749 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.015801025 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.885390249 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.879730687 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.891836664 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.924776381 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.943234387 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.897287813 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.908285123 seconds)
  done (took 24.751377894 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.875558599 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.873450646 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.874381311 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.892662013 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.891515151 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.887407479 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.888079314 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.872703914 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.891694852 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.900074626 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.889795149 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.892419461 seconds)
  done (took 44.441727338 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964809918 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.91811953 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.910134054 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.558532481 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252993661 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085656851 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.48261173 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.220726087 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.878394641 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152036614 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.93930704 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976206149 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.133046364 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.376672633 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907633319 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.34467879 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169754842 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081372786 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901094077 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.555435811 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938257476 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.055637752 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.680461509 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933845721 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087870591 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.006764687 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.139486924 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.877183182 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008071858 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911982371 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888420524 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.878190571 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1507601 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253019587 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98012351 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887488461 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.496148225 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.589801323 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.86276883 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.637240701 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.585123914 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.000406972 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888854352 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877835449 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81274915 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.038010624 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263044445 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.881429232 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.590884072 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.878195688 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889029147 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973460269 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.881351801 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.697520507 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799335099 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.878056041 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.877125282 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885844964 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454640709 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.993299357 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.066485229 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.851855733 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.972275495 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.655368492 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266723918 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.026875773 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.883963025 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.882981794 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814483616 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.559343182 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932518603 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208764494 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.899842193 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53131357 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176597299 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.005241502 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.820738306 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149224328 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.412409524 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.851003896 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109360633 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879373713 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817013248 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.826719188 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.817291316 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141341726 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915789317 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.635213552 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91857696 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.221840791 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.890359735 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901906707 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906593531 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106131589 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.764269474 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881699834 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.713953962 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025276105 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901851112 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224519436 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814643589 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.882975847 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139993526 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.09542949 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.96269001 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.380721534 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042249465 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.441169007 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.933138943 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.047760032 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929084429 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.148244471 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939174908 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006614054 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935611662 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.88256108 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188313485 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.473609013 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.017776461 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.950060882 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006881769 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.210751356 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906348532 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967253648 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893902969 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88363116 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.647994366 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.432702871 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.883954833 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.886376128 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.964512755 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929845824 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.884184182 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832261773 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.509416177 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.93990872 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.898064588 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.107360983 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.459972659 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196295715 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81741595 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213964014 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937903743 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.105517442 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.523560823 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.957814795 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14567752 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.972047857 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.003747999 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932376187 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904245782 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983819663 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907550946 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.046366777 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.176453903 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.889096918 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.889718911 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.661127067 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.915981151 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884761899 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.889846963 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.6352304 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153526794 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906534143 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.890366237 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.774534362 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.897072686 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95021535 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890150266 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895353184 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.426127163 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.595032899 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.890842663 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.478441307 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116088744 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897871701 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.618724411 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99914264 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.97591549 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.153561641 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943518697 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.819947537 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.596295842 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.578956619 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886909645 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821976414 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.885539323 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895215372 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898018392 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.083494579 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157444729 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926824537 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.556167828 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.925758038 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897584085 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.892629506 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885825281 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.398743325 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.999950019 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.080208086 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933095156 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033832454 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.901963785 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82296798 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.892607631 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892499034 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.887774944 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.888625099 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922669019 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.577703308 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267235767 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151062885 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.497542325 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900774178 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.594357191 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.944708226 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.887425604 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.729590468 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.062125684 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.924255621 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903635806 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.899612029 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.568150613 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.58106278 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45683104 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192272031 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189820591 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315859162 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.104063894 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.916155234 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.235720734 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822884007 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.446708073 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947806273 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235549021 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832745014 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978449519 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.52738253 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228548555 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902427848 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117087171 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270740472 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.629535085 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031407162 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101989 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92374001 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.040001518 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85202985 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.174521171 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034459229 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.572746214 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09367651 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234351157 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.574819509 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.014048296 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.891089706 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.56475582 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972658957 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.602225737 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.064526394 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.077525371 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.867358082 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372929565 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895193489 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.118632557 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252256053 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.067449435 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.017167305 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827205773 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.904228495 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.903466862 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.892817676 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.890615169 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.769342808 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.144166252 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903936869 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827030619 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.011303277 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179542759 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.793361528 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.898037136 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893930158 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188840057 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.436516763 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058811771 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.007486415 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.412596451 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902171371 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82797867 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827933654 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.586964737 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900048848 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.87030898 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105997989 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.992360022 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842349787 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.980764054 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972997236 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150513136 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.906246045 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160907097 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167131644 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.591185222 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917555609 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.993754919 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.590442283 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.999397962 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.895036199 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12901526 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.648374305 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.119197382 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.931126791 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.844868942 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.892751745 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108109874 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.895717103 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.829320907 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120039236 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.614312741 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.920862421 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198002569 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964320443 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.824489156 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.939081008 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.98419944 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907345625 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976063485 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906252796 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.906620104 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907301422 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946149333 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.832460852 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.016792984 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.911363993 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990267222 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.027729397 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.417529679 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.903716907 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16646288 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24718104 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.213084641 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954116877 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894616474 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895924758 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830759194 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044098927 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.122465361 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170214726 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.029431618 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.01365555 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921240953 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.587996854 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.120617802 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137640084 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169524509 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.791797611 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.411147766 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.935992219 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.898201219 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906463098 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.109618916 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109167579 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196599569 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038736815 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.989137433 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267338267 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171304991 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.898648651 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897617594 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.48865921 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.937216907 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.587242237 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.938834715 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.835052423 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171757244 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909820634 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274840913 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.918828562 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.055732974 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.672288582 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620828544 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.188331315 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.879573658 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.957092365 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167967935 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274503859 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209762135 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964567176 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91006706 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.009491224 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047413824 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.77400389 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.897199467 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900426357 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951679927 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.610891132 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.910314572 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172843339 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209965345 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.895237935 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.799046692 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921377763 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.910631946 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.124697539 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1666354 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150324582 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907846485 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.907336131 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.716658404 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171531442 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959004383 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834306745 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.904319049 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996009592 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.147018645 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921423973 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.352470328 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.612958231 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174702043 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.900092823 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923070508 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.068103221 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256763749 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220081638 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.435026258 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113416137 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.487565803 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.488794275 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200586448 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.906440721 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.073496859 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203726015 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.906470198 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.990201674 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93895808 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.167973835 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213071815 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.907866122 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582245507 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.870232426 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.242874362 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459085866 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839264326 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911221974 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.962411437 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.902883268 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.03300431 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912888498 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.795285323 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.07000082 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.683635692 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182033796 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.906192101 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.886931473 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.652379787 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.198524317 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935185471 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046502611 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902661199 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.577366249 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.255972728 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.160336518 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.99706894 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.909011423 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.907531275 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903025093 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.891365736 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.098612957 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.099907825 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18842372 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.022098547 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.938895023 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907591028 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.120785268 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115305668 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.810216544 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038668253 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.002735774 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945011116 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.809516234 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.411310723 seconds)
  done (took 1684.121592594 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912372637 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.9374042 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.955749024 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.982361756 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955652111 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.972865488 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.919399991 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.946909977 seconds)
  done (took 57.420449449 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.903826999 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.101630212 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.914326883 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.905877981 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.913177456 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.908105225 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.073515252 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.914221422 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.913243522 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.916167896 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.906373042 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.904130104 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.228316606 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.928130399 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.904705682 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.888495299 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.913612915 seconds)
  done (took 74.992402895 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.907408401 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.023243144 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.938117528 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.919155576 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.875805531 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.90938126 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.808135429 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.937951732 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.905445153 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.135625918 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.54274809 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.918680437 seconds)
  done (took 90.661672893 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.91670475 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.913328323 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.913637609 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.910248493 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.91277501 seconds)
  done (took 11.40865411 seconds)
done (took 2195.766099312 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.166946777 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.126368964 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.139249903 seconds)
  done (took 6.103883513 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.052333817 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.099591094 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.217891252 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.197729266 seconds)
  done (took 10.406315663 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.192134136 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.290783141 seconds)
  done (took 6.319477329 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.309225347 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.909857153 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.286992976 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.904027726 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.905069425 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.9055288 seconds)
  done (took 22.555294422 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.906368806 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.908280757 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.907116364 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.908990935 seconds)
  done (took 9.46690112 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.887399837 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.583572267 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.888733034 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.902512886 seconds)
  done (took 21.098674928 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.654259777 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.676665673 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.650816369 seconds)
  done (took 9.81710154 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.376258669 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.796974463 seconds)
  done (took 9.011196001 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.167318221 seconds)
  done (took 4.004485372 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.039045182 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.21522509 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.383367845 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.417174281 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.496505762 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.59407563 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.227543032 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.150579672 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.307742716 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.347568015 seconds)
  done (took 25.015409182 seconds)
done (took 139.309908921 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.288156001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.907053951 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.107118106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.242523705 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.132939342 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.107343259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.11470461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.233433741 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.757072553 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.749621565 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.2445219 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.133033317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.270376251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.145543597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.267690196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.146162793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.131612686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.304926032 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.944073602 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.18032656 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.115836569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.884976159 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.087341762 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.89942799 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.13203309 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.05910099 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.463361298 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.147275918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.096992151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.473421594 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.061448667 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.328526341 seconds)
  done (took 172.9958593 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.672821426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.906564462 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.90424542 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.905748253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.382183392 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.909553982 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.90605232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.905539821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.172995169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.164203279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.915980754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.40736126 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.923978216 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.904695098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.915941877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.915334924 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.291042793 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.75574698 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.91766463 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.922639399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.922833014 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.319232017 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.92481085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.357440923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.303139783 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.924066429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.906690033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.924774899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.905140665 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.89716955 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.915034114 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.906452375 seconds)
  done (took 209.747617614 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.906524552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.907819815 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.904637231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.908420982 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.90617993 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.910151619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.909727919 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.906462187 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.488842631 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.478282228 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.916401912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.915316748 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.911448325 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.907780597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.919040965 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.908073699 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.908136497 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.91408335 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.907288903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.916721221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.922891917 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.632479065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.925699551 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.649308574 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.931344472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.923613248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.909286279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.924613176 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.927454564 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.926484275 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.924575687 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.908733244 seconds)
  done (took 221.71040463 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.111068848 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.916205443 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.916314651 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.867423321 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.915323054 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.915538838 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.910648487 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.112166776 seconds)
  done (took 19.533444617 seconds)
done (took 625.834489926 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.410870389 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.24994266 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.099079325 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.941157035 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.188860702 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.977508302 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.938627904 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.999917454 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.674486873 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.007107583 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.628357332 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.951946588 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.724761815 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.960034096 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.067491015 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.99413464 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.474523183 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.558728386 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.115015556 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.013274876 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.116051548 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.899293047 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.010872618 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.704911335 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.743148315 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.943222439 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.132907026 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.477396018 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.946788156 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.100503692 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.718089268 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.339088435 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.946708564 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.934823642 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.985935049 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.970707244 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.308167324 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.944625968 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.069114958 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.700352238 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.005802522 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.561541924 seconds)
  done (took 105.378330336 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.908434527 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.906063659 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.903924048 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.905157994 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.905689792 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.906026752 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.905128844 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.904203562 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.905095031 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.906688147 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.906276338 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.907981328 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.905562045 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.908473317 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.905621503 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.906221502 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.90615176 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.908188119 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.906741027 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.907609675 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.908020172 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.904565523 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.910519126 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.906975891 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.908279276 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.909503315 seconds)
  done (took 51.432474391 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.921248281 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.066743911 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.146278628 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.935850251 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.920037487 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.9220444 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.938287983 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.924877229 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.920675296 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.923010985 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.015359486 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.926318738 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.942320196 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.146839756 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.93454194 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.92353601 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.92009452 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.919974161 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.072912027 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.938382982 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.941558629 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.928309298 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.941162646 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.938383203 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.920997154 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.925479506 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.92694931 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.391971254 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.931453646 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.017690087 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.963264052 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.945474071 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.358368182 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.155647371 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.974738147 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.926510964 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.922176551 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.019037181 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.929171839 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.923374079 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.941869176 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.92865271 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.146641645 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.423816533 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.935870174 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.924921892 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.40091279 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.02878597 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.962578616 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.933065555 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.150012192 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.937573525 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.923928802 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.922898833 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.961959871 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.931956204 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.926572367 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.28345008 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.934456658 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.942146894 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.926819245 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.922708408 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.080657936 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.929702705 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.073887376 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.933827229 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.933801366 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.923858016 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.147983865 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.939962969 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.430080899 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.933994324 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.923244351 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.017535418 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.071244097 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.430631042 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.936163839 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.084528246 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.376341753 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.944993764 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.929659017 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.380221241 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.95058251 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.929381399 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.927151671 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.92574242 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.925279799 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.966999951 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.939671397 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.356378675 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.427619192 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.296119655 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.952074612 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.940921067 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.927864274 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.289721387 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.936327631 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.92832365 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.14321782 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.443064254 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.936490921 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.933881216 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.410024977 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.938697267 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.946038179 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.933892986 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.153111781 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.93842629 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.969674209 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.924950262 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.933051609 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.92712851 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.94629662 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.933310107 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.929347662 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.401199079 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.037599848 seconds)
  done (took 238.405607845 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.934025324 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.920444556 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.920588309 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.939226916 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.920634205 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.924903471 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.920460033 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.921137489 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.926295642 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.920634402 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.91937501 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.91921087 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.921385075 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.922938046 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.449974177 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.927341996 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.535043846 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.924366543 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.922015534 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.935596429 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.605090527 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.926560595 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.922926321 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.923424798 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.925091834 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.924601769 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.932721374 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.959749797 seconds)
  done (took 169.601341227 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.928765616 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.111358537 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.946469873 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.966085026 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.940391084 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.927222494 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.951750107 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.948411235 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.936033344 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.925239852 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.927257583 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.990064356 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.941391021 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.067537299 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.962475829 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.960028855 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.041215086 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.936844974 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.92540653 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.926720894 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.957034542 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.924477953 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.989275965 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.056860852 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.945763408 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.047676844 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.936422149 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.9305352 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.929056902 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.046847386 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.942900991 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.990918318 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.957145051 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.948862721 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.053353205 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.04655936 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.038974109 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.962243844 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.936064231 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.930839547 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.929829715 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.919781834 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.049607281 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.948142557 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.932728338 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.039020886 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.947549605 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.933532667 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.940976582 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.929364685 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.945949701 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.948958722 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.997786367 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.061818479 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.962203406 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.955351561 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.955156691 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.221846482 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.942358545 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.032412866 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.924500057 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.05053686 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.950598781 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.91819964 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.931044881 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.938878729 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.959205292 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.961591728 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.040115549 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.937710035 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.034311561 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.967006629 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.937962208 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.930276518 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.932581823 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.051395001 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.049727448 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.965311063 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.967381704 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.963710645 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.928057147 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.933644051 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.920155835 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.949308218 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.936846013 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.047268614 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.050312624 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.942519181 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.931973182 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.934378677 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.934079366 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.958139274 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.060954603 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.965596783 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.030259667 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.001200776 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.009119782 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.948903019 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.944298866 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.937228187 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.997514386 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.949009386 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.945761776 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.271867104 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.007857607 seconds)
  done (took 209.235555945 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.401697634 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.986298368 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.987441849 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.224425762 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.354099784 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.736318916 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.982100932 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.982304042 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.008473044 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.141787056 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.055426327 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.997896051 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.968810832 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.95635408 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.982853352 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.002514463 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.98898653 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.265430119 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.103371237 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.152396545 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.962553028 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.270947809 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.310462465 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.358927328 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.017795002 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.308948628 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.661762292 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.225278811 seconds)
  done (took 63.26114417 seconds)
done (took 839.153375169 seconds)
SAVING RESULT...
DONE!
