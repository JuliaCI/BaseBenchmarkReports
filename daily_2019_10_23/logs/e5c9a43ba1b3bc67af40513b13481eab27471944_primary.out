cset: moving following pidspec: 9121
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.345709259 seconds)
loading group "string"... done (took 0.546053107 seconds)
loading group "linalg"... done (took 7.030580611 seconds)
loading group "parallel"... done (took 0.150080284 seconds)
loading group "find"... done (took 1.097170014 seconds)
loading group "tuple"... done (took 1.752272742 seconds)
loading group "dates"... done (took 1.245802041 seconds)
loading group "micro"... done (took 0.212502861 seconds)
loading group "io"... done (took 0.919650224 seconds)
loading group "scalar"... done (took 36.271268509 seconds)
loading group "sparse"... done (took 11.135298968 seconds)
loading group "broadcast"... done (took 0.903741851 seconds)
loading group "union"... done (took 11.809334107 seconds)
loading group "simd"... done (took 4.110914777 seconds)
loading group "random"... done (took 8.46285449 seconds)
loading group "problem"... done (took 1.854146564 seconds)
loading group "array"... done (took 19.702064405 seconds)
loading group "misc"... done (took 1.624636927 seconds)
loading group "sort"... done (took 3.060462465 seconds)
loading group "collection"... done (took 16.247416651 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485887398 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122622948 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113278073 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11762427 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14737206 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116308694 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122274435 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082978512 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.831467569 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146929028 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117764566 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412453066 seconds)
done (took 5.127446165 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174156251 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083155904 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082002929 seconds)
  done (took 1.312513039 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065970261 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122160749 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066464575 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067048421 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067395306 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066472728 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066584341 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066543269 seconds)
  done (took 1.673535531 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073471831 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068439735 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069281945 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068140309 seconds)
  done (took 1.428779267 seconds)
done (took 5.813819723 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.766318811 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205646366 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183026263 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398313512 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131770729 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.1540617 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.634578535 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329281157 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183142737 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081276331 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104457898 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318021347 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107448824 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628185185 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077323076 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090527926 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13712214 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448387674 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067750164 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081851066 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088726435 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127672366 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.0859688 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074533056 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.1442673 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068024998 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133756355 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079871139 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066488245 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207357565 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172544924 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662133656 seconds)
  done (took 10.226823642 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096741797 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097547179 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069063671 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136878569 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099392614 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069964469 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071116211 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071336401 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087173011 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128033859 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088974184 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101380195 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066581281 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070956113 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087341494 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207558508 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08232321 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083347921 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072044628 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077282879 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120727848 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080471488 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078715184 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077689516 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129199104 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181254386 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098828333 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099375348 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069141363 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083295946 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11688287 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12945548 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067905887 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06827937 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126917487 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096269409 seconds)
  done (took 4.6752069 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.295620401 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139966378 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091672272 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134278621 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065760273 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10699253 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065380874 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080753875 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200378279 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.309853311 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.58127467 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110935128 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10417174 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068167024 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068506311 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067375069 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.345388879 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107535821 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104316517 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081148698 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069739484 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068909975 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341255962 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067770022 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063644655 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068274212 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057826729 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108970724 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123042813 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067902842 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.930512482 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125807983 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066956524 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10120234 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169270127 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090856316 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14276399 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068127482 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063517206 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148146298 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.068814542 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065398939 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082245118 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102310819 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110692218 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06455062 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065520347 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158438098 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06327783 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076926791 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.959842779 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152148585 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076718197 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064510228 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.242821931 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08341323 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066910216 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062653168 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.162256507 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132282667 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064137038 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064502404 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067215359 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066081915 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068269027 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068571419 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.354849614 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066847165 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.700177091 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068382423 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077046392 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069169433 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06743304 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064640352 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070352924 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070438365 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.082171814 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064433642 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.072678614 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06388629 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063703996 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.064527376 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082224835 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.345549954 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06321533 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065166284 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062327807 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.082228685 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093779489 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.063504759 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.061935981 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.308626074 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069854696 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068385561 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108090538 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068980886 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085802677 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070577282 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114974122 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068031338 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.082622073 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073083071 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100129921 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070679348 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099640693 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081741611 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069089654 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.399416719 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06549066 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065047419 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068737974 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066032417 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06823148 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067209268 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079814611 seconds)
  done (took 20.723836099 seconds)
done (took 38.069391084 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234252853 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079915085 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078574544 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075873932 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075964159 seconds)
  done (took 1.814691719 seconds)
done (took 3.065845946 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119660652 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099298159 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064590229 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09624544 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064316899 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099979798 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099990223 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081363986 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099492972 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064431641 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096165413 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064867078 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064843798 seconds)
  done (took 2.38631566 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082488299 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083703356 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070626252 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082614284 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065141641 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084711534 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08301489 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091542208 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0830264 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074270892 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065939317 seconds)
  done (took 2.112056535 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081617444 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083941939 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070148356 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081658825 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066741664 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081861651 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081285634 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085831184 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081491024 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074475833 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064053187 seconds)
  done (took 2.095605709 seconds)
done (took 7.833213863 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077367696 seconds)
  done (took 1.311832718 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591843167 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.074580987 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08195238 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112318441 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184730239 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119841559 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279018832 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087627152 seconds)
  done (took 8.946266224 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089255798 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069914365 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069053437 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.082525939 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068925728 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068814086 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071309133 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070081075 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068970875 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072771423 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072317562 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069884165 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072334049 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071318963 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071516559 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071946357 seconds)
  done (took 2.460191264 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092591318 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091674329 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073533065 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075219963 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072374371 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072626105 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075314747 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073730736 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071127214 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072572131 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07552845 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074373337 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071918026 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06528591 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074655874 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07601648 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072086561 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074370728 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074889174 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07505553 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07490858 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064804432 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072209109 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074257043 seconds)
  done (took 3.131117312 seconds)
done (took 17.090819406 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114645512 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072113871 seconds)
  done (took 1.426129861 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081664784 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083605997 seconds)
  done (took 1.412587593 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08476649 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065791092 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092647919 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079428112 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067184089 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066198608 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090365176 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066512162 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066880216 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066322717 seconds)
  done (took 1.993934036 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069102415 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079362351 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072129129 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08216843 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074849208 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064875226 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073658018 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068735648 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07914372 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063600328 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072296357 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08324069 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072580833 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085357603 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07327995 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069739091 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071999907 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068358305 seconds)
  done (took 2.573534974 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066443041 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067582126 seconds)
  done (took 1.387002031 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068363162 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064543965 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068435066 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068586196 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064292393 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063019096 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064212763 seconds)
  done (took 1.711465441 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383895601 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111239941 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.302856606 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071543132 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081949748 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253712339 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065920503 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070969898 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071626144 seconds)
  done (took 2.707005806 seconds)
done (took 14.464802139 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079604077 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086040964 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095828173 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36456047 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09235247 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066449014 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114309342 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190522738 seconds)
done (took 2.352250856 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.221526733 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616585843 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.389632659 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.198247969 seconds)
  done (took 2.459714202 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330678308 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088093293 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059442921 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06728449 seconds)
  done (took 1.810890296 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066519726 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069262063 seconds)
  done (took 1.399533972 seconds)
done (took 7.154630657 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067191354 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066434664 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085655849 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064467183 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066690156 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064104243 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06390928 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066313122 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066503916 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066319501 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069036793 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066211763 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063969279 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063696907 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063884206 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066211133 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066083337 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06380084 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063727341 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06413713 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063842123 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067034305 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063832127 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064086157 seconds)
  done (took 2.886067611 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083831042 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067395669 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072365367 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071631518 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070350224 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074651469 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071723619 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066440959 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071519498 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068648997 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0700529 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070315306 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068633846 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070818244 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068668462 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070803514 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072794332 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068140722 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069507522 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07187041 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073705482 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068707456 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072898751 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073073358 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072106286 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074143014 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070300843 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069004344 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07208366 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069847828 seconds)
  done (took 3.40889432 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070148066 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063892882 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063754618 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071224225 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064055544 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065608037 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063502075 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064407113 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064684503 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063701872 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065041797 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063361598 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064186763 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064608815 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064577224 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067350474 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07908531 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063839628 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063641961 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064218143 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067246142 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063937957 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063820526 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063533016 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064163852 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063543342 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064335828 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063891554 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064368173 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.174564686 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066510345 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067200209 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063477474 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069975338 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067310455 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0635178 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067611872 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063342075 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064187941 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063334496 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063036421 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063408023 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063481739 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070386191 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063826881 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065519303 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063710481 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065053345 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064043953 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066128119 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063628693 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063520217 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065734671 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06455551 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067093136 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062822689 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064437643 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063198414 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064516189 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063261023 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063126055 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062796638 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065586667 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064041796 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077691789 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070152099 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063113018 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065081073 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064305341 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06586045 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064944176 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076137942 seconds)
  done (took 6.090649039 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090767758 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087751072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065924678 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065285823 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062012171 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064259946 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067861079 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064648814 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065820586 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069838296 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064269299 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065470395 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065735074 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0768959 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064680835 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06553276 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070115211 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062362828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06409758 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067154797 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064426312 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067720402 seconds)
  done (took 2.784568883 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155048326 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070783491 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105931268 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073182173 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067995949 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072912631 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070283402 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069888523 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070439258 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068203642 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068550474 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070287906 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067900711 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068193228 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068077807 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068288267 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0701016 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068145835 seconds)
  done (took 2.650259257 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076900905 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066270681 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086389759 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0661095 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066482236 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068300729 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070842736 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07438642 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068369839 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066453452 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074394313 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068362922 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068394556 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066171084 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068024255 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065847697 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06815214 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066350789 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074230288 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070799779 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070799325 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074175077 seconds)
  done (took 2.824430555 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080352327 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068174992 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083293617 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069116995 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062492587 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064746391 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070374045 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066213735 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070419144 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067972333 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066012782 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064269996 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069384509 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06615904 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069455195 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066217179 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067715196 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065935871 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067751576 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062094836 seconds)
  done (took 2.64718468 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087588987 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067807531 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067590929 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076724042 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067613546 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067312393 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075479225 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067835907 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067325227 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087869131 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067818526 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066908891 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075377439 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072199529 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067249134 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075055621 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075173618 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07515906 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067062471 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067315537 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086780218 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067104046 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074857935 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067122894 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06701164 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067061659 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067162582 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072136295 seconds)
  done (took 3.292852627 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066050501 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065971915 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063687671 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063662412 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064034498 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063365199 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063575554 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063557766 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065888933 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063631574 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066202519 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065755321 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065899969 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065776654 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066079434 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065979202 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066650177 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063609534 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064001715 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063645685 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065879548 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065980348 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065853305 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063373494 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063502543 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065674835 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06315003 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063478042 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065928691 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063667776 seconds)
  done (took 3.228316895 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07562243 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072962547 seconds)
  done (took 1.433465049 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063243277 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080066076 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06339054 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069775078 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070859955 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067234288 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073235471 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070373713 seconds)
  done (took 1.839555336 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081572408 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078224331 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067385847 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080317561 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076381204 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082995344 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132378103 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067405254 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073171691 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064362831 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080045984 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065773715 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072206156 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066844206 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071855947 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072712831 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063826039 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072195752 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068672633 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065151461 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067737619 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07490417 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068475603 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06210182 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067791943 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08800663 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077310272 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065947761 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069256998 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073405128 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071968101 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060441151 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066387012 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066462148 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063996281 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075801149 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080832312 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069111777 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074721226 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06739916 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076846338 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061527396 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070447734 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072821708 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076207203 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066228097 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067161959 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061030063 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063973486 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068352781 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061788794 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066583344 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061154079 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07587704 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06962388 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076675089 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065135479 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06782964 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069264362 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069894936 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073395404 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069052274 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069182815 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066275877 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076194378 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07095759 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075725555 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061710081 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060767442 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064077188 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075896158 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088308666 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072618701 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066851202 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067249331 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063889314 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069365368 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067300982 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071900705 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072441428 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066311595 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071444604 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073391269 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066244231 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069464508 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074260629 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06463556 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070218995 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064910272 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082642929 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065142249 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064212146 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064282462 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076454658 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069425165 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065903154 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064277608 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073577444 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061054987 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06720851 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067264734 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067141687 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076601306 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071096998 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071275863 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074567647 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073413448 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066116952 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068695378 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062926688 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066678918 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065269863 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073125622 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060193705 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069078391 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067261618 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066288941 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073568216 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06347195 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065435238 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07277212 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07050358 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064090583 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062148808 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067811512 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065138662 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068135999 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.072998732 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063626021 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060704068 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060625481 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068345484 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065280595 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068771321 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069536372 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068176645 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059794071 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06309783 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069448565 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.073370634 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065100145 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065934745 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070523284 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066457149 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064289028 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071172015 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067349717 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063983363 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070117824 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065757426 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060276026 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067819867 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067585491 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063575971 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068475499 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067595051 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067002299 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06580405 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063659787 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071780448 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065964543 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064124398 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0647257 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063644524 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07546295 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066896105 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060709997 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062251131 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073375682 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063558188 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064458086 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064684381 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066990725 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06538841 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063309365 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064721706 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067072289 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075296799 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06910698 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065762719 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069983997 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076175252 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064720016 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067359905 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064728422 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065926722 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065543937 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073420958 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070080011 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069703726 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067120315 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061711177 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070408095 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072046235 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064344487 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062804437 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064388054 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069131892 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070386086 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068830263 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064728668 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062184263 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06533092 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066697124 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06691565 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063368295 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064124544 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069320299 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062801327 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070065338 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065251177 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.073436094 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067157766 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060015564 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067139962 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062483612 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070254337 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059797614 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062720419 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064067666 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064773579 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063962643 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067128791 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058756949 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071297636 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071440411 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06436854 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063725856 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063690197 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070056167 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065987238 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068065731 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067990553 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070672212 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074424728 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06427 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06779494 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.307929245 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067683759 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062611699 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073886413 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068450924 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067369699 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067962326 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066868873 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072016812 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077695293 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075409231 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062916399 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071413604 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066826878 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067254047 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063357668 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073407565 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071365738 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069369726 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074215421 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069094231 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06821495 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071910739 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066553044 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068681948 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068759822 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070490185 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068265001 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069087839 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066996435 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071309146 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066586036 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064965841 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069434999 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067507343 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067955372 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073533283 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067029064 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067095136 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070342265 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068075654 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06856409 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067658792 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067119645 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071039897 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068492901 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067922289 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069368657 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062020007 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07485337 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067689617 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075373486 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067447816 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064229715 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075451967 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069340615 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072666589 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068713537 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068758001 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068738798 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066970652 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070406939 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073658836 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065099382 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077974323 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075179394 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068196373 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07038119 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067419655 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068304264 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065866414 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067966544 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068356827 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067580237 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06745903 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071633389 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069191659 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06804065 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068789643 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06744952 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068139614 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068962363 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062066974 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066642862 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066336198 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066744073 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076912928 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06732203 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066549812 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066209235 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067740472 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065756553 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063613474 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07532704 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076670036 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067215398 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074037226 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066024166 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068539815 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07706562 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061099104 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065019209 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064849975 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064782971 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073934181 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067067271 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076069377 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066972703 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066355205 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064144702 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067197936 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065614422 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061238624 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065040985 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070163277 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065530761 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06540673 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066516821 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069301327 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067357304 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076243475 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065493481 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067527516 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066515603 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.19800063 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066534909 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066249298 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070228449 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068312641 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064415713 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064691883 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066578887 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067898886 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068639492 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066426698 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06879218 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076425846 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066980881 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07014325 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069969579 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062144541 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070450033 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066987977 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0668645 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06638041 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071150944 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070076721 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068175406 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076192403 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067495765 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067825602 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067127177 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065042249 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066629527 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067327655 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067228024 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066058961 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068518598 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07516206 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064968565 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069734191 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066829364 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06731055 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073370148 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067827961 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069987646 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073829581 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067100518 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06896631 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074839029 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071443187 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070818195 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068190917 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068445068 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073008432 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066755324 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073857709 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06739457 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068093105 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068508653 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064734016 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067142779 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066662527 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065917191 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072723353 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067543821 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066046585 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065983806 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064726705 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067747112 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070258594 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074385022 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069266465 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069572995 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061981598 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06399695 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067690599 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065114192 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0685274 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069598608 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072633168 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068993726 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066971719 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065499855 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075750014 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072701898 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070574636 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064715058 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070223374 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067269868 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068828892 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067795783 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06717552 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068148538 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070378915 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068641988 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065936852 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073630656 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069727617 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067424508 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068021165 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067478755 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067215974 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061524413 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067147794 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06837141 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071784996 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068542577 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066485493 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076631518 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064341196 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066770342 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069453068 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065722371 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071285049 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061842289 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068004375 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066903719 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06665708 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061736088 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065389182 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064295318 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068612198 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065591903 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061580743 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076810474 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075269035 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069193218 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065227063 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.199260155 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062555832 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061798495 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066463487 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06781451 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06898176 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077234163 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066252508 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065987008 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062437343 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067496707 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070235549 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070423643 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065147592 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06298399 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067126247 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.0708263 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073035052 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06611352 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066804551 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069963884 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069569034 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06523229 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070682038 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064948347 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070958907 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079856568 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068375048 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068360903 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073634268 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075399184 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06785436 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062398594 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068061825 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069567732 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067727497 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067635136 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06811165 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08256201 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069618077 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066630318 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065617022 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069673747 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066986266 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075004365 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067469085 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067567662 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071160633 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068724784 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076039846 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069706612 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07424275 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069749278 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070238863 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065531649 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06748395 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064600724 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066402392 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067758197 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067470666 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072093328 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074674226 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066270232 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077388891 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075953896 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068970803 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063968772 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065975919 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06612443 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062346834 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067660824 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064804972 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065013542 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064682074 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065460159 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067333323 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07188773 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067336674 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067182476 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066071021 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06063828 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068814653 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068798318 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067338376 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063012477 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066574924 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067701106 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070492735 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069629039 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064047869 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068385476 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068021573 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0674908 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061722613 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07315412 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065247146 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068557766 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065539928 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066768667 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067601384 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069973125 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071608645 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067361301 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068966932 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069910866 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068265408 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063589796 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063577499 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071908358 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064572273 seconds)
  done (took 42.606820407 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100817479 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063983547 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062424996 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063303251 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074846499 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06348197 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062784549 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063753855 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064070938 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066414266 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062771428 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063084647 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071999866 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079012705 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074727127 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067578478 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062501434 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064242751 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063077 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064097793 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07210776 seconds)
  done (took 2.844334288 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074400684 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071247181 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073545401 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077081708 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068083368 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071464863 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073482007 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071529154 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077052498 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068125725 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076920539 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071786364 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067905104 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067854802 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067879965 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071931687 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076922949 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06844232 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071407542 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073523074 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071801488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074000008 seconds)
  done (took 2.965396814 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067556323 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066417611 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069150559 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062462561 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067204767 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.071399482 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070424932 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064661789 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070131115 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066002846 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06593803 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065635639 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068553141 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062248558 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066519845 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064479916 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109678142 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070072995 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066695675 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06741354 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062444621 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068380762 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062206338 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062744256 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066340675 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070198847 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067330767 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065178951 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066420386 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065905035 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066812262 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06427399 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068319054 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067183283 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06577511 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065712415 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066931718 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066798952 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062336722 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064598256 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067518654 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062629633 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066997511 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06798422 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065076246 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06454713 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068208294 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066744892 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061840035 seconds)
  done (took 4.672904991 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082498759 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109578465 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068392443 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089642978 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080873219 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076258702 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0700884 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090026809 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064066037 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065316119 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082616673 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080339171 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0665978 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070888135 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073311025 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066741361 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067733229 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065307457 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070379525 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065831281 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070683756 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072859084 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080958622 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079440167 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070383264 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065410913 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065945591 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071008689 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078871307 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071057492 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070849643 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071686717 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081220655 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071685783 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065808019 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068342705 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082424296 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067030115 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068561695 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063992302 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068181788 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070583672 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072234894 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082382677 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066747639 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07165903 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065897672 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063500356 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079034775 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06867602 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073889139 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080846384 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070012604 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066880522 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070582736 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081120048 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066096802 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064569087 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069230794 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078539229 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064081572 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070109332 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079828442 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068166027 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073350987 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08061428 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071262534 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07030564 seconds)
  done (took 6.479851178 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075821684 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072939974 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082177221 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081640577 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073031802 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073154969 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073249057 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073025732 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072984621 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077768237 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073171138 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094358421 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068762155 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075786439 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073323259 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072984086 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072992435 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07368313 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073344101 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073394246 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073162844 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080845282 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073578467 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080887541 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099202934 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068503435 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07275307 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073574072 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081446592 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073537023 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080413475 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072872565 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073004876 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081283753 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080579677 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072630442 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065881704 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072988582 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.0727479 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072987074 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068064325 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080447894 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072285377 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067988524 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072610672 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072421918 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080199526 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079554827 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07495615 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077346833 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072707792 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080360688 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072128084 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072601844 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08019769 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105128299 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080384256 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080361846 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072860057 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08024657 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080684675 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087035423 seconds)
  done (took 6.150701105 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085122483 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075726109 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077182079 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061897637 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065168305 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070750055 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064431605 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065041827 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074947915 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075253705 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077643758 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070204523 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073345883 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077523115 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070291001 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073365647 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070742257 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07029541 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075135975 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070500199 seconds)
  done (took 2.854923156 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075174069 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083280534 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06710696 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073286845 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069495913 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072082286 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069131545 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069521067 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067471981 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069279651 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076628963 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07710411 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067655677 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0723631 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076513123 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072209383 seconds)
  done (took 2.561989422 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07584218 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073711744 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081335723 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066962992 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065041405 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06331922 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066466207 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062406678 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062867732 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078830064 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066964987 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06908078 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066845154 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065194637 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063336708 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069114654 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063474658 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06397723 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066436971 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078681423 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077083418 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065663331 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066958684 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066821067 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066479032 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071525087 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065823796 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064208897 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063654985 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066737035 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.0668156 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069960664 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063501664 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063992534 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065001313 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063566943 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065826847 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066406151 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068679283 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065787975 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064076975 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065680059 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065766573 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067204169 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062547009 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066543559 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062373427 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068285755 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064275077 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066373122 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066520112 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068710306 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067107945 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073196487 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069346999 seconds)
  done (took 5.105451706 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080847374 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070101626 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062338119 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064210153 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069550484 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068129064 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070205798 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06810644 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068110585 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064572521 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068527649 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069216664 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068614763 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070026977 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068809614 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06975414 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062198028 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068039485 seconds)
  done (took 2.646583846 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072814601 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067075384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073171879 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06603402 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066534392 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06888799 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0624385 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065001318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065255137 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066384855 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066301425 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06867905 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065049013 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068658886 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066396636 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066366712 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068414034 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065062236 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066502776 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062369402 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06880343 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064874881 seconds)
  done (took 2.880635855 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093058302 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08173802 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138409446 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079396447 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083538092 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072072791 seconds)
  done (took 1.959333339 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093655075 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079066998 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067792104 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088505577 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074236785 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068008212 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0684664 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067933092 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076468796 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076884614 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067862994 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07659919 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076824125 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075816453 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073713245 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073549426 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067529128 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067933997 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066348499 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084692066 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068253186 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076296479 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067954783 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067374685 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067676242 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07598523 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076427346 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076605839 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067520984 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076639362 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073667112 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067711471 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076978242 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076690222 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069417587 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076702574 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06797956 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084810243 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07338073 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075937133 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06903839 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073458893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076563027 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072460414 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076074055 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067887814 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072378587 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067881421 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067957418 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086857183 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073443074 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075478228 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073838772 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076514143 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076493873 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086518604 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076381402 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075683231 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073900476 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079036687 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075959533 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073916729 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075844835 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076699449 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074022684 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075862791 seconds)
  done (took 6.321785228 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083740697 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086569351 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068619789 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07708438 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076017373 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068056836 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068273159 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067969113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068521497 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067889854 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107962299 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068939497 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076230028 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076208321 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068518045 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067986157 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067893134 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075882905 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067645143 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086798097 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068255243 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075728658 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075933962 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075593122 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076476832 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073752687 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068037102 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067895319 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067933866 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068101383 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073168692 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068351986 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075976476 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067516198 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076061505 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068150946 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06796773 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072894354 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068187552 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073441748 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0758779 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084460832 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068082416 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067729602 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076969341 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067548519 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067894464 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067167809 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067834188 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067419806 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076271484 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076625289 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07650339 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076009813 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068115513 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06822384 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067880192 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067696297 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067962678 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07371005 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07602845 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067771905 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086395255 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067690656 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067826822 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075899467 seconds)
  done (took 6.23313425 seconds)
done (took 130.631883258 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185611825 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166216196 seconds)
  done (took 1.759911179 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071926983 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100650685 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078617944 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129266706 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067413013 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100969442 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100044202 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078240843 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066590202 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066797785 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066794322 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068959345 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132111274 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066604046 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066452148 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069232853 seconds)
  done (took 2.75380597 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098941228 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158010849 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100444218 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065484386 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097338259 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073282352 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065124221 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075405955 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071501603 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065685645 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073937441 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07089865 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065385743 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071296376 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071752109 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073656943 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065141566 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073570253 seconds)
  done (took 2.866886215 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101483021 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092458128 seconds)
  done (took 1.623180157 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160817897 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107002361 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151330196 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348464155 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.173828742 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.23296003 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129516322 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130605627 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122855242 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125168788 seconds)
  done (took 3.105301242 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099203855 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152714825 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.258016014 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115911609 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072707607 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095216786 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116995398 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078180329 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081237217 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080953896 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080868361 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07718791 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099307529 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074052553 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07358404 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076409577 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102777608 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072726531 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074351148 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077167176 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09942238 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066033357 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073894975 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072654055 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077881045 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07779604 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065725491 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06575932 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07706085 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074714791 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077881158 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094342599 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078185124 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107969081 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070389346 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108430382 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07784696 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07469912 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074523373 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074541668 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079803636 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079519014 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072786705 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076623897 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065736359 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077169173 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065823375 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06586238 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078804022 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067235692 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07856279 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077404126 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107953416 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067038188 seconds)
  done (took 6.063417143 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103777975 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104864065 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07224358 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112245529 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100710971 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073088398 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102690283 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094673303 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103741622 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070550042 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068757701 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070839017 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083395226 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083600682 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112889777 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105079185 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074342568 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071739384 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104570242 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103282329 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069018424 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095398779 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090314291 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102758715 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068076998 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070756303 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068479062 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070800129 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077493775 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07884959 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0703988 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081726689 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085897462 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07869139 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067674976 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068615666 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069086906 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080620893 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080552956 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079624231 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078543724 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068115703 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070196625 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070250695 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070478264 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067634085 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079938775 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081104163 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079489181 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069646587 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070321195 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068136884 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069572615 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080767773 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078524847 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081665752 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080404022 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068721451 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06909737 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072753888 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081600551 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079864023 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080149478 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070148596 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079468369 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068637587 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080998175 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085558013 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068644368 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070631532 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068669421 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069717157 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070276239 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078532676 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07860979 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069748674 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069595248 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069016448 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080571964 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079069802 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068895892 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077375266 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067718849 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068404801 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069859188 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069756041 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077968741 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080429007 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070245028 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068525074 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069715158 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069146668 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06735947 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07775207 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081466195 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080025486 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07959469 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070329625 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079658455 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080047901 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070984927 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080964067 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.0688375 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.198994721 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07143231 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07974748 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078471444 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081103486 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070464126 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068792859 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079760672 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081733541 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069616009 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079813744 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081662798 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080577126 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069380672 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082809653 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06958135 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081325917 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07069468 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080691789 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069210475 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081585701 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069600163 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068960898 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069419234 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.0812554 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071002672 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069698431 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070483692 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070859397 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080457722 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084407227 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071079048 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082378411 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080090612 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070394765 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07972751 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06975183 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080312281 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070490459 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070294723 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06834726 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082906024 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069009408 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068841202 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070278663 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081455155 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069556226 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081572592 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079864961 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069375302 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081932087 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081176356 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079126194 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082025834 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071045636 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069370056 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069018381 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069683533 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079902607 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080363088 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070972075 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069069418 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07940634 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080132942 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067787134 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07887877 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079426475 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079146407 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069124992 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070237934 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081301423 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081252489 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079216457 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078672422 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078835966 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069035067 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078072574 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078539748 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068442501 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0860145 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068627059 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083493957 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079850637 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07750581 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079247601 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081068051 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080805982 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080896132 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084018908 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068035491 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068190568 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080534145 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068852249 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069545683 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079146293 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070032464 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070101916 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084342186 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06962348 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080174282 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068666005 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079447406 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067754465 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070599668 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083948093 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06859927 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201228179 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081163044 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070192924 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078951233 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082049833 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080649139 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068846399 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071068004 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08056473 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080372171 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069764024 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069369925 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071571514 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079933749 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078803475 seconds)
  done (took 18.890545969 seconds)
done (took 38.4999272 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210235585 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151009976 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.201135721 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118769642 seconds)
  done (took 2.206650573 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124058372 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100772979 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095716427 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065651939 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10255964 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065245456 seconds)
  done (took 2.016671011 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313824767 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21232557 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183561413 seconds)
  done (took 2.16977496 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200310633 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188243981 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395266175 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254651894 seconds)
  done (took 2.614080409 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143959222 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089946711 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067506795 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083416162 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135459209 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161924755 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102235453 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12660013 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07854478 seconds)
  done (took 2.508530327 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148258341 seconds)
done (took 13.123597299 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.178781088 seconds)
    (2/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113640111 seconds)
    (3/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098422051 seconds)
    (4/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.084400271 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076617584 seconds)
    (6/309) benchmarking ("sort", Float64, false)...
    done (took 0.1260301 seconds)
    (7/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.178964122 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.208146141 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173328077 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.218832868 seconds)
    (11/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.171983848 seconds)
    (12/309) benchmarking ("sort", Float32, false)...
    done (took 0.127961393 seconds)
    (13/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.191186382 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071449662 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.170172924 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077704834 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.177108551 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073344081 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095055972 seconds)
    (20/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.229881873 seconds)
    (21/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073520504 seconds)
    (22/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.161123456 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090201919 seconds)
    (24/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066837235 seconds)
    (25/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.141438919 seconds)
    (26/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073882325 seconds)
    (27/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.157844301 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073997584 seconds)
    (29/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109549687 seconds)
    (30/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.173212345 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142187213 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131495113 seconds)
    (33/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070310696 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076736769 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17494937 seconds)
    (36/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.158715028 seconds)
    (37/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193115503 seconds)
    (38/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106362259 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071582564 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155882639 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102996817 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065330373 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072963388 seconds)
    (44/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.157657513 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111451764 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089033023 seconds)
    (47/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077088137 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.175579609 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.21877333 seconds)
    (50/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068709092 seconds)
    (51/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07291448 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072826882 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120678842 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08547707 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087469908 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.160660582 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089923552 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113650923 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175986709 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099993751 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06692046 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090247952 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089382677 seconds)
    (64/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101947702 seconds)
    (65/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072420177 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065583616 seconds)
    (67/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077090372 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.142290075 seconds)
    (69/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074072 seconds)
    (70/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067650554 seconds)
    (71/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077512564 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065377224 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074898696 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088288787 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08779563 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05341398 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054743544 seconds)
    (78/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.185602294 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.173537496 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095493057 seconds)
    (81/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076718022 seconds)
    (82/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.224553075 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053475109 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.067477827 seconds)
    (85/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088042231 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095546606 seconds)
    (87/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076765321 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074081903 seconds)
    (89/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.19751853 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076872567 seconds)
    (91/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.315262969 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114602613 seconds)
    (93/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072496322 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.197421118 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079776911 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05285047 seconds)
    (97/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072628745 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065620832 seconds)
    (99/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070644914 seconds)
    (100/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082694086 seconds)
    (101/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174913375 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094566218 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05281621 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065623436 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.141412172 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072795682 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150754577 seconds)
    (108/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06332702 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051790444 seconds)
    (110/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.150434688 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073308443 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093990073 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066914072 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072442695 seconds)
    (115/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081419991 seconds)
    (116/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051398531 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.18823287 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135810917 seconds)
    (119/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051548614 seconds)
    (120/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077479038 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065610083 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051877013 seconds)
    (123/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097105271 seconds)
    (124/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107486834 seconds)
    (125/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052975737 seconds)
    (126/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079588869 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051790191 seconds)
    (128/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07310222 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.133286069 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073527624 seconds)
    (131/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065720407 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072163025 seconds)
    (133/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052734596 seconds)
    (134/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073195834 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091991649 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087116854 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076237639 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096789787 seconds)
    (139/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05117677 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.151378931 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071096293 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062994761 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072119171 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051938323 seconds)
    (145/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071843695 seconds)
    (146/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064340203 seconds)
    (147/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072090534 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072479125 seconds)
    (149/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066390436 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052351361 seconds)
    (151/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.174461262 seconds)
    (152/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157785186 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052772488 seconds)
    (154/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065432998 seconds)
    (155/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.14764787 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051433225 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065378438 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072626048 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060871916 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185676587 seconds)
    (161/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106948993 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085513548 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079500929 seconds)
    (164/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150619133 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074016483 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064436 seconds)
    (167/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070257798 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051310467 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088792063 seconds)
    (170/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108767173 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107890676 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120136534 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065405946 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144409642 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051166924 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071200694 seconds)
    (177/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073265152 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051781751 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066645028 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089101369 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066916873 seconds)
    (182/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051497561 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091470713 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168013177 seconds)
    (185/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07234383 seconds)
    (186/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053785306 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051693641 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069783028 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16408111 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052768573 seconds)
    (191/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071603627 seconds)
    (192/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051394199 seconds)
    (193/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08138503 seconds)
    (194/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05192988 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072487422 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.33806693 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074971685 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054525056 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075011655 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090283492 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.0725444 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066175283 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073864507 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137879802 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06949995 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053424963 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054841078 seconds)
    (208/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072716202 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064516958 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054188099 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137157127 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066481912 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133954513 seconds)
    (214/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051741916 seconds)
    (215/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067815399 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139662303 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09219762 seconds)
    (218/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05227394 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065533199 seconds)
    (220/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052301835 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068162171 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.0727523 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075019999 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073350171 seconds)
    (225/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.151188361 seconds)
    (226/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053011305 seconds)
    (227/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118772794 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053428475 seconds)
    (229/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076370997 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094275327 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174442827 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071913595 seconds)
    (233/309) benchmarking ("sort", Int8, false)...
    done (took 0.140362626 seconds)
    (234/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068135528 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06490819 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067424921 seconds)
    (237/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110168351 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06643612 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065808018 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051866336 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167868296 seconds)
    (242/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.186487589 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066905641 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132185971 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132630537 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053042109 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051393505 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072842902 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08636753 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.0897854 seconds)
    (251/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066085526 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087537792 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065648622 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100716955 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066164826 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065688218 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124960563 seconds)
    (258/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068688553 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065377197 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088475405 seconds)
    (261/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051333623 seconds)
    (262/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052586864 seconds)
    (263/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074329228 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071906723 seconds)
    (265/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052162734 seconds)
    (266/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052515072 seconds)
    (267/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13484075 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.0658688 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051876611 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073193664 seconds)
    (271/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069518702 seconds)
    (272/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052411039 seconds)
    (273/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052182087 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051756519 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07084464 seconds)
    (276/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073011264 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088040504 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080215566 seconds)
    (279/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071587772 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05152409 seconds)
    (281/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061108452 seconds)
    (282/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061230482 seconds)
    (283/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06221502 seconds)
    (284/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184967302 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073371757 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064215329 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051696381 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065429873 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064339378 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078357536 seconds)
    (291/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051429651 seconds)
    (292/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06687317 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088299603 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07282528 seconds)
    (295/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052766904 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111857653 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051864768 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065185516 seconds)
    (299/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052218936 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070730564 seconds)
    (301/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068110307 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065878621 seconds)
    (303/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066718834 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06650649 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071506652 seconds)
    (306/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051906321 seconds)
    (307/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067999338 seconds)
    (308/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052296185 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095510027 seconds)
  done (took 30.645655558 seconds)
done (took 32.123368525 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084642775 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09236522 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074461891 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09234578 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080554352 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076932024 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072359058 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07831348 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079702114 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081321914 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078281812 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05497177 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074248931 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074141528 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074608085 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091262725 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078004797 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072690625 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072878385 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064906478 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073227163 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065673345 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067434776 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054975007 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077951074 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071704569 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072828514 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074378724 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066182013 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065961598 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069312796 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073290331 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065739317 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077678593 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071864499 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073207078 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07434787 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076110075 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067207287 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066044353 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074272689 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065812221 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072754789 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073355648 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072057661 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071574618 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073480989 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078025115 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091899908 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068300066 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07442792 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075967783 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076519658 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072505466 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069701195 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073187563 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071015129 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091314966 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073294912 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068281177 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074009705 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073708366 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071215613 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072615084 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072809145 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075156779 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07547228 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070906406 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074893571 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07083283 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065371043 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07296782 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068739067 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065666796 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075857691 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076654204 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064860057 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071489259 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072942624 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071631002 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064951559 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067848923 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06705664 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07191905 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067828809 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054720376 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069843983 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071907271 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064768799 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073298879 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071811196 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071763979 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066999448 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075539742 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065287898 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070181575 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065779099 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065689028 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067586122 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06917727 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065459362 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068032792 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074151226 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06712749 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071239463 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078968562 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065113348 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071316677 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064334266 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064982453 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078840295 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074847158 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065299643 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067767725 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064331381 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07218837 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064497405 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064925766 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064973913 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065536536 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070632744 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064965207 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067420598 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071729876 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077165597 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064911062 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067998411 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067367767 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065340204 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070416644 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065437438 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.197856249 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06716974 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061813106 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068535841 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06591779 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073232805 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068043936 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073216925 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06755 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073409156 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070265046 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071275944 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070642012 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064188063 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058960161 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068012349 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068008383 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06791249 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066394308 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067390777 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065660779 seconds)
done (took 12.517988532 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069311599 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14477954 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100027327 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096253072 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086510873 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066808452 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077049654 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102579916 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06788731 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103218451 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087739363 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085494739 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112991933 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064844932 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06631826 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069765919 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067731865 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082019653 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101153211 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086405294 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116564836 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065785737 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094496713 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089828157 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08740044 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101980108 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066995084 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070078053 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069661683 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091381712 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086625704 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070098162 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066600417 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100980287 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092314789 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083527766 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066361482 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082757164 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066715943 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065993634 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067554482 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098603468 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080196263 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080311972 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07014196 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069362111 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067244319 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083622359 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0892719 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079152269 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086362568 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103563396 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068920687 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065505727 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06487894 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085440928 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.0657035 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069344477 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06651928 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068122525 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066422657 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069192431 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081175272 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081756437 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069730316 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080717558 seconds)
  done (took 6.883793627 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085497069 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089723294 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084100743 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083687413 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066125625 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066246503 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066572801 seconds)
  done (took 2.106802575 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06990572 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089283852 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0893563 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090023264 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084898165 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087977247 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075957736 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06696142 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080740027 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068279695 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087757692 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102130623 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067267564 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073008825 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090937859 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066929931 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090647847 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066587168 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069357181 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090324444 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068688548 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082277228 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070005616 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067225431 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081204494 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067246436 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113994637 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071024196 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068296816 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069761055 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064721338 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107477889 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080367441 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076043083 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066471348 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081160489 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081344593 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065021185 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083114669 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071994306 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080797992 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067260765 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067820972 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065177935 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071222684 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077330218 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067813035 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067390064 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069220067 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086705578 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067141598 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079871744 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070169231 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06910027 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067785436 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070387033 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076285804 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06751203 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086390579 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067775033 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083163472 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082906494 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080001788 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082952695 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068845709 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080479657 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080304702 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069465782 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068102218 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069827753 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083039739 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065587435 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06844204 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077182514 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06818886 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090044034 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089261656 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068052777 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075659492 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067205986 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066591691 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066547928 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089600336 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069180831 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066655596 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07049658 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069751857 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065428476 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065553537 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069865899 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064809247 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068174916 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069165691 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069599675 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068939492 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083422689 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06898244 seconds)
  done (took 8.854189335 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071044011 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06930802 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069558567 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06827084 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068443764 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068860885 seconds)
  done (took 2.001861549 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097269573 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069741175 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080278073 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073501591 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104410387 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086921031 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087392189 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079290526 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084139467 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079200837 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087020013 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089022534 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093391143 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073115982 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086752802 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072290773 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087622504 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076402731 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078502312 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073750231 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087243539 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072994106 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073692309 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082047088 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075977542 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072471391 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067845903 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079016384 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078377177 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079385177 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072642678 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07614351 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071408925 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079088753 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087091351 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071341354 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072116855 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077379766 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072871063 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075916129 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088518834 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073046371 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074681287 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077581148 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078663771 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071258324 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077378366 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076518211 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087021414 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07736298 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077243371 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071471608 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075574854 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077647438 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071334372 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07868067 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077644291 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087227697 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072728543 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071241312 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069240257 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075841093 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078680675 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075785774 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079481808 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078294442 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071271158 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073947253 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073179166 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072626892 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077586764 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069669471 seconds)
  done (took 7.185278712 seconds)
done (took 28.585588733 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54759438 seconds)
  done (took 2.101842032 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.612683704 seconds)
  done (took 2.191949365 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.582760676 seconds)
  done (took 8.15467484 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402866046 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.48471542 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.697422352 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133217812 seconds)
  done (took 3.334057679 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.668421463 seconds)
  done (took 2.255166483 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213226278 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197602196 seconds)
  done (took 2.003581234 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380711261 seconds)
  done (took 1.954355378 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.119434507 seconds)
  done (took 2.696381645 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.27170725 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165471006 seconds)
  done (took 2.021735541 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.465115468 seconds)
  done (took 2.048157381 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.827039713 seconds)
  done (took 6.411531552 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.216743784 seconds)
  done (took 1.842062625 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243924155 seconds)
  done (took 1.82623585 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.714256489 seconds)
  done (took 3.296167044 seconds)
done (took 43.723104755 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083575358 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081355188 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080971388 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078496848 seconds)
  done (took 1.891520504 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079483991 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072299444 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076607977 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072816686 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076565837 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072800572 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074285588 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076922686 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072966731 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072683083 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072662618 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073280345 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074845117 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073995122 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071188803 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075149901 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076053512 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072460295 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075767908 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07273266 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071324693 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074837513 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07480528 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072001469 seconds)
  done (took 3.364045484 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080573016 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073493494 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07549487 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072748021 seconds)
  done (took 1.895371779 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08066584 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092356074 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089758761 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078358617 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092189965 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086289364 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069094944 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069009073 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073157258 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076852926 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067771165 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09617959 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087782506 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076430501 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07910285 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066427749 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068343698 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086746771 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077477277 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077416041 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069740143 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077230768 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068350242 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088362436 seconds)
  done (took 3.481937114 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080708768 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103721086 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077600099 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087828957 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089969605 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065457025 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074451134 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089406574 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122949241 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065766729 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070014282 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065766377 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072639052 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065490095 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076518913 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105023292 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108186162 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068701355 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095574148 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065688328 seconds)
  done (took 3.250895919 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075841755 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070158572 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065615548 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068909051 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077954427 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072955351 seconds)
  done (took 2.031655425 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070897028 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067657692 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067865601 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067900883 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072011044 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067265319 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066159995 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068095016 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067578014 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067000011 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066867517 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066069179 seconds)
  done (took 2.409440412 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.179040757 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068255163 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069396992 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066379897 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070965375 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066465142 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080078033 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068065065 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090849988 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066493626 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067121505 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068486384 seconds)
  done (took 2.560197229 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212410647 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077186489 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238024338 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13771808 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112002362 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116030897 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104330323 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113787257 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144800766 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103192387 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168575371 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166844907 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107765835 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137824723 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089220368 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097956616 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156733392 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162874432 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103799156 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167013168 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144498368 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125048473 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147002276 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10128255 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106351647 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122597473 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071440469 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080065647 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170799567 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132613262 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147660865 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111238268 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093754189 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177159152 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171670568 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143065594 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135164513 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083900761 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101871982 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132940137 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199564987 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08871815 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164946458 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245689763 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08176183 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134563296 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121072917 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121786543 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107772416 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090514917 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147397447 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183351086 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139093708 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087528693 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112658713 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11638081 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116429079 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104568729 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182898623 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162172833 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12840047 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071463129 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100701025 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154375579 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132636445 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109300466 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127193701 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093790139 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133830705 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155159689 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119280567 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144468032 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128583335 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088575539 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119802804 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13998616 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128957232 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170971762 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124964214 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07284456 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125341811 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103900821 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081432494 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142189427 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075123162 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175746951 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098473912 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106471378 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113132877 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108708752 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108784496 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162635309 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144208076 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243714674 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065874502 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10446054 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121381715 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148478764 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087805765 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108811198 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118000054 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077974882 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139692466 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075298008 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124376858 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075217274 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12610518 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133836093 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076433877 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122299164 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101107381 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100231749 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133877496 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160853854 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08924716 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082606607 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167923039 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123496297 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104576325 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144673679 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156672867 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.09973272 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103380741 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150368571 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17999434 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089946979 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163424681 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107877345 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084089761 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087469562 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12387261 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112735311 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122394836 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082493469 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118727991 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169172084 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075122003 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095749575 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133765031 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079231951 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081229594 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103700733 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10078531 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095513117 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100977296 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10438619 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138020763 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124008137 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104783758 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269479478 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099619138 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170661832 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089425127 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100724373 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104582875 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070193552 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137767744 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156650033 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079600711 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166106499 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124470389 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105278626 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119644475 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083491498 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141471202 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078628528 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070323017 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145704986 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110915665 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111163185 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1512732 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1052431 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127229016 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.12039983 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135894854 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133165932 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129408184 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10544803 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088536355 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1121935 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126143537 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073356814 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091979545 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080282327 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104301088 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096388125 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083421019 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142653632 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125446558 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100600222 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112020724 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097154419 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147355876 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077000873 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129757992 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119392617 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094155411 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151159973 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151826092 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131400529 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099199204 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144673821 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070199792 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073631405 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.232200444 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125470506 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084026568 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084017822 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118489948 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147772381 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130128918 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139672199 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112135108 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122084702 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155848594 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06995803 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116542651 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148861532 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121834753 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104164285 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090489301 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09931075 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14219808 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108232818 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183130068 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115482526 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126467207 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153609033 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100525897 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080838644 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102675878 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136648644 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105195294 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146029476 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099835737 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088380648 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110379624 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074084379 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100361991 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128091032 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120357179 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141030135 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114645074 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133258513 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077448459 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117719835 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121556109 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123999302 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06434488 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121068972 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162070159 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093298276 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118967828 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153121592 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079073038 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124356349 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320076844 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148418626 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08476701 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11131547 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118685564 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129568267 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120996077 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141213135 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10929973 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136861922 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110617541 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08562117 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087968285 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097802783 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105176302 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095220102 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109342084 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114803325 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095388534 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132551285 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103572529 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110030081 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118717052 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096352366 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090301528 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097555578 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173735229 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120361281 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172141496 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099135441 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146684709 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165066653 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074692294 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079212603 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078442325 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139852508 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08443218 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131750137 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098281802 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106034025 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124784691 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142559718 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0954372 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068837722 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108739078 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134482009 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112731696 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098752279 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105324659 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16296442 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100589935 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07924005 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113905075 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104894194 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10271647 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317055714 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062358398 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098401992 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076319479 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081813263 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12851382 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154267131 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080466281 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103861773 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119639495 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111441665 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128535295 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102115398 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100634716 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115371417 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152107045 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130197579 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090017521 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112658596 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130715795 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157050609 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108898816 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095774887 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172590826 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152826011 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160590859 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089052875 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114627481 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114970226 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108493625 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139162358 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083228235 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165271441 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082316767 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136613248 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104621373 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090977111 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13055989 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116275473 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088495361 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148613149 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118371222 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082625784 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078397223 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118766759 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121170988 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107208299 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07539498 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139107138 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072728468 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132114569 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16869643 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081454261 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.249328068 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09758199 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080284311 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108796549 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104133754 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090612134 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099213736 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175340667 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089248289 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151939066 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142266738 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114129767 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139088114 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101118922 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636554189 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078347976 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152404135 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11731787 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174191949 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098398469 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117208232 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109307822 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124587044 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145200924 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105759417 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174746657 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132885541 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116824285 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07981916 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102962899 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104460062 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089785826 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105646298 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113667548 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116969699 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094392505 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116079372 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124323827 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082011369 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095519955 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156082381 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117319157 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145113503 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141073815 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08481533 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118527466 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138847812 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080423315 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122399694 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152291601 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106645716 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0978998 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.223743009 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103613577 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170914498 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074019213 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165037065 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121916434 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109064834 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11367742 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114751511 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131574967 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108871556 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122832496 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094591563 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111214064 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114065364 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082088391 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077619211 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105136902 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113649985 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098184408 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098965021 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099233529 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151405086 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071520545 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096510847 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104666613 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14608043 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175929853 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088371414 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083241062 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119461519 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112876552 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113652643 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120895214 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080194388 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082339175 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082037656 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077341003 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108526538 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113187966 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104677885 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111468953 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16525133 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082827369 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226570799 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095306117 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105501276 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07025177 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078975131 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09622587 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097980044 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108479319 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101244915 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170245809 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09477973 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090455796 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09315586 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073423552 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08264069 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270937233 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111937561 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119995848 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098406739 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063103125 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10968965 seconds)
  done (took 59.200829426 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112174953 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.0817177 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097048685 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150050729 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122949986 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212734302 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157346752 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199513799 seconds)
  done (took 2.832666468 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07128008 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.0944368 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099952021 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082786246 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067147585 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068786914 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226002411 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080834702 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06667417 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088944068 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079417849 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069385312 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424268044 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067500136 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067768397 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062883022 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067659095 seconds)
  done (took 3.47795889 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370708252 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60042347 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373113648 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073608287 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.873744603 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089433979 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.068263257 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127384257 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073795521 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53970379 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.709297458 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12651836 seconds)
  done (took 18.728119894 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079328846 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070313073 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084102317 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084018097 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07226612 seconds)
  done (took 2.086730235 seconds)
done (took 108.829846486 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082973621 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.397870462 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054030636 seconds)
  done (took 2.179235821 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086758062 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085127848 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084597687 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082827707 seconds)
  done (took 2.048113756 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078012588 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076978304 seconds)
  done (took 1.854971748 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224276925 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.161062617 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087125216 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085906548 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077574982 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07890824 seconds)
  done (took 1.949055672 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075645691 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07496552 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072902645 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076198202 seconds)
  done (took 2.00091575 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078662639 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053408997 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05507605 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055872984 seconds)
  done (took 1.943394883 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088527941 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078578307 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078388735 seconds)
  done (took 1.946413934 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10458268 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084742406 seconds)
  done (took 1.889200626 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084105257 seconds)
  done (took 1.785491524 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102528714 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113412234 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13250095 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110536824 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138814114 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109231059 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085938039 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087418908 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077062604 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087863926 seconds)
  done (took 2.744567877 seconds)
done (took 22.593749675 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081873797 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366748114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36033973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089680064 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669365928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356519875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.025821949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09226303 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113690286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067735866 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084184675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649690588 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978603808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324911094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965914909 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319022742 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65089017 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068434938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068124956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067974412 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011130859 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067972504 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068163325 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068362889 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648774102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370990682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068337753 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319133351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068099431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069621462 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355026314 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069114965 seconds)
  done (took 16.271255638 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073665584 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118234085 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07417684 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084756193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071028589 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069612617 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071793039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069171856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120141867 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068280561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085002063 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068025544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072160729 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068865786 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087391099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068362034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069143417 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068431881 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068310844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068614713 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086245949 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067599448 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068368661 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068606392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06810987 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079685328 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068453145 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068427294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068522515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069974669 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070951811 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069371593 seconds)
  done (took 4.11607725 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119339877 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125506327 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074559003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103137698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11271131 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070246695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14360451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092958613 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128269449 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068697943 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084925387 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068730884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101188461 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069229348 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088176009 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068768496 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069293012 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069100574 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068797792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069041343 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087831227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068242694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06862589 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068973187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068974781 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081827466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069327888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068781802 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069263445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070457906 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072050861 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069439414 seconds)
  done (took 4.380024783 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075025443 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075260445 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083252821 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083829028 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069554355 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073000046 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073387762 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069632069 seconds)
  done (took 2.321500835 seconds)
done (took 28.796024085 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08196438 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069420885 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072511797 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080899174 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073477576 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079213593 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067463451 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074478668 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072684859 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072869474 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075121907 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067957157 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071164379 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067296856 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074031383 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068056108 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07966712 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07230438 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079407068 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079159574 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070276093 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073387197 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074217309 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079818865 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079560237 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079067919 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077782202 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07310473 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069158726 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070791905 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076823207 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084545531 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068909827 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079568445 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068304137 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068151362 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071761423 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068537191 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07966872 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076990073 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069794209 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077277614 seconds)
  done (took 4.809728081 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090296914 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091018947 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085245839 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062153563 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067003842 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064857716 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088691059 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059753861 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059914714 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087755291 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055957857 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059529888 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062629394 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053978627 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059676497 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057116897 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061686992 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055686668 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059365749 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059749662 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058062145 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054689169 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060240288 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062805763 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059565447 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062537331 seconds)
  done (took 3.424976656 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076499522 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08448958 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089002093 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126617527 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103878869 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077598293 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077973901 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093185804 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085458153 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06701949 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071472389 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093591957 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088053183 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073755872 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06795544 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08494586 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082340718 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069058126 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073413866 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090898013 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083782229 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083684578 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092449723 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080859898 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066731136 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069368088 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071258725 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080699088 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071963252 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07627182 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071438216 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070993575 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069164816 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078656766 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071448191 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068881812 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090766657 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077155896 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077918811 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068154801 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071291096 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068411271 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089564174 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122375478 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067653115 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074220091 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075631079 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077118643 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06781935 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086046957 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078597719 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067268117 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07073932 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.0669511 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067831286 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080667967 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069784058 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069833384 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076825849 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071204511 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086435298 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071429496 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083382546 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067425491 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075155502 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067072874 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068673795 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066918587 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092999461 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069359172 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108495222 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069302595 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068687543 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076765333 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075652328 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084870118 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068219033 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082650092 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077796249 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071114722 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076229009 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071090706 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070956568 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088090695 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070424469 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069036071 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068670543 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074244356 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070142414 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06925855 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080645827 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06761596 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07079706 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084620093 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067268386 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069220001 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073862763 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072351922 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067678613 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079007772 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07259054 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06852257 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076856 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067878359 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070975168 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07783911 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073600849 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066827821 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071823399 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073992997 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068636735 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069084017 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070811652 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069303977 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075939319 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074054577 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072302879 seconds)
  done (took 10.659816038 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165111178 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154679947 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070615392 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145656597 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07635611 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079522971 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148362179 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094652374 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068490669 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068880162 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069078878 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110241816 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106114312 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115613496 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079316444 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067730307 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083369347 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114397138 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14950985 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143070503 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083929157 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077202435 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070342184 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069330602 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070686978 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078878724 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085469298 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076860158 seconds)
  done (took 4.479665363 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084733274 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096944351 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074024889 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089606105 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091457233 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067997579 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070457483 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070067805 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080602196 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079378927 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.0678417 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073843283 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074918018 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071783545 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069140649 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074890931 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07560489 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069736207 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071010172 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073386116 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077891192 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081087607 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071578643 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067519652 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074304163 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067542868 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064804505 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084753369 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06807592 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090181487 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066038445 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074977678 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081497899 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068893939 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067784738 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067915239 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.0679561 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068031139 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069526018 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066442152 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066413172 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057963215 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066877166 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079892453 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074478928 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056779417 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073085764 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072754479 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072694814 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065369156 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070957889 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070444496 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07159387 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075010754 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072749907 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073182779 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069167811 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074509871 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075983577 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067553048 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064916803 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066142288 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072789323 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066664544 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075813276 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072628671 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066491402 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067561982 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069433771 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073606976 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067815441 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070746956 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065295777 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069637647 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072283241 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06936989 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069253488 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066273584 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067337848 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068317648 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055571375 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068252276 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054019867 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070839051 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066027102 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066464437 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067876082 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073007739 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080126079 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069455032 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073458527 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068853868 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066732579 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071109073 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060299716 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071330905 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082613068 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082866845 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067565914 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065663729 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082317542 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072543361 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067021905 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05663139 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075415221 seconds)
  done (took 9.250558927 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09146435 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069680695 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083672021 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091785283 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087380147 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075778362 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077137549 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069954627 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082196647 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074000445 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076562595 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068369994 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077424292 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07689748 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070103094 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077488489 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072150175 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08303538 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082378915 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06870554 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07616806 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080414633 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089786121 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08047914 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078560161 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080320425 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089542289 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072229433 seconds)
  done (took 3.971997086 seconds)
done (took 38.307113356 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.8123456 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.969936003 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.801083908 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.168428761 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.9687067 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.809556354 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.957119305 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.796043402 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.070078981 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.836171486 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.087625228 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.855849063 seconds)
done (took 65.866793725 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.835116339 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.94183345 seconds)
    (2/2) benchmarking "String"...
    done (took 2.075297679 seconds)
  done (took 5.754101418 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.102357588 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.338704772 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.042356393 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.796889154 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.801258351 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.093359084 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.602223399 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.327204772 seconds)
  done (took 30.740543298 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.892891546 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.021671195 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.472567196 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.507591885 seconds)
  done (took 15.680647547 seconds)
done (took 63.930047974 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.804901535 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.84304602 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.797619921 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.780346424 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.85528134 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.815724359 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.185897984 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.836589464 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.795394999 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.78662292 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.797677425 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.234198942 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.802011835 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.14069733 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.798467495 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.8040569 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.814612671 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.31155586 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.954469328 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.808135098 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.808019022 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.81517865 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.801887901 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.802898171 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.832584092 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.799754128 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.244358488 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.803131434 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.612602052 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.799441117 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.844455853 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.152924088 seconds)
  done (took 205.020545371 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.799516007 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.835586104 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.933442132 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.828873294 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.279231541 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.982262181 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.921626037 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.333299215 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.802965609 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.816136242 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.018893666 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.796831192 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.047221203 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.745437223 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.829282441 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.889536759 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.928102126 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.041933736 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.831641794 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.967966868 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.811035268 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.875074209 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.838060611 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.001432573 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.832249402 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.879034037 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.813799718 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.820947503 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.995978834 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.906874992 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.824261583 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.843487176 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.007070692 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.671091986 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.810150542 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.81095442 seconds)
  done (took 171.11212508 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.9650076 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.802435387 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.801198267 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802148195 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.808489072 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.801319599 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.932046133 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.928852767 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.262477115 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.017286641 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.851971871 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613717905 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.798287995 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.870813262 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.812465672 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.800302579 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.817751572 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.830163125 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.800519312 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.802542697 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.927564586 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.813905892 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.789212546 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.809390661 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.801887507 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808476644 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.172998105 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.799574789 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.804028311 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.807853455 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.046769199 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.800699953 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.805216707 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.689760379 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.158070209 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.892989175 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.801629767 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.808756877 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.803214346 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.025184476 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.803073176 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.80485254 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.807791615 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.978742893 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.800423004 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.932455514 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.801240549 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.29733166 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.800797405 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.803659108 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.353931392 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.455561152 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.804664411 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.804296968 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.806347801 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.804756058 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.804565998 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.810171626 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.467714253 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.878959939 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.804263735 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.804883158 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.806651196 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.809669697 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.811419856 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.804089737 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.875303031 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.80288824 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.103136093 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.863635074 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.915326628 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.926830633 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.805953241 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.804751538 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.875045082 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.899235235 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.80458656 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.805449673 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.807242926 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.80625844 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.889173521 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.803235099 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.926598007 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.811460113 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.808710355 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.857036464 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.877499361 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.803434206 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.685029299 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.80620983 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.805513901 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.113170569 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.872468387 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.803712532 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.806540803 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.808336438 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.926797758 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.932988761 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.58030414 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.807549428 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.506792732 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.811842027 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.947281022 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.804910834 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.984348483 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.809634192 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.889792122 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.809721569 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.810126646 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.807901203 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.841162524 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.806618333 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.870862545 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.804842011 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.181093035 seconds)
  done (took 405.444959391 seconds)
done (took 785.334924366 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.501755723 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.43513583 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.543902681 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.457365509 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.43567624 seconds)
  done (took 14.117781511 seconds)
done (took 15.862965339 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.89616556 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.897867143 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830129735 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.897384497 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.827146184 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.897340061 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.877848677 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.832813781 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.866135881 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.833532005 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.86658742 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.832708563 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.820585981 seconds)
  done (took 25.922882859 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.041289288 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.048239822 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.880071844 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.038863228 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.855209234 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.034655276 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.968388908 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.961326907 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.957229402 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.825363113 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.823020147 seconds)
  done (took 23.179865603 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.047450227 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.051111683 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.882278903 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.049546224 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.859065041 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.045565365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.970714331 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.961565916 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.960941896 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.824588842 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.822688707 seconds)
  done (took 23.222333869 seconds)
done (took 74.071750661 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.817636874 seconds)
  done (took 3.564453296 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.842090117 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.984772892 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.823742629 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.822841002 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.819259014 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.820802306 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.822985994 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.819421521 seconds)
  done (took 16.506652759 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.815263116 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.815911641 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.816346638 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.817886709 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.816731665 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.815693598 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.81635047 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.815109585 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.81597715 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.819150656 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.817596841 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.817386109 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.817778573 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.81843727 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.818968638 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.817462946 seconds)
  done (took 30.822995164 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.817504266 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.815637114 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.815364433 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.816675259 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.8165917 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.816629076 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.817681729 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.816992372 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.816840475 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.81650995 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.817976473 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.817486814 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.816830316 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.816554928 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.81619086 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.818690644 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.815834363 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.815693309 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.822106606 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.816529444 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.815883352 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.817372211 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.817038439 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.81740016 seconds)
  done (took 45.360696489 seconds)
done (took 98.001216259 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.688294733 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.402597247 seconds)
  done (took 8.839151577 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.822552657 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.820526667 seconds)
  done (took 5.43234915 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.820673022 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.819663673 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.81932924 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.818949929 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.82001411 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.821168102 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.820880406 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.820491177 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.820687841 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.82200109 seconds)
  done (took 19.955207195 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.8198907 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.82138417 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.818000274 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.82038509 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.819533911 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.817362119 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.819081279 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.82028634 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.819059039 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.818919775 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.822109513 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.816570839 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.82228686 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.817409746 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.822156575 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.818054309 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.818835783 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.817679013 seconds)
  done (took 34.499906665 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.822746659 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.821536407 seconds)
  done (took 5.395217979 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.818359236 seconds)
    (2/7) benchmarking "second"...
    done (took 1.817840326 seconds)
    (3/7) benchmarking "month"...
    done (took 1.819549391 seconds)
    (4/7) benchmarking "year"...
    done (took 1.816747843 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.818852675 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.81864326 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.817291407 seconds)
  done (took 14.479503693 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.821873936 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.984311813 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.049057009 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.494694855 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.822259901 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.825251151 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.798380616 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.826298587 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.826195192 seconds)
  done (took 20.200769974 seconds)
done (took 110.551251935 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.65569889 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.817244618 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.19796881 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.873206523 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.863562215 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.160912016 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.838312778 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.044411812 seconds)
done (took 43.20238952 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.913690644 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.362671892 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.400543149 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.156945089 seconds)
  done (took 12.671720859 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.801350853 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.351773864 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.853064441 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.408801263 seconds)
  done (took 20.18984353 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.185356947 seconds)
    (2/2) benchmarking "read"...
    done (took 2.174883003 seconds)
  done (took 6.117006 seconds)
done (took 47.647711293 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.824055686 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.823444942 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.823447321 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.819521397 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.822940755 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.821485819 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.821255669 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.820860111 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.823397 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.822092614 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.823001931 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822389376 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.820777229 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820304009 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82010843 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822275067 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.823518508 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.821498288 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821641541 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.82307466 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822070569 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825912649 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.822689185 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.82076858 seconds)
  done (took 45.485692695 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.826176085 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.823987902 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.823763538 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.826081825 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.824857427 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.824429103 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.824657817 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.823390485 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.825842901 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.824418374 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824547753 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.823869091 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.827457499 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.822721013 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825203841 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.821809032 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.824669982 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822935205 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825468239 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.822668144 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.825512463 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823055095 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.824567148 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825590336 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.825028442 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826147921 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.826518726 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.825195348 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.825924622 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.822959015 seconds)
  done (took 56.495852546 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.831796218 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.834922314 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.826605087 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.826081561 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.826306738 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.827800724 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.825984866 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.826653345 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.825130122 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.825837356 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.826394757 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.827491954 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.830379536 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.828321174 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.827713486 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.826570424 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.82790744 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.826484517 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.828492347 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.825951934 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.826389163 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.824773192 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.827464937 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.82717211 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.828139743 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.827770237 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.827376503 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.826415245 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.826956735 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.827501959 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.826626276 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.826472429 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.827955742 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.827855336 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.827457932 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.826563167 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.830492009 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.83567331 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.828925711 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.827924009 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.825172539 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.82738633 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.830665768 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.829011608 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.827406577 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.828399136 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.827302636 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.826662073 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.827454017 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.828256229 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.826913283 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.829314294 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.82889236 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.82951516 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.828504741 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.830551116 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.83073239 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.830382689 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.830277855 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.83018417 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.830440461 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.83046488 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.830693204 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.830017581 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.830917273 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.828585084 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.830862977 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.829844632 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.829696363 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.832238315 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.830986912 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.830064933 seconds)
  done (took 133.405584635 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.829057876 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.826987928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.828757608 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.82690232 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.827441976 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.831174789 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.825858654 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831595038 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828567517 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.829990603 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831967545 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.829091959 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826807196 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.831092246 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.832548179 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.828939357 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.831456815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.828552951 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.830824875 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.830753845 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831295597 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.828754051 seconds)
  done (took 42.010067467 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832464804 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.831310488 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.829863042 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.832431334 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.828221308 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.830801611 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.832229048 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.832253734 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83221335 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.827920293 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828871489 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831232672 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.828046163 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827793507 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831055392 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.83121578 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831892844 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.827718254 seconds)
  done (took 34.710296924 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.830109793 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.829704614 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.832024748 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.829780812 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.83116266 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.833713265 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832232039 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.833060335 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.831860832 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.830250772 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.832655707 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834556514 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.834749919 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832373782 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833603441 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.8298183 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.831063008 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830834131 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831755635 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.828832402 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.830269147 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833141997 seconds)
  done (took 42.061065641 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833234222 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834429807 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.831939912 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831959011 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.830178742 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.832262012 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.833445183 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.832149436 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.833726819 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.8337047 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830728673 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.834778419 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.831321374 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.832526074 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.83102166 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831688219 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.834798658 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.832840236 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835061787 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.832600915 seconds)
  done (took 38.417635515 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.835871911 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83581907 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.836984842 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837540735 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836175419 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.836513145 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835914918 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.835835167 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.835531175 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.836622335 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.83738732 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.836597493 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834490074 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.835324417 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.836074937 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837112903 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837768539 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.837589863 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.836524275 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835698413 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.837049248 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.836911214 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.836337892 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.836501741 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.835291682 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.835979395 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837282815 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.837091246 seconds)
  done (took 53.18589307 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835167039 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.835457324 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.831801556 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.835034773 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.833333247 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.835699418 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.835920973 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.83395024 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838498282 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.834418988 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.836931735 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.838162397 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.837730104 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.837279025 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.837543366 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.835907452 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837859386 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.835584785 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836909957 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834359044 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.836899359 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83816778 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.838014602 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834326605 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835747751 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.839303472 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835774018 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.8361023 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.839137525 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.835277253 seconds)
  done (took 56.85369052 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.859655442 seconds)
    (2/2) benchmarking "in"...
    done (took 1.85749133 seconds)
  done (took 5.48448352 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.838217708 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839793061 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.839305195 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.834858122 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.835056369 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.840583 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.842183128 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.8368054 seconds)
  done (took 16.47675425 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.839293693 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.839061627 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.84130819 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.839526874 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.839411143 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.839431809 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.844803596 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.841168829 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.840340442 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.840267103 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.847484873 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.849969929 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.841572405 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.839242341 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.838404314 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.841828163 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.840021098 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.839079482 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.84029634 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.840130798 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.840324088 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.842588983 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.841980734 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.838473781 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.841351285 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.850709966 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.844454674 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.841745455 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841264115 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.84423704 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.841650456 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.837642382 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.842759392 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.842060103 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.842275321 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.844158857 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.849053335 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.842395557 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.849077443 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.841880365 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.840929428 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.837425398 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.842841718 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.842374684 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.842930868 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.840818481 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.840824175 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.839811179 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.841482497 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.846819336 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.849384358 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.843515195 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.840321993 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.847597453 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.842967085 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.851244553 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.843368187 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.845595094 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.8531263 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.853300127 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.857718853 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.851233335 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.845470599 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.84253873 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.852148302 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.870038019 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.849618248 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.841318434 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.840529498 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.843604623 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.850848455 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.8567414 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.855946318 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.845357757 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845923837 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.843479694 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.843812829 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.841984117 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.851766254 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.846292283 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.843774412 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.844307071 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.853599468 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.870756169 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.843914275 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.845253645 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.845588075 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.844301596 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.844705236 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.858107911 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.845417323 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.843250143 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.843942084 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.84358899 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.848299819 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.844593037 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.84322018 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.844693392 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.843693879 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.845803943 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.844995061 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.849351086 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.855412757 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.845851802 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.844749112 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.850165292 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.84705724 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.843469448 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.852887407 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.844762965 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.846920293 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.845984378 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.853391444 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.843464302 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.847670873 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.855146186 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.845741128 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.847122233 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.844645812 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.84585506 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.853742971 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.873201916 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.842894985 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.8460727 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.84947527 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.860637656 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.844280825 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.847642041 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.843783007 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.842467483 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.843790475 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.845635912 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.847066946 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.847665438 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.847247839 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.849669957 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.84208003 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.846312442 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.847323419 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.847048929 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.846852849 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.845061423 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.848348295 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.848405282 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.847307593 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.848302245 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.851340606 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.845933151 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.84725659 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.846364539 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.844120778 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.847984624 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.847576527 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.847071823 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.845679021 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.8463414 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.845850387 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.847214156 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.847409088 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.84642076 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.848220176 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.849026109 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.852276173 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.84791731 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.85131946 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.848694251 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.846276102 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.848493207 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.847871044 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.847596901 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.846298331 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.848718106 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.850777738 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.858629048 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.847971252 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.847778649 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.849879485 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.84928707 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849101475 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.848269263 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.851072076 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.856140445 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.847416481 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.852896203 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.848732469 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.848412633 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.848999828 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.849109325 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.84941151 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.850058683 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.851415378 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.85977153 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.862394528 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.858429007 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.850668139 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.853229198 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.851052906 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.856315496 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.852842747 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.849098552 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.849535465 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.850256169 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.848944787 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.849795641 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.849364578 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.849874097 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.850129493 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.851036939 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.849564153 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.848842017 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.849434823 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.849627092 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.851242262 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.845445965 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.849629884 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.848470905 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.849344514 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.848084374 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.84827076 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.849652622 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.851354884 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.850352418 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.856971563 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.847901035 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.852063599 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.850965856 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.850854338 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.850146476 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.851880419 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.852404326 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.851420327 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.856981678 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.849748914 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.850599075 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.857457229 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.850299591 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.849181619 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.853419821 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.85253089 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.848194129 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.853736415 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.861058699 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.851126613 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.854025163 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.852322427 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.851483355 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.852276024 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.858035976 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.848699881 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.852512355 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.853511412 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.851581814 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.849197601 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.854094322 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.854393366 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.852348114 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.854096092 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.853440265 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.852635754 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.854141594 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.853455638 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.853156099 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.852338112 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.857800336 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.861899678 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.858790017 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.853449565 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.855063906 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.854623286 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.860332862 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.854097162 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.852481011 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.853782132 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.86671411 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.862816499 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.860241792 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.855750635 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.853091415 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.858441338 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.853667013 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.859883758 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.852913812 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.855141068 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.852513048 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.852682579 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.851780707 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.852510351 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.854825558 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.85492857 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.856255415 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.857616931 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.855328606 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.851455607 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.853152577 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.854550223 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.854659498 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.852356339 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.854795306 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.857185793 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.856554385 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.855606087 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.853815472 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.86298122 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.855195097 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.856176139 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.855846665 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.854951594 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.855037654 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.856662992 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.854946969 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.859156594 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.864105933 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.858151407 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.864769176 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.856643598 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.865215264 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.855159328 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.860500299 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.865692436 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.852077974 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.85312196 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.856918954 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.858516346 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.86209534 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.856915562 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.857431689 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.859734217 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.855302798 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.857612952 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.855965637 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.856685844 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.856105464 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.856285456 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.862890369 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.856389708 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.861896788 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.857361282 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.853253731 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.85792091 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.855590405 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.855287497 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.859794345 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.856650116 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.856792202 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.856868942 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.85604137 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.856428187 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.857684111 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.857088505 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.853991345 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.856170093 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863085207 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.857783626 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.862221967 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.857215658 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.864507523 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.857058354 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.863161776 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.856653425 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.858303139 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.859278474 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.855996722 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.858557532 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.856137271 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.85810906 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.856622091 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.860234313 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.86293602 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.857955393 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.860420958 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.857694977 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.85827059 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.857165915 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.869260346 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.885016978 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.858573652 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.865783339 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.854688225 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.860385269 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.863860257 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.857452397 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.858850658 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.862976583 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.872474568 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.867416883 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.859746204 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.861551805 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.861685619 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.858810321 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.858668905 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.859710893 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.858733923 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.859150631 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.861588147 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.859302325 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.86360918 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.858661344 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.861663161 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.861036966 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.861963915 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.871351392 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.859843871 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.861489666 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.860334251 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.859868773 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.86102134 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.859981216 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.859599874 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.861507026 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.860264668 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.862003097 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.869114326 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.867096747 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.863573921 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.85983986 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.861877375 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.861742335 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.861592337 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.860755738 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.860622835 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.861063677 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.860643876 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.861488053 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.860492968 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.860447751 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.860167321 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.862161164 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.860919101 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.864049189 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.872000597 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.8603222 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.858063557 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.861807521 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.860005439 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.8616181 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.861786704 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.86898785 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.865826705 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.87331309 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.872900135 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.867247787 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.860729169 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.864303619 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.8715563 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.86189448 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.860858641 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.862960492 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.863896527 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.861628242 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.86497688 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.864245296 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.867513475 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.860925691 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.859618443 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.869794858 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.861518097 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.860576111 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.861885799 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.867566809 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.863557552 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.860032414 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.862417153 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.862104167 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.869070823 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.862749447 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.860940032 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.864219271 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.859770437 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.865425995 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.867033118 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.86310676 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.863836171 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.860424191 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.86176183 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.862069656 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.862763753 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.859079569 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.862738772 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.861102588 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.86456101 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.871965072 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.860799747 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.864927619 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.864280508 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.862924505 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.863560773 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.863121647 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.859671635 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.862172709 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.863069028 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.863923096 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.866955251 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.867386177 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.86319538 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.865709502 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.86780304 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.863166113 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867239429 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.877228316 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.87349066 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.861472238 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.862190566 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.863324743 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.866751043 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.865707245 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.865410012 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.864506139 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.865665495 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.863163551 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.862838778 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.865562672 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.86740937 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.880820029 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.864907086 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.865097684 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.866283529 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.867301502 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.864566949 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.861016838 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.862588094 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.865422678 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.866865678 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.873582252 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.866569405 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.87005466 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.863403758 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.867306574 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.870060142 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.866920612 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.8753668 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.867109195 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.865996489 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.867845096 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.87030544 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.883296841 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.866366299 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.876488105 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.90037083 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.866764313 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.86815175 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.866667743 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.863678667 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.865640237 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.865785355 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.867225192 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.86656067 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.866472362 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.866116088 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.86962721 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.873555953 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.869414241 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.866538639 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.865451188 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.865413621 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.867460064 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.864534122 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.866906216 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.867480228 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.868623156 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.868834713 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.868034823 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.867616932 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.88175874 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.878177824 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.866118609 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.867301479 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.864233066 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.871151559 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.870173706 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.88003354 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.876532165 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.8677349 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.868654322 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.870455111 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.868001508 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.865164953 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.868641151 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.867416231 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.866808422 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.867414369 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.880345076 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.880198588 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.873973573 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.868092405 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.869985079 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.869351275 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.869949433 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.870710831 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.869798166 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.872002951 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.871396021 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.87374596 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.868920107 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.871292906 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.871520964 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.879144766 seconds)
  done (took 1108.185169763 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.866860356 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.86706187 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.865019607 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.867063938 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.867752554 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.867557603 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868920979 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.867211742 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.866794947 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.866515761 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.868397491 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.866191977 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.867952232 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.866506869 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.867955548 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.865868959 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.867409977 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.866544343 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.866627679 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.868289382 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.866643196 seconds)
  done (took 41.010498504 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.871869807 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.867932759 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.868117373 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.869725145 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.86991716 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.871657575 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.86724886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872316674 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.870754476 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868531736 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.870226637 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.87119652 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.86835278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.868340141 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868158122 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.870974342 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.872800962 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.868285351 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.871387928 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.870038675 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.871142931 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.869950318 seconds)
  done (took 42.938867365 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.872296972 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.871863441 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.873032657 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.869598116 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.873855343 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.869418658 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.871684518 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.87500424 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.87330872 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.872566375 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.873100431 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.876249885 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.882877584 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.880934291 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.874586034 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.873763661 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.017737147 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.872744232 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.872639218 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.872128169 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.869051694 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.878469099 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.869928859 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.870861866 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.871810279 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.872818207 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.87215531 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.872565248 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.87601163 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.874515058 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.878347795 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.874136256 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.873050699 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.874810882 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.872644809 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.873600825 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.879179996 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.874330213 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.870611306 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.875616501 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.884903957 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.897410161 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.874480993 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.879636777 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.875407001 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.875450732 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.877886114 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.884639619 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.871831726 seconds)
  done (took 93.818899253 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.873537908 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.875534 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.872619828 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.874680182 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.875759582 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.879278069 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.876982378 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.875492966 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.870366059 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.871809188 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.875492594 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.873408937 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.873161782 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.876727243 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.875852472 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.873873458 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.87330338 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.873060481 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.875272874 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.875197465 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.873512701 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.876630682 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.875290719 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.875097036 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.876155328 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.87416236 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.875333736 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.878216904 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.875801483 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.876355409 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.876369684 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.877697754 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.877928678 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.877731121 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.875775159 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.879038099 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.878419329 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.874875703 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.878455884 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.875124327 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.878368857 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.878050106 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.878211776 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.87796896 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.876009948 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.873888656 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.872866528 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.874937966 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.875507069 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.877600807 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.877401651 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.87558396 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.876417172 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.876050505 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.879609385 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.878921937 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.87535274 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.875891146 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.880142503 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.876186813 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.877218068 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.879335838 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.877418438 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.880024545 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.878753956 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.877717059 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.877001308 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.878212455 seconds)
  done (took 129.387262849 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.878384569 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.878728142 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.87881485 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.88054335 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.880351591 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.878824752 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.879945439 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.881360026 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.87925992 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.879301198 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.88022367 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.881344474 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.879846681 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.878675991 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.878352065 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.87903934 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.877084419 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.878604515 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.878841171 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.879459292 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.879932326 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.880776874 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.879394123 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.878074832 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.880356399 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.878883647 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.879645075 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.88055842 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.881469943 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.882235166 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.88018889 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.881052858 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.880863412 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.880485401 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.882260191 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.879719081 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.881933081 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.879119057 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.87854091 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.880560745 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.881971296 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.880596743 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.882833752 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.880204282 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.880206401 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.879476397 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.88165072 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.880041167 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.880272758 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.882022279 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.879906925 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.881528316 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.882106434 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.880257949 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.880135728 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.879623315 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.880894975 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.880779048 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.881222081 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.881426059 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.881951048 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.882048002 seconds)
  done (took 118.38539721 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.883499903 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.881892304 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.878773021 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.879181629 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.881452564 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.87992315 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.882453076 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.880872029 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.880581082 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.882295084 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.881878916 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.879766282 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.879134139 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.883272198 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.879151441 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.878898049 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.87892752 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.880832812 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.88146873 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.879102243 seconds)
  done (took 39.424024294 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.880071228 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.883177571 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.880855515 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.880676529 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.882129517 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.879268132 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.885061254 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.882297166 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.881075666 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884905178 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.881800239 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.884342758 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.882237477 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.880257593 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.885376426 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.882768602 seconds)
  done (took 31.926460931 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.883770955 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.883550954 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.883406946 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.883598415 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.879872717 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.881927088 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.883564899 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.883611781 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.882655114 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.885442094 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.884829647 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.885247463 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.884046474 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.883445202 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.880772988 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.88585957 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.882663996 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.881720668 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.883947202 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.885113109 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.881484041 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.881029295 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.885859869 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.884934083 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.883381761 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.883450267 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.88196857 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.88214878 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.882836298 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.883349352 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.881994431 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.882517167 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.883844274 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.883327754 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.884730342 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.883094666 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.884689611 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.886176745 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.885608537 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.887761036 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.885625785 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.882217611 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.885762687 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.885656555 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.884823785 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.88611865 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.883628049 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.883402591 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.882630023 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.883167208 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.888755628 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.88834037 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.886227312 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.887915954 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.886832702 seconds)
  done (took 105.439607977 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.885705594 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.886157511 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.882948206 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.886352368 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.886202014 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.884668171 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.886682586 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.883210293 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.884302487 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.885906875 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.886340705 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.887059238 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.883980032 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.886986438 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.886435146 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.885449508 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.884629068 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.885627351 seconds)
  done (took 35.754094429 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.88627864 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.88460153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.888149734 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.884429362 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.885497456 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.888550753 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.884130927 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.888215669 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.887830261 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.88538086 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.885706824 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.887684842 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.885411236 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.888204048 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.888599277 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886013615 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.888706342 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.889248403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.886648606 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.887018073 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.888667537 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.886387006 seconds)
  done (took 43.327761172 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.88768162 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.888673386 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.904265598 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.910018688 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.910169764 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.926927622 seconds)
  done (took 13.243533946 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.886962201 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888182721 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.886860607 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888852341 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.888795747 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885754765 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884851733 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885128722 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.887240425 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.886666285 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887161606 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88669335 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886042909 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.883385692 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.887760854 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887225276 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885293492 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88284302 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883570292 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886620559 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882734115 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.887191623 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.882729404 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.883515639 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882275838 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884537369 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887532539 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.884035867 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883247966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88698963 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887276996 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886622062 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886140816 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882701237 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886192496 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88553702 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.883675502 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887530166 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886712645 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88453279 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.883994228 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885866504 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886787509 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879996417 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881727924 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881057421 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881021608 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882770965 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880391277 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885097815 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884572051 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880973477 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88231248 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886343467 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882563188 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.884584721 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880629975 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880876975 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883718055 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879573681 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877626321 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88382261 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879119493 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882337418 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880859928 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880303331 seconds)
  done (took 126.185271377 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878818289 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.879390581 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879843127 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880522019 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879041112 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87866816 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880496554 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879990944 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881482986 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880181979 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881994441 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87946786 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880147484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880428097 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879242826 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880143985 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878340354 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878407284 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880102688 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882327032 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878902885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879475392 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879725313 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879633285 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878948885 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882418555 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879261891 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880652602 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879145312 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878096787 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879429972 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879770818 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880119439 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.88072248 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880989548 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881481805 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880780762 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88160464 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.882996228 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883372475 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881164761 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882913557 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881495297 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880952018 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883910288 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881379954 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88148041 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881679496 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882092292 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881624507 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882033146 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881647486 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881602441 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879881793 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88012893 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882725869 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881816074 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881026764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881292774 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.885317167 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.884069686 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.883447588 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884796001 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882679495 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882633304 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883409748 seconds)
  done (took 125.955554415 seconds)
done (took 2581.320976724 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.936685445 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.946932504 seconds)
  done (took 15.694328546 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.047482996 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.00090335 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.883119415 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.920259456 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.881270887 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.907441899 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.899029102 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.878788613 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.884457452 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.880181519 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.882162144 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.072516917 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.889061183 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.875147391 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.881065675 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.972239257 seconds)
  done (took 52.572073364 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.884750964 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.882842217 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.893371552 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.885136664 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.884591613 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.89458385 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.915712625 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.884577329 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.916248203 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.896001728 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.952290056 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.891562296 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.883478576 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.93267689 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.896701343 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.898967896 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.972637666 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.960362734 seconds)
  done (took 36.13652562 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.961388299 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.888586238 seconds)
  done (took 10.667684765 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.878922606 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.884230234 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.892333936 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.906040026 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.8948725 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.933064064 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.885349768 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.888338456 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.883051053 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.88009351 seconds)
  done (took 70.740515076 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.892303309 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.887275106 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.88193982 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.883073957 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.875811279 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.877832881 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.881199834 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.879454115 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.589044007 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.919405594 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.890153852 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.885000395 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.883315329 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.885624258 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.879159427 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.904771588 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.021733166 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.88207537 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.881700028 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.888277335 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.880185038 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.933792219 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.896568103 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.885209626 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.91193069 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.579575002 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.890727659 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.888515968 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.009333397 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.879537477 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.8803968 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.881103804 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.885177218 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.258719689 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.16069264 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.880648131 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.890878876 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.886026474 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.877084625 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.00669928 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.879605395 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.887197282 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.873023768 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.141346449 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.977896274 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.921417031 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.254205267 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.883448638 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.8818607 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.908864353 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.880936254 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.881511491 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.891661443 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.398279237 seconds)
  done (took 133.40913175 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.874429008 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.163102803 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026510078 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.876444898 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.146671674 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079721671 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.872837487 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92359191 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.870067969 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.075074408 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.031903934 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.978634391 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.87070363 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.872298963 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.869261223 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866783158 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.030470675 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.937130848 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.871157905 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.869239101 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896624199 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078333182 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.993338697 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.873702929 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.890223951 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079357232 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.990850426 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.975973887 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.150798507 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.867098107 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.935032967 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.868980821 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.868851655 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.865347144 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.020844177 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.963428473 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957433672 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.867778842 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.866299832 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.860870234 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.526224085 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061616735 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.96415603 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.006686987 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.014775017 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066968088 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.506800838 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.865289339 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.502709481 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.02723473 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.078645057 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.072075373 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.989597782 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.864346552 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.021673414 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.862139027 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.859521388 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.097940382 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005984876 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.964777559 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.863270843 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.863678008 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.8629664 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.106929572 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.864839966 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.963344587 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.858437631 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.863328438 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.959772827 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.966821879 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.006259859 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073755844 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.89061121 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.581930397 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.080890687 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.074536119 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.927058953 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09287233 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.859098698 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.855990753 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948137775 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.610083913 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.017503743 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.109417542 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.079260741 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892237536 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.464961404 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.857033182 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.054005476 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.042730811 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.056229027 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.005361628 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.010920307 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.974130331 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.859114353 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.854983703 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.066825899 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.995578176 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.862710573 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.220393953 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091080836 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.425725051 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.878601523 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.152198226 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994029622 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.167070057 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.481919041 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.859181391 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.023696507 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.901043965 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.857647548 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858466077 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.04939589 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.667551681 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.863068417 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.597874257 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.92323023 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.858077671 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.058981731 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.859673479 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073127056 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862454443 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094530577 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.952968384 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.892550401 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.033067618 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.007946128 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.649261814 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.105393633 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.103607236 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.973821699 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.126401354 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.592520803 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.862978707 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.135851854 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.859027036 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.859281048 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.02623587 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861679637 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.005566238 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.860701264 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.08478106 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885477777 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016177875 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.862990594 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.091957649 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.89668437 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909312789 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.861656151 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.983830375 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859591107 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.740689071 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012228033 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856488354 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.856391226 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.272388554 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.858008405 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.005815651 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.091814507 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888945838 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.930609449 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.385746609 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.863270528 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946710527 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.884184084 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.608042064 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.857207745 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.015850217 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.797153897 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.290447718 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.859467796 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.099321532 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.088915045 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.858632248 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.85668821 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.602213179 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.562225975 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.859304191 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.017890397 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.081600818 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.50853358 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062257412 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858700923 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988761873 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.85974297 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.932680983 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.20872946 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.85463698 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.850751902 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.858944749 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.855510662 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.857855557 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.069457635 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.888699228 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.353519247 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.992437166 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.074347369 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.16816391 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.076771078 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.900887707 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857520131 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.105983295 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.862420694 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.923814653 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.858485094 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.886299833 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09575225 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858722792 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.073876165 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.113945065 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.801868672 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.914933339 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.863096402 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.863299543 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.856553702 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.009151919 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.951763099 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.86023344 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.863104365 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.970348758 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.975292989 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.053029998 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.4550245 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.939400087 seconds)
  done (took 895.999432035 seconds)
done (took 1217.032457869 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.859912101 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.855515945 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.846317359 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.859104101 seconds)
  done (took 29.214948033 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.869207589 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.863043657 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.867068032 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.862125352 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.865318071 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.864769368 seconds)
  done (took 12.989179806 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.904028501 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.856561381 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.861399589 seconds)
  done (took 21.416739059 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.932031647 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.274638168 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.96717429 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.309449321 seconds)
  done (took 10.276866839 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.864493663 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.866019432 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.863487048 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.866627473 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.868940511 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.864895293 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.866032722 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.866108203 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.870573983 seconds)
  done (took 18.594366804 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.323925939 seconds)
done (took 98.609155575 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.029166215 seconds)
    (2/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.861106683 seconds)
    (3/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.938953002 seconds)
    (4/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.161786663 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.967440339 seconds)
    (6/309) benchmarking ("sort", Float64, false)...
    done (took 5.655147976 seconds)
    (7/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.450525443 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.159366633 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.934111892 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.328854876 seconds)
    (11/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.955142192 seconds)
    (12/309) benchmarking ("sort", Float32, false)...
    done (took 5.616303871 seconds)
    (13/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.152083615 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.003012647 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.861061429 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.904750716 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.221949106 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.887200989 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.178514929 seconds)
    (20/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.847096198 seconds)
    (21/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.977517508 seconds)
    (22/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.073744797 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.195776982 seconds)
    (24/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.949746868 seconds)
    (25/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.00030692 seconds)
    (26/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.988648074 seconds)
    (27/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.846602137 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.225435033 seconds)
    (29/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.077517275 seconds)
    (30/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.697486798 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.57848339 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.984773667 seconds)
    (33/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.881038298 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.504650905 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.981108734 seconds)
    (36/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.381484543 seconds)
    (37/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.854405371 seconds)
    (38/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.613728019 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.970607919 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.968806351 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.464677301 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.52058802 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.891638824 seconds)
    (44/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.993943337 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.247510747 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.163268751 seconds)
    (47/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.869163208 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.223128955 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.857616423 seconds)
    (50/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.932876649 seconds)
    (51/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.894766499 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.97736619 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.853831492 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.173069688 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.751836917 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.091647796 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.192379065 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.947201922 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.865482003 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.21429372 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.924991782 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.101460915 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.102558297 seconds)
    (64/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.676963543 seconds)
    (65/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.902532619 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.250380044 seconds)
    (67/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.006327988 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.241736087 seconds)
    (69/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.309727402 seconds)
    (70/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.256107247 seconds)
    (71/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.097575838 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.112571534 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.873538523 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.832630069 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.78015404 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.855936594 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.856974092 seconds)
    (78/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.417924583 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.752680246 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.884073815 seconds)
    (81/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.869091069 seconds)
    (82/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.068853369 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.338938647 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.587755305 seconds)
    (85/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.969079721 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.867447585 seconds)
    (87/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.064060472 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.894937646 seconds)
    (89/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.065437967 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.163466136 seconds)
    (91/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.959079388 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.854312889 seconds)
    (93/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.332125309 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.696178528 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.627888904 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.871852035 seconds)
    (97/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.89809398 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.198808222 seconds)
    (99/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.450166882 seconds)
    (100/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.387237676 seconds)
    (101/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.875347719 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.855668277 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.623798895 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.163036426 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.234554779 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.138712286 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.064613104 seconds)
    (108/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.101798778 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.130941899 seconds)
    (110/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.167485355 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.116983519 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.869398698 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.147576953 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.7342465 seconds)
    (115/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.379646759 seconds)
    (116/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.136290623 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.168803784 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.872196916 seconds)
    (119/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.159308246 seconds)
    (120/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.88082769 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.249361409 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.031851348 seconds)
    (123/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.002383306 seconds)
    (124/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.371342467 seconds)
    (125/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.0845982 seconds)
    (126/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.787609429 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.192702473 seconds)
    (128/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.469576825 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.420121408 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.896977697 seconds)
    (131/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.871706511 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.185471274 seconds)
    (133/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.382476537 seconds)
    (134/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.958860463 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.516053915 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.79832359 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.887838532 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.919244566 seconds)
    (139/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.963932109 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.074339212 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.087462707 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.408924842 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.128235161 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.756548204 seconds)
    (145/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.897871714 seconds)
    (146/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.953141318 seconds)
    (147/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.956554004 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.003301761 seconds)
    (149/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.888079424 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.365753949 seconds)
    (151/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.35058817 seconds)
    (152/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.056428752 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.919749524 seconds)
    (154/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.278348377 seconds)
    (155/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.946919854 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.059742139 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.097170158 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.900702595 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.386492634 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.47077728 seconds)
    (161/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.063097472 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.894961587 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.017140291 seconds)
    (164/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.930415828 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.901966763 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.977542544 seconds)
    (167/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.978154241 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.105970765 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.04909874 seconds)
    (170/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.168558815 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.794814032 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.947686627 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.230881948 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.898290455 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.221914633 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.968880047 seconds)
    (177/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.885200138 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.055715359 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.932200287 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.006377847 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.873823518 seconds)
    (182/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.162458765 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.673991189 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.877729833 seconds)
    (185/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.994307789 seconds)
    (186/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.858336695 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.329695055 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.379361367 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.87695054 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.471961942 seconds)
    (191/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.899524106 seconds)
    (192/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.88084332 seconds)
    (193/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.438461621 seconds)
    (194/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.01985386 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.90720407 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.858815266 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.925408721 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.860089365 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 3.2692071 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.516004528 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.104844487 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.094510358 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.500314592 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.970333607 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.939838998 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.23696133 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.859949445 seconds)
    (208/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.501781639 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.930309971 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.859120682 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.616984211 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.145617218 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.876201135 seconds)
    (214/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.962019288 seconds)
    (215/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.962402636 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.874557506 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.56571951 seconds)
    (218/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.98176485 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.01773107 seconds)
    (220/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.061958873 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.878334918 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.280503236 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.665756739 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.111689678 seconds)
    (225/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.979089606 seconds)
    (226/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.27382543 seconds)
    (227/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.874876914 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.251783382 seconds)
    (229/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.878103929 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.980074011 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.878687394 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.897812763 seconds)
    (233/309) benchmarking ("sort", Int8, false)...
    done (took 4.831415547 seconds)
    (234/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.98872043 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.91711972 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.029638707 seconds)
    (237/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.164696332 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.250302707 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.217558748 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.173828288 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.832225195 seconds)
    (242/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.488830617 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.961944375 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.958563993 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.982427306 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.863199938 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.041637989 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.909609528 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.892767511 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.674140955 seconds)
    (251/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.880900157 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.896885874 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.123784484 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.955300675 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.879507951 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.331390289 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.008680237 seconds)
    (258/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.93982541 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.973238734 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.102254699 seconds)
    (261/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.587400798 seconds)
    (262/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.480479282 seconds)
    (263/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.003269743 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.903458921 seconds)
    (265/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.023100561 seconds)
    (266/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.015039456 seconds)
    (267/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.880964686 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.877551256 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.112510405 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.273558863 seconds)
    (271/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.962548242 seconds)
    (272/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.031967706 seconds)
    (273/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.215224774 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.258641422 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.019379625 seconds)
    (276/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.891151416 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.907744134 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.69629537 seconds)
    (279/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.968687745 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.240759814 seconds)
    (281/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.045946574 seconds)
    (282/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.058093768 seconds)
    (283/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.214341312 seconds)
    (284/309) benchmarking ("sort", BigInt, false)...
    done (took 6.877572269 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.979395539 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.960686258 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.180130745 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.537365008 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.040135008 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.559540391 seconds)
    (291/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.169889336 seconds)
    (292/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.961059692 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.844169181 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.668080846 seconds)
    (295/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.368079684 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.007722599 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.862631471 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.058886591 seconds)
    (299/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.029268638 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.923681246 seconds)
    (301/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.943039938 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.177854334 seconds)
    (303/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.967004683 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.878212491 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.984762246 seconds)
    (306/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.310984196 seconds)
    (307/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.001556446 seconds)
    (308/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.843258093 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.227980953 seconds)
  done (took 1018.437470518 seconds)
done (took 1020.306013166 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.934756436 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911909732 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.892926518 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.914927423 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.003816132 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.92651425 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.90478309 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.893078709 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.939843223 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.941012935 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.892260447 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.924911468 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.897322786 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.895529328 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.890805987 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910212039 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.198964478 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.915624227 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.912137058 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.904096616 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.91264553 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.893462385 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.941693959 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.923734518 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.897911711 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.899418838 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.898891558 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.916622984 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.004996423 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.898715493 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.897076172 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.906518998 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.199136455 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.913487204 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.889038814 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.914361629 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.907946784 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.901440944 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.896956769 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.927288339 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.327338768 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.89759328 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.898261857 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.896685546 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.896645114 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.899827015 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.89673886 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.902199899 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90931372 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.910195908 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.328086049 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.913171032 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.899789005 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.896472777 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.906007562 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.896692614 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.900633606 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.912470992 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.917682594 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914448025 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.187848643 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.919301819 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.897899868 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.912458718 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.904808824 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.364234775 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.894831244 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.900887289 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.327045583 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.90296733 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.364106919 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.909164554 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.898123014 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.910373403 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.928938614 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.200072104 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.912317362 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.896042667 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.904776168 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.89547843 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.907613859 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.910096518 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.901002237 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.8980196 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.911643687 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.929945503 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.907026242 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.900223189 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.906284662 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.917766136 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.905579859 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.908587977 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.900708019 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.891564757 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.906370376 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.900245462 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.902297137 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.90098161 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.902469004 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.907832805 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.329211709 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.918140879 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.895582495 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.89538509 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.899084636 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.914674685 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.326724984 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.904566416 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.917891123 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.946516882 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.899860852 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.190137127 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.924504768 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917234298 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.908836313 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.902353214 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.894467154 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.191456912 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.349936194 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.919686774 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.899976374 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.897189726 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91482209 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.902272639 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.895305636 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.202170836 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.920909837 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.9139008 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.021098463 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.909864248 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.933216448 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.899091406 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.903282645 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.932842579 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.917444253 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.93229798 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.90100762 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.916372055 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.916595071 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.895576597 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.911459401 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.911002644 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.900752536 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.906606823 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.8943414 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.934584745 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914243751 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.914695422 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.920846505 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.022123565 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.896958436 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.19126616 seconds)
done (took 298.091594402 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.965516272 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.892368383 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.997122759 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.89586393 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.979327049 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.981283063 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.892132671 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.8944765 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.893961963 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.275093719 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.892604311 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.894039813 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.892676451 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.893217437 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.978747004 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.89564522 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.892305521 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.236917691 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.897262738 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.968131658 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.893264096 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.893419639 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.895529592 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.27806164 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.896486121 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.896746918 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.966236801 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.896870383 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.240619702 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.894461773 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.888995915 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.241756518 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.985861469 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.924388265 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.906716579 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.89478646 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.98149977 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.908658664 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.978893719 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.979148889 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.001320206 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.927270073 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.89714159 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.893588967 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.899971288 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.897730322 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.895173336 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.925354915 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.89102077 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.895332753 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.239367077 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.909458784 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.896076143 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.893686276 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.895854334 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.928278912 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.895275759 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.898654379 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.988463144 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.897368618 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.960615798 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.277406219 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.275477066 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.898628223 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.898458704 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.897375385 seconds)
  done (took 186.148124441 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.96486297 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.970736744 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.966442994 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.901189929 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.951819277 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.970951645 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.902388648 seconds)
  done (took 15.452773428 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.905950187 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.898730763 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.948944403 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.947974097 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.898288689 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.049359788 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.899353559 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.911991424 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.303388041 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.954804673 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.899892209 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.900733252 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.906098872 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.89593314 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.947358192 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.910716411 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.01396385 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.902476403 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.901539039 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.051763207 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.897883696 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.905547601 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.969213292 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.909645539 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.901001866 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.906356181 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.482324637 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.900358122 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.899288558 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.900399538 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.898189983 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.944155485 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.900224745 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.896497372 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89910915 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.01970401 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.900991442 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.898788951 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.901583115 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.899542279 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.900520251 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.90087179 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.900400648 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.898062408 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.900292846 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.925323569 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.901664508 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.900070078 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.901519003 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.902509382 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.950982662 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.901479956 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.898097634 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.899523309 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.956654444 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.909264858 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.903334997 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.89855765 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.902579093 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.900089559 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.052375429 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.950737665 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.901118753 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.950725973 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.90127233 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.903913637 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.902193595 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.903691553 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.956464476 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.902541551 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.950726415 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.89800298 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.061978016 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.925515069 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.902566953 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.904997992 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.905414537 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.901715264 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.89847029 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.909790511 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.899307829 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.903518387 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.909326084 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.899832583 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.901414654 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.013255014 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.011685912 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.90029794 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.914731774 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.910040315 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.901428789 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.956104971 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.903599561 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.900343819 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.954454998 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.016889171 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.972339044 seconds)
  done (took 209.315016023 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.908918304 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.910136044 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.905054391 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.918607252 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.904709085 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.903897759 seconds)
  done (took 13.281973931 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.90460531 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.906350682 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.900958505 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.901946671 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.904512515 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.905546554 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.905123511 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.906389584 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.907195139 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.904845747 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.903566094 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.905994557 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.905050352 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.903146715 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.905905778 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.90390522 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.905041792 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.902556217 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.906337606 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.904468898 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.048035716 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.904565938 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904313737 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.906220665 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.908225598 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.904605024 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.911018814 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.901915563 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.906460952 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.910116809 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.907315674 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.905126995 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.906559448 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.910967537 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.909422951 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.906722691 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.908204258 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.907131792 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.90321542 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.907983256 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.905631871 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904193622 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.905013068 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.908816128 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.908292228 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.911486632 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.910973194 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.91404171 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.904136264 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.906957605 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.908444334 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.907287166 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.907471837 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.90613594 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.908891513 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.910035737 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.911530716 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.907778077 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.905942219 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.908420059 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.908027648 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.907385407 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.907769596 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.910473615 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.913904654 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.909564976 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.906601624 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.910426012 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.908037044 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.907630505 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.908425637 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.905720423 seconds)
  done (took 140.270478846 seconds)
done (took 566.304985559 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.187929198 seconds)
  done (took 9.020291022 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.994761465 seconds)
  done (took 8.925063928 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.356052233 seconds)
  done (took 10.189195228 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.91620933 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.902044742 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.911148286 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.897800161 seconds)
  done (took 29.47156345 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.284542337 seconds)
  done (took 9.118169419 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.910876504 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.897029489 seconds)
  done (took 15.70974537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.962293914 seconds)
  done (took 8.797997278 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.995313493 seconds)
  done (took 8.840113798 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.926752885 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.921791599 seconds)
  done (took 15.697524916 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.889766161 seconds)
  done (took 8.726224913 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.534396498 seconds)
  done (took 11.378374258 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.919561706 seconds)
  done (took 8.768584157 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.939477589 seconds)
  done (took 8.776536431 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.972116229 seconds)
  done (took 9.809302974 seconds)
done (took 165.061147765 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.907273276 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.902653524 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.903312551 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.899960764 seconds)
  done (took 29.449355499 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.94524867 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.944149487 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.945587228 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.953693377 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.947141916 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.943950705 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.937150349 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.937752799 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.955884194 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.948654995 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.947420485 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.947292739 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.945066412 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.951468302 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.947219952 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.946161896 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.95681987 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.945985382 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.938535939 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.948331566 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.912804997 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.957100541 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.952172161 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.912817912 seconds)
  done (took 48.507039545 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.110342404 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.983661566 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.067040755 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.965593526 seconds)
  done (took 9.964313289 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.964750481 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.964689164 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.976837433 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.01772044 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.041703334 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.976090195 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.939737787 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.934254633 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.920905541 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.965911355 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.042427446 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.982339433 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.064714481 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.912713822 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.108500099 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.913359339 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.91437294 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.965216326 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.016539146 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.03372385 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.914521223 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.965628688 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.968646926 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.982436534 seconds)
  done (took 49.326331487 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.911708703 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.921569246 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.91961119 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.912825178 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.913246853 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.915167707 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.919695456 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.913755929 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.934178541 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.914398155 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.912776061 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.912352157 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.912277358 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.913282448 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.912930407 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.925351645 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.927149462 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.914149837 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.915377366 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.91904681 seconds)
  done (took 40.181671278 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.9066366 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.761387604 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.259502783 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.164289903 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.908147685 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.904918767 seconds)
  done (took 31.74403253 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.927042828 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.918333113 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.914468521 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.970926779 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.049367689 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.922756542 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.916178201 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.924208306 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.957938479 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.97548885 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.930422559 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.940566261 seconds)
  done (took 25.18987259 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.907984005 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.907416527 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.909053508 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.924495985 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.925350709 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.921775593 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.922360169 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.908848865 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.925253539 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.931420617 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.921059834 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.924914392 seconds)
  done (took 44.874118053 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998453769 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.953482135 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.94321637 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591217243 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.286892336 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120028965 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.560085686 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.241830219 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.91289682 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184490622 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.972768808 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008581649 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.167537431 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348051927 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.938590489 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.373191164 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20741033 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121111426 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934527199 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.602532752 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970602648 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.033022635 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.653886821 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.966654276 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123784405 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.045061423 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.171369784 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.90985842 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045763995 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947610717 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922684164 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.910470104 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184947382 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297948055 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013326213 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921885307 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.532683285 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.624440911 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.904387304 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.694124835 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.624954408 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.030680191 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924303708 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911929558 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846472429 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.996466543 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285518931 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.915006743 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.623032478 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913034514 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921649523 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006093329 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.916090455 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.727358773 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863105521 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.911218488 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.909791562 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919215203 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.486454516 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.024384902 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.028759379 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.882589779 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.006943752 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.650709909 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296984603 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.057995057 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.916633642 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.917388021 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847807263 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.600069476 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966410701 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243735713 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.931971128 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.563861782 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224571064 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.048509101 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853449515 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182630905 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.397880266 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.882222708 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144007157 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914907015 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850953436 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.859784198 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849603745 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183794912 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947615682 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.659585744 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953221816 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.246719872 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.922868922 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93229404 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93959799 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13965531 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.800291938 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915537884 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.713520856 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.058009175 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934652544 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245853956 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847763487 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.915633857 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173623319 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.1256814 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.91462288 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.403877002 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072725365 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.436337356 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.962096455 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.99252795 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959223066 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.186000981 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970074122 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018306986 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970209766 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.915951023 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211504114 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465983191 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.045546062 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.013399788 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.040785445 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.229432044 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939514542 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00011656 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925534854 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.918110099 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.699958112 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465316292 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.915009016 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.920483233 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916509754 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960036851 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.917849991 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867772822 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.540243971 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016696917 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.927306475 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142795243 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.449844871 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220911606 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850774797 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246833113 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.007222838 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.140876774 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.595342482 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.99617366 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178227331 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.912210357 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.949272164 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961190049 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9369317 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01591267 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939289155 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.999711337 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208139912 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.920319913 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.922316979 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.698771139 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.950401933 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918283257 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.922691885 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.670553283 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1898019 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939989362 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.92125444 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.808247899 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.931581656 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98253345 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925048804 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929161752 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.45846797 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.630829995 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.923711218 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.505516781 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142976324 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929516993 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.632454829 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030940319 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.003460385 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189408598 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97590459 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.85348319 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.630785747 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.612030879 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920143902 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85494112 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.919858746 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927632798 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931457472 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.116410192 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.192507312 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960616684 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.611400335 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.958749386 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930718017 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.925268996 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920771467 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.431311533 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.025677084 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.039888062 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961809334 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065132268 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.934447896 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.854481284 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.923970552 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925393989 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.921896683 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.921298752 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954181232 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.616201046 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300723164 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180064811 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.531818213 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932592025 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.66970619 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.976672229 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.921098895 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.595414277 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147784984 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.957688584 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931420279 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.932955249 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.684895004 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.62591089 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.489475142 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24180695 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223176705 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355876079 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.070995043 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.945528149 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258729198 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854145373 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.479125037 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.979851683 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271443999 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8660801 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006671044 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.565855867 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271007528 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935606263 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150962402 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310950799 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.688382658 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063260525 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135671362 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958633244 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.025362398 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881644638 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.22360083 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065945139 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.611573341 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123186245 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260512028 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.592827182 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.046152118 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.923541473 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.596389439 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004861554 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.635013038 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.096582318 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.040894916 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.901184907 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399987627 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.928434047 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.150851493 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273020836 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.019505083 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.042899709 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858692331 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.936909448 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.936068821 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.927331638 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.922737352 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.797777832 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.17794477 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936764191 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858997353 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.976484331 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20873256 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.823909832 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.931445686 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925933337 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218739364 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.420567468 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088971952 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.958830618 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.44000537 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93218235 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.860224161 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862127144 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.620091754 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.932295132 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90334855 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13118818 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.02698932 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839801585 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.941682229 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003539333 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183341347 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.941757644 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.196485591 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199294127 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.623049097 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948426458 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.027663501 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.604478914 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.031441714 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.928407087 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16403978 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682855221 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.151111607 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.970457359 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.875750947 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.926513982 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139340909 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.926616678 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.867717162 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152729199 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.646918475 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.000598992 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246577485 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998727106 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.864253737 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.968905839 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.01938541 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939250542 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008247884 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938953941 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.939786573 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.939541541 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975391317 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.875095575 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.045518466 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.941789866 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021987697 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.036677394 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.451293255 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.931674262 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20370985 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289942281 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24993232 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984383844 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931393203 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931136767 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863804799 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076033548 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.157037785 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203867977 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.060787497 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.042761643 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953646929 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.593349729 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.07050253 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16700084 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207409048 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.825798062 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.392124734 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963418251 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.930264741 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941400205 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.140564438 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141838044 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227583427 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063799005 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.948662412 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290094734 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201675394 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.932691069 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929457342 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522330681 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.941355096 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.708782999 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.968600459 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.864043899 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201716735 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941841525 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312573315 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.950288905 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.092210694 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.705215924 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.650351368 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.221009222 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.915773068 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991539353 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205249972 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319208524 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240942704 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998868497 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944162085 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.039470758 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080156847 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.806003476 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930648519 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93256218 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98179719 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.643845049 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.942821374 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20869887 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240956664 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.931234537 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.804633583 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954116789 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.944625146 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.15632661 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.204553936 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182908519 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944233633 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.938820591 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.748859837 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209928771 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991003779 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869342307 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.934299806 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031891006 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179870653 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953388538 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.392098594 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.645125573 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204980276 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.933453081 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955793876 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.042014449 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302160189 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255483709 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.467541692 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140714755 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.520382071 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.473535937 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229119924 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.939115046 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.027170254 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231187359 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.938302873 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.947182962 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969043706 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.203651323 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243987389 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.935832642 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72015928 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.903350873 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.277864522 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.496001341 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87308128 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.942724097 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.997820212 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.934075137 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.066508986 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944497931 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.809167644 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039014279 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.689424116 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209316799 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.93979121 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.92437639 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.654565495 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.161854712 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965987556 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080084252 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935998448 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.610028635 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.28790892 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.193563027 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.960673663 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.938403119 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.940965686 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936363235 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924703626 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.130997389 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.131745377 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209842396 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.98695216 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.969788837 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.941118248 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.153584184 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149845865 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.892935999 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072262227 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962919848 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974174675 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.842801639 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.440277871 seconds)
  done (took 1697.830346492 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.942577393 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.96561963 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.97168798 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.999096038 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.960817254 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.976972591 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.117429852 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.943734647 seconds)
  done (took 57.747451117 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.937352736 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.132471559 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.944029201 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.936679979 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.944197464 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.936759285 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.10021408 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.944227608 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.945189601 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.948662989 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.945339571 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.935585763 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.246386149 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.960419376 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.938710137 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.924955704 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.94402619 seconds)
  done (took 75.555700376 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.96476928 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.007081773 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.97170243 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.951432824 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.896828869 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.945245597 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.753794148 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.964316956 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.938013055 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.16588237 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.579007038 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.951420798 seconds)
  done (took 90.960158274 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.95109237 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.946734307 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.945915976 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.947177787 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.946073508 seconds)
  done (took 11.612759072 seconds)
done (took 2214.80377963 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.286858855 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.160244807 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.180107934 seconds)
  done (took 6.211263747 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.090112655 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.137026505 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.257327874 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.262677884 seconds)
  done (took 10.621639274 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.228524278 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.326876912 seconds)
  done (took 6.427838725 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.337371612 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.94364285 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.315365569 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.942846915 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.938433898 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.936330718 seconds)
  done (took 22.693433361 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.946163647 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.947438281 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.947951158 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.947432721 seconds)
  done (took 9.66068272 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.924183776 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.618309126 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.925096481 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.938985144 seconds)
  done (took 21.277893624 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.693146232 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.705386991 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.690126722 seconds)
  done (took 9.96060052 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.459506108 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.830123761 seconds)
  done (took 9.161356847 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.205205175 seconds)
  done (took 4.079204703 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.076875908 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.254335534 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.447618277 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.446249239 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.543946671 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.615137755 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.250447921 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.179625944 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.336843288 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.368219121 seconds)
  done (took 25.394368466 seconds)
done (took 141.241944666 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.326066613 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.187752115 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.147137886 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.281314418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.178596499 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.144492534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.364330593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.264349921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.792491957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.784392321 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.278911723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.163577095 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.097696093 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.181142499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.101870519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.177897796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.160408946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.335708145 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.014719245 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.175489962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.372165589 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.918119946 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.120050223 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.933896093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.165019782 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.094852558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.497716251 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.174681746 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.168517249 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.510993568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.140825387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.334097198 seconds)
  done (took 175.46457652 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.703864186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.942355988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.942011573 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.940708455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.34507951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.941447105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.939931062 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.941610307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.219694281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.181491658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.942692315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.296701824 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.944925569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.940636963 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.944712113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.942953103 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.297144969 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.725379016 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.944072127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.940416046 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.942568176 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.165990389 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.943996743 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.186441348 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.267791229 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.944627425 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.914386084 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.949578923 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.940418805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.947981006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.954191725 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.944435206 seconds)
  done (took 209.99855377 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.945336274 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.942817544 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.941857661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.94476164 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.944395338 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.946128488 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.948569515 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.945688561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.514136956 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.52012128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.956243505 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.950678475 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.949704103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.943053408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.953355463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.94521572 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.958221123 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.953343142 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.950198168 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.95474209 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.956993579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.65311564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.959070774 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.644013682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.952366541 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.954140113 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.945547886 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.954493694 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.961241681 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.960215862 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.956286424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.943147305 seconds)
  done (took 222.840501614 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.149582631 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.953344206 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.956205596 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.907028323 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.954810881 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.95552569 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.946491343 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.153938461 seconds)
  done (took 19.878408422 seconds)
done (took 630.064612922 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.409056229 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.24131901 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.12439514 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.974919274 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.238531185 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.010076005 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.975116729 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.035424476 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.707562086 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.038777846 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.611071755 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.987253519 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.701421654 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.992637447 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.10510217 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.026348138 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.535592478 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.623972627 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.146590071 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.049498033 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.144122574 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.933880584 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.042077124 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.712852895 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.717101546 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.9700691 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.139674253 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.541368245 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.982157411 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.136430103 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.715108976 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.348615467 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.979111733 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.968321538 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.023058933 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.003719907 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.309924187 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.976109218 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.093428949 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.741540119 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.046843485 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.600931358 seconds)
  done (took 106.542976263 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.948650681 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.944013667 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.942321858 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.947772716 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.946583473 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.944872679 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.946068686 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.945302951 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.94678259 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.945010445 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.943533891 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.946850059 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.945149424 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.946784924 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.946213451 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.947769197 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.951916169 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.949041524 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.951757537 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.948417555 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.948205983 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.94352019 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.947946982 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.942646635 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.944341581 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.946047115 seconds)
  done (took 52.501286913 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.96236294 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.099556195 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.180440769 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.972083455 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.960360491 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.962053007 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.976495324 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.962714701 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.96212018 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.962682594 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.049045653 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.964860475 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.977303877 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.175941624 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.968905903 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.961356355 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.960684311 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.960473642 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.106789142 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.974290117 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.981728445 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.964420357 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.979623266 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.974116416 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.960923398 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.963054444 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.965606959 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.433145805 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.966305061 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.050033337 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.00311023 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.978628256 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.399843274 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.186945381 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.006917656 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.966735262 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.961342233 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.05906479 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.965868571 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.960474082 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.977629399 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.964231952 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.178302508 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.449949648 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.968879488 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.963071278 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.445495677 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.063390168 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.999229319 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.973120644 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.184659488 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.972580768 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.963609368 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.963006693 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.997788859 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.9735397 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.964086797 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.329085176 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.970927128 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.979209223 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.964483329 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.962196346 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.114515731 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.967930966 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.106306205 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.967348018 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.968387936 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.961826039 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.180442961 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.972341124 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.468421163 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.970214994 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.961664603 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.051341777 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.108631309 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.478719261 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.970067298 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.118775906 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.412733173 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.982240293 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.967405916 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.426343933 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.985498752 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.96510088 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.965656336 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.964708798 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.965034358 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.011845981 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.978770828 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.392304462 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.458255266 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.336517387 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.985925569 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.976096166 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.96397662 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.331171619 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.969803378 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.965484007 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.177476087 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.477859466 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.973150293 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.972840968 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.448420705 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.974854275 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.984910569 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.970988343 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.188590843 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.974781636 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.008716595 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.966011411 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.970132109 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.967665496 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.981217612 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.970424752 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.963155055 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.4381572 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.070723743 seconds)
  done (took 242.777344106 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.96021498 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.958043051 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.960026202 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.958852855 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.958043038 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.965337478 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.959236531 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.958563452 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.965461238 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.957403345 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.961450087 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.962601959 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.957751912 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.966591621 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.492725597 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.973546526 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.581059812 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.970140971 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.968380181 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.963655296 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.644935225 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.972852372 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.966366528 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.970420031 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.96668513 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.968706063 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.973224229 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.00184856 seconds)
  done (took 170.756044854 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.974558302 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.151100612 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.987464504 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.009356343 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.98245296 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.972509873 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.997950073 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.994128471 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.978984522 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.971499543 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.971903188 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.033541247 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.982974053 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.106483146 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.007971636 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.004161817 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.08006628 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.982197262 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.974562047 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.973454627 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.003563057 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.968361546 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.033695083 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.100503246 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.98737917 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.090208049 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.975744627 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.974535367 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.974317532 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.091402352 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.986463794 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.032093747 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.000638976 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.98764042 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.092926869 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.08895486 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.078016803 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.00073669 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.9778239 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.970812613 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.973477061 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.962955111 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.08997943 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.989536995 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.975511323 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.081385371 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.989119592 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.976700608 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.982702701 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.972477265 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.984217371 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.991454871 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.038691019 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.106294777 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.004442755 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.997420217 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.00113271 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.24730287 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.978741079 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.076354865 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.967604635 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.09314668 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.992987029 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.965254811 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.974138826 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.977306704 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.001394873 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.002244112 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.082304743 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.980361368 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.076659793 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.012977429 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.980654684 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.975658673 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.978026236 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.094321625 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.095361377 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.012831881 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.010882915 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.003673917 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.971882698 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.975099177 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.964911326 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.994411178 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.981080525 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.094657004 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.094933035 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.986069033 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.977944187 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.978406154 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.978731365 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.000814485 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.097929276 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.011519931 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.074686806 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.043514077 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.050719978 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.987764419 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.987546292 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.979406231 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.03877758 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.988278495 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.984985058 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.298778784 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.044950981 seconds)
  done (took 213.740446501 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.43336144 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.026909589 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.030489718 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.266612283 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.4090806 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.865187584 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.020161099 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.023850911 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.050405792 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.181063357 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.080910293 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.04040632 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.013555542 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.99956939 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.030074137 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.041676367 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.02932681 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.32883802 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.146698448 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.124520149 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.005124882 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.31255919 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.348194203 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.412012005 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.057796809 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.343165235 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.720687935 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.268448822 seconds)
  done (took 64.518987612 seconds)
done (took 852.716172808 seconds)
SAVING RESULT...
DONE!
