cset: moving following pidspec: 435
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.655893484 seconds)
loading group "string"... done (took 0.710385267 seconds)
loading group "linalg"... done (took 9.774016863 seconds)
loading group "parallel"... done (took 0.18586543 seconds)
loading group "find"... done (took 1.641904558 seconds)
loading group "tuple"... done (took 2.188387002 seconds)
loading group "dates"... done (took 1.504836251 seconds)
loading group "micro"... done (took 0.224487336 seconds)
loading group "io"... done (took 0.615874946 seconds)
loading group "scalar"... done (took 46.956757323 seconds)
loading group "sparse"... done (took 14.389060538 seconds)
loading group "broadcast"... done (took 1.27118821 seconds)
loading group "union"... done (took 10.526858986 seconds)
loading group "simd"... done (took 2.762241467 seconds)
loading group "random"... done (took 10.98963159 seconds)
loading group "problem"... done (took 1832.233982256 seconds)
loading group "array"... done (took 25.904384809 seconds)
loading group "misc"... done (took 1.228158957 seconds)
loading group "sort"... done (took 3.97154746 seconds)
loading group "collection"... done (took 20.293906255 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.74646322 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.149954831 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.233392655 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.372201783 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.2358898 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159656624 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.167042311 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.58385858 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.042608197 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.233490846 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.150505658 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.590333223 seconds)
done (took 6.342633567 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255993165 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.074125077 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172449949 seconds)
  done (took 0.86303092 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.084505023 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.181416338 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107639431 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094759429 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.109766101 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108111351 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109826892 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108968666 seconds)
  done (took 1.436582356 seconds)
done (took 3.265459042 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.537741434 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.891867184 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.583153882 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.161853936 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316972437 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.422749967 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.335659466 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204920413 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.106057119 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.104392809 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175816218 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.438984108 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.47900072 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.054329655 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.104828448 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093138396 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.128442746 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.798363962 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.0759487 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129914188 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.574110808 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.211864001 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.109429632 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.113952307 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193703164 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114908691 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.174576029 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101205115 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.661406751 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.126060208 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.197713954 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.094076997 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158118317 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.243958952 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.221922897 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105193851 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.689374409 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.196916204 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098259557 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098256661 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.69983092 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.128177218 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.165982836 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101348896 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090242166 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185019207 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115324015 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.089902293 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.111000998 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084020346 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161181344 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.483060392 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.089201026 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.166403182 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.088279061 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.699641865 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096336429 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.279657715 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.134823674 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106090415 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.073344655 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.101355641 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156022596 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.106201192 seconds)
  done (took 20.864100437 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.15729763 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16647698 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.089046246 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139381004 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.141262703 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.092328031 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079585278 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.089025213 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124423308 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.234824682 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136925284 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.167658948 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.086011226 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082571295 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.142527875 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24966207 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118599059 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103014498 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098046463 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.101504129 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123498052 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.1102578 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.104715681 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092108994 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.181792154 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201128197 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105285456 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.117416235 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096325091 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112704057 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13693557 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145194639 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.086991664 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080606125 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185297089 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.117307105 seconds)
  done (took 5.236032002 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.221745289 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121251449 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.237211708 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.175345001 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145717481 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162694134 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153230665 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.295402376 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.251065174 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17393974 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109820265 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108868183 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089325623 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08081667 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091733277 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.675906707 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183339109 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145740174 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.14911346 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100031803 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083417234 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.697377757 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095639245 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076365717 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099140031 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072469978 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221312692 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097529125 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.207677513 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081314183 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10489011 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125230249 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190984773 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132794346 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.188476845 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142883854 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10250762 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077991053 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.233576108 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088750738 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094836216 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.072888335 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130369088 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093671813 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126303128 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115292353 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096423072 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10798862 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.236129203 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078602932 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118336882 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.124543199 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.209553767 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.113995242 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094897561 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331760369 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.109639449 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083512339 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095571078 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.295583648 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129458676 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.076488671 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.091594143 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081703535 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.090941109 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.42479799 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103783706 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.980811049 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.092204926 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162281733 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096766351 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103004345 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080420124 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097865536 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113317107 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075042878 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.090095564 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075737671 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.091021065 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080275377 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116364599 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095983355 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075137048 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157461405 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.10808358 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095402825 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121094527 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095950859 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074498749 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123938844 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092384635 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081522118 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168196745 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102954417 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11622249 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095283407 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.136293553 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077646568 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093781831 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.197158023 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078078529 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121486542 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.094772377 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108025655 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111861331 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092908241 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079216266 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.090245017 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075651999 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159296483 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077200986 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093711509 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.094526426 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091542922 seconds)
  done (took 24.047346911 seconds)
done (took 50.7649501 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.521408932 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.118347893 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.118505034 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099965368 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.117373852 seconds)
  done (took 1.676537483 seconds)
done (took 2.34887396 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.381535786 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.183909851 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.124776913 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.184791992 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.102480618 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.189516339 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188599233 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098320119 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218722124 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096524421 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181200273 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096280293 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085884595 seconds)
  done (took 2.835449053 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095773596 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1241721 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096157913 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110715416 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074757498 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110585217 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10656908 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109763776 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108635892 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087533111 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091393101 seconds)
  done (took 1.787833002 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091446984 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118090837 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08231525 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107129171 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075190857 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107990783 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089789816 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121291068 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105950248 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088764138 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092251503 seconds)
  done (took 1.750940049 seconds)
done (took 7.039873818 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.190887329 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.544793299 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146544227 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.202436225 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.375833321 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.248410555 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.618288231 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.164186955 seconds)
  done (took 12.373133131 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.117860083 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097157827 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.142338884 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096957665 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081865029 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09787384 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.080975616 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096678868 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082537731 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096279907 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082781095 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096493332 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082082641 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0979668 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096735641 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084124501 seconds)
  done (took 2.273645375 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122482963 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119773592 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105096862 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108623223 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086982682 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104055588 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103155242 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08947062 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101231048 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.08629028 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107320422 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105243196 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090442857 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.099735649 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104248616 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.094854337 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100748697 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089227064 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106671054 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.105692644 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092794879 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102749107 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106148201 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09168126 seconds)
  done (took 3.210284579 seconds)
done (took 18.527852185 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.176523849 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.095691864 seconds)
  done (took 0.951628047 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.148011187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.148008756 seconds)
  done (took 0.980218966 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112978958 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09507234 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139179447 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115564768 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081968988 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095433241 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133887768 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080456677 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096444929 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081634403 seconds)
  done (took 1.720114408 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085604956 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100212312 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.094011542 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.145680254 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11037391 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.100568282 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085681387 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.1016131 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.086496913 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.096588465 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104837846 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120662785 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089271814 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122989917 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100783966 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.090633309 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109523389 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10344497 seconds)
  done (took 2.537155449 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080578934 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096168769 seconds)
  done (took 0.864346716 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087140153 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095336431 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086750692 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100335484 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096585743 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.081781899 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096463754 seconds)
  done (took 1.331350769 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.563922576 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.276034397 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.378951716 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.119576604 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142390595 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.401126092 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143178565 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113757884 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098993279 seconds)
  done (took 2.967096186 seconds)
done (took 12.038324965 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088214265 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.236812826 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.657015386 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.104077459 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.095640047 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.139841027 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.324170717 seconds)
done (took 2.339494478 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347756352 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.154896093 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087859306 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094083529 seconds)
  done (took 1.37353084 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076324431 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10411628 seconds)
  done (took 0.874518066 seconds)
done (took 2.946660935 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078291023 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077035599 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.114033184 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.094637973 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077283861 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094585069 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077487666 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094588968 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.077427859 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092984022 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.077335945 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.093514871 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.078604701 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.093080907 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077477443 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093196219 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077522572 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092059481 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078680029 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093221017 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077802924 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092796536 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077679849 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093408365 seconds)
  done (took 2.823043584 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103562929 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097894998 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.100938322 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085023736 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101761907 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08507732 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099820008 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096820998 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086333947 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097245181 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086411707 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10235635 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096287917 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086663265 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096590333 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087559214 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09993016 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097545895 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082589714 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100927214 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.085603174 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097409874 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100613829 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086002166 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101759373 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085755272 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097520387 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096919071 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085860757 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102485622 seconds)
  done (took 3.528293018 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087584372 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090035541 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080677477 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101016647 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.075614122 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.094745337 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.075089215 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091283714 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082034146 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093579929 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082164753 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094147515 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075458178 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095396361 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081234354 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097866976 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.091037432 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091728283 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075626981 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095770711 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08111101 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091994468 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079214367 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094339209 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078009044 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091330172 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079551045 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093480471 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080326828 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093536877 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082463072 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096765141 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080056696 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.105148983 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084256997 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093903311 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084540952 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092064372 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.08107268 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090915151 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075209059 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094378674 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076301668 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10272874 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079324782 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097237293 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076676149 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096542197 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09472598 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084454466 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09023324 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076923945 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09719514 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083010914 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09851981 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076124044 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095016975 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075755418 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094700306 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078813944 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091072383 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075341157 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097471606 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080153857 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112363511 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087016518 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091731655 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082130232 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095853439 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083660942 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097783856 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10738392 seconds)
  done (took 7.055791433 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094501756 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107394413 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081303872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097109664 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080692525 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094832775 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088262174 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096077599 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096222513 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089671697 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094747679 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082995207 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096389272 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081807237 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09573083 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081897756 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105968371 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095665647 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080382997 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095784296 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08080276 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104033661 seconds)
  done (took 2.727696641 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.261190881 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088192292 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.150473937 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114389637 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119660034 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09749504 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101527595 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101907104 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085911244 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107997268 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107822143 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085182624 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121464456 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106934496 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092956233 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109936535 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101711651 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093431588 seconds)
  done (took 2.756104112 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098671384 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.0996302 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106424755 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098311014 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099993005 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083532177 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107440387 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114649801 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083482815 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098700519 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092863126 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098421398 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097812596 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083772313 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099842079 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083733518 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098644677 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083668113 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109749667 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110152166 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092095897 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10822057 seconds)
  done (took 2.860513088 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100093499 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098324815 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.134293571 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087641371 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098487807 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082491593 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104559784 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083272026 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106439704 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.216195622 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084389321 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097004846 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.092274496 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099850907 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105141024 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083975519 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098993393 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084078722 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097564235 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081070207 seconds)
  done (took 2.747953528 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.175769808 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099287576 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11412963 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128976462 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098200502 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115242598 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129034741 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098041266 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114727996 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130868301 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097495625 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114056302 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128518481 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123855784 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099066524 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128092767 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128768198 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127321642 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.098860375 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114487117 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133052322 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098884635 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12729116 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114067983 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098287202 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114009918 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11379788 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108486495 seconds)
  done (took 3.988851457 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07956728 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078685786 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095606494 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079640526 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095984328 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07847185 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095501004 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078720458 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095281954 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079455267 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095601173 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.079076165 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096009769 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079739492 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096254118 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.079092136 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095147884 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080897837 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096152821 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079479894 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.096327939 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078953304 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096223712 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079771909 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095484131 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081320365 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09566659 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080402083 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095126143 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079680839 seconds)
  done (took 3.332254484 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094394838 seconds)
    (2/2) benchmarking "in"...
    done (took 0.122757317 seconds)
  done (took 0.937157762 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.089343797 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116732525 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079894089 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097469831 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091316433 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09735856 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108010583 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09101625 seconds)
  done (took 1.488319968 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.147523509 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.14840621 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086839834 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111433749 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.148813057 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.141404144 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143741602 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087893342 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.099575659 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.075583035 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.142266639 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093720806 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.085509818 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100338219 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084929418 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108459813 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097609714 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092188154 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104846468 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08415707 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10303524 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093383968 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104835033 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.110290609 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.077996376 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105711861 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089687642 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110977249 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098121602 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.088632174 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.10057546 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081817888 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102478175 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088119231 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098885342 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.147767783 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112003278 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082870599 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.102590378 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087576365 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109783698 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082203062 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105745199 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09985549 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089771338 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10367736 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088982978 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.099731802 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.078113925 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.096772146 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.083063765 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098276457 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081386842 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104584299 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105414194 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094416459 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100718787 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.078403085 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.098169241 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081733882 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.102012558 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.082424772 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106319984 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101493095 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084201153 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.10230138 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08772948 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099288064 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.084459239 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099217091 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.085906778 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119867075 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105013521 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086806746 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106143907 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081967164 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099858078 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104472451 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085409025 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105063364 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087283508 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107148872 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082832713 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097612687 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098521825 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089995702 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.1000066 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084613217 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091921333 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096947759 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100886896 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081687441 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095858116 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084963009 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.097820694 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102664639 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079333805 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102632409 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080714069 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104771871 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088833503 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09631488 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088503409 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105319145 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104163476 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.086528246 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.142371742 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099929089 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082081004 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101281623 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088414547 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097099064 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085408127 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096590788 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079545583 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098018796 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087025476 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.103768361 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100298186 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087896216 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102190788 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088480299 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10130742 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079656654 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.098328448 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085710836 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108671245 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107294212 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083816785 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.10021956 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.083633343 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103550139 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086176927 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101408596 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087534589 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100929846 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.08128758 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100674269 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104906236 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.087669167 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.09876745 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085251773 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108840665 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102634685 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085688097 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105003857 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082782882 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.095264946 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088114223 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.09992677 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.082721062 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109772142 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.099453301 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084541718 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099054628 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092304442 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100245336 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.088046469 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101891285 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088577489 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104666835 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.076628664 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100720414 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103050386 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.089429342 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100011096 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082864869 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099171497 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089169189 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096109757 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086410245 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096453689 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.079655352 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10640339 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101163085 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087241343 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.099331801 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100746787 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11449098 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087769094 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102751274 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.101828996 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086923151 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102728385 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085892498 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105977758 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.088324139 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.102294205 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084217933 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105963301 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.096023854 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.08779322 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102002763 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08726942 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.093381239 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0836157 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09322583 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086852725 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107198469 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086540068 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105725416 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084246168 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103228533 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11154524 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083437512 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105281564 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077723234 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105064185 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.092149827 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10602799 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08908584 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.105873912 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102250987 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084209931 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118819327 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083892401 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104475347 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083649543 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096842755 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079402036 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10681596 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102293781 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.082993855 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098313139 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088540221 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10767933 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084219659 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096972028 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087316272 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108505412 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.099714242 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087203954 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.09980793 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.084929151 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115018776 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07814548 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099760041 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107024623 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089174937 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.098721752 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084069167 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102684577 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.089713935 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102145039 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.092318137 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101702992 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090486116 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.102207709 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080576134 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100613763 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101555855 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079536833 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101565351 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087990783 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10106924 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083450391 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110093995 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089346269 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.107076479 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104707109 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08819304 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106428421 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089478208 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098953593 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.0896549 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.100405901 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078973713 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101282588 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077005194 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101427711 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.099898289 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08956375 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102787634 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086455897 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104540674 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087890878 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102167991 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106258347 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10061603 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.097077701 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.079072861 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103176802 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103373727 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083134974 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102433176 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083865024 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105200694 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088199005 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107835476 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.079753596 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100562859 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088522904 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100751303 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107371487 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089803386 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107739187 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.081667404 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106543146 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.083274946 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110661535 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079725684 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.103685721 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103903589 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086398738 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.101145981 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085533735 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.100344853 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079121166 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101532598 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089350158 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.098260801 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103981966 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.084341889 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.101360805 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.080919839 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099869398 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089784807 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.098170317 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.090909379 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101016583 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.080166184 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098253599 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087692781 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106366297 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107487652 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082996742 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103650001 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089685266 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103863132 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082299468 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110011232 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091574728 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.1076558 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111838362 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078108077 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101605622 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093219496 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100525874 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084952978 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103003799 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080786757 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108317797 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088751639 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.105923676 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102422529 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080095748 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099836976 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089612549 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103295765 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.08677472 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102117578 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087745332 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.099543024 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087436718 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106707994 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087495973 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108185923 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106097453 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086510975 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101290233 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.089390403 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101808436 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081070542 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.097692412 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085236559 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10779638 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077153391 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105345239 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087211198 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101668947 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102140271 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086560992 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.100585677 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085451176 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105977182 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082410341 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112771332 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083115505 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100398769 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088075075 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106506595 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.096720328 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083661555 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099488904 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090004726 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.104506974 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087409999 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105271858 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088003422 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102329046 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088000405 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106167887 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106124069 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079346071 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108048606 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092239993 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101975805 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084653916 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103306549 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.079593948 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104172789 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107556145 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085847984 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110485236 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090056692 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103059772 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084214994 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106222958 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086078393 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108024923 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.098930403 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087403443 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.097393939 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090676118 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10419439 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.090486558 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102082901 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081248519 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105401407 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088594767 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104823856 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107963561 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089887477 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.098936256 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.080114101 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103908652 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083897369 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112990519 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0843544 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104216432 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103393661 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084609099 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101393954 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091016805 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099192695 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085740534 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105650298 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087037543 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.100028416 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079669919 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104835328 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.086246404 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10628114 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105050286 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082154019 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104276456 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089792268 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103218825 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.078575491 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103017075 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089807366 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104070686 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.101489208 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080552064 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111855083 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090409749 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109755087 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.080997858 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.105779151 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103236306 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085994637 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108541541 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085254131 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107121518 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085000874 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107209333 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112151858 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080083089 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099475565 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095015402 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106682532 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089012678 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.104720665 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085853539 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108212911 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110537566 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084813752 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.098810232 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081138225 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.100311334 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080847011 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103358538 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095035211 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.105745329 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085334215 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105101666 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087078502 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103620479 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.084620452 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.099095809 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109349455 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083948961 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109292806 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080572554 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097001042 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086825869 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106940017 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082122263 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.101547293 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083546842 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.104224687 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083076775 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103465161 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110107165 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088926613 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108242983 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086783442 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103743669 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085335368 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113905872 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084320436 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.102916096 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114946675 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089668871 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107461329 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087430194 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110280283 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090585143 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103424084 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108637237 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084535878 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10069724 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.091908173 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109524527 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098735223 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104886601 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.078881196 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106172771 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.100189219 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081117482 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110927351 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091384134 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109381362 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087061855 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.102556705 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092357818 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103361125 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107132904 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085683274 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.103962175 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087157416 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102951519 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086780502 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102321993 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.091675122 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109744494 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088716051 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110826195 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0794007 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112766763 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109545677 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092146252 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102790735 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081982977 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099880687 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084935617 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110542507 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.089941306 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105286688 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086931112 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106917348 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10572702 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088651029 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103915723 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.092255187 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107138396 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.083952023 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108329977 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.082217162 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10226543 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084031783 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108618953 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.091311292 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107984213 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113659824 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08995667 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104162403 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084884321 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106377073 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.086346268 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107306924 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087179191 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.103211191 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098770695 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089969377 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.11057071 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086637636 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110066584 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092465668 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104528217 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.089273555 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111229712 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10663509 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.085167435 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107649311 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086024287 seconds)
  done (took 58.221973256 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.162981317 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093309117 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104562249 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085638857 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134785141 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106859375 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086368702 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107700694 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089169565 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119012259 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103964258 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085555604 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128399619 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138228529 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133446174 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120084978 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086082303 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107575051 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085771604 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106754477 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109384352 seconds)
  done (took 3.062565387 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111245038 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123726557 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123501443 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126922307 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097540463 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120367502 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.122373039 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121512161 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107673987 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11719 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126189082 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121376068 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.098718695 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117521455 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117832084 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117199874 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107047029 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114335347 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.123168463 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.122504198 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098978785 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122419878 seconds)
  done (took 3.325876865 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094828876 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106462005 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091028627 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.104477909 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088733501 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.10567638 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.094831675 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.103927726 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.095156711 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.105247366 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.0824328 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.102159703 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087041036 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.105103938 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.08336819 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.104467585 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11376783 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088681515 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109126315 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.08517141 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.120803067 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.085350438 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.104917419 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.082477489 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.118014986 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109643686 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.085897817 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107750228 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.080647033 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108722135 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.085516114 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106365645 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089007513 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101216381 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.081612159 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108034656 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087880926 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104300256 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08548844 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.101817621 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.087079617 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.110272021 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111555021 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085427557 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103280106 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083772527 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108510111 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.085311633 seconds)
  done (took 5.448243279 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125771173 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164711798 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09079271 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.152649767 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127139989 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122097008 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089655512 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13100431 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109167435 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.110244212 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11020665 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.128422482 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.112185832 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116217668 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095721048 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112367069 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094713611 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109726091 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119491078 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092519104 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.119579964 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112990922 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124525036 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.107475969 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114942526 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.111031524 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091602345 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114644935 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.126916267 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.101317016 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115271967 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118232942 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128460177 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.096294774 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110832607 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092436773 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.129998499 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111891728 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093551239 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108712155 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111616632 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097157633 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115959897 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132274676 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.093481245 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114969485 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111655363 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.08796936 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126246678 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.111858599 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.101394732 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.129501224 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114370846 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.093205527 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116954513 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127605823 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.112863728 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.091269845 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113116269 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.125249198 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09036964 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115171331 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127944017 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.093084557 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.120218726 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.130885591 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.09495584 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115761863 seconds)
  done (took 8.605479049 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122490035 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115635397 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13062544 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130953291 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099247421 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116021114 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115510934 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.097166337 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115702149 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124324139 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095863207 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.223623968 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.093247415 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123542291 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117101063 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096241685 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115963477 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116200126 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097324583 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115895446 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116287395 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110535848 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115610654 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129813244 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13333599 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092254459 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117238743 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114638979 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109953441 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116795433 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133253403 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.115445668 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098251356 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129171907 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131632428 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.116842627 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088611598 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117591571 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116907787 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098641613 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112049265 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129952355 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09669607 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111792208 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096932668 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117220445 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130363501 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.132357676 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122668739 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106268692 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115682341 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131002015 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117402791 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098287178 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.130927571 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14022586 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130972829 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130942762 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097350858 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131093918 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131417794 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141642811 seconds)
  done (took 8.095909929 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087863187 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085420338 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.106448873 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084756452 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10776143 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086847202 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105396532 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085187498 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105526403 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085219785 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105795372 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086168553 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10615589 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08520659 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105645916 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085673278 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105063384 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086099525 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10468475 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085537721 seconds)
  done (took 2.673945086 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099033242 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.130719013 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089888873 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119522044 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110207056 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098529158 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10858285 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089987169 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109995642 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110461774 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102822017 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12228972 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110613638 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100382344 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122077057 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119022214 seconds)
  done (took 2.525062009 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.114368686 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.132071662 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.168846864 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.11339117 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.090177578 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.118581426 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.110706556 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.091756929 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107038583 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.097251885 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.114091247 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.094661729 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110515298 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090428059 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10999474 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.11401399 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.089341079 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.114491213 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.091057432 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.167958141 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.117718639 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.113327638 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.092498431 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114860418 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.09319247 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.116560778 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.117051501 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.091989134 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.111978948 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.091453333 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.1129921 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.099782239 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109422097 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.114614529 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.090641241 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110458977 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090518041 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.110389718 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.095390738 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10886016 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.091783268 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.113178486 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10976985 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.093321841 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.107747678 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091595956 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.108587239 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.098165853 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.112751515 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.114323793 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.089834986 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.116589559 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.095979216 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120661578 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.119168529 seconds)
  done (took 6.709498557 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104088742 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111727644 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.104846224 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107239612 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09108334 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113184515 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111029593 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093106935 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111950533 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088689427 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113454417 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091365902 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113028185 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11216732 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093678629 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11245485 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087597102 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11268126 seconds)
  done (took 2.655560039 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096624683 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109043361 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095954922 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111298343 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089486152 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110150553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087797024 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108054628 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088920109 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.110524635 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090278838 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.109239546 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087226877 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.10985614 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109972215 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090403862 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109725192 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0893517 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110241639 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088758539 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11045733 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088784858 seconds)
  done (took 2.985595444 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.102756126 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.167942965 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121252851 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.181019073 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.11059446 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.089293341 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121089175 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.11042023 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.110418927 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107848306 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.087164143 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.108705616 seconds)
  done (took 2.207406136 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119238882 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150930797 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11194393 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091224278 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124469151 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097443084 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11839769 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116830507 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12953089 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113349907 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118581671 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129084671 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129281154 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131005357 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104564825 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124071703 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11670634 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098964387 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111467972 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142219478 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097891962 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129981269 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116793699 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117179092 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097774713 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130878961 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129435857 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135160707 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097839914 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130564155 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124654306 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116096292 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109956346 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1343836 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110885678 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129157363 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097653493 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141321047 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123915452 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131457214 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091421266 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124546356 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130286394 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126100839 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110403446 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117968499 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126914108 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097121207 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117684814 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148619184 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124282938 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131237252 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103870527 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12944928 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129574323 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149959582 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134799958 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130539789 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124320967 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114286963 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132012698 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124488271 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130482003 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134129945 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103628896 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131841329 seconds)
  done (took 8.794222219 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138340199 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113327831 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116636637 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135180007 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111358833 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117681044 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117981611 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097375178 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118376471 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112428249 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170878699 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097964583 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133175861 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130645785 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118587866 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09838379 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120194325 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131209268 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092999607 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148757895 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118294652 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131336647 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131636013 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130145694 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115970899 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125062532 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117208649 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098170253 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118856599 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118363817 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107073986 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118475206 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130957882 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112002496 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112852251 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118062551 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117182402 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107076651 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117978195 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124180276 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132180011 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141109853 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099454953 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118362594 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13513352 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098223737 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118817879 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112470458 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099301787 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114286386 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135405442 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136330683 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115335676 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131211151 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117082601 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117865172 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099603129 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11998709 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118226493 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105706001 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133088437 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117921997 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150935152 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099326474 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118923407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1319316 seconds)
  done (took 8.709610091 seconds)
done (took 158.96151298 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151769101 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.173654367 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.15007111 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.149666659 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104641122 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120870159 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139026751 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.150194166 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084985021 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104210446 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085026384 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109506904 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151092044 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105399642 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085269194 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10953671 seconds)
  done (took 2.764608586 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.207228474 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.319423619 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126092008 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114345629 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094635766 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108294408 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.094545788 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116355578 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108605786 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.100572565 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108075481 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087397688 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.120290665 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107749213 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.090508311 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10824149 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.119720601 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088223144 seconds)
  done (took 3.018502454 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113024207 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149337006 seconds)
  done (took 1.065503267 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12558289 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.196012245 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.330525281 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.159336116 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.136682556 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111630637 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.161649331 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127631467 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202870101 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132071378 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.132011077 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111748027 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120563809 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.120436876 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.124406156 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092914711 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143472907 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.121211984 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101592356 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114002212 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137803135 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.094597108 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120039817 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.101919978 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.212248408 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.110565896 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.115507527 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113423285 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094385764 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.121790735 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094137844 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132692589 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.130594899 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.202665694 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098908829 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.199211674 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.122095144 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093016047 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.121774897 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092753099 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117826696 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117053802 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.109755371 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.112033239 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113221324 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102319794 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114750379 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.094578558 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118479467 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122274443 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115319319 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095443613 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.195235778 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.103369205 seconds)
  done (took 7.80621629 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.916359954 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154494046 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092369114 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.049969496 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139728433 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12953045 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.921036525 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11571398 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.277793744 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.920677915 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128416756 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104087644 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.259539237 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.29252255 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.187673126 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.371837773 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.773740497 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125468853 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123449938 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163226287 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123507337 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140029902 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134065909 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.443857146 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.111440597 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091270829 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120083348 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104235887 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.199937801 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.088771816 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115396935 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.219921709 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.286451991 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229526755 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111321215 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090452589 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110289896 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187955308 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299537723 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.246567133 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183360086 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106782392 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088686451 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121336476 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133677014 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085560245 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.203991056 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191735794 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.214353009 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11517227 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104450716 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124969196 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118813488 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.182156845 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.107592898 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.378816991 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374794737 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109562185 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102309936 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127153548 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295359599 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109432345 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260260601 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139541597 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240962156 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090840208 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81968211 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.204772818 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08956923 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117035365 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098915225 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120842665 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119387463 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179925126 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394207801 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122853354 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096501094 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109926396 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.265183929 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090782422 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109056139 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184695071 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113694156 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100535645 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126459478 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123403849 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189650107 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.287234771 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102935028 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122103245 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117821695 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103912628 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.113094755 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.251876589 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251950709 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179107934 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.255449481 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100658677 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.205908928 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184200291 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118637989 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189109462 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121477322 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126296035 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099677068 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.267799137 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153317303 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091480561 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118652148 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10029149 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.177157136 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094733716 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121956728 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188462891 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.507827759 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185063439 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108693933 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093076487 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124082475 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.200785769 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101256373 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.291301028 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123184822 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18798385 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121386822 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.106128309 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102925077 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.20448152 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09954688 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123557074 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119396334 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100173989 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.292744715 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.249844259 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124632419 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.267882404 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187935834 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098452933 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.214105834 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100444242 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.209503366 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122234358 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099345744 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113717012 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814625889 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126307984 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100006505 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119602552 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20608138 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11072374 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091265376 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108774583 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087795742 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837759659 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112885038 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.088495157 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.110201282 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097662507 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121805565 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12134261 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097445492 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.201484238 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266401524 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124885094 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099687585 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.110746742 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17869811 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.114557702 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.090252583 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.112433775 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.088155905 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122942517 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116623418 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091640509 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.212792244 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179144732 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.252029327 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577116664 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112359938 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.089192757 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.282893197 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090735956 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.338518883 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123349364 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.260419583 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.208155417 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088207562 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.369616492 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.210559636 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207823614 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092752896 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.213668244 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086311174 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121980938 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.199221174 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091487157 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119791814 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17915523 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127459605 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123825495 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.192132978 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089560235 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.269881244 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086728252 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.210113021 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092854689 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119137338 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.341026886 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111841359 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128549635 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1846703 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11676987 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091277669 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.705370221 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090633994 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126732636 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118587426 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.256440262 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184222109 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123688042 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123767511 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125903783 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18501809 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.253363498 seconds)
  done (took 47.198938633 seconds)
done (took 62.649617018 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.323490423 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281476886 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.338126512 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231357048 seconds)
  done (took 2.081645685 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.227404824 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160706461 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.190772803 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110774942 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.200759397 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.110168948 seconds)
  done (took 1.824879009 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.536694154 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.435878753 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.349660388 seconds)
  done (took 2.149654771 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.279432961 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273723166 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.366202688 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.501930824 seconds)
  done (took 2.38280213 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.255786703 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134500133 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127363401 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.182362076 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.222537075 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.222476538 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.152109012 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.168032638 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.114418289 seconds)
  done (took 2.459554224 seconds)
done (took 11.726463357 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.431549464 seconds)
    (2/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.375333261 seconds)
    (3/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.354615173 seconds)
    (4/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.171409753 seconds)
    (5/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.332553961 seconds)
    (6/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098209231 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.119488453 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.19654152 seconds)
    (9/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.259869753 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098473023 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.221649551 seconds)
    (12/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.101389817 seconds)
    (13/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.1677342 seconds)
    (14/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.272891819 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119720123 seconds)
    (16/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.353075688 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.221402482 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130275748 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.152442406 seconds)
    (20/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.213691369 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.202052371 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.124842779 seconds)
    (23/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.08277253 seconds)
    (24/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.284082564 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.150929324 seconds)
    (26/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.122920068 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115355246 seconds)
    (28/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.101439905 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.127090242 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118535289 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119647371 seconds)
    (32/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.178287578 seconds)
    (33/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096685473 seconds)
    (34/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.186643997 seconds)
    (35/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.170194211 seconds)
    (36/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080833648 seconds)
    (37/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.212296341 seconds)
    (38/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.180697493 seconds)
    (39/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.228771051 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.214580854 seconds)
    (41/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.31826871 seconds)
    (42/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.203422077 seconds)
    (43/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.279495975 seconds)
    (44/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.187095629 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.081780481 seconds)
    (46/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.233363973 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111603812 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.156166018 seconds)
    (49/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.152419266 seconds)
    (50/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.10297623 seconds)
    (51/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09570402 seconds)
    (52/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.121940152 seconds)
    (53/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.081886357 seconds)
    (54/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119415813 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.095700581 seconds)
    (56/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.102790859 seconds)
    (57/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.223012251 seconds)
    (58/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.113681433 seconds)
    (59/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.207816153 seconds)
    (60/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.103433741 seconds)
    (61/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218154074 seconds)
    (62/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.196089043 seconds)
    (63/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11206642 seconds)
    (64/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.11403078 seconds)
    (65/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.184792422 seconds)
    (66/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117741869 seconds)
    (67/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080311865 seconds)
    (68/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.136147302 seconds)
    (69/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.081328707 seconds)
    (70/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.218469668 seconds)
    (71/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120675211 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.098298534 seconds)
    (73/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.232049233 seconds)
    (74/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119537674 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09018738 seconds)
    (76/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119451577 seconds)
    (77/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.19928893 seconds)
    (78/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.084073209 seconds)
    (79/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.13059942 seconds)
    (80/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.081656356 seconds)
    (81/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.187771913 seconds)
    (82/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08880025 seconds)
    (83/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127708483 seconds)
    (84/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180480981 seconds)
    (85/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.106805423 seconds)
    (86/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.16448603 seconds)
    (87/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174022969 seconds)
    (88/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.204367505 seconds)
    (89/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125769957 seconds)
    (90/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121056862 seconds)
    (91/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.093728468 seconds)
    (92/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.221966823 seconds)
    (93/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101586075 seconds)
    (94/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.103795185 seconds)
    (95/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.219900037 seconds)
    (96/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.202893781 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096614323 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119102182 seconds)
    (99/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.198864845 seconds)
    (100/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079844238 seconds)
    (101/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096781255 seconds)
    (102/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.199383259 seconds)
    (103/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.121441462 seconds)
    (104/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.092806388 seconds)
    (105/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.102125325 seconds)
    (106/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.099204508 seconds)
    (107/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.197812985 seconds)
    (108/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.111913028 seconds)
    (109/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093873595 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119604481 seconds)
    (111/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080476594 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.118916843 seconds)
    (113/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.209794206 seconds)
    (114/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.088146263 seconds)
    (115/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.081898049 seconds)
    (116/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114746076 seconds)
    (117/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.224280015 seconds)
    (118/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.218829894 seconds)
    (119/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.098856338 seconds)
    (120/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.102860193 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.081288922 seconds)
    (122/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080098902 seconds)
    (123/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.137995534 seconds)
    (124/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.136661216 seconds)
    (125/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.16459044 seconds)
    (126/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.154224366 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120974381 seconds)
    (128/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.08861943 seconds)
    (129/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.104746302 seconds)
    (130/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081804225 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079674883 seconds)
    (132/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.219878109 seconds)
    (133/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.186546385 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.120133182 seconds)
    (135/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.156196982 seconds)
    (136/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.103344601 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097753095 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11991367 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097254201 seconds)
    (140/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.104571461 seconds)
    (141/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.081804251 seconds)
    (142/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.104111831 seconds)
    (143/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.161511188 seconds)
    (144/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.103367948 seconds)
    (145/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.100473039 seconds)
    (146/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.109129381 seconds)
    (147/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.082948572 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120071313 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090735501 seconds)
    (150/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111655345 seconds)
    (151/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.080852693 seconds)
    (152/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.225768212 seconds)
    (153/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.110184221 seconds)
    (154/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082217813 seconds)
    (155/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.120456897 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130554554 seconds)
    (157/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.106623172 seconds)
    (158/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081777706 seconds)
    (159/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.102048997 seconds)
    (160/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.116391789 seconds)
    (161/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120698705 seconds)
    (162/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.083170726 seconds)
    (163/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.103159957 seconds)
    (164/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.082664271 seconds)
    (165/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.082180937 seconds)
    (166/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.102953829 seconds)
    (167/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.082250341 seconds)
    (168/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.103157749 seconds)
    (169/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.08353035 seconds)
    (170/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081424261 seconds)
    (171/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122123167 seconds)
    (172/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.082187733 seconds)
    (173/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110459234 seconds)
    (174/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081899881 seconds)
    (175/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119390985 seconds)
    (176/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.080675177 seconds)
    (177/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.080203244 seconds)
    (178/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.129628212 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.138059637 seconds)
    (180/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.082010454 seconds)
    (181/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081393238 seconds)
    (182/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.122660127 seconds)
    (183/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.121079801 seconds)
    (184/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082496475 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089660844 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.120141285 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119079371 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097947833 seconds)
    (189/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.112301868 seconds)
    (190/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081419982 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.120424219 seconds)
    (192/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082304715 seconds)
  done (took 27.766988002 seconds)
done (took 28.605781736 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.231372395 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106021776 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125331772 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123629692 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.183402666 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104780182 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.134587758 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.126925364 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.106326565 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.120472506 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091628758 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130195921 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10094563 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206531149 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.10479798 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.116817201 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093303353 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.130053945 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.132445454 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.11191159 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.182378026 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116746453 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.107067057 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.115858789 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.184579329 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093263597 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.124946751 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.357123809 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.108065945 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.120800974 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10185378 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.115498289 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.132369784 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111340582 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112239211 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09902823 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113425447 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089511727 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.121175063 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.099685061 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.131222359 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.121146548 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.103936462 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.115910379 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.099472811 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119548706 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089976751 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12869465 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113184702 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101000521 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117197387 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.110975168 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.119591989 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090353742 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11332033 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.115430418 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.106942358 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112901778 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.109467217 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113710555 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094180366 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11417011 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.099309363 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113307935 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.097448354 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11659273 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118990751 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.101219429 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.119178357 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093791447 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113556599 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.096956271 seconds)
done (took 9.579044515 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.097274904 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176771557 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.182165259 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.187721724 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.147478897 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.134758231 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.135564365 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12254962 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.132859572 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.138286045 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.130979294 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.146622864 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.193547164 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.129272296 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133164508 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.101679858 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.130403505 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.122886043 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.190656889 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.118874312 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151479957 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.129219867 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.152796719 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11172682 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121532127 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154564242 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.101510364 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.122670337 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.099093524 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129709911 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.140437842 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.099231836 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.123698256 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13584962 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.110743439 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.127036593 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.13355337 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.10035966 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119911765 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.09784121 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135666476 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132817941 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097950132 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.1337761 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12179679 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.108706657 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.128678641 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.105062898 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124900215 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122350172 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.101096761 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.150960015 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.128346509 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110217356 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.129165723 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127110995 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107183071 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.127317472 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.100555487 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12822604 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119110307 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.100450661 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123686886 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14701092 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101964428 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128056218 seconds)
  done (took 9.328896882 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120301495 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157823033 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130942329 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108412097 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.12971373 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.110596447 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089441098 seconds)
  done (took 1.728330712 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090794881 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184423975 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183161332 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.182903801 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.180661927 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.216792987 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113423712 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.114109219 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.148861041 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.102530587 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183403815 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.240210283 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.098612108 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.132417086 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187437464 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089819557 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.210148312 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090912893 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.127894048 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.185924206 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.106527165 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.146968481 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.130610219 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091671322 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.177225988 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115927089 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.24062798 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13313424 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119763373 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.102412266 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126308094 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.200213361 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.179831879 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129693722 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094919803 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.182950425 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.178447375 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127614905 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.195824667 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.117603684 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.178253752 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.103578051 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126392086 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.104211841 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.125977236 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.164963389 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.132196642 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.105422857 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.124088637 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.185386908 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.103579343 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.204165662 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.100702243 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.125355792 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.104467641 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128172652 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110567745 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.12778704 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.186433653 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129859595 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.180124534 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.180946732 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.181156482 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.18150066 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139197311 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.181573668 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.178431687 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.101009116 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124005428 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126351947 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.180252217 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.103122604 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.128129853 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.167506534 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106915888 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.180302893 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.204375338 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100807091 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.128572373 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096765877 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.12477826 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091838227 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.170690049 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126696005 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.10091957 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136253588 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128944671 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.104204786 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.119497735 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141451879 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.103146188 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.12901882 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.132029032 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.103221283 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131772799 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.182615068 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.127144853 seconds)
  done (took 14.648515565 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095365314 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115783868 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099354813 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116961491 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096467277 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118343737 seconds)
  done (took 1.541472111 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.124663592 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.129913295 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.138642766 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.107580785 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.186318418 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.187464927 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.190026211 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125112132 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.146070113 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.115342698 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.190351011 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.215417779 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.188054741 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.108033479 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.193080045 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.132652162 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.19028962 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127255121 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.114386142 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124784551 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.133903303 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.107955086 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125321644 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.180112356 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.129862869 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.107575261 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128555184 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.114522287 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.137469436 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125310262 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.108974414 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.129809318 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120987945 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.10260161 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.189507036 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12334313 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124621297 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.110912646 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131104243 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.129780803 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.19142898 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101681553 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.137754158 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.133401571 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.102845403 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121952954 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.109816378 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127636005 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.204893474 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.133993921 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.135578108 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.106456363 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.132105827 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.110063081 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122816641 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124500502 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.110442376 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.215616337 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.109066392 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123175098 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.105962088 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.131652473 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125062419 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.110520261 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131035586 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.133642551 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.098356526 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131009598 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101878454 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.130959978 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.135001955 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.105957538 seconds)
  done (took 10.595510103 seconds)
done (took 38.722123551 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.149102776 seconds)
  done (took 2.050100329 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.915187373 seconds)
  done (took 1.818225485 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.743223053 seconds)
  done (took 17.67995548 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.56009317 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.657066876 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.967620031 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.185514781 seconds)
  done (took 3.27116271 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.988857953 seconds)
  done (took 1.907048682 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.383558168 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259577647 seconds)
  done (took 1.547358474 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.702686229 seconds)
  done (took 1.616954912 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.14014419 seconds)
  done (took 3.046503169 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.379278328 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.197141573 seconds)
  done (took 1.497624281 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.693029507 seconds)
  done (took 1.608410405 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.341779259 seconds)
  done (took 30.258068254 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.243762019 seconds)
  done (took 1.171878409 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.316033374 seconds)
  done (took 1.234828372 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.503277993 seconds)
  done (took 4.424500899 seconds)
done (took 74.043806346 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104973614 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131932426 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107905345 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129900082 seconds)
  done (took 1.387678807 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.113819326 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.129814745 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109322087 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128239513 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.136910426 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.10584615 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.127957903 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.112001523 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.128990299 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.131100723 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.106983696 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.130014355 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.105770763 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.128382263 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125481723 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.107770925 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.132997237 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.10516357 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129338105 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.131150771 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.105348341 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.129747563 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.132619383 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.107657472 seconds)
  done (took 3.825716908 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104481084 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120819838 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099980199 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120198736 seconds)
  done (took 1.373289163 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.115457601 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145408711 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.14354158 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.111768079 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144644096 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.14376992 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.103364252 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.122819161 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102504852 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.13786901 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.152643601 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.124766479 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.145451171 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.129638611 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114409503 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.122289775 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.106690472 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.14758143 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.136933844 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.114374593 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.128040701 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.135925464 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.102212192 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141695067 seconds)
  done (took 3.998548808 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.215952519 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.117663828 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.153878128 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.182061617 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.163070615 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.10288429 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.156067535 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133668627 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.11116042 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.131550685 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.131211989 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.191738033 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106855341 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.129545472 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.10573631 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.13458342 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.14212334 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.133430479 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.175972914 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.108701709 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.13186525 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.140702022 seconds)
  done (took 4.026088043 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106172501 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120154799 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092377856 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12016267 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104444043 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.124029789 seconds)
  done (took 1.594983821 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100376045 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113959953 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09553789 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115811739 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096933132 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.112336393 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088987344 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114410775 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090796223 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112867007 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093496155 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088259668 seconds)
  done (took 2.152629407 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.309544726 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097312826 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124426486 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.119259402 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104647711 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.119839427 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.137712848 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096294545 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.261969756 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091864203 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.138768462 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.20299285 seconds)
  done (took 2.739466336 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229395555 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106203232 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321105888 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387123649 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169822135 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178913338 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286222087 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182991509 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205728028 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151677423 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237770969 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144920368 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168029157 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193379975 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154118027 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.226489881 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191728119 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218418224 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160536298 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248207113 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177558188 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180597119 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19762681 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163800862 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121893907 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171510553 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.131524087 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112125055 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211940487 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186822059 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192158664 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160165565 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151164535 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22322259 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249294181 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197605877 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.333753752 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144470211 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.209870111 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.199364386 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291014002 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150392932 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215938307 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168043605 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11494562 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219270463 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170152178 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.198119807 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11675109 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15129772 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226869501 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193739566 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203924576 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151350547 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307102802 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159316071 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16069359 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189221765 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204416434 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205310936 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177648054 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129988229 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197405295 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194692144 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194745953 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.157428011 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185374554 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136264287 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187013637 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211465702 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221678145 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17725957 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.20147654 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143736321 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174550088 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184770416 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165443416 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191941854 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170462028 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102503417 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161400414 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146047622 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109527757 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19783441 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130679143 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222638653 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143865863 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.400118635 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218357625 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17154033 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175985847 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176149326 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179141377 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158468575 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130671141 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157036075 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150914269 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169652711 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141396246 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170100443 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152950396 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.138585071 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138556599 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.131346674 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172164592 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.161900117 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183779649 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178221478 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.115638413 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17791521 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161816618 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.169113077 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186285852 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200117895 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140830384 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141070423 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207650772 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168129562 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143295522 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190415064 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204967818 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179851739 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120854976 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205816011 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209141223 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126440259 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231584861 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155027083 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118495318 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.168446257 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172028393 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170392131 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165777688 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110848491 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.167871039 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237455241 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.109321869 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146255693 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18830761 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137566186 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11023499 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151320518 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14753968 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.151251882 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.135969469 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148306969 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168775522 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172425349 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164665069 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174655947 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153581152 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211263368 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141305519 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.172325821 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132295375 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12795264 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199916025 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199511161 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139919694 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215376283 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185104739 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23447993 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178236774 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138127849 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192114736 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113848983 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.130780228 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178168894 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173796032 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178803909 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200464861 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205842667 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.210161046 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.140137501 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160487659 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182254168 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.18846997 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17066652 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.15546775 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174800756 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183449896 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.131851377 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.108430475 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.140369418 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151401703 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139924033 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117277226 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198245443 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178074309 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227114442 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174071065 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148032878 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198446031 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.110195201 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17833801 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.214657081 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121779135 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201745324 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22035312 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179263754 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127051616 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183171552 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.129795887 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130707641 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.121359124 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181342704 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142240888 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143096221 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12980418 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223608076 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19224225 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160187399 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217267637 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182492623 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23371279 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.105835617 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.175441901 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185421106 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169212088 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193203081 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120146324 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.174440677 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193583716 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157503586 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207500491 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173501905 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181242631 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245170538 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167365633 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113245595 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161920147 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178215563 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151626761 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17932555 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156548689 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11830648 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166793357 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.149191196 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137668089 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198482926 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155020018 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198278901 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.17060799 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189990969 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13546869 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155959577 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172607308 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155150977 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103229966 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186603817 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2062879 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158357267 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170604097 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1921976 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14127672 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.33241374 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23070302 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203271249 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147644046 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128733346 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174184777 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173523774 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177935912 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194881707 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154169848 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195381404 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171510823 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.15507124 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144157932 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131329211 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162548722 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.166907178 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145491717 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.166922624 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125465817 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230375378 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151044381 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144941938 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175746857 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.158819139 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.168994329 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151352956 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219002115 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169862614 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195818861 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166668541 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183293872 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21692906 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133411465 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108684971 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138484625 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193248225 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141568445 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17051275 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192056133 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210130166 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171269311 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179056831 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148060315 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.13405587 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145036483 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160638611 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23670711 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153557393 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.122624454 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236029388 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138448409 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141181891 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176545796 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292410654 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155803613 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190446733 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.129811123 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279869039 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109361978 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140298974 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174352458 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187095292 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.158182469 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.169866229 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173981157 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15511173 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174549942 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148353448 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201000896 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247882353 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184666639 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191863964 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.154603226 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17153736 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177662492 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194411725 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153780779 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.132949132 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174448976 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197045391 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.227781652 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117871581 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174474406 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174795012 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171412188 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193766377 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144161901 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215266455 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139906141 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176321668 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15045303 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107963763 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171328886 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.218307264 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117273778 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191542186 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169728171 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1408997 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137161787 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164387727 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143620289 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15424639 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.140247089 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197550007 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.136297187 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17518613 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193969141 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113080445 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165935483 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158839855 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142813252 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128869836 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155853906 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145980344 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.153792778 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220989271 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.11732436 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217647978 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184406363 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180667076 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174080878 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128588026 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.674951013 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.138896802 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19715674 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157946977 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206610846 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160478011 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179176072 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172387084 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134537298 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180136986 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162088255 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235297572 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178044732 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.1760734 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14042893 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15481828 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126190983 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144438545 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164986117 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175342788 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149647152 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.122909868 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.171467848 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156233364 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.156412472 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121603691 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225367919 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132308078 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22922394 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195732672 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121261784 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178938549 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221113277 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111243769 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178734096 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186584677 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150233198 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165742385 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141963681 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.120052263 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192125529 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.133273389 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17469533 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171847165 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173763397 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174518816 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120330273 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171573209 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154259966 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171510746 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137353262 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.167503798 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169011331 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117449994 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.138673898 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165301164 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174447609 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.169919942 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112345582 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179198795 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197535733 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.104058359 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143617203 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289209086 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170041438 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206053211 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168060789 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145547269 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153585591 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170536664 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.140487094 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172066505 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.140556976 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139729958 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.116324627 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194973101 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1717874 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166887507 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19457572 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176909228 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216499348 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.156642337 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281044149 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147738486 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140166988 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144400826 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.141531831 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123723595 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144590335 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156746086 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202825957 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192055989 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164187436 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.157418617 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137513844 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106609114 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141328876 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17509667 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16705284 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142973416 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15756157 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.130684249 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155468025 seconds)
  done (took 83.653373133 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149153544 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.14300589 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153088255 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200313587 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171222867 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264700226 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20996752 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2330016 seconds)
  done (took 2.534944565 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107331353 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.141445457 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149066544 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.129601926 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.130427231 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.435760993 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144373771 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.13007192 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.193110693 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.142127509 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.12661116 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.626367061 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.101380508 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.131070871 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12152399 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.129078166 seconds)
  done (took 3.943587048 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.331399886 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534325344 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.735179843 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.254251748 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238878495 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.186502661 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.720222766 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.177333305 seconds)
  done (took 12.187976444 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.134785296 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148895979 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.35520363 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.222749013 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.167003307 seconds)
  done (took 2.04851926 seconds)
done (took 126.382785763 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.108493314 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.148876328 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107134364 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15030766 seconds)
  done (took 1.522936452 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.155591054 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.117520242 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093548445 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116199831 seconds)
  done (took 1.5036114 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.530937076 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089052796 seconds)
  done (took 1.670177687 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.133689985 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.149423381 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162059145 seconds)
  done (took 1.472490199 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114571231 seconds)
  done (took 1.129714738 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.104545848 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128455663 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.187553272 seconds)
  done (took 1.44285396 seconds)
done (took 9.763404572 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1295942 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.430867248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421277561 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114554727 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.733839285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382258781 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035289757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162738689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.21397416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122472408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116592993 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.704431209 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022986263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343492026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005973628 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.435605486 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.723623374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094378562 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130726013 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123091843 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.982840544 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121319713 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09776724 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121993505 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.684511239 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.444669512 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121114556 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.448819387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121871265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10331535 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.41024478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096148656 seconds)
  done (took 17.215497315 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142738776 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193166763 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135487163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096806211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132234325 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096995697 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135006611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139495569 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204432888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094695005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145284291 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095405296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129535136 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12366938 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120486317 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122954182 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097060287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122693609 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103967536 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125234224 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142529787 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096365404 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123956596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096179396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121413311 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129141353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123125155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.134675552 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097012094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129966577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098426233 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121306715 seconds)
  done (took 5.001342691 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147809809 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.202237071 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136904119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13081188 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182768916 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125517427 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.215595527 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164476693 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20370256 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122074191 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119687914 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122638774 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13887744 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.1239745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147409048 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096620487 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123217355 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096800153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131494081 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097824958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14448099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120860346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098416043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122224133 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097511512 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157044194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095449861 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139042132 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122325051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104686905 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126065059 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096765178 seconds)
  done (took 5.281004538 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.109627906 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.136574273 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.123144686 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.150078099 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.10353268 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.137420825 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.136812394 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.104068023 seconds)
  done (took 2.03358715 seconds)
done (took 30.553122817 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123530431 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.142126234 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.1154336 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.136360056 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.200629541 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100391222 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.141126022 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100005035 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.137885575 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.119111191 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.124082049 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.10164718 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143805033 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105333529 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.18346435 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.140440654 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.192320479 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.186115474 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.101728301 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.137393101 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.100704612 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.219079715 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.110373095 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.129114873 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.16736823 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129604099 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.18068633 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.105134805 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.132937041 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.130354234 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.157204161 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.136221273 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.128481347 seconds)
  done (took 5.58019269 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.204893391 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.212726564 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.102235321 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.128959014 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.213821003 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.102575793 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.202841987 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.130399261 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.100872782 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.129217938 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.100775519 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.204284958 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.216223905 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.225311419 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.241559261 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.213034628 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.200525526 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.208743126 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.199988244 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.216464222 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.204876428 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.129662553 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.21631727 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.214175544 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.100605078 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.129294438 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.237617056 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.213016697 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.237623128 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.198812957 seconds)
  done (took 6.467477796 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.111062487 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.144809981 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123726379 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199799683 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163187498 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.105822411 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142604449 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.148582683 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.124532138 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123186396 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.114596383 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.162681801 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142127241 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.109209587 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.128841655 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.118713512 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.152069568 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098092625 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.132921148 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117749854 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.145458526 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.143990233 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.112433147 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136751075 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.096059105 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133470812 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.101704261 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137492347 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135018291 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111126124 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132194879 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101429707 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.129103023 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105816191 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131472941 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.1343936 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.125932279 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135314267 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.110857108 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.154883555 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.106136132 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.131848858 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.15068876 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.152710275 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.12782772 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.108918006 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.138400696 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137775309 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099516875 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144406656 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114284176 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.126504149 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.118875441 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.12557907 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098289619 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136155308 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125045072 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.102316576 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.138267429 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10344859 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.151880203 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.104613305 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135972682 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.098704254 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131983768 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098051432 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.12432073 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.128085641 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.124674291 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13294564 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.133120118 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.127206779 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.108605037 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134275186 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103542653 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136197306 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12400641 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106628208 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133490428 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104489425 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.137646998 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101651205 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.130326909 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116143203 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144766513 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.136494178 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.108924953 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.138399051 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101853706 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.128589938 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138780048 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100731362 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128579708 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112691581 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.125369974 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101630023 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.137321609 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.107013116 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.125412673 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.118951971 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133225122 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096562785 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.144362519 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125379764 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10336532 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.136467112 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.112719943 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.125374116 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107360299 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.138175964 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.096596086 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.131650159 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102698923 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125702275 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.142761693 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110088367 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130675976 seconds)
  done (took 15.663112877 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.304005997 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.311056814 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206584538 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.372476587 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.153074446 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.2040969 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.308701433 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.326763751 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.105878707 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.172734991 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.187779352 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.278322888 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.098574349 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.160765892 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.309189438 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.376113366 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.129987997 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.174969679 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.172021667 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.15350611 seconds)
  done (took 5.554199999 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.121816402 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.172507539 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.159955924 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.159879708 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.106660881 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.141439787 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099192506 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.152529232 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.134895264 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.107459984 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.12582768 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.112668472 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.135612903 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.108620199 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.147098607 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.175130094 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103587452 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.133384832 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.152302624 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.106230307 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13690034 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.157984046 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.10985706 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.156332061 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.141822118 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.11543758 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.12579352 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.106280628 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.130164342 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.105062635 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.132866443 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.148434237 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10522719 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.133667932 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.108337061 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.140507187 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.101590681 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.130645977 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.100079478 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.131365236 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.115341624 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.137529354 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130230687 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09681264 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.111854814 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.13006834 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.110299421 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.137327216 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.139378737 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.114014865 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137602053 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.110812897 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.133467061 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.145465114 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.102881204 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.142601994 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.112686886 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.140029224 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.134400544 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098295607 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123668714 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104520818 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.13149974 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.11286945 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.137341971 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.14971457 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.115738712 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.126885896 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.10551325 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.132492234 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102152837 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14586072 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.15223885 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102966399 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.130651508 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.116822694 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.131343107 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.090951786 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.137604454 seconds)
  done (took 11.069574146 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130504254 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133434216 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.120691727 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.166238227 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.139742277 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105393153 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.131505219 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.119969205 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.140970664 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.111001637 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.14127224 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139784921 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126589505 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.139869418 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103038474 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.143178894 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.109134769 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.173765261 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.147830721 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161660355 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.112567958 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133409582 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.112970157 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.141383754 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.164088162 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.112541852 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.161649418 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.13599701 seconds)
  done (took 4.822009731 seconds)
done (took 50.188151702 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.159037543 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.342434438 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.129174935 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.127213877 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.141020947 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.149476732 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.131778493 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.321296313 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.847518798 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.128985432 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.129322446 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.12835304 seconds)
done (took 26.791192902 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.392200171 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.689888034 seconds)
    (2/2) benchmarking "String"...
    done (took 1.437376216 seconds)
  done (took 4.177568802 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.122948437 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.124166417 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.36951879 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.123550197 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.139774222 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.140040359 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.124135026 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.148049664 seconds)
  done (took 15.219895073 seconds)
done (took 24.96491856 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.153585816 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.319472027 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.381954282 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.138751585 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.144569126 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.128955991 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.126720658 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.145002552 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.135857473 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.138389386 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.49593823 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.389802641 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.145294883 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.51247347 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.125815857 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.161155313 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.126171007 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.36396891 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.136645118 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.164187837 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.116924431 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.115287201 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.172226911 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.135466162 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.131475861 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.127978217 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.137739443 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.134064786 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.311666787 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.159456055 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.164642957 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.127908426 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.138321134 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.127092932 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.143554887 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.137519448 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.318075517 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.137338754 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.125988762 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.135400493 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.319492941 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.14232212 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.125306304 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.146809094 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.132179506 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.159950228 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.125479034 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.227261334 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.149830176 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.125492294 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.142787952 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.512886834 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.131257273 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.131846794 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.126820208 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.344803385 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.144629068 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.161665377 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.148247364 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.128694524 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.134229127 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.124959896 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.178984138 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.129925234 seconds)
  done (took 138.783053747 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.125018326 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.128300477 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.125232761 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.185390364 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.1300828 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.127747286 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.124512611 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.126158041 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.13005033 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.155723375 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.12886362 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.125608364 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.129417087 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.074363876 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.129418306 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.146494942 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.129914189 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.125094466 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.131567262 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.125326528 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.149464387 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.128476406 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.139690897 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.124893086 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.159208528 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.214156784 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.142409522 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.135425753 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.133326423 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.123817579 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.155656547 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.143849776 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.653066484 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.993052452 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.131670422 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.146300967 seconds)
  done (took 77.330168822 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.12294375 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.124199661 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.12358524 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.151220909 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.123320661 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.613084384 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.618540886 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.833992987 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.559778136 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.223074743 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.321618836 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.12804256 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212675445 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.13897981 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.126066966 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.139016209 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.164458419 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.126919784 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.124112999 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.608663855 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.14009236 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.326658821 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.298984569 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.137503891 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.151081002 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.519888101 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.125033555 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.150873662 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.442203223 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.16655933 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.125016806 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.421086389 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.314872029 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233639647 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.123885005 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.12533306 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.153071105 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.123609551 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.395897516 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.123844502 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.124871784 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.124564486 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.127613682 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.124289777 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.712740501 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.128661862 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.609892308 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.126474159 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.99871395 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.128394845 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.123667882 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.128749208 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.639060653 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.144480498 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.124023978 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.127235147 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.125639015 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.125688458 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.153274638 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.114486157 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.21541917 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.141391369 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.128427775 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.152722914 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.124802859 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.1328793 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.125192198 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.343642217 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.200110165 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.242123503 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.610047033 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.129299127 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2189928 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241292899 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.12643179 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.125732906 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.127112961 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.127411195 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.23317515 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.128997991 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.488895958 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.288760276 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.142399979 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.199091108 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.222270183 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.126817447 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.415155693 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.130892818 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.126632159 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.779110106 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219752151 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.127860565 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.127906875 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.127747141 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.488036611 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.613087005 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.275251761 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.131963671 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.127202476 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.330816177 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.131771045 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.496679509 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.604032414 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.728780832 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.134699886 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23555108 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.290769736 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.142598897 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.128399656 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.201283478 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.131034433 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.184621621 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.133016932 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.521210586 seconds)
  done (took 354.682121186 seconds)
done (took 571.847063668 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.857938886 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.811339397 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.93401662 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.837155765 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.804184502 seconds)
  done (took 10.297525579 seconds)
done (took 11.352216872 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.299589067 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.298121801 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.1828954 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.301504766 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.157427896 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.314155742 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.282438366 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.152011531 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.22734693 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.20391095 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.228480834 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.179597873 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.15895944 seconds)
  done (took 17.042223546 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.370254874 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.13561994 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.198275471 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.39201668 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.176379547 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.393936984 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421047293 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.136721252 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.275716671 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.1472712 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.146058306 seconds)
  done (took 16.850091937 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.390890426 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.136974009 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.216992795 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.40031541 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.175178681 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.38128166 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.406470119 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.136634851 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.27666783 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.146673293 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.145788605 seconds)
  done (took 16.870364035 seconds)
done (took 51.819697139 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.169719405 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.290857943 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.159870797 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.150047247 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.142723724 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.144575842 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.151400928 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.143964949 seconds)
  done (took 10.410243244 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.140190625 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.140787754 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.14066894 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.141344172 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.141358929 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.140475614 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.14087762 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.141359024 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.142051317 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.142758167 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.141071181 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.141124554 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.142788238 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.142206633 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.141305926 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.141742023 seconds)
  done (took 19.320012316 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.145807123 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.141718589 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.142109099 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.141945796 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.141829759 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.142192673 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.143854849 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.142717352 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.143523207 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.142228255 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.143432507 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.142788228 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.143862244 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.143431012 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.143014138 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.143397459 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.144053945 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.143847731 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.147421081 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.143103904 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.142928994 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.143358759 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.142655801 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.143436162 seconds)
  done (took 28.498511076 seconds)
done (took 59.286431262 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.133058894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.140920768 seconds)
  done (took 5.333210256 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.20420053 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.203752926 seconds)
  done (took 3.468654869 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.1441101 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.143847429 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.143886982 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.1435741 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.143567817 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.143103075 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.145212311 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.143590813 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.144766679 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.144115486 seconds)
  done (took 12.499728391 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.144829648 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.143787991 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.146000723 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.143894304 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.144309011 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.14522161 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.14607786 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.146620984 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.144320897 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.144739314 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.145648786 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.145359875 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.146072128 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.146610418 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.144803822 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.144354813 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.144683849 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.144969521 seconds)
  done (took 21.672594231 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.158495359 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.167101174 seconds)
  done (took 3.385820825 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.287259473 seconds)
    (2/7) benchmarking "second"...
    done (took 1.186870715 seconds)
    (3/7) benchmarking "month"...
    done (took 1.261364415 seconds)
    (4/7) benchmarking "year"...
    done (took 1.251241289 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.187818173 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.167810187 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.187888374 seconds)
  done (took 9.592691719 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.147037128 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.347107278 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.448057846 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.691093523 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.146676585 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.171562194 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.944997391 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.172470446 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.166167867 seconds)
  done (took 13.297142459 seconds)
done (took 70.309616841 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.135716907 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.168024682 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.152480227 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.173861166 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.440721994 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.162779804 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.140905189 seconds)
done (took 15.437311772 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.135302392 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.133083795 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.143266589 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.143107796 seconds)
  done (took 9.61810773 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.055177385 seconds)
    (2/2) benchmarking "read"...
    done (took 1.442707528 seconds)
  done (took 4.55935685 seconds)
done (took 15.239023831 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.148795382 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.146329386 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.147480062 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.148640881 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.147918157 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.148639095 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.147419493 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.146681231 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.146695504 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.149527178 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.147087415 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.148192498 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.147311518 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.146998023 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147694589 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.147759659 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.147311235 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.147824225 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.147629809 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149598342 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.147518339 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.149048767 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.147659968 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.147827527 seconds)
  done (took 28.611274283 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.149202442 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.14909554 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.148508228 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.148821514 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.149395017 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.149669548 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.150370724 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.149034103 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.148984439 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.149446201 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.148907491 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.149633397 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.149229555 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.150281934 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.148151204 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.149566342 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.14832683 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.150959699 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149876292 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.150066876 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.149058269 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150374911 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.150044094 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.149237352 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.149782203 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.151034252 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.15150095 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.14620208 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.145289355 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.14677836 seconds)
  done (took 35.541459552 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.152068017 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.150873718 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.148286512 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.148305517 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.147541207 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.138004245 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.139015719 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.139291942 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.138424851 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.14028248 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.139715033 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.140353474 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.139541794 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.137510342 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.132028878 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.133687323 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.133244465 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.132856486 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.132384182 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.131826617 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.132669152 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.132883906 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.133102423 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.127990805 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.127476587 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.128697037 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.128082431 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.128192325 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.128082448 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.126698545 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.129518805 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.123942387 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.124040615 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.123588884 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.122691903 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.12320214 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.127590568 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.128142373 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.123001939 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.125262666 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.12061225 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.119986689 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.122566463 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.121585634 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.121430719 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.120233286 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.122146929 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.121921777 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.122592743 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.118952929 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.11855403 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.11844051 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.120088748 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.118762694 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.118991747 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.119304455 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.118404416 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.118894676 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.115842852 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.115564981 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.114139347 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.115155561 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.116380235 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.11517647 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.115080685 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.115017059 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.116132737 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.11333434 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.113755207 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.113635368 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.113462399 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.114690775 seconds)
  done (took 82.175866068 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.114428354 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.114765502 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.115413565 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.113176649 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.110916015 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.111961369 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.11285681 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.112375242 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.113199573 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.113442594 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.113431456 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.113532043 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.112890245 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.113857909 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.112820829 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.114378824 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.113352118 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.113692009 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.114480692 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.114254232 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.113908021 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.113077328 seconds)
  done (took 25.530022599 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.113768994 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.114698679 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.113077587 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.114825448 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.116563683 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.113977691 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.114478851 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.114628909 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.113871326 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.113018059 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.112745581 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.113438637 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.114585908 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.112752496 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.114049054 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.115286082 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.11003896 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.112139276 seconds)
  done (took 21.080843461 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.112259888 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.111344891 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.110861981 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.110662291 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.109896061 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.1122106 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.108528711 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.109688883 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.109226059 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.109113682 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.108026148 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.109804897 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.110212416 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.109241074 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.110133826 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.107435696 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.107900391 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.108268319 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.107611018 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.107256327 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.108261377 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.1089991 seconds)
  done (took 25.43805878 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.110865303 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.108410685 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.107454579 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.107819388 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.108953027 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.108098095 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.108419508 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.109000456 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.10930184 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.109868646 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.10702312 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.107497156 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.109132757 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.108430167 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.109057554 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.108050096 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.108499683 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.108534735 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.109007866 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.109602786 seconds)
  done (took 23.201272092 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.110046896 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.110712171 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.109765664 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.109728082 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.110410854 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.11068783 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.112094115 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.11136852 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.110621342 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.111204105 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.111334382 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.11170859 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.111600311 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.112556402 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.111192382 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.110586444 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.111139783 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.110741706 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.112135512 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.111880683 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.112111973 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.111709398 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.111440389 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.112528726 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.111541106 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.111424855 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.113066987 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.112604995 seconds)
  done (took 32.146879007 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.111712835 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.111997041 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.112117845 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.11137733 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.111146956 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.111032485 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.112043253 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.111478908 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.111773747 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.112105046 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.11237465 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.112502189 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.113588894 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.112513971 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.112027834 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.112270983 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.111234812 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.113433291 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.112114618 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.111810284 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.111993238 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.11258853 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.112406208 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.113334896 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.111955332 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.112405021 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.113570472 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.112530931 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.112840169 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.112689146 seconds)
  done (took 34.398531241 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.159868521 seconds)
    (2/2) benchmarking "in"...
    done (took 1.154383913 seconds)
  done (took 3.346472036 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.113390681 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.114119042 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.114238843 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.113373286 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.112822531 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.114257506 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.113501091 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.113813066 seconds)
  done (took 9.942607758 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.109433819 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.115095335 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.114942447 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.113913993 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.113669827 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.108728776 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.117883631 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.12245563 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.111688969 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.114806502 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.116347384 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.115790766 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.115052252 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.11598216 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.11210323 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.115711299 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.119336474 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.116511582 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.117415505 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.116464372 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.116042434 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.114710635 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.118274279 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.119505512 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.113357494 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.121142571 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.121028424 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.120968752 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.113360761 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.118618735 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.116421116 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.118995265 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.116102444 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.118362187 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.118199237 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.117427179 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.122690387 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.137898426 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.121744585 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.122981316 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.118913176 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.118244421 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.115910668 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.11784301 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.118549787 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.12206609 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.118543468 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.118877526 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.114847441 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.117976023 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.122632525 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.116037608 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.119590118 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.118151173 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.118680198 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.125084099 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.141722803 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.116875083 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.120535725 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.123004047 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.131184838 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.126759739 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.119083377 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.122255771 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.125416047 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.130313514 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.125834012 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.12478317 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.119918327 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.119134685 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.120922256 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.130295012 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.12860415 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.120980439 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.11931758 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.11818335 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.115265999 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.120543474 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.122167814 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.124338299 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.121515602 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.119130194 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.123882117 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.127605409 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.115270573 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.118623077 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.118926028 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.119655109 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.114939271 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.123742848 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.141438764 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.119188237 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.114801879 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.115273953 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.117358393 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.119717532 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.114151631 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.116808155 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.119330224 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.12021293 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.119761167 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.117497154 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.120540617 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.121100133 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.119225649 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.122589942 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.124341919 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.116742965 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.123107182 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.12387862 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.118906724 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.117212422 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.119840887 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.12125569 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.118345326 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.120974753 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.122307226 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.118453702 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.121945415 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.120703861 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.125354032 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.133216211 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.123534021 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.120275075 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.119095095 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.126701758 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.121178139 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.119564213 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.124462644 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.120907909 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.12156367 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.119124816 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.123202045 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.118255862 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.123444477 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.118398392 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.122204291 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.123460029 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.12215948 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.119530116 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.120145939 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.118254822 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.121021463 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.123384238 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.123512928 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.12076806 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.126199426 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.122333576 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.119561897 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.121668385 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.123684211 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.123243935 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.118858674 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.124493889 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.118250458 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.122474525 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.118920274 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.121799758 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.122828147 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.12235981 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.122739477 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.118881013 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.120819266 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.123107329 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.123170872 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.121156782 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.123393636 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.123601661 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.123185783 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.117542521 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.1251856 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.118696401 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.123457029 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.128261536 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.124739894 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.122391261 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.122607482 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.124840082 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.124404686 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.123706517 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.123356422 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.12475912 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.125241541 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.127337941 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.128120975 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.125661944 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.124169309 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.120650106 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.120566046 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.126565905 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.122859125 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.128607633 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.131721011 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.133423141 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.121728817 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.127615184 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.121256974 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.127097788 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.125368894 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.127253323 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.125561543 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.124419828 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.122448868 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.125544281 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.123480497 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.125050066 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.120786062 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.126268663 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.127721329 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.125509282 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.1263591 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.121376728 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.125021335 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.127094771 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.126399173 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.126048305 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.122828224 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.127230777 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.121505874 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.122402106 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.127215576 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.12621954 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.129375495 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.130171895 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.124901136 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.127606759 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.12502094 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.123949189 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.12767666 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.126104683 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.125299435 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.132303188 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.12852363 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.125413501 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.133293797 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.147247859 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.12604807 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.128904738 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.133666553 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.12962145 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.127841207 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.134994671 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.130355921 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.1290928 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.130060405 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.127557921 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.130719061 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.132261854 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.134667056 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.125367619 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.1312055 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.126215714 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.131617385 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.128693918 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.12869094 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.128558686 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.129781938 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.133296577 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.130176021 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.127870922 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.130306507 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.13017473 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.129826084 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.129529754 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.134030051 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.132452189 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.129541592 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.128985041 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.128718654 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.132921078 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.127430114 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.130915137 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.127397078 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.138648016 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.142801238 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.135098721 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.1333768 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.134023839 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.132966602 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.133116462 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.129813949 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.127648801 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.128306764 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.129401351 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.128097883 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.132178377 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.128116141 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.133916804 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.129595327 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.131708689 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.134871039 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.130946417 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.127773905 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.133348259 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.132764211 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.132912146 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.128798841 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.133640442 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.129026529 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.13135192 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.131704734 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.129542124 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.138781655 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.135241074 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.13179588 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.131068483 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.131443807 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.129095885 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.13133402 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.134523188 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.132114751 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.137332038 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.132038791 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.134392027 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.131329889 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.137304801 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.13701627 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.131990695 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.136672289 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.133201903 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.129010723 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.131987374 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.134348299 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.139246502 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.140234762 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.131067832 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.136059246 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.133765945 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.134509248 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.134826394 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.133666366 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.135030329 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.136947617 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.143405569 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.15970545 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.138743024 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.137553689 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.139612851 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.135365126 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.135172534 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.129697012 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.135974193 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.138620744 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.132914673 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.132938608 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.13279265 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.136780187 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.13557398 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.13740586 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.1366021 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.136110397 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.140251179 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.139003345 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.140906057 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.135655011 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.140275405 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.139548631 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.141103312 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.141764166 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.133711963 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.138295176 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.13628377 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.134501534 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.132528897 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.13471386 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.138068596 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.131992723 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.141859496 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.135970559 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.135242936 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.135819826 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.13897351 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.133739336 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.14203684 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.151258525 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.133476915 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.141626187 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.138520557 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.134219833 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.139278815 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.137341029 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.133371675 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.136032383 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.141262586 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.143224037 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.134998663 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.140936108 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.133954732 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.139086977 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.13890728 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.138671996 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.138884193 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.137613844 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.135128464 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.138417743 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.138268879 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.140390075 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.136360073 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.137905143 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.137114008 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.145011256 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.143101714 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.137205182 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.138974416 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.14130911 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.136819483 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.137242512 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.140441894 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.135815386 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.141113489 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.135277625 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.139889731 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.139175353 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.139473379 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.139242286 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.141123587 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.136338233 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.137375066 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.140881577 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.14095372 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.140366284 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.138550143 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.142666673 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.137355995 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.136584706 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.1405767 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.137662282 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.142059602 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.137886719 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.141136558 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.138681296 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.142242168 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.141341693 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.141644172 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.134948407 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.13756393 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.14559526 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.142501594 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.143810664 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.141964502 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.143839476 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.137248393 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.140004128 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.141448728 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.138540828 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.138441463 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.14243034 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.137447922 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.13777848 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.140821842 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.142145689 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.145725579 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.142511782 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.138582988 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.149340119 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.164272376 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.144260364 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.141002483 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.141739241 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.138953362 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.142423401 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.142809279 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.139705428 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.148910674 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.145411771 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.144691805 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.1418804 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.141219376 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.140232493 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.14497451 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.143824129 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.140660005 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.14539393 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.13969982 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.145098151 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.143718628 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.142633546 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.13965967 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.140655983 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.143482677 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.144356673 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.14456207 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.142846942 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.14445211 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.141534167 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.145159368 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.145747537 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.144329163 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.145526663 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.140778253 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.146164303 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.141603459 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.144842984 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.142489772 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.143145258 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.146296175 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.14404687 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.142962887 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.146844652 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.149813136 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.146197826 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.141640943 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.144370009 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.145715848 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.149650076 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.145760065 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.14259479 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.143356962 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.147028551 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.145228917 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.145728566 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.143514082 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.154116311 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.16902453 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.142283065 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.143376732 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.146844696 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.149376301 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.146458663 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.146699667 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.145075055 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.146249251 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.150054428 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.146172918 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.149075712 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.166390484 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.143380039 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.149407268 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.145920515 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.146467807 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.146339757 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.151675249 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.146742561 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.147826012 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.154379501 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.151554274 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.150612237 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.164928069 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.150199191 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.146612126 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.148681913 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.142597382 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.148445015 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.146747049 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.148955092 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.148656497 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.147857489 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.148564875 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.143337905 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.149469111 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.148475282 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.151547377 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.147796981 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.144031594 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.145881908 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.149799764 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.147704385 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.149394272 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.14851857 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.147648319 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.148357762 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.145931923 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.157630849 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.159564684 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.150134572 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.14829408 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.148002842 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.147528969 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.150704339 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.152437297 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.153846068 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.149389781 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.148827806 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.149171405 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.152631689 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.154522966 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.146383201 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.145874733 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.147016606 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.150705426 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.157994385 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.161046512 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.152454967 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.148594582 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.150623942 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.149557924 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.146629414 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.150791319 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.150288332 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.147543922 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.149402163 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.153028087 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.152340744 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.150518108 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.150061662 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.154617676 seconds)
  done (took 676.366322142 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.150845936 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.15070918 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.151093709 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.151832931 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.150625088 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.15115087 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.150589582 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.151288064 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.15116916 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.150913257 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.15186457 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.153665973 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.154061436 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.151998014 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.152007721 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.150239914 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.151657052 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.151950073 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.153206995 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.152135781 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.152647994 seconds)
  done (took 25.251831391 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.151751794 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.15240727 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.151988605 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.152834955 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.153469908 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.152830227 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.151771297 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152553124 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.153360008 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152291574 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.15271108 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152148194 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.152747483 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.153090518 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153070569 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153058051 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.153377842 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.152793825 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.152523936 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.153930891 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.15440168 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.153075434 seconds)
  done (took 26.429629802 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.153668485 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.15324294 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.14897229 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.155533607 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.153694911 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.15367835 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.153730476 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.154329585 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.154396686 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.151150768 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.14968094 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.151500452 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.155413314 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.158477147 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.152210255 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.155457812 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.155022677 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.155128151 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.153164146 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.154592034 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.156723466 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.1590072 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.154053432 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.149699732 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.155141872 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.156356505 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.153804612 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.155475686 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.15244619 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.156857834 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.155993295 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.151580402 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.155947819 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.15552716 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.152452699 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.158629535 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.156386694 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.156433974 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.156364575 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.159767099 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.168957936 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.155893483 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.15988438 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.160130758 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.156444573 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.153484725 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.159957021 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.155568371 seconds)
  done (took 56.521171751 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.156644463 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.155687743 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.155320903 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.1561619 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.157213101 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.156797131 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.156239357 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.157277566 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.157069138 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.156906159 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.15778683 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.156734111 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.158166536 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.155993244 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.157576184 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.156900121 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.156696707 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.156462972 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.155874533 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.157068538 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.157012989 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.157884742 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.15837724 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.15695312 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.15763328 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.15690424 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.157556177 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.157463357 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.157018256 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.157023276 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.158902563 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.156344028 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.157471674 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.158384379 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.157582256 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.158794385 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.159201473 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.158668393 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.159276313 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.158851335 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.159198742 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.158367918 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.159307325 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.159311764 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.157880057 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.159958886 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.158889927 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.1589166 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.15794905 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.159294948 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.157948098 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.159404413 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.158375163 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.159947522 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.160427829 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.161143824 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.159554635 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.160608192 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.160593716 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.160777475 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.160811905 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.160437863 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.161861482 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.159857873 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.160598356 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.161704231 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.160343579 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.160299081 seconds)
  done (took 79.839419796 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.161135687 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.161626712 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.161921417 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.160878061 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.160602962 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.161319378 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.161247847 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.16180604 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.16099082 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.162595913 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.161357033 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.162754111 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.160749566 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.162103362 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.160269257 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.160306427 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.161253422 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.160917744 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.162154042 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.160899619 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.160786589 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.160648506 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.161280113 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.161613779 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.161507418 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.160894707 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.161402848 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.161394134 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.161060574 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.161440607 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.162146611 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.162572773 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.161590062 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.162363584 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.161377512 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.162349327 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.162252495 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.161647778 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.162096529 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.162986382 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.162217614 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.163707476 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.162330845 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.16252112 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.162207105 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.1636945 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.16345944 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.162633786 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.162779491 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.162697054 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.163017904 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.162926151 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.163510605 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.162482608 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.163368544 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.16318265 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.162855467 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.162715466 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.16341946 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.163610339 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.163295904 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.163846443 seconds)
  done (took 73.124746502 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.163786404 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.163500457 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.162929351 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.162785126 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.164698461 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.163339644 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.164461744 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.164680841 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.164505224 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.164196841 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165031006 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.164343509 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165716581 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166410242 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.164798365 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165971722 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.165195343 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.165473868 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.165165518 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.164929588 seconds)
  done (took 24.369896447 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.16523214 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.164975816 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.164595337 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.165682553 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.165536501 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.165247355 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.165456542 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.166753482 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165067254 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166593333 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.166016885 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.164944838 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16581297 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.165342031 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.165143741 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.16693251 seconds)
  done (took 19.727562486 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.165517634 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.167266568 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.164622114 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.16525863 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.165684543 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.166136607 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.16718193 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.166729802 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.165986665 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.16702723 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.167002622 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.166219686 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.166229138 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.166457876 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.166539356 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.167009508 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.166329973 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.16670914 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.165792453 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.166919013 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.167447919 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.16627738 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.167785594 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.167834734 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.166934133 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.167570203 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.167700877 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.167308619 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.16885635 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.16783155 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.167133292 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.167096692 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.167879608 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.168034967 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.169805579 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.169100464 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.168365449 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.16737514 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.167270624 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.168324061 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.167085439 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.168621271 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.168288132 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.168642716 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.167634715 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.167564861 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.168798293 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.169289207 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.170771575 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.166783405 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.168553373 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.168548512 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.168320538 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.16973987 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.167992386 seconds)
  done (took 65.289376489 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.168594218 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.16929794 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.170355153 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.168674962 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.168930868 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.169169896 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.168910279 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.171922065 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.170774996 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.169488715 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.170341473 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.172082978 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.168203686 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.171077655 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.170891745 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170095365 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.170752749 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.170190672 seconds)
  done (took 22.141642336 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.169726339 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.170657955 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.170228382 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.170302269 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.169348929 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.171511474 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.170554872 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.169686833 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169185227 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.169166827 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170017064 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.171547475 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.170734981 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.170428203 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.17126901 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171852644 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.171029917 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17086967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.171463316 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.170658014 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.171884759 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.171121382 seconds)
  done (took 26.836689022 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.166023238 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.165677789 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.166792506 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.180757208 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.178253351 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.16658013 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.167712178 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.16632039 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.186899596 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.208470939 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.203648355 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.178774742 seconds)
  done (took 15.219850946 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172871984 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172467442 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.172111292 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.171932189 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173101519 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171937065 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.172855213 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173341784 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.171681387 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173276881 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171499071 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172477892 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173024908 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.172575384 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173160642 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173093424 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173322398 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173690804 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173162879 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173008299 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.174301893 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.172640691 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173680584 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173921162 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173688808 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174882394 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173467821 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.174194877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173470552 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173859469 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.173908892 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173530954 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173823424 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.175397558 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173547908 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173837205 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.174988048 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.174695054 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.174818346 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.175023871 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.174107622 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173836499 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.174202456 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175492808 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.175503438 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173413012 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.175118716 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173947437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174121279 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.175610479 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.175498513 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175039881 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.175478862 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.174310153 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.175934756 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.176348715 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.176029452 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.174498945 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.174393076 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.174932605 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175817164 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.176096255 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176352646 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.176520421 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.176435598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.175468227 seconds)
  done (took 78.578200232 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.17617555 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.175441845 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.176806423 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.176944599 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176271014 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.176392168 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.176959171 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.175844377 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.176986624 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.176749557 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.1765793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.176397535 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.176775006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.176716563 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.176754623 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.177767243 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.175998678 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.176783774 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.177327053 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.178022176 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.177657904 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.175532765 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.178419967 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.177350831 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.177544047 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.176551782 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.176928712 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.177495549 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.178086919 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.177972908 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.177173752 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.176925238 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178733354 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.17898578 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.177694652 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.178164444 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.177350173 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178127662 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.177981056 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.177515989 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.178324853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.178705006 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178258106 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.177774926 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.178730865 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.177926017 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.178526939 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.179100345 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.18013179 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.177327657 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179622224 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.178779683 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.178883932 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.1796189 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179900564 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178451452 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179766756 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.179786859 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.1803706 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180246622 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.18067613 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179387048 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180252843 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.181111655 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179530692 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179342375 seconds)
  done (took 78.837571783 seconds)
done (took 1591.010117622 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.339444802 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.294126447 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.174070706 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.18906325 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.174513176 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.200866341 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.185985366 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.174688984 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.17472859 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.175534444 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.174990046 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.363609277 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.231688922 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.175701572 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.17468098 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.270305174 seconds)
  done (took 24.565591483 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.198039878 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.189796651 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.287473003 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.204811787 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.208910605 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.359379809 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.242431737 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.191786267 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.33805528 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.207118935 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.178506126 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.211525942 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.189348531 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.18051818 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.206338491 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.360382396 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.412784269 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.184497007 seconds)
  done (took 26.444358091 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.588036399 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.205336134 seconds)
  done (took 4.890169817 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.204656481 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.188288119 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.186974717 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.185116247 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.178471954 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.181388574 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.183790195 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.180160357 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.1782024 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.299808939 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.191297131 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.1992867 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.203514236 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.186713006 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.18917291 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.226247802 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.330993452 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.193394332 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.18886295 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.191801997 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.185714429 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.280674305 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.228610795 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.191804622 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.298262833 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.185286805 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.193052818 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.194627946 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.381110098 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.192379139 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.185687665 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.186900731 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.18905833 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.180840757 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.672309777 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.213830467 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.196096018 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.21100194 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.193050993 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.337823664 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.188638467 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.194042422 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.193002113 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.671878097 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.322071394 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.295122557 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.201378202 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.192897715 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.190535378 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.248083612 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.192404194 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.189054172 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.243885597 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.963818897 seconds)
  done (took 77.355984564 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.185382623 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.181399182 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.35904356 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.213235126 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.181986673 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.187574007 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.20440313 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.441054271 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.207195573 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.192089506 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.465777001 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.737027688 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.213833072 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.23213589 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.043742921 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.265426561 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.182751645 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.187265398 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.182359521 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.183756853 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.713994857 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.188911908 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.188603608 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.3585923 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.219122826 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.676011214 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.183106959 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.203664387 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.185770091 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.185407623 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.687339892 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.20398468 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.251747251 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.184791845 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.442430815 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.537148177 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.503908637 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.191583107 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.189530415 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.185426421 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.197128763 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.663351883 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.527318983 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.18888141 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.197747857 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.686919492 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.189938429 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.192054908 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.18628129 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.430470914 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.190051333 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.185571924 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.184109864 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.203260269 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.18505352 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.295687715 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.287316924 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.680670519 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.190249468 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.185857007 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.246722208 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.187381598 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.19721357 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.185876915 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.201545048 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.528427152 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.349005203 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.193541996 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.524921084 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.689128042 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.206226944 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.755274427 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.205534639 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.19825339 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.403672541 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.187301049 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.213084189 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.670144797 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.217327825 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.186233989 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.503007479 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.189068611 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.468010664 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.204900563 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.201680335 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746384692 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.192904726 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.191730439 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.187633103 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.193354464 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.190493314 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.189049254 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.453746883 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.23600066 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.187071272 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.18866748 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.209920529 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.197677797 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.187925283 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.189744045 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.755843303 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.202272794 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.187645254 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.190438395 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.187503092 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.205792019 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.187925845 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.189307015 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.453322979 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.193098753 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.193139403 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.18863575 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.188195185 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.190135026 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.341740352 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.194913255 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.472071576 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.189517125 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.188844767 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.192520299 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.18910245 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.190455132 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.189146192 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.195555263 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.06691608 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.452468683 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.20503368 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.194650993 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.191047543 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.189907826 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.19461213 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.196383566 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.231469711 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.192807952 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.963898178 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.210146137 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.219796335 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.18966641 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.19589274 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.190675377 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.197152971 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.189913419 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.476025417 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.451529241 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.351417615 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.19080727 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.190632175 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944844445 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.251168026 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.368370648 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.208211822 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.19150338 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.437416555 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.419711908 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.193049955 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.191815399 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.19124388 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.446475131 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.196248947 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.49365076 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.718290528 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.207718478 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.200991681 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967872371 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871078664 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.197296618 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.197085808 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.465973324 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.210571879 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.192950933 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.191449868 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.192192068 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.206490398 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.208582449 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.193487413 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.192525104 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.192744679 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.241677961 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.381390128 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.209143244 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.196708742 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.677708482 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.216579414 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.191657859 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.222244791 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.194958875 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.193343516 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.269608958 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.19703124 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.229426336 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.195296441 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.203643906 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.693249257 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.194594178 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.200225721 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.381519801 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.876662799 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.213131375 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.193390479 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.193205001 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.102004536 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.704890238 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.234934499 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.482174658 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.206705666 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.230966927 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.194300655 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.280349617 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.709568687 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.20108728 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.194067165 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.837000679 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.214302533 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.652388472 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.195136258 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.196036038 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.777159086 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.216260843 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.196831424 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.194867622 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.201945896 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.514199598 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.200221051 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.244817602 seconds)
  done (took 465.630083432 seconds)
done (took 599.977037727 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.195027685 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.200419255 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.193263207 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.202918732 seconds)
  done (took 9.906406079 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.21214914 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.202744262 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.208544768 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.202455802 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.210222838 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.2034857 seconds)
  done (took 8.355852481 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.198077269 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.2042456 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.202817755 seconds)
  done (took 7.721571685 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.390223312 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.223789416 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.510664514 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.217614141 seconds)
  done (took 8.459451418 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.208381094 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.208748009 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.210709722 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.211481044 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.213720134 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.212843568 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.210715948 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.210320596 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.213261843 seconds)
  done (took 12.016372079 seconds)
done (took 47.574715004 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.190152384 seconds)
    (2/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.262235944 seconds)
    (3/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.203626169 seconds)
    (4/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.240977771 seconds)
    (5/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.235560047 seconds)
    (6/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.361421862 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.262557073 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.28927458 seconds)
    (9/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.329093653 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.231785506 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.29642698 seconds)
    (12/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.232448213 seconds)
    (13/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.289494062 seconds)
    (14/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.200798678 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.280954947 seconds)
    (16/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.19977413 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.380673332 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.258411785 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.406611829 seconds)
    (20/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.28604589 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.310368822 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.22667465 seconds)
    (23/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.98742089 seconds)
    (24/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.212376063 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.34170226 seconds)
    (26/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.259052905 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.276156709 seconds)
    (28/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.191889248 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.337697859 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.341510045 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.23737902 seconds)
    (32/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.245196725 seconds)
    (33/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.276008797 seconds)
    (34/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.30715588 seconds)
    (35/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.29319088 seconds)
    (36/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.198982191 seconds)
    (37/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.363689444 seconds)
    (38/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.266295339 seconds)
    (39/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.985085879 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.326117697 seconds)
    (41/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.372692592 seconds)
    (42/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.19337225 seconds)
    (43/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.390558787 seconds)
    (44/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.413536794 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.210917037 seconds)
    (46/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.193891279 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.299269176 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.23042453 seconds)
    (49/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.283543295 seconds)
    (50/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.030712494 seconds)
    (51/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.263123065 seconds)
    (52/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.235177191 seconds)
    (53/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.192925822 seconds)
    (54/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.242542495 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.202019473 seconds)
    (56/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.223039738 seconds)
    (57/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.195055492 seconds)
    (58/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.281811425 seconds)
    (59/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.215749218 seconds)
    (60/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.195800335 seconds)
    (61/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.199248892 seconds)
    (62/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.201597331 seconds)
    (63/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.254905008 seconds)
    (64/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.281483724 seconds)
    (65/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.345283707 seconds)
    (66/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.319937107 seconds)
    (67/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.298222788 seconds)
    (68/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.303970771 seconds)
    (69/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.195117342 seconds)
    (70/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.201187654 seconds)
    (71/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.238000257 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.404450953 seconds)
    (73/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.302431793 seconds)
    (74/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.264945153 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.306214904 seconds)
    (76/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.240893474 seconds)
    (77/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.335518587 seconds)
    (78/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.868953933 seconds)
    (79/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.25063838 seconds)
    (80/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.195011472 seconds)
    (81/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.448147693 seconds)
    (82/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.202539955 seconds)
    (83/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.270374003 seconds)
    (84/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.347502165 seconds)
    (85/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.19763804 seconds)
    (86/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.245018842 seconds)
    (87/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.361238639 seconds)
    (88/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.967956862 seconds)
    (89/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.242528201 seconds)
    (90/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.243590661 seconds)
    (91/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.351901248 seconds)
    (92/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.938527286 seconds)
    (93/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.256442872 seconds)
    (94/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.952735454 seconds)
    (95/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.344678269 seconds)
    (96/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.196765595 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.298605071 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.293686732 seconds)
    (99/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.305060008 seconds)
    (100/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.259668574 seconds)
    (101/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.25073463 seconds)
    (102/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.352724274 seconds)
    (103/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.272657771 seconds)
    (104/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.102919776 seconds)
    (105/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.389618435 seconds)
    (106/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.2465226 seconds)
    (107/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.346803921 seconds)
    (108/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.375076672 seconds)
    (109/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.231553855 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.227060203 seconds)
    (111/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.949597933 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.334448089 seconds)
    (113/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.078458574 seconds)
    (114/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.356930539 seconds)
    (115/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.203018544 seconds)
    (116/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.210467414 seconds)
    (117/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.109824327 seconds)
    (118/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.880002114 seconds)
    (119/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.248584275 seconds)
    (120/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.959023111 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.962413684 seconds)
    (122/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.923491185 seconds)
    (123/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.341086845 seconds)
    (124/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.285588105 seconds)
    (125/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.345628734 seconds)
    (126/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.214149464 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.325799103 seconds)
    (128/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.205429334 seconds)
    (129/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.204130372 seconds)
    (130/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.872629212 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.410616043 seconds)
    (132/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.889649321 seconds)
    (133/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.315685897 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.244757198 seconds)
    (135/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.290531836 seconds)
    (136/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.344953081 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.335700917 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.341499589 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.348463786 seconds)
    (140/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.202405357 seconds)
    (141/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.394544576 seconds)
    (142/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.207260462 seconds)
    (143/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.271068203 seconds)
    (144/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.870872126 seconds)
    (145/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.245967966 seconds)
    (146/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.354857549 seconds)
    (147/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.205465196 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.431474591 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.310099402 seconds)
    (150/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.261362215 seconds)
    (151/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.289428529 seconds)
    (152/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.401195438 seconds)
    (153/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.361583013 seconds)
    (154/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.115860405 seconds)
    (155/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.263240933 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.227098237 seconds)
    (157/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.208495227 seconds)
    (158/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.027997988 seconds)
    (159/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.253637293 seconds)
    (160/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.314618813 seconds)
    (161/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.246074159 seconds)
    (162/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.890073283 seconds)
    (163/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.346124111 seconds)
    (164/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.202319435 seconds)
    (165/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.224129185 seconds)
    (166/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.922442698 seconds)
    (167/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.902743579 seconds)
    (168/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.999462935 seconds)
    (169/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.915329122 seconds)
    (170/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.345609996 seconds)
    (171/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.276133194 seconds)
    (172/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.200158012 seconds)
    (173/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.379967569 seconds)
    (174/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.996596882 seconds)
    (175/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.26580105 seconds)
    (176/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.247968428 seconds)
    (177/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.266203918 seconds)
    (178/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.266611592 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.436597976 seconds)
    (180/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.458828132 seconds)
    (181/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.201118657 seconds)
    (182/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.258680918 seconds)
    (183/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.237438399 seconds)
    (184/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.20140234 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.294845011 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.318917992 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.298251254 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.217712965 seconds)
    (189/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.312567941 seconds)
    (190/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.207695194 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.240032956 seconds)
    (192/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.207647138 seconds)
  done (took 312.485613031 seconds)
done (took 313.604088274 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.23738951 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.402038409 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.219039029 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.219102982 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.22143216 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.223827812 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.239287406 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.220490246 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.230555362 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.229500154 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.224587949 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.229256245 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.232451751 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.227332126 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.253341043 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.221594955 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.219073542 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.226280252 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.230932445 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.233336445 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.222177711 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.222245928 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.240859542 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.220388811 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.227958876 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.22840605 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.227164642 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.225192829 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.231079661 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.232191906 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.215718884 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.232694293 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.233688822 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.22851503 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.224088885 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.228165737 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.222575466 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.403428637 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.237776402 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.228093739 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.22605127 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.232998312 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.226736058 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.226793576 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.229458594 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.241890358 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.230078682 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.23617232 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.216934253 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.219626568 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.242646857 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.230563341 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.227210802 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.215954026 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.22239031 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.244227224 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.229178081 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.239147311 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.226067029 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.223849326 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.25483369 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.239142771 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.231282899 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.230561553 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.227379661 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.234957265 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.228710005 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.235744163 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.228237218 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.223715986 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.224757118 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.227372383 seconds)
done (took 97.986461118 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.352366866 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.223339837 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.366188867 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.226541977 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.385583239 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.370877248 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.227284463 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.227290506 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.226747434 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.081411202 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.227472127 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.227111926 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.220586521 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.226123233 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.353763291 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.229313013 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.227701055 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.971568775 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.228545349 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.370066595 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.222844657 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.229332174 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.227895879 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.107608176 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.220130551 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.220231733 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.371130664 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.229342965 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.996673178 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.219041054 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.221327043 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.994958517 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.372596462 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.24770813 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.237223222 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.23839634 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.387679286 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.245924382 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.354685412 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.356281191 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.373128336 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.268593648 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.220581486 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.222872616 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.230822366 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.228638815 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.22859699 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.257294793 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.223843615 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.229000587 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.972665411 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.239860379 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.237918216 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.229625326 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.229083634 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.249725229 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.230224377 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.229188823 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.374529829 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.231475613 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.355525343 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.108803818 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.083895854 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.230677388 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.223136209 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.230923581 seconds)
  done (took 101.746957835 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.291757154 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.305731842 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.336104177 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.230784335 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.278115585 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.341193413 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.231175603 seconds)
  done (took 10.151095699 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.232078 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.230638736 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.275632699 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.275288801 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.232739502 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.382363813 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.2307157 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.238424444 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.232506127 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.279990497 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.232803872 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.23118789 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.241523998 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.227465078 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.276202536 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.237379379 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.342290622 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.228897417 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.231558173 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.378787386 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.232435461 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.24221662 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.280128003 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.239525027 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.233809251 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.232632234 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.994393497 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.231933342 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.23267943 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.232660139 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.232965511 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.281548065 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.233999266 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.227360645 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.232432608 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343173281 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.233139781 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.232801647 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.233697759 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.230767231 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.233258655 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.233177658 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.234603213 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.232277723 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.233605667 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.252476384 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.234882166 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.234497972 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.234975922 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.233487171 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.278962371 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.235642262 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.234254587 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.233701961 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.285647103 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.243700422 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.233333406 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.236045079 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.235704141 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.235289074 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.381275489 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.279000687 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.235201227 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.277586401 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.235343091 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.235385213 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.23488205 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.234736884 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.322481991 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.23620235 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.278299023 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.235252702 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.410185234 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.254810557 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.237223456 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.234745359 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.235790445 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.234325343 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.228947343 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.237269827 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.235870473 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.232088967 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.237890888 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.237375271 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.238197371 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.394935648 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342284861 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.239215571 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.245583111 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.239414813 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.236972994 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.285558301 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.236715568 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.23705726 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.283817696 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.347744497 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.286977432 seconds)
  done (took 127.640322549 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.245014811 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.245744218 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.236132394 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.260281521 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.234148957 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.233209739 seconds)
  done (took 8.596739361 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.236385512 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.243214563 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.241286805 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.240800941 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.240245705 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.240551789 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.240206284 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.234845769 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.241903773 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.239036984 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.238409843 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.241317364 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.242395788 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.238436726 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.240303131 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.240009991 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.237897402 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.239548446 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.240265998 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.238969887 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.234220902 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.238333859 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.240273968 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.237253291 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.243449579 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.240897634 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.2564212 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.243241673 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.239908636 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.242796719 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.25763443 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.239651951 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.237056319 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.240262591 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.242042251 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.237806176 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.243650738 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.242785445 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.242282431 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.240404719 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.241252078 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.240461109 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.241827917 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.241293664 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.23822542 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.239510828 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.245501839 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.258103675 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.241012028 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.242645031 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.243893633 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.241941933 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.241023567 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.242923161 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.243087793 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.260093537 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.245090616 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.242088344 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.241262877 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.240687085 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.244666695 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.243478674 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.241952115 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.244726615 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.242647659 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.244793812 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.243009553 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.245250688 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.2431028 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.242891563 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.24454346 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.242607587 seconds)
  done (took 91.577642617 seconds)
done (took 340.845449799 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.052028203 seconds)
  done (took 4.197810926 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.502822046 seconds)
  done (took 3.654185094 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.655992364 seconds)
  done (took 22.047015732 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.257694762 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.356396763 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.257798577 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.242633475 seconds)
  done (took 10.263583881 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.491349307 seconds)
  done (took 3.641578849 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.2415246 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.238484511 seconds)
  done (took 5.631808299 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.386102485 seconds)
  done (took 3.53492938 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.393915535 seconds)
  done (took 3.543592367 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.268443455 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.253068528 seconds)
  done (took 5.677091307 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.227067137 seconds)
  done (took 3.37670798 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 30.480021589 seconds)
  done (took 31.630008888 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.245806166 seconds)
  done (took 3.398740517 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.263397072 seconds)
  done (took 3.414158032 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.697931546 seconds)
  done (took 5.849285269 seconds)
done (took 111.007982541 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.235796791 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.237318195 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.239025371 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.236219577 seconds)
  done (took 10.098724926 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.298519185 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.298188093 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.298547717 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.298979067 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.299121952 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.299009409 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.272763976 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.272269911 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.299065949 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.298197154 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.299705389 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.297855495 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.298830523 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.272767659 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.299573362 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.300395794 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.298555804 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.299738829 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.273557959 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.299269217 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.248309104 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.30041539 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.299459448 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.248268396 seconds)
  done (took 32.123271937 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.759305034 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.313502494 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.397328312 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.296048333 seconds)
  done (took 6.917716902 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.326329807 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.325911499 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.338700784 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.376989648 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.391581627 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.33728009 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.275900392 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.270739141 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.257982623 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.326112481 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.378433238 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.317464734 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.402552471 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.248430943 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.456165857 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.249700679 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.249549544 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.326574566 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.37902873 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.389971921 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.24939138 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.326737946 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.327744791 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.320234195 seconds)
  done (took 33.002555137 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.258836107 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.265201701 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.252491849 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.266591745 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.251689812 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.253020066 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.252925846 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.259084153 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.252348395 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.251027589 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.252325377 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.266427827 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.256329359 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.252105743 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.260495281 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.253999203 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.253689711 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.257078223 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.261049993 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.253227108 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.2567582 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.260858427 seconds)
  done (took 28.802316538 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.240821083 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.241063649 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.592718601 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.496692254 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.242003594 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.240759698 seconds)
  done (took 13.209321592 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.312161725 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.466151491 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.252457533 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.578384485 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.667541341 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.251197899 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.248029426 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.485851473 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.78266716 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.763528575 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.301487794 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.320044764 seconds)
  done (took 18.585323148 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.244262869 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.246882399 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.24647669 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.276233927 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.29838919 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.255739258 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.254226526 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.242491708 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.303537828 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.307226891 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.256439792 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.299972107 seconds)
  done (took 20.388460562 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341412375 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248283767 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24720005 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301718717 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270044808 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101102899 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319516335 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.973531986 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.274911457 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524089842 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248010926 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343714756 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.502191447 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246263332 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274155483 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.192843115 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480461434 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706021046 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25381333 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249532353 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286460682 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248271522 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269103116 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.455011001 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099874478 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249643953 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.543125831 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249042419 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511710584 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267339908 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.259710544 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250199463 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.525449477 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884828767 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371147186 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447796669 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258061926 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251434795 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.259476124 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.255987776 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264122598 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256356272 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.25824106 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250533682 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250644671 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251825972 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967597106 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.279829496 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.250005358 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.250036409 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489744908 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353208132 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.257601421 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250474332 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268650618 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255426729 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.258162242 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372330583 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842268812 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251303408 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263791958 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.256200148 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25260664 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268309493 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843809381 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.263942215 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.257644164 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.257121355 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252415069 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.252965486 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292156923 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253022989 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.277083144 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252293706 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92624995 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261290894 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258976775 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776525291 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260765539 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.257591834 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.483336958 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25263903 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253185861 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.251571771 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253334273 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912028888 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267021267 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.24068278 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.299179653 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.979064264 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.475514133 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27921714 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285548925 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.476603144 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.241523955 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254590224 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.2695702 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260547276 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27677533 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.968489077 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276060748 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.262132439 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511381881 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.465203012 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260993871 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.220334821 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720868884 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277133616 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.275431463 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26159383 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.459337355 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.814432364 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274845672 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253989047 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276972507 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.255773451 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946573127 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264827954 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.266306172 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.257475869 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51976532 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.002219863 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263584229 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.323614949 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260761038 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257408233 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255422507 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261208567 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.257023066 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.44810226 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286182368 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.271720701 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.256302579 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256223301 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.257531253 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269948576 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.262369155 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.47864588 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260363811 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53901458 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257961729 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257330201 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258352272 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.478612448 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.257340498 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.26425384 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517051133 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264322829 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.268365514 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27115998 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275011658 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360252343 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277042646 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.262563514 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.516627979 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.262890734 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.26213204 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2589366 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.264290397 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265952948 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.266437983 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260421578 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813698949 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241414586 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.262918434 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14613138 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.274016513 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325053522 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.265863632 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.458198642 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.26397469 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263186644 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.265845931 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.260491865 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487923564 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.267966307 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.25841631 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343428393 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.717166941 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835533855 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279331672 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.259879197 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.259739899 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.260158598 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260750043 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260582733 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.260529917 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459664448 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27819538 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266286814 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.818124045 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26582534 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.260427489 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.27328269 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271570533 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.267424124 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260590705 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.272045963 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265950355 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275950737 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.275000608 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403260592 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.274822497 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261160175 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.779348459 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.267236791 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.260170675 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.260019179 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294016266 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261528796 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05399671 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520544457 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258695215 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.506533509 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.267337867 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.286591054 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.259233276 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26018378 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270081808 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.28535741 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28945758 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.271168752 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260483358 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268480587 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829390525 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950856224 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772609575 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270088759 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.286676139 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266709054 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.976699153 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28189697 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264119011 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.488070957 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.984826626 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286143437 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728804753 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.283350036 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012199352 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509730529 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499278721 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263171268 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.26946335 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511526877 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.479800632 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295123803 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.263327687 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267946229 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.24926077 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795641852 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281070211 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365919659 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980605811 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285120742 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.2700059 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.308152346 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.269390646 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651921984 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.286993675 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263692611 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265064793 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274205198 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054343754 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.266737311 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263657859 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855380091 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.277107268 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.72911196 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286810669 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.465971271 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.279438853 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.267174485 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.263908035 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.296934815 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.520939385 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50839809 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272015521 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270153053 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775165379 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.193917862 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.271805275 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263522168 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960352487 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275919585 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537931862 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.272821404 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.287097456 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290804492 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265668286 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265497464 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.265741591 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269369667 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238803859 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724128201 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.271956456 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291569063 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288398033 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274138604 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.520572328 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.283471823 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.823496541 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501476123 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267853905 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296180609 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.274163314 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271867937 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.259829925 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268007096 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269311733 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309829209 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.494131054 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26798835 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.259236058 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267290106 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481330304 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.268214148 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276173902 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503971206 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.272584407 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.270643449 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972297397 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304995542 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.276852884 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274518752 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26630588 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328272354 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337129699 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469277167 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.283876209 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.278934611 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651021953 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299177528 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275464975 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.283816322 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363335666 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273613076 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.277099297 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.065467963 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826540819 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960348583 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.834172313 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520880683 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.277064541 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276188262 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269834962 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431885729 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269722838 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546442333 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270705258 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.283813565 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297158932 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274803561 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278763043 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485665998 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548916247 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270444957 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280042549 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276115033 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.270989571 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281066964 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.48109615 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731694368 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807717286 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279001476 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.271645857 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998619334 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568596334 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271623989 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271425297 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2725481 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.277383067 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296495136 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.283424408 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272336169 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438300718 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.515355993 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92174266 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.303468266 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.303190952 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.791873405 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273953276 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.532007843 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274130169 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.498123056 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839370091 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.944722291 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541778319 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34351337 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476639332 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.279934529 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438252278 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.283725295 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.280662341 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274258346 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274498155 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.275463702 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.281997262 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835380562 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543482698 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.280667811 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.283623051 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309478373 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.282944359 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.49648006 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941128175 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.502726756 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283866983 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.278749335 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275122514 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837210258 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524678661 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282482573 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.281877161 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503915312 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282262773 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299685269 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.794803244 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.274436363 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799911472 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.251416359 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296207118 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286306909 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.946143862 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840735257 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.282377119 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.742673604 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285334883 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291460833 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557531986 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.284283484 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.27833692 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558734513 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.282462671 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28696329 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485814182 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.838633156 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.021108998 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.300567372 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300009288 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.284452215 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277674052 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292395068 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282877951 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280525429 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.6743494 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.300597986 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27863549 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292575585 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.287255615 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286427286 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.281934952 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278422321 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.282653576 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.263446331 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.271395898 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.285188089 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398464375 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813740249 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293062929 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.944993059 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.597294529 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.521633976 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278200927 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.256843115 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.269266907 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266200187 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265514124 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264935081 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.273565079 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795176959 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.282553977 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.275372868 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.272614224 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.264326227 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474137306 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.275511637 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476709459 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282371149 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286672594 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.252909737 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266017733 seconds)
  done (took 921.224145966 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.294676786 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.278319067 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.276821821 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.328526828 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.26835941 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.373112024 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.331786763 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.267533193 seconds)
  done (took 19.592986522 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.261880373 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.275613005 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.266315743 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.270760635 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.273680823 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.71027052 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.280251105 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.285623234 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.281306687 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.263094663 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.268963147 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.901366921 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.2926358 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.273298368 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.27203508 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.277304966 seconds)
  done (took 30.629393557 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.159274603 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.378422116 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.013536257 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.283269655 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.297972538 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.266879703 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.458465717 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.280717351 seconds)
  done (took 25.314011132 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.273678158 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.273114911 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.274273337 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.274006455 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.273434016 seconds)
  done (took 7.544344573 seconds)
done (took 1168.582509738 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.27325357 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.275473893 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.27503689 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.274576741 seconds)
  done (took 6.274568001 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.256299372 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.261842286 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.262220881 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.273663043 seconds)
  done (took 9.230615395 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.923115591 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.870768028 seconds)
  done (took 4.970896991 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.727557596 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.730397581 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.728637526 seconds)
  done (took 6.361759802 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.544968556 seconds)
  done (took 2.720043883 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.140098809 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.268475184 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.899996253 seconds)
  done (took 7.485739013 seconds)
done (took 38.219410251 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.265007635 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.52060119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.421431704 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.275518461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.428299231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.421438564 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.995666702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.265627314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.265569843 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.285101248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.265674414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.428462458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.985167232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.513541383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.98497873 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.609394563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.428583614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.273859681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.265514989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.283366781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.017088954 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.268218831 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.265705299 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.293987216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.437106094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.413112892 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.274329071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.610181709 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.267317443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.275801695 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.412437371 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.266630594 seconds)
  done (took 79.163331109 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.2681841 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.266773738 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.276089447 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.267210462 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.275222941 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.274354193 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.2691899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.268264208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.268660519 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.268742403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.283680972 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.280169682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.268215835 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.278063385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.268169181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.27734355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.281225078 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.270887774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.268948062 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.283752919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.26916326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.268749409 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.269485304 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.269768737 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.274123395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.26926005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.285692227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.268744646 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.269756081 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.268244161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.269470199 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.287620665 seconds)
  done (took 73.912877689 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.268374884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.269054338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.271041144 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.279912222 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.269845708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.288131108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.271282034 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.270544311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.270266955 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.29848078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.273719235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.269547273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.284895647 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.269983788 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.271150272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.283204479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.279725122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.26917844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.271270689 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.276103616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.270940909 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.280323784 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.270854151 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.270142927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.297917334 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.270447163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.270567117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.282618801 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.276630293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.270330448 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.269335216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.268932319 seconds)
  done (took 73.987488898 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.554661237 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.281536216 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.284463247 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.275163088 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.284560211 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.283072794 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.276806056 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.559323218 seconds)
  done (took 13.98219572 seconds)
done (took 242.223016697 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.275791808 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.751777823 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.32355085 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.275223936 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.315003821 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.303905655 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.488814854 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.31665016 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.492677424 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.30689797 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.302258034 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.27705821 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.044309563 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.426421683 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.11368731 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.227013774 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.121195915 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.277486831 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.818678623 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.549949547 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.304749737 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.275437409 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.113272512 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.150093653 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.271071449 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.358218643 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.377418401 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.497132725 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.432624767 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.354138177 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.771108443 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.284019282 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.292246839 seconds)
  done (took 60.673388797 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.279067787 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.381222328 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.284147479 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.284623776 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.386076199 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.286405529 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.279957145 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.283842295 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.284311885 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.283810714 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.285444513 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.287010072 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.285437828 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.312164727 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.389900608 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.281321807 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.280241979 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.378157811 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.280086833 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.279126964 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.309378346 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.284222802 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.286721084 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.311668749 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.284937558 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.284842747 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.383302627 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.287391648 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.287744271 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.378592064 seconds)
  done (took 40.375550565 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.285747822 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.842313855 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.008659642 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.29311308 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.281545088 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.286522212 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.551813964 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.291211834 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.286554903 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.285990383 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.759559169 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.294217978 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.315521081 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.034370131 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.290270398 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.289244213 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.286746945 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.283889104 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.856434828 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.298130643 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.57260299 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.292565885 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.553280646 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.299029706 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.305280546 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.285233641 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.289330907 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.093939762 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.303304221 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.760982675 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.016929749 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.555388163 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.034990544 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.033309774 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.016315006 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.294158588 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.289147957 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.765289066 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.290021828 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.28521416 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.553708693 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.290164876 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.017633244 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.979461425 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.303754002 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.291773392 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.114303948 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.785230043 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.517697107 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.29680884 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.044991717 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.292382449 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.291067105 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.286140022 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.513318473 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.29209417 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.28582891 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.119010057 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.308658452 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.555115142 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.296388167 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.286496698 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.854711497 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.291049057 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.850480001 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.293125062 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.294965993 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.307370145 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.021020904 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.294749866 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.986828027 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.307835725 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.292895182 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.763858084 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.854669333 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.1798917 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.294013739 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.859455259 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.075181151 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.577523056 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.29666715 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.07756192 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.57792931 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.296350947 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.294170704 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.294221473 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.292027379 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.368210444 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.553654695 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.918721567 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.98888765 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.150353802 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.581727084 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.300641299 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.289311461 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.119539403 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.311224659 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.293033842 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.018281133 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.995060608 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.309567721 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.296874815 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.998245444 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.312645841 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.55992939 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.300144427 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.028801666 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.295707195 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.370531765 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.293300183 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.295546938 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.313098004 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.560767599 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.298220986 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.294212462 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.977936645 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.79955746 seconds)
  done (took 182.09421776 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.297044124 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.282916313 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.292361745 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.283750446 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.283307471 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.290937455 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.283462775 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.283491296 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.289392052 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.285061172 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.2846476 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.294156397 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.289546967 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.284538042 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.285771806 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.285546716 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.285096529 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.290576918 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.285043176 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.285430197 seconds)
  done (took 42.935477687 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.294966003 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.822325157 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.792851842 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.301611816 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.29695431 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.292515499 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.344589065 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.300661324 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.295666461 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.576872537 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.456847891 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.3015368 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.296006322 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.295469856 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.787254901 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.290597527 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.578701391 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.830487306 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.300635987 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.824522666 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.291393945 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.297844234 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.291825591 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.824043116 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.585061921 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.561691764 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.351491143 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.829760866 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.302435188 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.298748353 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.826000082 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.303323461 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.2931708 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.826207932 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.318959728 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.309919671 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.297307456 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.348250609 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.352889344 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.582424078 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.835789805 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.570174243 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.312779069 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.468583607 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.301441893 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.288278274 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.83375485 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.320434438 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.289667408 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.300423073 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.305665609 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.801876256 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.31637918 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.801312915 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.320601402 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.300670051 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.829208611 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.806391722 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.817578021 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.461678486 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.300379629 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.563610511 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.304638495 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.836077358 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.320500998 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.29930172 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.299832246 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.45878109 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.851910928 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.568979948 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.587659138 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.587123083 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.304026922 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.355584 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.319879301 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.585160425 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.359784939 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.697477374 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.583387298 seconds)
  done (took 118.039365562 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.562153325 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.411582253 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.69355923 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.90816507 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.299332426 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.447988238 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.404566146 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.551781045 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.300681951 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.379684206 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.917883864 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.408759234 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.066188599 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.380925159 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.397401468 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.437913252 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.678518114 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.264386217 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.01488283 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.900004973 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.301266253 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.404699168 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.844759468 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.50800369 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.297767053 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.886243105 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.241601252 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.936102314 seconds)
  done (took 51.047733998 seconds)
done (took 496.348712522 seconds)
SAVING RESULT...
DONE!
