cset: moving following pidspec: 26182
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.492615055 seconds)
loading group "string"... done (took 0.663142991 seconds)
loading group "linalg"... done (took 9.641780639 seconds)
loading group "parallel"... done (took 0.184725507 seconds)
loading group "find"... done (took 1.633442243 seconds)
loading group "tuple"... done (took 2.170368367 seconds)
loading group "dates"... done (took 1.485862881 seconds)
loading group "micro"... done (took 0.219254539 seconds)
loading group "io"... done (took 0.609595398 seconds)
loading group "scalar"... done (took 46.536134295 seconds)
loading group "sparse"... done (took 14.258361976 seconds)
loading group "broadcast"... done (took 1.259993838 seconds)
loading group "union"... done (took 10.665869141 seconds)
loading group "simd"... done (took 2.722778453 seconds)
loading group "random"... done (took 10.91455588 seconds)
loading group "problem"... done (took 1833.693406262 seconds)
loading group "array"... done (took 24.900698216 seconds)
loading group "misc"... done (took 1.193965232 seconds)
loading group "sort"... done (took 3.823029413 seconds)
loading group "collection"... done (took 19.590960925 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.728736536 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146774126 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.230377875 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.363619049 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.228459645 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156327394 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.164743456 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.597405145 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.98345838 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.226133686 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.147422653 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.579247151 seconds)
done (took 6.204695113 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25160747 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.076823014 seconds)
    (2/2) benchmarking "String"...
    done (took 0.169417085 seconds)
  done (took 0.841328746 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.08405765 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.179141576 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106246372 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094247714 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107982176 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107451646 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107470718 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106897838 seconds)
  done (took 1.403803355 seconds)
done (took 3.184288003 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.517260003 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.863666841 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.546434987 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.15935876 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.312975622 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.413195407 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.330505849 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.199443461 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.103473834 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.101462189 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173741941 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.403785032 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.469504152 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.991232582 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.102937714 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.091272119 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.126115728 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.778163066 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.075510257 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128704713 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.562823819 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.210300328 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.107027463 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.112630834 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193540188 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11262848 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170186278 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101007359 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.658300516 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.126312055 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.194399892 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09238784 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.154755737 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.237000862 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.21959651 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.103273275 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67355349 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.195014167 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096800336 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097326434 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683482829 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.125412935 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.161925488 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.099834766 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086985585 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181937504 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112102625 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.087876144 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109072205 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083726632 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159005019 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.471919519 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.089803736 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.162570268 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.087486051 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.702267266 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095304583 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272453931 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131175708 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.102974933 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.072494355 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.099277736 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.152471504 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.105454459 seconds)
  done (took 20.443184096 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.154793655 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165215923 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.08705098 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138732354 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139172191 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.090392279 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078187874 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086834937 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122893507 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.231827669 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134769139 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.164469256 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084011826 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081257278 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.139608465 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245823466 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.115106334 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101140974 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096145937 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10033279 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121224198 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.106973048 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.103326418 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105010376 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165128131 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197477884 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103056376 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116369112 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09416837 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110262319 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.134068543 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144419216 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.085687375 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080179675 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182545634 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114597879 seconds)
  done (took 5.139152281 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.218262999 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116540284 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.232489856 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.17226867 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143052043 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160731269 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149940629 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.289026983 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.228337376 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.169742737 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108716146 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106149365 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08724617 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080217037 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.089106799 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.631487914 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180915647 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.144569325 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.145947656 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097909489 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082867742 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129077495 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096322097 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076104276 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099137266 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.135464072 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.311090069 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.215234926 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096087446 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.185807771 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081432444 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104026999 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124295327 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190024394 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129871956 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121543656 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098910416 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.091114873 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213158733 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104176302 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071904122 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128335366 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127889151 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128932927 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093396546 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09086681 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.233832152 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.077891865 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114923709 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.122305883 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.202850928 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.113634539 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.092387234 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.31976654 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.109049467 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083213329 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093448683 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07645877 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.3141976 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124812695 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.090411766 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074293328 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098016744 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071527992 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.436953522 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103348452 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.959323487 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076815922 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157738508 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.166547242 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092199097 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085660987 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097484745 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081917348 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111677628 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074775763 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.090520822 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089803377 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074380381 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.095095168 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.098435882 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094138108 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.091808033 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141472682 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.104544023 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108738036 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104471779 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09489148 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089686146 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107451492 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075874073 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095930746 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.166176359 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098528412 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.098841434 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094773882 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.135737669 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090262304 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.21548172 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075648623 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119020201 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.094452683 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107282773 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109533303 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090112874 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078309836 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093711413 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.087193722 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077172889 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.152160526 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077270013 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.091884223 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.078296679 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.105179922 seconds)
  done (took 23.411633912 seconds)
done (took 49.589447398 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.510428932 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.114329495 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114212119 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097022416 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112674652 seconds)
  done (took 1.623513501 seconds)
done (took 2.270164201 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.37464026 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.180332137 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122374762 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.180050426 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100426894 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.184856821 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186243188 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09874865 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21428213 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093349363 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177935571 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093817855 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085878742 seconds)
  done (took 2.769695423 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093550008 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120755218 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093004185 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1080598 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072484833 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107379766 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10560934 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10726449 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106798495 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084609566 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089947517 seconds)
  done (took 1.735100176 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09184175 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115379686 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080946102 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106137532 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073205304 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105724616 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089018517 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119762597 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104177584 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086198777 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088608923 seconds)
  done (took 1.708450709 seconds)
done (took 6.854332195 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.136725422 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.625418155 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.144065199 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.195761782 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.370449287 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.240322865 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.589515531 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.15997181 seconds)
  done (took 11.316024588 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.171878126 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081138925 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096777133 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096433907 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082977065 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095692021 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0809469 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094263012 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.081753931 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094592996 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081875854 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096176897 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081504735 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095100682 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094934584 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.081630349 seconds)
  done (took 2.228455192 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119353162 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118702549 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104442786 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106701731 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085934637 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101622292 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102084495 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089636203 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099586203 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.085984466 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105907922 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103538634 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089885542 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097615278 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101636555 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092538488 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099175712 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.088255895 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10378739 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.103410065 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091478005 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100000971 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.103579304 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090851882 seconds)
  done (took 3.149966318 seconds)
done (took 17.340325254 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171478606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.094052312 seconds)
  done (took 0.925752041 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.145522145 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.146904254 seconds)
  done (took 0.956197286 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108914254 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093149087 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134553648 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112804534 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079314639 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.093744282 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.130475287 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079033072 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092692529 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079642578 seconds)
  done (took 1.67143429 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08441006 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097890718 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.09242223 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.142318746 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108391973 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098368015 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084470438 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097948251 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084300279 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095061794 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102944103 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116524465 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087199972 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120015842 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098468288 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08944314 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108409987 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100182124 seconds)
  done (took 2.476267099 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079468682 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095305928 seconds)
  done (took 0.842765657 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085883247 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094250993 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085174419 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099515716 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094385751 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.080068796 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.0941382 seconds)
  done (took 1.301726663 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.555955877 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.27033823 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.375166449 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.116099881 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.138587488 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.393378162 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.140365679 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.111545627 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097197933 seconds)
  done (took 2.90922315 seconds)
done (took 11.751044837 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087440539 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.228789081 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.647713541 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.102911225 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093695306 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.137988598 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.31666315 seconds)
done (took 2.288671699 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341532714 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.151603744 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086452836 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091241325 seconds)
  done (took 1.337586604 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074060487 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10220057 seconds)
  done (took 0.847261341 seconds)
done (took 2.861302473 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077116137 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.127516647 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.076948897 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093023962 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.07580124 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092153426 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.075978379 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092309728 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077648568 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090606762 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.076076744 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090643386 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.076970269 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090251555 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077075297 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090144973 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077935654 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090446736 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07667786 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091580198 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076267468 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090733064 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076753915 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090710166 seconds)
  done (took 2.763625889 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100754255 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09678308 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.097660369 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084461483 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100634992 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085005022 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098175017 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094408014 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08473032 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094472704 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083959931 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.100354075 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094054678 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084902967 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095463944 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.085601927 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098767645 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095123941 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080239936 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098803278 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084839035 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095061538 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099326915 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084563272 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.09971028 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08513739 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094063387 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095076512 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084329043 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099483302 seconds)
  done (took 3.450260156 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087541077 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08893166 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078789384 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.098142328 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.075483618 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093734329 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.075270672 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090412217 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080635291 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093098961 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0804062 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091799869 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07562272 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094553955 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080242116 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.095372462 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.088436537 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.09041471 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074628772 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094390345 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080895383 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090466188 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077654528 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.092122966 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.07692891 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088926804 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077672236 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093027975 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.078917742 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093201752 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.079585876 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094954853 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077607645 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102218093 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080479215 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092563544 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081972803 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090601123 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079375695 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089469192 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073883785 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093177026 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.074907725 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101721848 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077158102 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094300556 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.075761281 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094244465 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078451134 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096552876 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087602257 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.075325146 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095713017 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081467442 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095485162 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07561801 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092256635 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074931499 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09324419 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078631846 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088915118 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.074881819 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096271641 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079821295 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110036678 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086550733 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089775513 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080165413 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093862022 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082396167 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095190016 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10483462 seconds)
  done (took 6.919512964 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093295048 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105041072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080229712 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094658164 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07840324 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093890468 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08664674 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095057788 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095179016 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087803134 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093243435 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080709021 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094361735 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080452972 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093068269 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081433149 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102479781 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092517202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07976974 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094407394 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078888147 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100818361 seconds)
  done (took 2.667058292 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.252794005 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086759653 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146811131 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110396279 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116656457 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096318546 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098575491 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099750773 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083830245 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104973695 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104207534 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083372067 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117981988 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104230762 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092050013 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107029479 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098962712 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092185989 seconds)
  done (took 2.682716994 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096936532 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097858196 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104674677 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097512959 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097570939 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082278572 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104213682 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111015533 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082150231 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097460549 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092082045 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096650944 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081233038 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097402729 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097146724 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083057886 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.207259356 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082083376 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106752927 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105362597 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089311998 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10713014 seconds)
  done (took 2.90747985 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09726703 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097301556 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.131243581 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087672233 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095782892 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079740425 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103239676 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08064583 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10307237 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096215806 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081974314 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094702148 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090097521 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096678813 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103079779 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082451133 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0951188 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082013625 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096490475 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080625149 seconds)
  done (took 2.563886564 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172857861 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098259968 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111108895 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12450986 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095809455 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110539322 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123760848 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095244293 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111791125 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128294128 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096899085 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112532697 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124328459 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118413847 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096444655 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125279167 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124271628 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123739801 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096941045 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110684253 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127967517 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096727812 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123305685 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111484422 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096920055 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111422571 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111225002 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104527901 seconds)
  done (took 3.878639029 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079517122 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077845811 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093264614 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077016618 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092724145 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077685409 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093178113 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078606928 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094345706 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078212826 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.093659126 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.077818237 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093725498 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077106504 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094129254 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.077248611 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093562034 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077628185 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093634953 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079509755 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093784402 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078937849 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093236272 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078480309 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094076383 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.078323856 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093020274 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078493918 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092504411 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078247668 seconds)
  done (took 3.254986489 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092400105 seconds)
    (2/2) benchmarking "in"...
    done (took 0.120554368 seconds)
  done (took 0.908518558 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.088793746 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114599185 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077973807 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094736367 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089186154 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094663735 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106314764 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088958599 seconds)
  done (took 1.449575236 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145620878 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.146989283 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086531866 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108864399 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.145107543 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.139428599 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140876732 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086159774 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.097697396 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.073973976 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.138315616 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.090990182 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083861087 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096581894 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.083819123 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105588398 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094766836 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090779856 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104168067 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081498399 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10194264 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09111814 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10260755 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106643928 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.077687893 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103606416 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.088781243 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108956627 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095311417 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.08762918 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.096911444 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081274059 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098872698 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086422024 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097281951 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.145912213 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108750534 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08174513 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.099961443 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086403106 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106994302 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08048865 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.104210003 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.096414797 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087824983 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100215218 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085987556 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096457192 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.075815008 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.092628397 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.080794443 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095568685 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078906232 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102578824 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10083756 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09306417 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098686435 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.078170611 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.094944651 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07980274 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101042 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080174135 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103386993 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099198438 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081565604 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.100934013 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08487838 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097986318 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.083012523 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096914401 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08464243 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115661189 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.103174276 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085049732 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102997797 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080707501 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097815195 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103020046 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084179347 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.102815427 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084904121 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104694857 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082051058 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096166604 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.096712087 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.088587843 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098340942 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083002923 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.089570066 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094554967 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09860524 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080595384 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093034903 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082817502 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.095423659 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099847824 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077657414 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100808212 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080003878 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102042822 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086453436 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094006379 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.086987824 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101969975 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103797177 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.084961425 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.139280554 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097533794 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080243112 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098745296 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086538767 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09459306 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084237052 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094891144 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079763569 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.097237462 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.0850365 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10239294 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097743524 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086160486 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098825494 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086729478 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10043376 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079402698 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.095976277 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083763744 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107062621 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.104121089 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083602193 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096552067 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082857982 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10166372 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084789002 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.098733547 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085587107 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099122686 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095674455 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082742939 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.101239401 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.086098394 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.096760445 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083817554 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104725929 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.099614977 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08466621 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.103052741 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.080104088 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.093981104 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086384362 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.098012874 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080783317 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107350644 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.096733569 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082465367 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.095806372 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091884483 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.098514529 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086801903 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098940033 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086356344 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103581968 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089992537 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083444477 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099573231 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08750621 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.097603219 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080934562 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097446428 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088832832 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.094288322 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085123394 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.093215428 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.077070122 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102476502 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097753333 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085829954 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.097758992 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099006087 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112165168 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087250287 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.101020592 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.100505046 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084402149 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100542468 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08533577 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10353604 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086205905 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.099972576 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.082897026 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103244395 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.094561898 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.087045596 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099874694 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08631844 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.092153721 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081566661 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.091554612 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084942725 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.104691218 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085811898 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103984156 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082309896 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101278321 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108252344 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.080613643 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102215062 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077859993 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102349226 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.091077789 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103911318 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103683102 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.087953514 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098566305 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082174912 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108057303 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081827151 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.101805135 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08252691 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.094786925 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.078063374 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103987264 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10795267 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080110509 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096893271 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086790567 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104950466 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082711602 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.093345718 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086538062 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106688379 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.097318805 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086996541 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.096797406 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.083309503 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111360756 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07746336 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.097233736 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.104020339 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086155893 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096719544 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.081541527 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099783534 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.088641237 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100224285 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089799964 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100516769 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087987422 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09986698 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07905588 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.097454468 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100386339 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.078763292 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099248388 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085363912 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.098400638 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081099441 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106861585 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104617093 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08822226 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099986903 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085796644 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104574935 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088209014 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095848203 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088392792 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.097417368 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078129949 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.099309778 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.090841806 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083366462 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.098203296 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08584898 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099396327 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084631598 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102020126 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088617801 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.099689408 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103588568 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096773389 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.094449226 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.078199549 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099627384 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102261489 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082465539 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097822922 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082431085 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102448416 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085211485 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105415447 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.078152981 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096991819 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086711514 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097980836 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103728877 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08840178 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104577001 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.079870567 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102495978 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.081170152 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106734881 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.078614799 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.10136523 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100627891 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084457292 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.099039608 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082902208 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098864933 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07656137 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.098759461 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103731959 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.078585092 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102258885 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.082855956 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.099744501 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.078555785 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097876208 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087817832 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.096446421 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087797962 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099179096 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077807329 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.09420916 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085937577 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101848516 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.1037015 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08118427 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100736337 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088023002 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10223778 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079485432 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.107657459 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089785833 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104595215 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107886815 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076353528 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.099562631 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090432463 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097101718 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082972561 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099942863 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.078750322 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105013957 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104444754 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.086700421 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099757788 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078157017 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098444811 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087343465 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100885305 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.084222219 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099102904 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085733149 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.097156655 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083850911 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105016351 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10159993 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088928822 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10298188 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08486365 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.098553373 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086916163 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098651154 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078207757 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.095559683 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082021095 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105772776 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.075412089 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103132502 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104317522 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.081836968 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.099882662 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085684544 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.098508575 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083265507 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102533262 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081988371 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110949201 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081931226 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.098884396 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102642632 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086262595 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.094726257 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.082977675 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097658551 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088793553 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.100569641 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086930267 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101880951 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08597006 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100715022 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104257736 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08656806 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104463405 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.078435032 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106327649 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090029495 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100416507 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.081933705 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099570363 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.077817619 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.1004041 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104422944 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08308524 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107562024 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086548776 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.099758224 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082031724 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103591499 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083575015 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105414961 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.096707228 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085307481 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095015975 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088332372 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101535692 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088287058 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098351745 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.07868831 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102720933 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086368323 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102519078 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105459978 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088092302 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.095318703 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078787802 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100861119 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082024718 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1103665 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080974264 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.100480982 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100891736 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084338827 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099898604 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089475574 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.096341485 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.082638503 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103619655 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084976525 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.097486473 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.078003112 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102481154 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.102234169 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085979418 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.101293042 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.07895952 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.101622278 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088128619 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10149136 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.077354453 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100048594 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088119995 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.101983893 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.098490951 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.07817279 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109103039 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087988517 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108092891 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.079144659 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103543243 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100147133 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083823197 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106257853 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083436091 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104527526 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.083216708 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103531134 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109007364 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.078415738 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.096970794 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09313386 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10319142 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086505795 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.100874894 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083651159 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107638919 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108917595 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083693704 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.095682018 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080841211 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097069042 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.078623312 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100573389 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091940758 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.101734609 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.082937184 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101885238 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085127126 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101679392 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099399983 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080311519 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106720462 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082678914 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.106353015 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079509139 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.095066392 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.083286229 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104275152 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080219877 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.098769989 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081016882 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100978637 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.079239162 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.101066746 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10652106 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08681248 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103840243 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086443238 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10053783 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08480007 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111493035 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082332577 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.099608383 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110856535 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088796546 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103220544 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085337425 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107186133 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105350993 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084917697 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107171903 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.083308396 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097788806 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089521347 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107610179 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096476229 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101146379 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.094631662 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085878861 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.097032729 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.080433623 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.107369178 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089718675 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107227373 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085054672 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.099501225 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090533709 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101616128 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102608588 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083207696 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.102166809 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085886033 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100462883 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086319245 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099634481 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088765576 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10720038 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086473467 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108849102 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.094581221 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094164942 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.106981071 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089593644 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099029003 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078929821 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097770193 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.085079932 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106966253 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.088446714 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103846957 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085694423 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103381716 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104324993 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085633856 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.100732188 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088623121 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104596382 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082634425 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105480736 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.080023878 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098617509 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082586341 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106111774 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106357368 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087855096 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111027662 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08821966 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102332148 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082798024 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104782128 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083285805 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.104677182 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102382642 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.082076706 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098008091 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088432803 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10703555 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08542779 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108139478 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09043163 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101883624 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.105973894 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091890749 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104828906 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083766067 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.106302047 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084155463 seconds)
  done (took 56.877889033 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.158564231 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091608772 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101743918 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083709457 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130706714 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103172563 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084448309 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102922391 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084557446 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115033803 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09998412 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084038486 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126729207 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132089077 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128049179 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116827929 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0844234 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102854394 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084270845 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103060981 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104425427 seconds)
  done (took 2.967627652 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107260499 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120644711 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118894559 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12390679 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094321487 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117437714 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119550116 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118061833 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104190384 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113605872 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122339708 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118446611 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094869462 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11358282 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114689037 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11423349 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103924312 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112239461 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118644306 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11945311 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096598555 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119587332 seconds)
  done (took 3.23003515 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092127967 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104468955 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089240942 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.101177489 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088311215 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.100674597 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092187924 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101164314 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.093437095 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.101843223 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.080608765 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.099501916 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085924744 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.101463914 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.098775421 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.084052438 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110957144 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08744581 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106750226 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082980021 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.117381542 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.08402474 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.10182033 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.080433621 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.116439968 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106903348 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.084285615 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103679853 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.080240983 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103997716 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.086534511 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103027894 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086823878 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.099325051 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.078517535 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105758932 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086278862 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101391594 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08390736 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.099005339 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.084563606 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105450395 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107888904 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.08390552 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101063977 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08138131 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104936202 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.084133248 seconds)
  done (took 5.310537089 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.121461095 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160323992 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088460444 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148431817 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123169484 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117917891 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088197635 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127421712 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106410605 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.106968204 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.107604297 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.126515094 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108873555 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112056168 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088152636 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108311226 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.093034653 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108352307 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115379272 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089704824 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115569902 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.109752426 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103116859 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122137522 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111152624 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105785402 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089793007 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111102832 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.121462307 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.099660699 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112534283 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112633275 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.106758635 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111517308 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10685241 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090767671 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126388292 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109520592 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091960378 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10635569 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109539807 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094502289 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109677438 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.126324967 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090752764 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11143009 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109761527 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.086876417 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123860771 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.107725633 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098907772 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125364614 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110977534 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.091260776 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112301537 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12356211 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109109582 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088869871 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11009289 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122063165 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087896706 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111204868 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124897981 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090520319 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116575292 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126020436 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093002645 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111327645 seconds)
  done (took 8.35096887 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120592007 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11307706 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126622204 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126033798 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097018061 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111782929 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111402659 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095909735 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112689569 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121143224 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095395837 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.217805994 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090268255 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119154251 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112429219 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094670942 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112250022 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111907534 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095482703 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112691794 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111994523 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107796664 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112531528 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126799842 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128951952 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090762675 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113412348 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112904197 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107830456 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113412657 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128127822 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.111918851 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095201181 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126750857 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128776418 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112388484 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08774951 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113055227 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112228555 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094841881 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108819337 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12647873 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095489518 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109871577 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09460722 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114448168 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126197605 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128073403 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121077764 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10380065 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112861314 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126352413 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113511286 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095840244 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127414489 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.135321988 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126682752 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126456831 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094265624 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127807044 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126156459 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13486656 seconds)
  done (took 7.863326693 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085142352 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084020984 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103100269 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083934018 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103127651 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083954367 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.102738178 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08416483 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101858877 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084044758 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102441554 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082990614 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101857056 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084632572 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102905404 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083870994 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102356943 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084149126 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102505464 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083946511 seconds)
  done (took 2.601024964 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097020469 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127840038 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088236921 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116667379 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10651403 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096541215 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105800109 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087843958 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107075413 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107145279 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099048398 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118837226 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106249664 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096819715 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118084226 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115772076 seconds)
  done (took 2.454415737 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.112638475 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.127959578 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.163893108 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.109299797 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.088261073 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.114569345 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087044428 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.108665851 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.105788781 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.095362548 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110725165 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090428381 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106686514 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08832607 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107071928 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108757937 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.08676189 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109894467 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08786223 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.163980944 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.112336974 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090650435 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108932721 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.111189775 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091727502 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113242999 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.09523428 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106909736 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.109115051 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088064998 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.110024607 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.09666541 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106165378 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112225319 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.08805926 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10790329 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089221786 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.106994838 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.093830511 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106083049 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.090077451 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109785368 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105757525 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.09193142 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104529959 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089585292 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104692969 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095329281 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109118691 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109601457 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.088012838 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11234846 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.093918531 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117463068 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115597915 seconds)
  done (took 6.512964485 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101930538 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108174844 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101726358 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104092472 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088780835 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10909126 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108260678 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091047619 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109039491 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084426645 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110023173 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089266304 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108216878 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108195256 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090984355 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108163687 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085211008 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109201099 seconds)
  done (took 2.574633151 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094470624 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106616538 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093022238 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106213711 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087572527 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107343347 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086102181 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104457329 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086253473 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105679323 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086339769 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.106557554 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085808194 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.107996746 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106431189 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088412615 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.1052817 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086259488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106322283 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08610356 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106382082 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085763811 seconds)
  done (took 2.896439844 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.100286039 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.164744408 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.117576375 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.175103121 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.106419929 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.085919425 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.117173475 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.105971287 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.106598867 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.105049899 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.084606938 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104285426 seconds)
  done (took 2.138576014 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117642081 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146229841 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107498133 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090724308 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119668455 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094728679 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114731143 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112651687 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123937501 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111281623 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114258813 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123482923 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124061341 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12747307 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101926131 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119003547 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112918226 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094252643 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107435075 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137954479 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095667272 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124979583 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114427972 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11325457 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095479163 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126092207 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124259325 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128007957 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095875012 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125844027 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118063761 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113066325 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106704638 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130074926 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106732959 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124387238 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094872876 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135221372 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119012242 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125868687 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088308278 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11937384 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12484255 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120311214 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106301229 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114570506 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121929512 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095249255 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114835756 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142743675 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120041913 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12639951 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099596643 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124930644 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124228884 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143580541 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129278923 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126999096 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118659116 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109557256 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12646692 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120415759 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128049962 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129405012 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100420323 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127478766 seconds)
  done (took 8.492837518 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134045041 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109961032 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114898364 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130238889 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107156719 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113631234 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113204055 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095082329 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114080884 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108113819 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164272608 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095386392 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12831183 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126015994 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114670114 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095101858 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115658904 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127905375 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090551227 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14347762 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11474847 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127316963 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127281637 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126997119 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11215262 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120926151 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113841161 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094142988 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11474942 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114245754 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103933637 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115367408 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127084078 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110142128 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10943391 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114362656 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113967397 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103021236 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114363607 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120516815 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126985648 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136725748 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096960585 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114819785 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129321111 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094622898 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114586018 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109575022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096269756 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11073535 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12956627 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131818093 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111171483 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128514471 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113829797 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113541725 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096489471 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113299754 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114419907 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1015922 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127053114 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114293334 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14583097 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094687118 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114659292 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128234696 seconds)
  done (took 8.423537771 seconds)
done (took 154.812781852 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148072792 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.169395118 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145573628 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.145193008 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.100867926 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11741187 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.135072343 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.14666088 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.081724205 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101832235 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.081332836 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.10629743 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.148068124 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.100813598 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.081621477 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.105429997 seconds)
  done (took 2.681847587 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203642106 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.314953226 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122623508 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.111770267 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091012955 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104824334 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091323122 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112805253 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105083275 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.097412554 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.104265043 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085274377 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.116522089 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104864915 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.0867208 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10392988 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.115389708 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085651029 seconds)
  done (took 2.932430345 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110587537 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143106132 seconds)
  done (took 1.031509732 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122256725 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188511061 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.322461255 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155438511 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.132858569 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128768334 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137713252 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123055697 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199034079 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126906131 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.127976368 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108578255 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.116574551 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11652628 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119366954 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089239062 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.137853731 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11926188 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099001438 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109847393 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134519465 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.091244066 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115783397 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09980185 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.208692931 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.106496428 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.111281859 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.110166209 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.091851404 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118306246 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09191852 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128048029 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.126198277 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.196408128 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.095354962 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.193078668 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117933888 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091391371 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117657508 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090249394 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11363876 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113263557 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107393417 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.109387539 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.109441977 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098297111 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.11080257 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.09011029 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113717405 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120555273 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113486515 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092057225 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.190517796 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100746896 seconds)
  done (took 7.574085616 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.897681141 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.130160084 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109399653 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.017985617 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13711146 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123474761 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.874832859 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132094136 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.270535137 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.893396831 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105390312 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121804024 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.252634225 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.284063722 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.176240962 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364111079 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.757212926 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102265738 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.139001539 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159845165 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118120358 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135589463 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112586943 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.466864853 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.090411893 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106506028 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115041356 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100767448 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191865205 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.088228146 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112109032 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195529476 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.297817942 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224956837 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090353697 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105905526 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086228357 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.20074351 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.290153979 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.237800998 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178699986 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102990566 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087983963 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116959717 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129335664 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085503163 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194661397 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187961303 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.206033106 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094074728 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120028361 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118429976 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.096819754 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.192781334 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.085276268 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358034745 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.385476728 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087405354 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117983064 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121622406 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.284824735 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088690387 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.250080787 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136616286 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.233461031 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105292528 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807540768 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181727771 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10535872 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095082098 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116923387 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113939734 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095995726 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174862658 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390196024 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119575972 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113218946 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087092195 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.259991593 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10612091 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087247739 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196327108 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092085138 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118439106 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120979341 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100461366 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.203380744 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.262376886 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12012661 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117652334 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094700631 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1230729 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.089424032 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.243456606 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.242028728 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16949305 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.251230082 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117141961 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178872642 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.198796469 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0966027 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.204180974 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096743055 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122873312 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11544003 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.239977916 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147713856 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087947209 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114355351 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117548941 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151474778 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090625186 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120192869 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.180645447 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.505422982 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.19923154 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.085900308 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10989739 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098668564 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194103623 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095898006 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.282303424 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119405261 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.198493291 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097685387 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104151572 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098328805 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.196768636 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116387206 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099152758 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116288298 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116767124 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.267864838 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241885155 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123208851 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.260311545 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184345856 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095543727 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206345696 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11613858 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.184604133 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118965321 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096723952 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110593072 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798244803 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122074946 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097960642 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115163807 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199180947 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106128958 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08920455 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105149713 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085305738 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824631964 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110038019 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.085611706 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108735902 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097089954 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118564558 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118906737 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094757901 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194984735 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25789706 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120663807 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096088127 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107777012 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.172767775 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.110952385 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086698139 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107819774 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086932526 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119598581 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115526183 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089383181 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.206216687 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.172654608 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.244196374 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568857068 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107116648 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087771577 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25585758 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110240005 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332441684 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118958621 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.25010212 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.199228092 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.085548912 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.365726172 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.202917578 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201160913 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.090659293 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.205171877 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084442307 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119565297 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.173902344 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107696004 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116949571 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173230181 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122740071 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100322194 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.203269905 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08946682 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.262307694 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085676454 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.201532307 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090578668 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116308278 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331223605 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086730971 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126781255 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.194474145 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094768557 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107375331 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.689168851 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089402181 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120712548 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096191172 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.265308747 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180712818 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117871241 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098611485 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122694326 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.195905221 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.226931468 seconds)
  done (took 45.946328206 seconds)
done (took 60.939241689 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315562943 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275147927 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.331181407 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22503982 seconds)
  done (took 2.026088883 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.222776638 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155683698 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.185348907 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10622547 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.19507112 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.106303264 seconds)
  done (took 1.769696108 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.524830276 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.406215387 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.364875994 seconds)
  done (took 2.098709717 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271220671 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.266591677 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358486767 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.488959943 seconds)
  done (took 2.317799994 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.249690532 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131335744 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123969701 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.177112938 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.216486582 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.215439068 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147754707 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.163988025 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.111804457 seconds)
  done (took 2.390782931 seconds)
done (took 11.407382001 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.355088446 seconds)
    (2/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.291229136 seconds)
    (3/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.152930377 seconds)
    (4/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.315613738 seconds)
    (5/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.267604498 seconds)
    (6/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.324483951 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.162751251 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.26783034 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120737706 seconds)
    (10/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.224713185 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.315708121 seconds)
    (12/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.21531973 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.147001323 seconds)
    (14/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.158666617 seconds)
    (15/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097731733 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.197620099 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.216533285 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114971471 seconds)
    (19/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.126763242 seconds)
    (20/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100116323 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.152352199 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09445525 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126012334 seconds)
    (24/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.174699564 seconds)
    (25/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114474224 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094212352 seconds)
    (27/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.207479174 seconds)
    (28/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.249631742 seconds)
    (29/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.233958291 seconds)
    (30/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.300304361 seconds)
    (31/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.218045305 seconds)
    (32/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.278138821 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.153699236 seconds)
    (34/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.206624281 seconds)
    (35/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.193922652 seconds)
    (36/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.275141522 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.168558447 seconds)
    (38/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.239695286 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116504081 seconds)
    (40/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080591672 seconds)
    (41/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.07741566 seconds)
    (42/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.159497999 seconds)
    (43/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.160209703 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.077729064 seconds)
    (45/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115520562 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.153157296 seconds)
    (47/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.178156086 seconds)
    (48/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.078598674 seconds)
    (49/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091604881 seconds)
    (50/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.124617601 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.149581756 seconds)
    (52/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096474367 seconds)
    (53/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.099090634 seconds)
    (54/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.084309038 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115673338 seconds)
    (56/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.148787086 seconds)
    (57/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.124139038 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.211566392 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105343697 seconds)
    (60/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.196029237 seconds)
    (61/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196812594 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.115056398 seconds)
    (63/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.244604892 seconds)
    (64/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.096378452 seconds)
    (65/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.211857969 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.115732822 seconds)
    (67/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079578872 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.100282358 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093672107 seconds)
    (70/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187003955 seconds)
    (71/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.114781466 seconds)
    (72/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.159203216 seconds)
    (73/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.10176797 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.151721613 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086546335 seconds)
    (76/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.197063886 seconds)
    (77/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.196895885 seconds)
    (78/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.078570175 seconds)
    (79/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117267757 seconds)
    (80/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095686926 seconds)
    (81/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.109608993 seconds)
    (82/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.150977932 seconds)
    (83/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.194434498 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.13091975 seconds)
    (85/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.078595672 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11499346 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.113090137 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.115216467 seconds)
    (89/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.207257099 seconds)
    (90/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.095715563 seconds)
    (91/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120354094 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08584371 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118021997 seconds)
    (94/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.215097369 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.259331156 seconds)
    (96/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.176253319 seconds)
    (97/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.175393959 seconds)
    (98/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118191145 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101649374 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.101391847 seconds)
    (101/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086198595 seconds)
    (102/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.178750887 seconds)
    (103/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193506554 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092815405 seconds)
    (105/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117156464 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.129061077 seconds)
    (107/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.149966707 seconds)
    (108/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.099724346 seconds)
    (109/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.217272622 seconds)
    (110/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095716344 seconds)
    (111/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.099042889 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096145486 seconds)
    (113/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.098208538 seconds)
    (114/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085207538 seconds)
    (115/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.076759163 seconds)
    (116/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.099235878 seconds)
    (117/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.078923261 seconds)
    (118/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.105267806 seconds)
    (119/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079020198 seconds)
    (120/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.214597829 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093347942 seconds)
    (122/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117375071 seconds)
    (123/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.168996764 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087570753 seconds)
    (125/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.133136381 seconds)
    (126/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.158153998 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.133670062 seconds)
    (128/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.076889444 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.115238587 seconds)
    (130/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.0782061 seconds)
    (131/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.098124427 seconds)
    (132/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094522819 seconds)
    (133/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.097900312 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.220597439 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094330141 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.116608033 seconds)
    (137/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117089975 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096257825 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.115450062 seconds)
    (140/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.234133316 seconds)
    (141/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.0775474 seconds)
    (142/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.098754299 seconds)
    (143/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163015713 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108880185 seconds)
    (145/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078361491 seconds)
    (146/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.099773864 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095425668 seconds)
    (148/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.099017984 seconds)
    (149/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.079399835 seconds)
    (150/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.099778798 seconds)
    (151/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.07805806 seconds)
    (152/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.078614118 seconds)
    (153/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.105148872 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088103583 seconds)
    (155/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.202492565 seconds)
    (156/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078999827 seconds)
    (157/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.116166919 seconds)
    (158/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.07900546 seconds)
    (159/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.105613154 seconds)
    (160/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078932067 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116081802 seconds)
    (162/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096280665 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.133566634 seconds)
    (164/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.078637217 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108457884 seconds)
    (166/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079919144 seconds)
    (167/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.07650951 seconds)
    (168/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.114327303 seconds)
    (169/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087210665 seconds)
    (170/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.100262957 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096614368 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.116194981 seconds)
    (173/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095243311 seconds)
    (174/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.100755799 seconds)
    (175/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080333072 seconds)
    (176/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.07750314 seconds)
    (177/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.10149469 seconds)
    (178/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119782769 seconds)
    (179/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084197123 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.132548087 seconds)
    (181/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.084452749 seconds)
    (182/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095068127 seconds)
    (183/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.101344692 seconds)
    (184/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.078788434 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.340548967 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.079612663 seconds)
    (187/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.100766997 seconds)
    (188/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.07849864 seconds)
    (189/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110943044 seconds)
    (190/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.080947481 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108834388 seconds)
    (192/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.092000901 seconds)
  done (took 27.225710555 seconds)
done (took 28.03974152 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.224674548 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102755189 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.121440629 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119678322 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.177153807 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101027028 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.129354506 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.121965058 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.103436982 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.116622934 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090325322 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127674307 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098421149 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.199255895 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.102239349 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.112794223 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.090307127 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.124667512 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128295446 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10838316 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.176379103 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111372271 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.103330521 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.111068047 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178916034 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089061475 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119388212 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119083467 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.105509302 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117133763 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098427811 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111463157 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128749329 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.106544642 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109384814 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094948561 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108565607 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08627418 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.118126749 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096249377 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126697522 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116836436 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.100328956 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.11234713 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.096914548 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116509229 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088535178 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123852491 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109278666 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098674863 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111345972 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.108176778 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116148574 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087900429 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109590459 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111991734 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.102657789 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109270482 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105664303 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109210167 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091055297 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110493402 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097655915 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109600037 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.092921923 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.111479391 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116078594 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098484092 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.115724383 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090305974 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108883431 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.092947961 seconds)
done (took 9.037589164 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095479136 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.173026809 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.175414132 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.183472568 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.144114403 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.128724183 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130920347 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120441062 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.127171503 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13481307 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.127161187 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141291974 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.187763073 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.124704153 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.12967425 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096987671 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125196749 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.118215417 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.185945624 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.116123168 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145188213 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126012437 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147312831 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.109488327 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11755062 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.14996375 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.098443083 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118812638 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.09554897 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126317927 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136310108 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.095413455 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.119091954 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131631553 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106019103 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123779754 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.128560861 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097626529 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.115759892 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094552348 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.131475857 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128450334 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095030483 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.129382457 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118633343 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.10456629 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.124676425 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.102220052 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120565658 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119536857 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.098768178 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146115147 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.12368175 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106383847 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.124517031 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123611428 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10315872 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123291422 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.097829042 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.123855735 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.116561406 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.096999335 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.121197496 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144288617 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.099454558 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124259905 seconds)
  done (took 9.041014745 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115509828 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.153638773 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.127846917 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106654971 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.125838449 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.107182118 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.087604937 seconds)
  done (took 1.67685251 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087998804 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.180569475 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.179600702 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.18101625 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.175847754 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.210581416 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10921228 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.109669473 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.144889519 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.099424119 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.178921689 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.232537438 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094821503 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.128413514 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182534521 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086861034 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.205953707 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088815996 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122024381 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.179855633 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.103064895 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.141221689 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.126347336 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.088791831 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.173076926 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112575931 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.234910523 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127899767 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117128715 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098734966 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12339301 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.19545607 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.174068292 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125955754 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092176964 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.176539186 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.174757172 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124336016 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.188722003 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114324211 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.174321641 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.100880414 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.124980808 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.102587113 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.123947647 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.161847367 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128088603 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.101665643 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.121016443 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.181823184 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122292895 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.175769869 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.09711102 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.1221149 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.100646967 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124520294 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128775246 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.100372017 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.180267627 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126082751 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.175749993 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.176255537 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.176506834 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.176499261 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133236124 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.177391724 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.173634236 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.098746953 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120413758 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.12259937 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.175926702 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.099355117 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.123274941 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.164561712 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125998405 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.178206044 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.175976314 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09791114 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124245586 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.092332638 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121060435 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.088202319 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.164736651 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122386225 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097488369 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131557205 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125245559 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.10100383 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.115868502 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.137529176 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.099598561 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.12427173 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.126987785 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.100318593 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128825722 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.179578996 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.124138849 seconds)
  done (took 14.230485972 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090596822 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.111877618 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095753593 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113254655 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093014192 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.112751121 seconds)
  done (took 1.486501561 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120118703 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124314471 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.134078387 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.103689152 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.182265875 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.184957361 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.184144123 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121773116 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.14202633 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.112693085 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.206199238 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.186077282 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.183358631 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.105151133 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.186411788 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.127378319 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.184399677 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124247619 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.111182048 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122193458 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.129953692 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.104695503 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120804698 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.17421361 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.126251108 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.104198992 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123557667 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.133616371 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.110668227 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122803937 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.104365676 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.126369255 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11831776 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099043149 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.184805296 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.11840846 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11978002 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.108225176 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129100488 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.126254925 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.187924567 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097918731 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.132400843 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.129439842 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.098012342 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.117579484 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.129530028 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101086403 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.184576846 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.131226593 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.130370263 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.103166676 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.126427216 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.128319278 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094711385 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120849488 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.10602525 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.207365883 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.105039534 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.118212599 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118224892 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.127736772 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120501579 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.10847854 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127684476 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129128045 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095680138 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125684793 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098980846 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.124715446 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128701534 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.103436923 seconds)
  done (took 10.262237693 seconds)
done (took 37.549657215 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.088648178 seconds)
  done (took 1.960593776 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.896305555 seconds)
  done (took 1.771067234 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.635190587 seconds)
  done (took 16.543722897 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.542177948 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.633964853 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.95029712 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18003365 seconds)
  done (took 3.176344301 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.950685953 seconds)
  done (took 1.840224442 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.376151676 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.253834287 seconds)
  done (took 1.505861342 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.684739398 seconds)
  done (took 1.568516644 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.090817569 seconds)
  done (took 2.965928157 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.371465962 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.192094576 seconds)
  done (took 1.455524694 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.673509483 seconds)
  done (took 1.560131828 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.096312394 seconds)
  done (took 29.98384384 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237679836 seconds)
  done (took 1.137345436 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309535477 seconds)
  done (took 1.198977699 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.267309413 seconds)
  done (took 4.158670755 seconds)
done (took 71.711697221 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100085816 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124955828 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102542584 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123365019 seconds)
  done (took 1.334834172 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109702551 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124703443 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104788487 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122961732 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132744939 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.102430923 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122384719 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.107253788 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122998859 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.125576612 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.102174542 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.124311008 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.125106112 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100762848 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.121156075 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.103237349 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127308459 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124598531 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101777685 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.124664317 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.100939815 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.125342909 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12591041 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.104687244 seconds)
  done (took 3.680843928 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100111713 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116410649 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09646632 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115227434 seconds)
  done (took 1.328661167 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.111047316 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140042961 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139645471 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10912333 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141273988 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13887977 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.098526798 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117789483 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099543626 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.131380027 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.147738179 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120745892 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139710474 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124422776 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110937739 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11581863 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.102852763 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.14053032 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.131115676 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.110471488 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.122876244 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131182114 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.098446317 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13740775 seconds)
  done (took 3.859659945 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.209909615 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.113536624 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.147001076 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.176979584 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.156352958 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.097825451 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.149517629 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128778463 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.107254597 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.127296476 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.124808567 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.184852811 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.102228142 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124940309 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101660813 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.128176564 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.135943725 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128353541 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.172247339 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.105660365 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126445738 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.13492785 seconds)
  done (took 3.886533902 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101222942 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115971061 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088932446 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115433283 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100609779 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.118392866 seconds)
  done (took 1.539168535 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09590947 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.108921821 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092128788 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11169861 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.092439667 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.107281943 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.085934643 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.109483706 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088290426 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.107868352 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089130483 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.085274293 seconds)
  done (took 2.07486351 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.300415573 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092448003 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118748334 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11458502 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101225898 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114916416 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133298458 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091924372 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.252912208 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08748926 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.134890456 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193623374 seconds)
  done (took 2.643051353 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222475196 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101251809 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312070573 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.376581531 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165099165 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173836505 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276791105 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176181656 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198671035 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143690151 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230280137 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138840944 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159048439 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186253711 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147909702 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.217640899 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184634213 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211004729 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153930632 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238227386 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170776136 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17420601 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19232215 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156809748 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117530809 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165798203 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124000819 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107577693 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205740636 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178968987 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185940321 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155216749 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146643599 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21365137 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241995924 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191567905 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.322296196 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138648915 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201395555 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.193733137 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279773384 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143922132 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208521365 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161878423 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132643033 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189987537 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161533854 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189167483 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111501545 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146224582 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222496185 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185654087 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194642509 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141510499 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296019901 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153053661 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15321667 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184357398 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197365223 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200734558 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173010678 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124439692 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189985756 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188419757 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187552532 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.149422483 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178504258 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131442073 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180853986 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204861813 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213963699 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170829021 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.195552615 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137646362 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170681119 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17891904 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159990422 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185439283 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165209722 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099205741 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154978984 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140404927 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129381966 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170374375 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125448351 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214923204 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138399696 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.388461905 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212536022 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166210671 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168039821 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170249989 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173916303 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152884612 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126071747 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151260605 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.170231479 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139860191 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136022967 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165367366 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147731061 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133445729 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13375681 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127171889 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165451974 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.156738795 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176829159 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170623284 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.110794955 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172365574 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156611958 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164529944 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180549993 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193040514 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136580996 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137967633 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202686224 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164040601 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13919088 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184851063 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198222185 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.173415365 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140975405 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176282478 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203391682 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14637645 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198574949 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149889238 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112590166 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161483523 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163993915 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164148411 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158719394 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10724787 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159884446 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231378179 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104956544 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141256526 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181372033 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132482173 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105840735 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145900008 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141584025 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.145729793 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133118006 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.142945167 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162598589 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166281014 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160422518 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166483658 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14820065 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205249684 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137526107 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166757597 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127991097 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123654655 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192300171 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193312048 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13407825 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207602737 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.202974975 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202717329 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170544554 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134272888 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187112874 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108420748 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125581512 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171197634 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169939942 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171952603 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194668259 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199050903 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.202033893 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.135145334 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1545671 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17656612 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183383406 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166951277 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.151985838 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170164152 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178315673 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125402157 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.103849458 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134982394 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145585323 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135519 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111714679 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190900053 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198290162 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192970419 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168685939 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143522093 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192585425 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.107136534 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172372814 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.208460788 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117298474 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220274119 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19243971 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173423287 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122429705 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177174979 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125615876 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127048458 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115380715 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176410061 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137770698 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138575086 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149032384 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192458834 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186549946 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155725369 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209921863 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175217522 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227423989 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101298019 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169797735 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178752358 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162877594 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184887975 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115518173 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.168999938 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186737171 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150593041 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201228463 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168034862 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177018724 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237740326 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163139557 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108634101 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156519357 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173098977 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146484831 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173446164 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152480448 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13927577 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160257391 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.118110421 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133206739 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192050739 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150069906 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190946188 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.165282804 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210443418 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104930142 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150612203 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16732283 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15059411 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.099417655 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180120695 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224638355 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127826115 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166214353 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209872356 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112026227 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.322413152 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224135787 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196282153 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143313311 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124506794 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169441269 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167421329 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172085152 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187800733 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14987222 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18887972 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165912029 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.149990831 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140523153 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128162384 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157642554 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.163169225 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142514765 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163012053 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14889417 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197923391 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145513417 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163387476 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17144287 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127914359 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.16364551 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145941401 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211674211 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164323517 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188204489 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.161193177 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178171747 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210279039 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12772708 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105225007 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133067739 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188865473 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136196801 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165242204 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187103657 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202251484 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164880849 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174235423 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14290634 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129400274 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1660556 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129722702 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229691057 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149802149 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.119920505 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230679174 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133871931 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135779973 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170185448 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283938116 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14898491 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183396612 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.125942878 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273648054 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105357225 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135821373 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16927737 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181495974 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.155524218 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184377427 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173153373 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123820349 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169449968 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143702857 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195577712 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240518388 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177094496 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185318966 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150558309 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16690869 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171916657 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187506068 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149625697 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12739237 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170502934 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191112968 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220641154 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11450097 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171194683 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170442881 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166641534 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185684059 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139819622 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207027468 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13561707 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173506889 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145610723 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128821572 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139909216 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.211681536 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113128806 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209778122 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137880596 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135183068 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131820454 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157294955 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162340393 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12456492 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133884499 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189745564 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.132171432 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170254078 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187129972 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108101107 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161242104 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151643306 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137918183 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123574513 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150086885 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142303052 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168774638 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195350545 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.111152877 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212233378 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179141444 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17392251 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167750705 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14956889 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643577162 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.136341824 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190516634 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153385474 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19774213 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156658101 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173003791 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166991367 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129934772 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175225178 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15707732 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230584495 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171973445 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169354706 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136307367 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149822328 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120769303 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.13916168 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159471494 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169790066 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144828387 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.118927707 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166016225 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150385588 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.152375604 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14323301 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193939864 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127774071 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223884737 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190444021 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143496668 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173003963 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189258508 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106537088 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17481651 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209566394 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120737839 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160019694 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137856978 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141611157 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186651174 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102654224 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168727684 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166717499 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168888406 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168348793 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141475025 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164830017 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124716515 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166344918 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133511172 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16486112 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162427404 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11169278 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133884002 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16338463 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168440946 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163949579 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106517396 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174482544 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192447316 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.126936152 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112715853 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280560234 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163191958 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225892287 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13611898 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140790525 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149620273 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164212178 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161133868 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165220058 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110905275 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136881375 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.111771617 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188719194 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.162967868 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163722603 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188271077 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170597037 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20828246 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.150876414 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275965035 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14403221 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160387996 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113046435 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.137266387 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145185837 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113711874 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151910499 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220705846 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186294037 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.133193743 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.151467802 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134105044 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.102029255 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137308002 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170155896 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163107861 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16438267 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151065921 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.099642276 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151050171 seconds)
  done (took 80.903874231 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146188158 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.139077307 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148843646 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.197514914 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166161993 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258760053 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.207125452 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231362044 seconds)
  done (took 2.485716758 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.104231571 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.137377903 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144313957 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.12575775 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.126442405 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.427394079 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.140489253 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124787525 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.187258111 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.137411081 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.1218613 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.589550311 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121767276 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.125978603 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.117758771 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.125318572 seconds)
  done (took 3.842637385 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.210619358 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.51694215 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.55271873 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.244665391 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23199794 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.183280986 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.688592066 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.174748522 seconds)
  done (took 11.79026339 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.131819352 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144004079 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.346684359 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.21730052 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.162454869 seconds)
  done (took 2.000676828 seconds)
done (took 122.257855574 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104778812 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.144297577 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104730757 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.145224008 seconds)
  done (took 1.483144067 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.152657015 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.113303198 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.089489923 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.111904502 seconds)
  done (took 1.463580642 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.520089116 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.085943008 seconds)
  done (took 1.633118952 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.130023435 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146123415 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.155637165 seconds)
  done (took 1.436719165 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11357007 seconds)
  done (took 1.109555688 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100526034 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.1246889 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.183561576 seconds)
  done (took 1.412512171 seconds)
done (took 9.536304021 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125972945 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.520281387 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.418291786 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112433128 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72938849 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379660433 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.065007377 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.157739399 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208387416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118678933 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113050017 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697792735 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.018427359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.431391182 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002154809 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.428525791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.700198282 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091884373 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.126285706 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119602173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.013200568 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118718953 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094035152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119497631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.671969056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.438358535 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118092999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.444944281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117869192 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100838 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.40541487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.092891272 seconds)
  done (took 17.29265909 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138936683 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185962499 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130481846 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094410797 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128064029 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093638236 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1312845 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.133091436 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199638331 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091500858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140318473 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091418856 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125245697 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118917668 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116761393 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11879361 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.094161505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118339126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099898955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122127205 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137764453 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093599757 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120852614 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094102825 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117106797 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.125005501 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119917368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.131460629 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094120907 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126862209 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.095788117 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118022164 seconds)
  done (took 4.853610004 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143665614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1965521 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132931206 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127213029 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179302328 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.120749022 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.210771699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160718429 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199027299 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117823487 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11523435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118318041 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135598789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119615117 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142833114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093227193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118792688 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093403205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.126922379 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09476359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141361562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117280981 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096807399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118234967 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094600026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.151582578 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092647292 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.133905351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118524707 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101407943 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121700969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093570055 seconds)
  done (took 5.132787765 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106183347 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.132662772 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118656241 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.145440536 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099777428 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132789862 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.131980141 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100201045 seconds)
  done (took 1.976124642 seconds)
done (took 30.255958261 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.120382167 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.137956761 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.112692396 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.133098518 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.197299422 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.096341561 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.136578453 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095932234 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.133554696 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.115751283 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11943547 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.099860867 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.140520218 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.101922186 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.17754582 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.13607854 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.187126844 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.1807274 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.098769051 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.13362332 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.098833252 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.212965655 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105411826 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.125262164 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.164235478 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124751601 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.176261376 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101718513 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.128243821 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.126319619 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.180677451 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.10568665 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.124389682 seconds)
  done (took 5.425692304 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.197840203 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.206117178 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.100241769 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.124926029 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.209796995 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.098569078 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.197854318 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.126217524 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.097887408 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.124828945 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.098111106 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.199114473 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.210050475 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.22015777 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.238941351 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.207575832 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.194352296 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.20457524 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.192803171 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.211280738 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.20074614 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.124556312 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.209773651 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.209302967 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.09724148 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.125056589 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.233333749 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.205648025 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.232824699 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.19422291 seconds)
  done (took 6.302438033 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108097864 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.140736618 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118815694 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.193734579 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.157912873 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102641726 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138727512 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.143552401 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.120374258 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118482231 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.110878968 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.158499392 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137696194 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106157381 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.12476937 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114287358 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.147898257 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096071303 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127824631 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113813925 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140673764 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13899508 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.109567591 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132009163 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09236155 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12952196 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098765862 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133351381 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.13106822 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.108285494 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127806341 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099214317 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124575129 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104036226 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127488984 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.131688972 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.122637052 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131796304 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10517668 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149890685 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.103152487 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12831269 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145370634 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.147373419 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123108614 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.106046626 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.134282083 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132714174 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09565452 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.140431801 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110023919 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.122499255 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.114549248 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.120974466 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094428796 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131317889 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.121684247 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098982397 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13402212 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099667491 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.148736028 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101711047 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131291983 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.095429147 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128243429 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095017086 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.12094921 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123867228 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.121761821 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127952136 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.130105974 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.122854734 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.104645671 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131392045 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127011709 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105361103 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.120913245 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102192282 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129566759 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101139056 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132950687 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098016163 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.126338703 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112677567 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.14139062 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131952729 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104788202 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.134470277 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.097839873 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.123907053 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134758347 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.098379484 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12525978 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108287033 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121606214 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09852333 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.134574953 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.104659027 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.121294 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114722138 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128560409 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.120562189 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.114122212 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122221972 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100819979 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131946283 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.108392 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121826172 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103538213 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.133722392 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.095387848 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.128049301 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098678489 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120628293 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.137981172 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.106242142 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12653761 seconds)
  done (took 15.186314816 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.299235008 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.307596724 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20185298 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.364431432 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.149026992 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.200009894 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.302509376 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.317417877 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.102951729 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.166883728 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.183599644 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.273726036 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09538332 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.157049809 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.304725547 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.369979096 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.127218133 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.194984425 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.139969315 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.148094053 seconds)
  done (took 5.433011547 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.118328025 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.167847382 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.15567163 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.155244063 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.102787819 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137209122 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095142151 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.149023329 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.130132406 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.102997674 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.120976575 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.109006009 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.131769676 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.105232752 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.141523422 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.170615496 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101312024 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.130359232 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147708223 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.103350107 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132678781 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.153670713 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.107331416 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.152322728 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.137408933 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.112093649 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.121424364 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.103075683 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.125904507 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.101473453 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.130007528 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.14500008 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101891121 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.129740896 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104594128 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.13595972 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.099159811 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.126454617 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.097511295 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128529845 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.112852345 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.132506252 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126920288 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.0930434 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.108460753 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.125083211 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.107378459 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.132974597 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.134083418 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.110416613 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.133793683 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.107431698 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129331137 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.141418643 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.099309642 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.138739503 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108727875 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.136738149 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.129891674 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095376719 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119666107 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100121078 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.127268478 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107896895 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132611882 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143922352 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.111172074 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.12237725 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.102050858 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.128216244 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098797921 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14237906 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.146923932 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.100215465 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.126127074 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112060711 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.126655288 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.08786338 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.133774384 seconds)
  done (took 10.738520828 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126094588 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128252868 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116652956 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.161668925 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.137361496 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.103326302 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127725503 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.115589814 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.137512206 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108492703 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.137984168 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135767523 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123662281 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.138834847 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099800983 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.139498624 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.105982829 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.167651877 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.144463917 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.157388472 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.10863456 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128481313 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.109511928 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.138030363 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.159051076 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.107488678 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.157709173 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132237667 seconds)
  done (took 4.694933003 seconds)
done (took 48.789018841 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.144562047 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.314428659 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.105243873 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.103070651 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.116529749 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.120468378 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.108759566 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.297780983 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.777233501 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.106482966 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.103067907 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.101660628 seconds)
done (took 26.430783441 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.342659303 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.655756311 seconds)
    (2/2) benchmarking "String"...
    done (took 1.396054904 seconds)
  done (took 4.08098218 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.096383605 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.09741101 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.33953957 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.09958827 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.0973361 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.113085927 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.101422228 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.101331933 seconds)
  done (took 14.977352887 seconds)
done (took 24.526585176 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.117744728 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.286862808 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.341859202 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.115083495 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.105924325 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.118137411 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.099705819 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.108742016 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.106901632 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.104344453 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.461515549 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.349463063 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.114151347 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.466074509 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.100491134 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.117658864 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.100394501 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.330296442 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.102491245 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.137232003 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.090189405 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.109418799 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.117920545 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.111768933 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.207508784 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.108396787 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.174956442 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.093402295 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.268303845 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.105325924 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.124745225 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.089485271 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.155381665 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.086614304 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.097258668 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.088568512 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.263445889 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.186966095 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.077985732 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.085349271 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.268020744 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.096994648 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.084247957 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.086795345 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.081902662 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.096128348 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.074935927 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.176239431 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.100676331 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.075033288 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.10078807 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.461292207 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.080758701 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.091062559 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.089042954 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.305800787 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.086913973 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.114908644 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.098007667 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.087811737 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.07583757 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.075075584 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.103998453 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.077740308 seconds)
  done (took 136.450460958 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.072396729 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.080195859 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.079550636 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.097951357 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.079462608 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.080725803 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.072410969 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.073420885 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.077610762 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.084978485 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.080047473 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.075912818 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.085172558 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.06354777 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.078718447 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.095729414 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.080666133 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.085596615 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.087777823 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.074405529 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.075592525 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.081018752 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.08893596 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.073844821 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.107053115 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.156351933 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.097074957 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.083521628 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.086644397 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.074419885 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.104694136 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.099598454 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.60831343 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.946614576 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.092746971 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.106886709 seconds)
  done (took 75.496768878 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.074586879 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.076897649 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.074960745 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.10166386 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.075400466 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.568371076 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.572595081 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.787825488 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.234582054 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.194657292 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.28582031 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.08043052 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.165627499 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.087435391 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.076668053 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.090484039 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.116673145 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.075513265 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.074969859 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.567636742 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.094921421 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.075606863 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.239396521 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.090038938 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.10555573 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.473921645 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.166340488 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.075174258 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.103777791 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.395288678 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.119684911 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.075461881 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.374668019 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.362797258 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.186333834 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.078692931 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.105957794 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.077402052 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.350656101 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.07703906 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.077398254 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.080543686 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.671032268 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.084130564 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.570065447 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.083353789 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.945579116 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.078542193 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.077633791 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.951915098 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.626299443 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.098079197 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.077207 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.080107981 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.078495736 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.078070697 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.076800274 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.105653866 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.982741096 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.164826122 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.091987527 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.079587705 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.103755331 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.077182304 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.119879339 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.077247733 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.106751975 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.152578385 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.198017085 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.079756285 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.572865993 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.084459948 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.170100503 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.192774567 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.077690958 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.077724654 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.077720756 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.077000526 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.18341792 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.077566855 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.443318591 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.240723273 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.092439274 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.200363563 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.176756374 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.078614672 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.391351916 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.084649261 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.077230793 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.743780222 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.171295764 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.078751349 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.078710292 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.078085949 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.447238734 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.575637365 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.235270073 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.085067732 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.205311931 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.07839298 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.449742337 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.564872683 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.693662429 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.086818715 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.188875906 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.241870016 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.093477798 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.080995274 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.078829778 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.211192566 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.085981399 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.135036561 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.086572196 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.473132446 seconds)
  done (took 349.726095975 seconds)
done (took 562.702523225 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.757534802 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.722618334 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.84683728 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.745847356 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.712141559 seconds)
  done (took 9.796544457 seconds)
done (took 10.807319476 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.256659924 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.262495898 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.142795709 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.255299027 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.114622194 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.270254746 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.236384654 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.10903419 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.180030026 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.156555036 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.181506514 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.129734692 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.114528005 seconds)
  done (took 16.424249927 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.334594787 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.096121889 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.153791929 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.320520669 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.129782787 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.342822546 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.372723717 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.091831391 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.238182892 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.133426884 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.102758348 seconds)
  done (took 16.332076759 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.34387675 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.092323755 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.172659766 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.320314146 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.129704575 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.373685209 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391903887 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.093071807 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.231969122 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.10231418 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.102554892 seconds)
  done (took 16.371616644 seconds)
done (took 50.142945536 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.128363867 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.250264783 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.120069914 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.106208542 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.099589155 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.102908914 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.106214472 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.100737896 seconds)
  done (took 10.031649702 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.099148723 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.098509637 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.098113344 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.098632474 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.099589835 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.098689356 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.099181555 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.10017572 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.099388196 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.099323321 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.099121625 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.099422194 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.098672956 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.100207865 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.09960859 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.099740505 seconds)
  done (took 18.607999714 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.103229343 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.099125698 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.10007832 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.099292046 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.101272358 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.101451553 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.101578287 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.099652828 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.099731122 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.100361295 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.099418939 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.0998591 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.100536773 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.099433071 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.100665452 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.10090066 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.100733162 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.100452262 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.10557129 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.099643933 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.101579789 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.100885781 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.099850641 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.100896561 seconds)
  done (took 27.437330168 seconds)
done (took 57.09350582 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.089887188 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.111137935 seconds)
  done (took 5.222573141 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.161359415 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.160469489 seconds)
  done (took 3.344607149 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.101653876 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.101599542 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.102785291 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.102681413 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.101480072 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.101984703 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.100960708 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.101815364 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.102270011 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.100181914 seconds)
  done (took 12.039977828 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.101412996 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.102140525 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.102920543 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.1013571 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.101470866 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.101344521 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.102504712 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.100442038 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.102761164 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.102089641 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.102062468 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.102734635 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.10243647 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.102386718 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.102592425 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.10364065 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.103593947 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.102022671 seconds)
  done (took 20.86376334 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.116319879 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.123542074 seconds)
  done (took 3.262426305 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.243993404 seconds)
    (2/7) benchmarking "second"...
    done (took 1.144553687 seconds)
    (3/7) benchmarking "month"...
    done (took 1.219423855 seconds)
    (4/7) benchmarking "year"...
    done (took 1.209155632 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.145033741 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.12341806 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.144286497 seconds)
  done (took 9.25404918 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.103229034 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.307111662 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.412317541 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.656611779 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.105193944 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.129465387 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.943720154 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.129235363 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.12428962 seconds)
  done (took 12.934324429 seconds)
done (took 67.943473496 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.092987734 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.136650209 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.118514805 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.120754693 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.442755814 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.12884865 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.100896968 seconds)
done (took 15.166581729 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.091201988 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.095054921 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.095663756 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.092463828 seconds)
  done (took 9.397646682 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.032961208 seconds)
    (2/2) benchmarking "read"...
    done (took 1.396977155 seconds)
  done (took 4.45522092 seconds)
done (took 14.878287744 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.104692725 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.105074189 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.104714417 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.103859506 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.104211892 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.105776021 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.105012077 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.105103207 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.105324769 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.104124285 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.104818702 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.105152722 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.104754713 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.104383731 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.10561576 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.104775107 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.105836299 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.105583617 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.104467088 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.104973371 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.104086868 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.105637438 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.106047509 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.104108129 seconds)
  done (took 27.543462219 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.107149267 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.105670795 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.105098627 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.106523066 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.106066389 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.106501543 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.105649522 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.107276119 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.106612915 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.106534072 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.107675307 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.106732224 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.106484353 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.106690101 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.108181441 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.108077896 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.10713242 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.107863364 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.107299532 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.107646054 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.108667659 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.106984621 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.106636977 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.107441568 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.108344632 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.106930657 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.107070825 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.107316629 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.108184022 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.107190064 seconds)
  done (took 34.238614301 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.112629211 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.112288313 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.108921647 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.109421935 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.107278703 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.108151185 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.108575367 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.108770015 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.1090759 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.107534874 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.109634705 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.108872621 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.108713141 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.109337548 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.107722421 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.108628952 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.108950909 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.108942732 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.109014101 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.110012851 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.109354131 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.10864751 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.108985393 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.10916884 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.108671848 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.108666627 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.109319475 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.109392589 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.111073748 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.109688274 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.109751783 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.109571664 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.109924189 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.109563687 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.109618437 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.109858984 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.113199986 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.114699868 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.109300136 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.110375652 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.109818738 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.109391188 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.110347191 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.110145302 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.110612326 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.110591356 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.110450011 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.110590392 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.111868952 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.111286825 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.111153317 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.11024284 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.11136606 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.111885466 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.112561381 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.110580757 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.109403991 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.111134188 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.111071028 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.111674257 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.111084471 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.110498984 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.112053258 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.111742175 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.113264606 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.111669788 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.111630502 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.112271942 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.111673084 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.111761707 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.112210752 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.112262222 seconds)
  done (took 80.971143006 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.112998169 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.111687751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.111953387 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.112046425 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.110739189 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.112715246 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.112484803 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.111560651 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.112118525 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.112950088 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.113440042 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.112900631 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.11247274 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.111831208 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.1116728 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.112391217 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.113158601 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.112496958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.113317713 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.112955698 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.112965912 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.112033245 seconds)
  done (took 25.505057821 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.113718648 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.115309917 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.113006919 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.114725174 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.115771348 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.115397962 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.113315828 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.115491954 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.113801562 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.113931195 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.114762138 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.114805764 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.115340214 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.114354054 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.114161947 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.115097659 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.113204593 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.115595489 seconds)
  done (took 21.09593948 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.115337497 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.11433031 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.115101795 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.114767618 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.115531252 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.114741892 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.114696143 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.115078313 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.114757417 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.115307248 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.113825894 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.115475203 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.114902932 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.114947713 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.115756485 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.114866887 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.114670032 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.115113271 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.115323634 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.114965155 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.114580964 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.116262273 seconds)
  done (took 25.564886796 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.116641875 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.11655799 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.114400055 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.115852079 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.115874069 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.116467658 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.115287769 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.11631072 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.11769812 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.115736549 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.116309503 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.116912745 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.116451354 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.115942584 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.116051882 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.115724036 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.117231051 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.115717993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.116637247 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.116214379 seconds)
  done (took 23.359400018 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.118466417 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.118758695 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.118860037 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.117927761 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.117286118 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.118944464 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.118914651 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.11987414 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.118074018 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.118936828 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.119375769 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.119625654 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.119822873 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.119015411 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.119201925 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.118829347 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.118625039 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.118646958 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.119088708 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.119950238 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.119596333 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.119704648 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.121370523 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.118978674 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.119767831 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.119119024 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.119894031 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.11971181 seconds)
  done (took 32.374686017 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.11931298 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.119069287 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.118523912 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.119082238 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.122091835 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.119369137 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.1194453 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.120447825 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.11987083 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.120529078 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.121080436 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.120401184 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.120282375 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.121357405 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.120823492 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.11934996 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.119315979 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.121161588 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.120488382 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.119667515 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.121793415 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.119736705 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.121802527 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.119691512 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.119723089 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.120173942 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.120921143 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.121556611 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.120831469 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.12072323 seconds)
  done (took 34.64697791 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.170811092 seconds)
    (2/2) benchmarking "in"...
    done (took 1.168700163 seconds)
  done (took 3.378054511 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.121466248 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.121635497 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.120380551 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.120640417 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.121629238 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.121095936 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.121319831 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.120921214 seconds)
  done (took 10.008476458 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.117454951 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.122089323 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.121709234 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.120727957 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.120881155 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.117799091 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.125845844 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.127625654 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.118645647 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.120585375 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.122762134 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.123443649 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.121733709 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.120085356 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.120485943 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.122686798 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.12637686 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.122483321 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.123881759 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.123097237 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.12217921 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.12136353 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.124030636 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.125975418 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.120303726 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.12880852 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.127581948 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.12788655 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.119646746 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.124646018 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.122688168 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.124625077 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.122951806 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.125508648 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.123618299 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.123146853 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.128693817 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.143553048 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.128227002 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.12868905 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.125130309 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.123849165 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.121160222 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.124523488 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.123760107 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.128803951 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.127667518 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.126782104 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.120519402 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.123589283 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.129679818 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.120367797 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.124866181 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.125008446 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.124249353 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.130594847 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.147509211 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.125179699 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.125817795 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.129977012 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.136742963 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.13356715 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.125487723 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.1281306 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.131112592 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.138633279 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.132099956 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.131815286 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.12604753 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.125704701 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.127632442 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.138302127 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.136512178 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.12797324 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.127266376 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.12476258 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.122094191 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.126940126 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.130997451 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.132662906 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.129494426 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.127058568 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.131464017 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.137367847 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.123882127 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.127143993 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.127518301 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.127273788 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.122919432 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.133170201 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.148466591 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.127273641 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.123166645 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.125142525 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.12565984 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.128532517 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.123034321 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.123934752 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.129481535 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.128460502 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.128060982 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.126842331 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.130672949 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.130470716 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.127232911 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.131913219 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.133066582 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.124049547 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.133139678 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.134393583 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.12867216 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.126210722 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.130051406 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.130109503 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.126895371 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.130622908 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.129499145 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.127292293 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.132394538 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.130255551 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.133588106 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.147482714 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.133956671 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.129402144 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.130035291 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.136682995 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.130041605 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.128583142 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.13272869 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.129590621 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.129700109 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.127418511 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.131672104 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.126468361 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.131310085 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.128044786 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.131685335 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.130306098 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.129333554 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.128186689 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.130122664 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.127252812 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.129329218 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.13087749 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.131927838 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.129413388 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.137396085 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.130316362 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.12877736 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.130749654 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.13270126 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.132425825 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.128373408 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.13355311 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.128847775 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.132501043 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.128820393 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.132942477 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.131627095 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.132123744 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.132122173 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.127156438 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.131118299 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.132283695 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.131677075 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.130905193 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.132908575 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.131747482 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.13250623 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.127916071 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.134517593 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.126755114 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.130911033 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.13679138 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.132932559 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.130994254 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.131899352 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.132835378 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.132748741 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.133127148 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.130839707 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.134003693 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.133528313 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.137044996 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.136141711 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.133104385 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.132610783 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.128804944 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.130889509 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.134459917 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.131955945 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.138958253 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.141647187 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.144657985 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.130384322 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.135857226 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.13022044 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.135413744 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.132652973 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.135664923 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.134724479 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.132548126 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.130072447 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.134770344 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.130905629 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.134260923 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.130050603 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.135465597 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.134909662 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.134743561 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.134674688 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.132144079 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.132698656 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.13532485 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.134170813 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.134615878 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.130979735 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.135667471 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.129928017 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.12978953 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.136550698 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.133177933 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.138528878 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.138447388 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.132685492 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.136732054 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.13401832 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.132175773 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.136159182 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.134484197 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.133235454 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.140776649 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.137844535 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.134805968 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.141761858 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.154255892 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.132394477 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.136556984 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.139074518 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.136336349 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.134092819 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.141989306 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.137848165 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.13735891 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.137695483 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.134480011 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.138715902 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.140265084 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.141497154 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.132809388 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.138365194 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.134494689 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.138329659 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.135498315 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.136964037 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.136100619 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.137533097 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.140040401 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.137757025 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.135258778 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.137784439 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.137719473 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.138742154 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.134507868 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.14301457 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.139838242 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.138161503 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.136188698 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.135222048 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.14233684 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.133930053 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.138625012 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.135625913 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.14777148 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.150986535 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.14240804 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.141056468 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.140416497 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.141611391 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.139725449 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.137784516 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.13572839 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.135675559 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.135224089 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.136182013 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.141079021 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.136236237 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.139579037 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.13707632 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.137830505 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.142403523 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.140056804 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.13514643 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.140582557 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.139425401 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.140788433 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.135566917 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.140712182 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.138126202 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.13930689 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.138359494 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.137091405 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.144483942 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.142581246 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.138252046 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.136779529 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.137908895 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.135920049 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.139309851 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.141000426 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.139609771 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.14704927 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.138175579 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.143000665 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.138170442 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.145754448 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.143499836 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.139472814 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.14623101 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.141536217 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.135789272 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.137805732 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.142617138 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.146223552 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.147296857 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.138784908 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.14538413 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.142370963 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.141745855 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.142847495 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.141263452 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.143797087 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.142525362 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.148936132 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.161986585 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.140591837 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.142345812 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.146088991 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.143080298 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.142876441 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.137724602 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.142948153 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.145609612 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.1408405 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.14002328 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.140086323 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.143361523 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.143179467 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.143239557 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.143952414 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.142831902 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.147544409 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.146159472 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.147541012 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.14312588 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.146634755 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.147567464 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.149161053 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.150702308 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.141200835 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.144439927 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.144521028 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.140453505 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.139942509 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.141540799 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.144840752 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.140406071 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.149188947 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.144493996 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.142702147 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.143677211 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.14690717 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.140343063 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.149115083 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.161593991 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.141847938 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.148023898 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.146505006 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.142695423 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.148698492 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.145174515 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.139995088 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.142847024 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.148631784 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.149633064 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.140920174 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.146538788 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.142291803 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.145626884 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.145912582 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.145666469 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.144499759 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.146747416 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.141912565 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.146441965 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.14578497 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.148211165 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.142540006 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.144845868 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.142810598 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.152454517 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.150248191 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.145356504 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.147474475 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.148117012 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.142768442 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.144847076 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.148143342 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.143690331 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.149463225 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.143057731 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.148050101 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.147484076 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.147542532 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.146984029 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.149457389 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.143424446 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.144014587 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.149148097 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.14710249 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.146013432 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.144464604 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.148981451 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.143402107 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.142493122 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.148143107 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.142996513 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.150247535 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.144823396 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.148408491 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.1432368 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.148817589 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.147024657 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.146390726 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.141336886 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.145100334 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.15132105 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.149401189 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.148755728 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.147798034 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.150840073 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.142533025 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.145833937 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.147181348 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.143999818 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.144666605 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.147827481 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.143805032 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.144659033 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.145992765 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.147020119 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.150330383 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.147253738 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.143448814 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.152847187 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.168203223 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.149246976 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.144373312 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.146529459 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.143874293 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.147581288 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.148576113 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.142335749 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.152999883 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.149944633 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.148555991 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.146561681 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.146130418 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.14454598 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.151864191 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.150185769 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.144157377 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.149587456 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.145371259 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.14985627 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.147301609 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.148656315 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.144304563 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.145066631 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.147225833 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.149021232 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.148735999 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.147689983 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.147987343 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.146319434 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.150692261 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.148487962 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.1484127 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.150196401 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.143959734 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.149557559 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.145393483 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.148876086 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.147857541 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.146448343 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.151314436 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.148401088 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.146595218 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.151011198 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.153387498 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.149245918 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.145582865 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.147218205 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.150896442 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.152504764 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.150819608 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.14617181 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.146991977 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.151277341 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.149439481 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.149563578 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.146896867 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.16054596 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.174308553 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.146371447 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.147326662 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.151175592 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.154161335 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.150829486 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.150245355 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.147890057 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.148806156 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.155048962 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.148936033 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.15474049 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.170222298 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.146883502 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.153077902 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.148285249 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.149861304 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.151092405 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.152127878 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.151455809 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.149800491 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.160634483 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.154950113 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.154205271 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.168834382 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.153528472 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.149820214 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.153018651 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.146820584 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.151869304 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.149362473 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.151497868 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.151413864 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.151235827 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.150820782 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.148222963 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.152932062 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.152091408 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.156395514 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.151501085 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.14663699 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.15043533 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.153174838 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.151389975 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.152544876 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.150578031 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.152049984 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.151428797 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.148926064 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.162246693 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.162600487 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.15338882 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.151849904 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.152554935 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.150619295 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.15311359 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.154024109 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.157055167 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.151681999 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.153085702 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.150982581 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.155530209 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.154530923 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.14921108 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.150564751 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.150312243 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.155933094 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.160557994 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.164158356 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.155400535 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.15293561 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.154355778 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.154253374 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.151224392 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.15632363 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.153506147 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.150650024 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.15189746 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.15746467 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.155621154 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.15487193 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.152043441 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.159784299 seconds)
  done (took 680.378656108 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.154078296 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.153054717 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.155567747 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.154734647 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.154858143 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.154819834 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.15518406 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.154875405 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.154075623 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.15419027 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.155025747 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.155837564 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.154935219 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.155529258 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.155153366 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.156448245 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.155104722 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.155434413 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.156397818 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.155736487 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.15604936 seconds)
  done (took 25.32618551 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.155315278 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.156308549 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.157452725 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.156636622 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.156239812 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.155882283 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.156280824 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15648651 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.155583399 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155696143 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.1559102 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155804537 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.157925868 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.15727964 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.157254149 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.15639123 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.157277063 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.15499998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.155961938 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.156980907 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.157255177 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.157248641 seconds)
  done (took 26.514025185 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.159036307 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.157035028 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.153285886 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.157122005 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.157486965 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.157236674 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.157319098 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.157778438 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.158423953 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.154655209 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.153048614 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.154074357 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.157173283 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.162520676 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.156084938 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.159711178 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.158373623 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.15760791 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.157808529 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.15837508 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.159261016 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.163423567 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.158261459 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.154101185 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.159148838 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.160126672 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.159310211 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.159094463 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.15542716 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.162004592 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.160231221 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.155880008 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.159951073 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.15727113 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.156071994 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.161766584 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.160430689 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.159751031 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.159879941 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.162658728 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.174333504 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.159107147 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.162788001 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.165090923 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.160318491 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.157962245 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.165175424 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.159837679 seconds)
  done (took 56.706592245 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.160930295 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.160260362 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.160407565 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.158673883 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.160811401 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.160063012 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.16021246 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.160089204 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.160976865 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.16084517 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.160749298 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.159827207 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.16111353 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.161706617 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.161066113 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.160484486 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.160617345 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.161059278 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.160662973 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.162296882 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.160090561 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.161574362 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.161599849 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.162245716 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.160854178 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.161588354 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.161335015 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.162059191 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.162709349 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.161727686 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.161229881 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.161771451 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.161012994 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.162403375 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.161756093 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.161284667 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.162359227 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.161546225 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.1613516 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.16205115 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.161707869 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.162938853 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.161304114 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.162198595 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.163067775 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.163359785 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.161729187 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.163230991 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.162977513 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.162765033 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.16299127 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.163934267 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.163059364 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.163063554 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.163910728 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.16362088 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.164015056 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.163228221 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.162416943 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.164098062 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.162554749 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.163538884 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.163693279 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.16298594 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.163995473 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.163888174 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.163556494 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.163602795 seconds)
  done (took 80.089566179 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.163898222 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.164246769 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.164257884 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165056375 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.164126297 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.164425946 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.163739321 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.164741111 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.163749716 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.165358774 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.164677631 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.165613562 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.163529977 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.165575396 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.165463718 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.164842245 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.163961072 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.165216441 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.164372419 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165418008 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.165651955 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.166356254 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.166260356 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.165872901 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.166121719 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.166364944 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.165261231 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.165709006 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.16610168 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.164926791 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.165348047 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.165478322 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.166104115 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.165838528 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.166312735 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.165558332 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.166820232 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.166054049 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.166984393 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.166810963 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.166448246 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.166365906 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.166993459 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.166726505 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.166762589 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.166302004 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.166929108 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.167430526 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.167931969 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.166878204 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.166685945 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.167001187 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.167430918 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.167170842 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.167933156 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.167875242 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.168037558 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.16727772 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.167808439 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.16707828 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.168741473 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.168250114 seconds)
  done (took 73.373075519 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.167821315 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.167368302 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.168122944 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.168178263 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.168601906 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.168485283 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.167773093 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.167455108 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.168380243 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.167953875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168776768 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167367862 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.168395806 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167262511 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.169388862 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16987759 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.169280181 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.168640311 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.169387128 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.169659729 seconds)
  done (took 24.450162432 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.169315945 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.170225366 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.169032155 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.16865441 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.169162135 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.169114567 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.169490774 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169839471 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169802346 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16874718 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.170022139 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.170599279 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170742545 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.170743827 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.170431398 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.169281129 seconds)
  done (took 19.797333718 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.1706264 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.170434367 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.169709436 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.169984442 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.170072294 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.169934289 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.170440609 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.169423952 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.169360608 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.169631872 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.168604206 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.170070623 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.169938892 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.169543596 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.169875879 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.169964523 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.170221203 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.169599317 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.170851134 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.170472928 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.171258414 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.170627964 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.170647194 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.170737869 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.170724343 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.170507281 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.170317681 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.171811639 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.170577205 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.171358587 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.170786186 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.170969813 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.171682305 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.171781912 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.170892362 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.171557436 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.170504922 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.171985276 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.171275404 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.171999077 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.17173521 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.17134114 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.173129558 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.172115069 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.172009598 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.172732786 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.171678847 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.172006296 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.171682577 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.172371827 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.173423714 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.1723336 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.173078826 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.17360636 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.171868863 seconds)
  done (took 65.490503558 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.174394387 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.172163934 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.173300401 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.173311021 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.173751217 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.173472739 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.173760757 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.174515951 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.173255977 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.173393043 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.173924887 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.175910218 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.173793027 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.173382068 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.172621784 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.173230692 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.174382239 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.173797362 seconds)
  done (took 22.212588447 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.174399178 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.174607788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.17331232 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.174123574 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.173256935 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.17389409 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.17362487 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.174543266 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.174346338 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.174610111 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.174590666 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.175391027 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173279983 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.174227343 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.175286944 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.174596034 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.175374721 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175414051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.17490015 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174419392 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.175123224 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.175902611 seconds)
  done (took 26.92678595 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.170413674 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.170387471 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.169378106 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.184656742 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.181553104 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.169962614 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.169625097 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.171068813 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.190335338 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.211643103 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.208192037 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.183159998 seconds)
  done (took 15.267795226 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178692771 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.17489932 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.174993102 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.175189535 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.175637379 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.175841245 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175602175 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173640728 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170846437 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.170832718 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171751015 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171314838 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.170829495 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171835995 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.171672147 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173562177 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171160739 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.16925776 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.169263116 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.169301834 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.16864859 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168883121 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.170213881 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.168237452 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.169598722 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167019383 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.168042445 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.168075721 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168593575 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167596555 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167866183 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.168529248 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.168669322 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167686718 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.167381271 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168027615 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.16835308 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.168556917 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167243227 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.168612703 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.168384623 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167323056 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167490897 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.168334616 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.168413288 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168717344 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.168362734 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.168057342 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.168369827 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.169615379 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167741453 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.168944464 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168229555 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.169344364 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168995609 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.169084205 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169693251 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.16936452 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167971848 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.169843359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.16880846 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.170035204 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.16980733 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.170651489 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.169506367 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.169518767 seconds)
  done (took 78.304342387 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169661814 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.169276688 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.169343774 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.169715742 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.170200234 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.17003174 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.169433744 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171014508 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.168342764 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.169316376 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169645528 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.17148004 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172448162 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.169379775 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.168721783 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169898117 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.169834854 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.171050893 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.170786958 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172124924 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.17109394 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.169673694 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170999963 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.172161234 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.170476789 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.170199336 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.170609206 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.170224128 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169331722 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171640802 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.170682532 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.170536894 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.171883692 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.170580223 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.17158821 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171609515 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.172069935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171770859 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171814985 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172097614 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.170387999 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.170695614 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.1701934 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171194256 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172765269 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172434783 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171817786 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171957398 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.171819724 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172282915 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.171950187 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.172966799 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173181061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173173298 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172717496 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173021002 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173119966 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173809045 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.17262982 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.174642752 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173106492 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.171986265 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173331268 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173258795 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.172961388 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.173472421 seconds)
  done (took 78.393801992 seconds)
done (took 1592.94357736 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.332760188 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.288753124 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.167826774 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.176108002 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.16864003 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.163769714 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.182933243 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.167898535 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.168118392 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.16846543 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.167903027 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.357958141 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.225895295 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.168186694 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.169270697 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.262780305 seconds)
  done (took 24.422829445 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.190869056 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.180169515 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.278634975 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.195011719 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.199538695 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.351211507 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.22836645 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.17775468 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.333114019 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.194661027 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.169144905 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.212986553 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.176867689 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.170193626 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.194278744 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.354868324 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.404746041 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.170852405 seconds)
  done (took 26.269716706 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.587456542 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.176983347 seconds)
  done (took 4.855392155 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.196170935 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.177683596 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.178607117 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.177803088 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.170889368 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.16958002 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.17603058 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.177194175 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.174879843 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.290678305 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.179849429 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.190371291 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.195660505 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.177347449 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.182444548 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.218914817 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.319407786 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.184374255 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.181815454 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.183560669 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.17803132 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.271937791 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.216599864 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.182583101 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.292861062 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.172444303 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.186806375 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.186346553 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.352730514 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.186029921 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.178548325 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.17919785 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.180734052 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.174535233 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.620877117 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.201601112 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.187194639 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.207666785 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.184050373 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.326886683 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.18090513 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.186583177 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.173304634 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.61292114 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.328955246 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.290648738 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.188280897 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.180821485 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.181963664 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.240764902 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.180215111 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.181769887 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.236888759 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.956338225 seconds)
  done (took 76.787608433 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.233558705 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.17477539 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.350784135 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.197971989 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.174060508 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.176907754 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.194070995 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.437726533 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.200753487 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.185335388 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.492718457 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.728799746 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.203038399 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.231681296 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.062382488 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.248840039 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.175066377 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.175176717 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.183213923 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.175040251 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.708336634 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.175662285 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.180971805 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.364892442 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.212572703 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.666845935 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.177385008 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.195849573 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.178059387 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.175930319 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.679551541 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.204169533 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.239649291 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.183126711 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.437946715 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.52961793 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.491672668 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.182232745 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.212314701 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.179326771 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.186783479 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.649909394 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.51037417 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.176327573 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.192979529 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.677477833 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.178542741 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.183398638 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.187180036 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.421529398 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.179601868 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.176960369 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.178000494 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.19298309 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.176855506 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.288679818 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.265843978 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.669180342 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.17814894 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.189573728 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.205993221 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.178919513 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.179100784 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.179225906 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.196808481 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.517757967 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.328222626 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.183508874 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.518650346 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.678795099 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.198038378 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.733136902 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.19872859 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.220069032 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.390844287 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.183906438 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.19048337 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.670602176 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.190865071 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.178388942 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.497366827 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.183044887 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.492788358 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.199798105 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.20671608 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.724738553 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.185833579 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.183492136 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.179733743 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.181549325 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.17921334 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.185473792 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.444097188 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.213662793 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.180836457 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.181799577 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.215482293 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.190562686 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.179988857 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.181790233 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.735356191 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.202857298 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.17880406 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.180337622 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.186851386 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.180678915 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.182689008 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.182882847 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.444601453 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.181626561 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.18368858 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.18206335 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.183283978 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.186545991 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.363454359 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.182816334 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.466279748 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.186364575 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.181843964 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.181470982 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.181089343 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.233802351 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.180506817 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.181542604 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.027233446 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.44060373 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.195806792 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.183236685 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181835254 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.181880733 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.181483284 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.190104998 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.228162049 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.185603645 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949798662 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.206098235 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.217468215 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.183023199 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.19032379 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.1831946 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.18897917 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.185151161 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.470422112 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.446325565 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.327981593 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.186186846 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.182816281 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911203577 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.207789072 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.361015276 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.199586084 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.18380428 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.436918777 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.397438946 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.183599902 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.183311558 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.187242102 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439234417 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.184106195 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.480427191 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.709907648 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.202973514 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.191852594 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953566609 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900457477 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.184777697 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.187348555 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.500703013 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.202996297 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.183263448 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.183528831 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.184486879 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.198176315 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.201534502 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.194710435 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.184934984 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.186440699 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.230748769 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.373896353 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.198767172 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.188062468 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.672625145 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.206918054 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.195558696 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.187610728 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.189091495 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.184971304 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.253637398 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.190502337 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.210699747 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.185664795 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.197737463 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.684240115 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.185348304 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.186227919 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.377845943 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85365611 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.204665437 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.186904683 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.187717639 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.099420842 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.696039024 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.225725837 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.472918338 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.196301556 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.222958321 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.186654608 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.273665851 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.69688821 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.189517714 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.18687114 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.821165253 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.208239221 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.769482566 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.188254371 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.189725841 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.755375852 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.208568573 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.189209081 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.191211968 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.197638203 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483586897 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.189848431 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.21589447 seconds)
  done (took 463.999957533 seconds)
done (took 597.420411788 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.188242378 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.187848459 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.184230909 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.195220714 seconds)
  done (took 9.863799427 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.204378893 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.19536079 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.202658571 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.195136289 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.203725304 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.195650753 seconds)
  done (took 8.30781039 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.18957043 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.191477681 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.196842603 seconds)
  done (took 7.688564399 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.384926981 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.215781076 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.497759181 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.212256811 seconds)
  done (took 8.422674863 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.200620511 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.202018155 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.200773311 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.203223378 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.205940487 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.205870255 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.203038683 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.205301668 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.206197289 seconds)
  done (took 11.942409813 seconds)
done (took 47.33375588 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.356698581 seconds)
    (2/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.247807438 seconds)
    (3/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.239568017 seconds)
    (4/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.328429155 seconds)
    (5/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.190604903 seconds)
    (6/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.35468323 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.251357704 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.395179581 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.225116146 seconds)
    (10/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.249637161 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.927053798 seconds)
    (12/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.188738977 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.286186384 seconds)
    (14/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.229315112 seconds)
    (15/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.234838781 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.329866069 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.189972564 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.330899276 seconds)
    (19/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.243673255 seconds)
    (20/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.228140203 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.21149137 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.222519336 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.231704615 seconds)
    (24/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.238524345 seconds)
    (25/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.221964832 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.222655015 seconds)
    (27/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.35076378 seconds)
    (28/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.061294107 seconds)
    (29/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.344535342 seconds)
    (30/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.230813706 seconds)
    (31/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.185740128 seconds)
    (32/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.857411005 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.269048328 seconds)
    (34/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.185700231 seconds)
    (35/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.845895403 seconds)
    (36/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.18684246 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.311831144 seconds)
    (38/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.341714882 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.246702789 seconds)
    (40/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.847876622 seconds)
    (41/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.365274364 seconds)
    (42/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.284642328 seconds)
    (43/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.397937017 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.191196406 seconds)
    (45/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.247436473 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.194640858 seconds)
    (47/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.220444176 seconds)
    (48/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.942658707 seconds)
    (49/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.190743701 seconds)
    (50/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.24931214 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.332349265 seconds)
    (52/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.248176132 seconds)
    (53/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.186226232 seconds)
    (54/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.304777087 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.290161898 seconds)
    (56/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.237822013 seconds)
    (57/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.231098993 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.329642945 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.278506051 seconds)
    (60/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.186905206 seconds)
    (61/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.189017133 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.225268344 seconds)
    (63/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.340541398 seconds)
    (64/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.255587431 seconds)
    (65/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.331368245 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.351756727 seconds)
    (67/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.191807823 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.189743401 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.286947509 seconds)
    (70/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.197842908 seconds)
    (71/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.348033234 seconds)
    (72/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.342348297 seconds)
    (73/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.95295095 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.293919269 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.25322224 seconds)
    (76/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.903046096 seconds)
    (77/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.956636101 seconds)
    (78/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.335702495 seconds)
    (79/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.227564019 seconds)
    (80/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.226957438 seconds)
    (81/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.188548651 seconds)
    (82/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.255817533 seconds)
    (83/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.914811232 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.277351887 seconds)
    (85/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.187827938 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.318127659 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.28480339 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.325326994 seconds)
    (89/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.196117748 seconds)
    (90/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.29096503 seconds)
    (91/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.200129425 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.365331728 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.232187516 seconds)
    (94/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.878599111 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.190417163 seconds)
    (96/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.339290416 seconds)
    (97/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.34016702 seconds)
    (98/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.247915213 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.237697394 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.330910994 seconds)
    (101/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.371752073 seconds)
    (102/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.347511191 seconds)
    (103/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.014763387 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.333302218 seconds)
    (105/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.24047541 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.306812702 seconds)
    (107/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.23762746 seconds)
    (108/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.886423979 seconds)
    (109/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.378957644 seconds)
    (110/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.252318222 seconds)
    (111/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.190324612 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.417131518 seconds)
    (113/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.949327488 seconds)
    (114/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.447617387 seconds)
    (115/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.949507677 seconds)
    (116/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.863301611 seconds)
    (117/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.299908096 seconds)
    (118/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.390507882 seconds)
    (119/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.203182068 seconds)
    (120/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.381971361 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.28564319 seconds)
    (122/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.235286017 seconds)
    (123/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.196230029 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.303933299 seconds)
    (125/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.331609595 seconds)
    (126/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.346225949 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.293810339 seconds)
    (128/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.024403074 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.293218027 seconds)
    (130/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.191410632 seconds)
    (131/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.284204996 seconds)
    (132/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.252718295 seconds)
    (133/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.19418104 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.455223168 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.217659316 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.311608105 seconds)
    (137/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.238218519 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.199992002 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.435550717 seconds)
    (140/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.893017486 seconds)
    (141/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.29329476 seconds)
    (142/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.339089227 seconds)
    (143/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.094101561 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.314458922 seconds)
    (145/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.980106512 seconds)
    (146/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.212941434 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.323360409 seconds)
    (148/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.411253223 seconds)
    (149/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.982409162 seconds)
    (150/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.006015397 seconds)
    (151/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.307686685 seconds)
    (152/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.357492728 seconds)
    (153/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.266268129 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.254473433 seconds)
    (155/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.206423457 seconds)
    (156/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.196726146 seconds)
    (157/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.199751263 seconds)
    (158/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.134096919 seconds)
    (159/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.32180389 seconds)
    (160/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.197789503 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.239249215 seconds)
    (162/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.242971848 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.308501692 seconds)
    (164/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.98261341 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.3156824 seconds)
    (166/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.197906976 seconds)
    (167/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.365377088 seconds)
    (168/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.206899795 seconds)
    (169/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.20585353 seconds)
    (170/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.19748894 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.220056429 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.294579842 seconds)
    (173/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.193366821 seconds)
    (174/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.240783796 seconds)
    (175/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.203711015 seconds)
    (176/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.312939414 seconds)
    (177/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.204537806 seconds)
    (178/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.227164562 seconds)
    (179/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.26180513 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.435352386 seconds)
    (181/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.263087671 seconds)
    (182/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.241714937 seconds)
    (183/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.375935084 seconds)
    (184/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.284904778 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.30600571 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.11082484 seconds)
    (187/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.226172722 seconds)
    (188/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.29232794 seconds)
    (189/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.256906775 seconds)
    (190/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.892575647 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.288683505 seconds)
    (192/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.208080339 seconds)
  done (took 311.133119708 seconds)
done (took 312.245318071 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.228486679 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.393599818 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.21047762 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.211732472 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.213580125 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.21656879 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.233411682 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.212030223 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.222484366 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.223239873 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.215977012 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.220572211 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.224472849 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.219682166 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.24612389 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.212719687 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.21324509 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.220841878 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.224502663 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.22539394 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.213531974 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.213409295 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.233056495 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.213875987 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.221357427 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.222465818 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.21962401 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.217525547 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.216820398 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.223498001 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.216926205 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.220057804 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.22695346 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.221293564 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.216814926 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.22094035 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.213986071 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.393735419 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.230161428 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.221230121 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.218554368 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.226601472 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.219357016 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.219238609 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.22222419 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.234306263 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.222721969 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.230351662 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.207598205 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.214612319 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.235142698 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.224451959 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.220013138 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.209304251 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.216311326 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.234825702 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.221951369 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.231081045 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.218529994 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.215985867 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.24906076 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.231649082 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.223883069 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.222912464 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.219920115 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.227388782 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.220871111 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.227332436 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.220448043 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.217182421 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.218273713 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.219551926 seconds)
done (took 97.434664467 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.338894899 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.217259113 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.356343915 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.220403382 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.375833769 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.357788397 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.219169349 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.221157497 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.21968026 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.027070351 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.219524796 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.219488765 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.217461215 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.219782733 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.34134172 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.220974626 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.219057434 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.928078206 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.220912892 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.355735072 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.215028337 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.2201525 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.220238445 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.049420669 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.212179759 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.216538232 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.357710183 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.221292275 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.949639054 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.211660316 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.215566449 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.948672013 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.35860756 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.240792956 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.231632387 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.231052781 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.37684909 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.238302048 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.337937133 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.340412523 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.356226897 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.260137662 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.213721358 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.219594301 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.224047767 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.223446076 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.220846406 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.250657477 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.219815734 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.22199146 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.929887426 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.231541359 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.230950857 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.223425387 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.222387492 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.241746501 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.222612821 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.224537809 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.358817108 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.225109973 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.34192763 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.052942318 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.030395551 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.223502724 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.217627831 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.224136635 seconds)
  done (took 100.85001627 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.286210716 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.300601746 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.330828994 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.22459381 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.271024958 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.333147873 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.223520096 seconds)
  done (took 10.099944485 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.224455246 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.224527562 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.267810248 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.267940371 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.224564046 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.375695491 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.223713019 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.23234089 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.223474755 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.271163267 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.225115859 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.223749688 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.233590755 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.218586052 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.267611756 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.230746706 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.335424761 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.221822495 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.224608739 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.3729249 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.225474686 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.234569966 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.272878641 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.232509656 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.225495484 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.227189135 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.99093876 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.225226059 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.225561185 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.225714728 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.226278376 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.275875077 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.226283375 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.224605301 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.231078329 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338499176 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.226028985 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.225767273 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.226579339 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.223330119 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.225932457 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.226695333 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.226819173 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.227371321 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.226420021 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.246210299 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.227542559 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.227619287 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.225691256 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.227589902 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.27313617 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.226859899 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.226439549 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.226905515 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.277603371 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.23812432 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.226660132 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.226180954 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.22830822 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.227221223 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.373617997 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.270680747 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.228078241 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.271279496 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.227159246 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.227465804 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.226837584 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.227369218 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.313644208 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.227348612 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.27230234 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.228220057 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.404875309 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.248651439 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.229270889 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.227042145 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.226243139 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.227917449 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.220606086 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.229890331 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.228979112 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.224446853 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.230507196 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.229151849 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.228745274 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381720873 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333144507 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.228610637 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.236508637 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.232068538 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.229340661 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.276290119 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.229727571 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.229143089 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.277585793 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.339812118 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.280783439 seconds)
  done (took 126.925046784 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.236645703 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.238745992 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.229596411 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.252371513 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.227053395 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.226258907 seconds)
  done (took 8.54738966 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.22826197 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.233594247 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.230496489 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.23075499 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.230612236 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.232489886 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.231457987 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.228060792 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.233749156 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.231095567 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.231011201 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.233130643 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.234307373 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.231087436 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.23180951 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.23142621 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.231987086 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.232233571 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.232031955 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.231946372 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.226508027 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.232883425 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.231963625 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.227881955 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.235071277 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.233171499 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.246676914 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.233128023 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.232318862 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.233743138 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.2512652 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.23488398 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.228696057 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.232581486 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.235447695 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.228330989 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.234939627 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.234669528 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.233113811 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.23368025 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.235047725 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.233046276 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.23399117 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.235623027 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.230786154 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.231930254 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.23784288 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.249946447 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.233082157 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.235261957 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.235256447 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.233964928 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.233866874 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.235455924 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.233379911 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.25031257 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.238335716 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.234618135 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.234503275 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.230895826 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.236891337 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.234563727 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.23078394 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.237451654 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.234573888 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.236730526 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.231849889 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.238006432 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.234386378 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.23433109 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.237019559 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.234868669 seconds)
  done (took 90.991344158 seconds)
done (took 338.540788574 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.990099754 seconds)
  done (took 4.130213546 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.491110162 seconds)
  done (took 3.635697596 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.368366164 seconds)
  done (took 21.751305258 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.241409736 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.343189398 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.244078377 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.232186403 seconds)
  done (took 10.203901362 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.461229105 seconds)
  done (took 3.603905382 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.233155509 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.231922693 seconds)
  done (took 5.610587886 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.378576723 seconds)
  done (took 3.522059098 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.385623033 seconds)
  done (took 3.529853693 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.234815287 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.248074317 seconds)
  done (took 5.634472933 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.220196658 seconds)
  done (took 3.364188818 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 30.428490776 seconds)
  done (took 31.572958534 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.238865915 seconds)
  done (took 3.38716259 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.261525894 seconds)
  done (took 3.406329372 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.684206456 seconds)
  done (took 5.82883753 seconds)
done (took 110.323013799 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.228821701 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.228458798 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.228505824 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.229476867 seconds)
  done (took 10.061072086 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.29119117 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.291318233 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.291417932 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.291201181 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.290937291 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.29180244 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.264036162 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.265518623 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.290129936 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.290903803 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.292789022 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.290928168 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.29220667 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.274147613 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.291359788 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.291676125 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.292141524 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.291924819 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.265953269 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.293732623 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.239684603 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.292072615 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.292948381 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.240926612 seconds)
  done (took 31.946717018 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.752361657 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.307103048 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.389889546 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.288320247 seconds)
  done (took 6.883706647 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.318083167 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.319436745 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.332080304 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.370076228 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.391291768 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.331816311 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.267446123 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.262568513 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.248274548 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.318722383 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.369755747 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.310598812 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.395532666 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.241364954 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.44781201 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.240967444 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.241525632 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.321582708 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.37061487 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.383614463 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.243163607 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.319676136 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.318526638 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.313926216 seconds)
  done (took 32.825680661 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.250378145 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.25770311 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.244858292 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.259252387 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.244381203 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.243932706 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.24549389 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.251391638 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.242315726 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.243938137 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.244778433 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.257256894 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.248293009 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.243537261 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.253092859 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.246571544 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.245488431 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.250077084 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.253190621 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.244395136 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.248868857 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.251779066 seconds)
  done (took 28.619788366 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.232903177 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.233512139 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.58705257 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.488786441 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.233876142 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.24034929 seconds)
  done (took 13.165684188 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.306038954 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.454822064 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.241954012 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.571499705 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.662526484 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.244449981 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.240021633 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.478664267 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.776019179 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.756533728 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.300083436 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.307566368 seconds)
  done (took 18.490225555 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.234385048 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.255721302 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.238962499 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.270354878 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.291168485 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.248714292 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.247721931 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.235001948 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.297856075 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.301035894 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.249660903 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.291895293 seconds)
  done (took 20.313234864 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.333772483 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240558331 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242338962 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308593663 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262529774 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084131756 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.293117733 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.976678718 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.268118807 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517096519 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252872744 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.330049169 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.495081456 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254105323 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246515913 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.200919465 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472827835 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694465368 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244610234 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244062711 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293891242 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.253654078 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.2550765 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.448087198 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089558597 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239964325 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.504353719 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24082951 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50610432 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.25936938 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.251496469 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242649621 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.519851506 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876051135 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363097435 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43868606 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247553666 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243603608 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.238848796 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.254963351 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249460006 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265047319 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.255173439 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242444765 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.242388748 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244054707 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965729375 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.272506558 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.242606257 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.243616449 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480483333 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35094464 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.248929274 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.242394161 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252264547 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246987464 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.248187488 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365031698 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834944451 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241997965 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266780291 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.249095796 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239848419 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24522688 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850493591 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.255589315 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.249180642 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.249082621 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24628221 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255111103 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.267140384 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244958881 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.269219903 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243959912 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915882669 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250660213 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269791729 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759587339 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259549702 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.249495212 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.477990878 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244153479 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244891987 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.24510796 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249128586 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901357056 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.257194241 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.234102659 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.292176931 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.972451764 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.466739169 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27039625 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275699916 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.466443212 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.231590216 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246066357 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.248435399 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254596077 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265951242 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.960191395 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267828944 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.251967031 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500314377 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.457138154 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246604742 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.218630816 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709842433 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280594723 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.266980953 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245259595 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.450107524 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.801801441 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.265517022 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246542143 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266993841 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.246215515 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938220272 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267596939 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.260045555 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248695342 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.52587682 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.987901408 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252683924 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.313910129 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252828468 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.248246729 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246608485 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254713595 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247751102 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.437366472 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272761008 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.262779044 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.248557607 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248448095 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.248235795 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252241297 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.255752425 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.469646954 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247539968 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546845711 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248160131 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247584836 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24960202 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.469862405 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.249793533 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.260991321 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508311289 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251102478 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.255215506 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.263879587 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266421412 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350771057 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269075405 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.247782271 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.506500975 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.256035689 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.255103593 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249977413 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.256424632 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25692148 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.256480806 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243998067 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799434606 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23207678 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255027091 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137452915 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.265635783 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.317117863 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.257623975 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.449223205 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.255554992 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265940316 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.257632073 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.251799539 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479364354 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.258441732 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.250707176 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350436343 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.70794453 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.822422068 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.272118739 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.25075369 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.250806342 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.251880518 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252709525 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25117581 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.251654018 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4501119 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270578349 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25388277 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.808196899 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259797191 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253862388 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.279632263 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.261458339 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.260210098 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253066424 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.260749354 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256787454 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26602939 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.266556227 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395227081 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.267830168 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251712516 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.7694463 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.259842301 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25256968 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.252302159 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285960846 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.251966779 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119834642 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516522774 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251778313 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.491815629 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273359838 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.276706963 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.251464367 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25938743 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269125103 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.265828264 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275886165 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.263154431 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252896313 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261256797 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82113804 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940479509 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762807184 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277524437 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.270189237 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258894006 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.971561618 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276508595 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254666124 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.478714547 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975257032 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277094411 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.71859479 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.281705306 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.979372708 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500956437 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.491060079 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270178227 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.269387958 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505660755 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.471795087 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288488201 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.26580879 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25964175 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.241515282 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789535901 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278665915 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34286057 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980147388 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284336427 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.262165162 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.295090179 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.261769478 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643732422 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277987435 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257443119 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268105624 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260173437 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048295327 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260722766 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255906014 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84773092 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.271529017 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.720130935 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28021309 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.455960607 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.272797546 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.260698718 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.267587944 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.269177324 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.513882429 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498819043 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264280521 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266220349 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767402864 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.13895847 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.264591052 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257904728 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952130463 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267110317 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527896271 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.264802445 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.277420477 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266124187 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.256187866 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258039227 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.256028058 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.260302837 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22706948 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710067154 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.257036447 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255473841 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27780147 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272020126 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.5061371 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.267179477 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.805188376 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486559836 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250939743 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292598254 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.259763699 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254956179 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.263874872 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256017309 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254461808 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301062722 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.481163005 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2617424 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.245947566 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266690754 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.469342615 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.255646614 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255159657 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490973625 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.262988689 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.272538517 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960604931 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293294932 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.255999748 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264242244 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.253010972 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310174167 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325649077 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.457706455 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.271861986 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.265986218 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640024532 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280093695 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264367924 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.271947492 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351367677 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257718118 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.264937043 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.031155625 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812237583 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952333534 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.821761739 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507606052 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.2661078 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265726772 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257440372 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421191986 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25877338 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534391188 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258710589 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.26175983 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28675536 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25846555 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280686258 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.472020395 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535583893 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258569364 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266504546 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264643277 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.258921939 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.269359239 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.467514239 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717385573 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794627296 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265704522 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258175038 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.988242103 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557449082 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259677001 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258612699 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259682806 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.277353458 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.276877721 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.271190822 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268274812 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409557394 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501997627 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907477449 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.290918988 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.292839022 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.781247771 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261830494 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.519751368 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260880017 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.486159136 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823287283 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.931150203 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530126684 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.330438931 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.46327106 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.268175928 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424431129 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.274343211 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.261488431 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261769415 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261510196 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.263889745 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.270575335 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823948629 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531226144 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.268654573 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.27357726 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290908041 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.273174154 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.484325199 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92994251 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.490218867 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.270505313 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265929052 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263168421 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823371516 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514105276 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270002695 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.267818698 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492606804 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269673852 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287675751 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.781510976 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.262976147 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785809446 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.233644478 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283601141 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26819139 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.935979969 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830248601 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.27232483 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728423615 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270891825 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275243589 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543591145 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.271565393 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.2675407 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546264652 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.269360445 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270607136 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471762218 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.824990045 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005796932 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.28629423 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282580683 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.274086844 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266050742 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279656514 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26892863 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268526481 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.66441493 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.28945305 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265597059 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.278521205 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.267495981 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278148679 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.269729339 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26497904 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.273718466 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.253165627 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.25869963 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.28453469 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390876655 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809738436 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291356598 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.941679184 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.592152592 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.519904414 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275581052 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.258116518 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.271689572 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266455944 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267401757 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266885335 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263708954 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810920758 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.276287277 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.281273073 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273100268 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.268098195 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476223811 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270571798 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.477832302 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283311426 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286846211 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.254064227 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268074065 seconds)
  done (took 916.823638394 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.295930517 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.280443656 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.278500562 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.27678481 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.269558353 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.375108692 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.333250162 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.270595857 seconds)
  done (took 19.556718846 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.26335492 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.277914852 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.265121887 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.278523396 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.275254539 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.712581736 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.279283006 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.276326509 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.283661598 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.26487019 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.267945742 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.90070531 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.292463833 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.273978691 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.271937575 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.278982724 seconds)
  done (took 30.640561338 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.160971903 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.376446464 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.00382184 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.268753666 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.291167548 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.273145749 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.450024963 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.282118829 seconds)
  done (took 25.284271748 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.275364153 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.274337166 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.275482612 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.274630769 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.274714824 seconds)
  done (took 7.551853041 seconds)
done (took 1163.308046452 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.275326073 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.274943921 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.274593211 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.275328326 seconds)
  done (took 6.277656115 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.255804296 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.257389091 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.261365218 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.275212105 seconds)
  done (took 9.228317793 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.928354362 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.876418374 seconds)
  done (took 4.983081198 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.723694068 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.729825966 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.725264048 seconds)
  done (took 6.356982757 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.54629241 seconds)
  done (took 2.725059366 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.153223046 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.254029596 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.906412403 seconds)
  done (took 7.492868291 seconds)
done (took 38.241470248 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.265812479 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.609894843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.422758629 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.273015739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.427523278 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.424339487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.070165981 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.266539475 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.268141469 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.266958043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.273332155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.428632068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.988281434 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.611336409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.99188789 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.617023065 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.428318759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.271278548 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.26703889 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.267792432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.090677704 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.268282118 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.269731099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.269454459 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428099942 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.414976748 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.271845224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.613351534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.277993507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.276060564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.413788514 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.267737328 seconds)
  done (took 79.482551233 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.267757221 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.268783315 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.272774726 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.267963393 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.273553694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.271751846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.270776011 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.269131119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.279176006 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.27135415 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.268786084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.281958212 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.270937095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.28134051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.272023211 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.280321015 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.269114321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.270437256 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.268503431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.285852235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.275027003 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.270533394 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.269797863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.269214449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.274591804 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.294940023 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.269323148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.286395554 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.269538145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.26912313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.295991505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.270282921 seconds)
  done (took 73.959328965 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.269522592 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.279023414 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.27079341 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.278544266 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.275873378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.27193631 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.27156124 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.271102223 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.278047971 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.277155836 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.280963999 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.277382547 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.27267109 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.271525213 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.2740239 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.277333659 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.270429153 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.281509537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.274455299 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.284706474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.272168295 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.283631624 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.271512831 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.271771988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.291392624 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.271421114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.275213724 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.271860072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.288232282 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.27875439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.272546225 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.271313394 seconds)
  done (took 74.012506756 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.556271235 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.282434011 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.284743166 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.277119983 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.28519977 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.282469607 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.277045725 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.56186879 seconds)
  done (took 13.991759631 seconds)
done (took 242.625196269 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.2762762 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.778900624 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.319842392 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.277403318 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.300203876 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.30399503 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.491575605 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.318188665 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.49283131 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.293188142 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.298237828 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.287142672 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.044712046 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.426123838 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.098497412 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.2069741 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.122939976 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.279542668 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.829856405 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.549969604 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.303531033 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.280355964 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.097582369 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.14620117 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.281306799 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.355504243 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.372767138 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.494070338 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.433598341 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.354890092 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.775017852 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.284746229 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.279800346 seconds)
  done (took 60.641271835 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.279763623 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.404690367 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.285535216 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.286005421 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.407389816 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.304209707 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.280850581 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.285602114 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.285957859 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.285983433 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.285679654 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.287686732 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.287707537 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.33434366 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.409466742 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.298876316 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.280214295 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.403005192 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.281826556 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.27960449 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.335810626 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.286459563 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.287780912 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.337528712 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.287040883 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.287397288 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.403278359 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.305842415 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.290468297 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.404048572 seconds)
  done (took 40.667983643 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.285993632 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.844573368 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.005569152 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.294964528 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.283671293 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.287640198 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.552167859 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.294386827 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.286841147 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.287484776 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.764159182 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.295539455 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.316484591 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.031203478 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.290967832 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.289449504 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.289140987 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.285460931 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.857959132 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.298400458 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.573115871 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.293991127 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.552576486 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.300275413 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.306507269 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.285167622 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.290554354 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.093214304 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.306289543 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.765995981 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.016631356 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.554045523 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.041937541 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.028241752 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.020547352 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.296370127 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.29032562 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.765601694 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.291207044 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.286045388 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.556428069 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.291538893 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.013783337 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.976230176 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.303991689 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.290012416 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.113704309 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.78874855 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.520284399 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.297707914 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.040625064 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.294970859 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.29156161 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.288159544 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.516125354 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.288765789 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.287011791 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.128896314 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.314620201 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.557681772 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.291832553 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.287621999 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.859938738 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.287613188 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.850679127 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.288601483 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.295620988 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.306744413 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.020522093 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.295401848 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.989517811 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.303789723 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.292282827 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.768670361 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.849688005 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.177310085 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.289231373 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.863413837 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.07006535 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.573770394 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.295541106 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.080602149 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.573601148 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.296770513 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.29427801 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.295192755 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.293058684 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.37197224 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.554458139 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.939804383 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.988012691 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.134693098 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.579647354 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.301804908 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.290183005 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.123019759 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.311942908 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.293925836 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.013774172 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.991863403 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.30619566 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.296225383 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.995490142 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.308620168 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.561424972 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.295020505 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.02207966 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.295923015 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.372425025 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.293935335 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.296808155 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.31252314 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.561093334 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.294229606 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.294681317 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.967731053 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.798372058 seconds)
  done (took 182.114460397 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.294189421 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.285568361 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.29059454 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.284836316 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.285443779 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.293659512 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.285566596 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.285040861 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.289304155 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.286170898 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.285032831 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.294629821 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.291991982 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.284565049 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.285790898 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.285933043 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.286695907 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.292571817 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.287202314 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.288370221 seconds)
  done (took 42.959093775 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.297124102 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.819059088 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.787832053 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.300992607 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.296473194 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.295079756 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.346080128 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.297402637 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.29629066 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.577005326 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.46099544 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.297858761 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.296349852 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.297007038 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.789196315 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.292900202 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.577192218 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.832304678 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.303274868 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.825229263 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.293524092 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.297645272 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.292597372 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.825398706 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.587129619 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.562736676 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.353801691 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.827320778 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.302596551 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.29854484 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.826630074 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.304241852 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.295407943 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.825837752 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.320371741 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.311681638 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.298182831 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.348858631 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.350604672 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.581050302 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.837725182 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.573016573 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.315749658 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.468601311 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.301159591 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.286983152 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.835160499 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.320562826 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.288535933 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.299662637 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.304323316 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.799528822 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.316954685 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.80063144 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.320979395 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.299789918 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.829599639 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.804995803 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.816748652 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.461836965 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.295368782 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.564528071 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.304507014 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.834868768 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.320781742 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.299310685 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.299873839 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.459281739 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.84650798 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.568574913 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.587058795 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.587348189 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.305421156 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.355378392 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.316520976 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.583139332 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.361045122 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.692652767 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.58388598 seconds)
  done (took 118.03837341 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.553630122 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.404691532 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.686508721 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.900350772 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.300585915 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.436971803 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.403257925 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.545939792 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.295127424 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.37876622 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.917559979 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.411589414 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.068306884 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.381841955 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.396799842 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.436062296 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.676310024 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.257571877 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.985856615 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.89783065 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.308479482 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.403611559 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.840087069 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.50229761 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.293084563 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.911790775 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.241518875 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.938536582 seconds)
  done (took 50.976487132 seconds)
done (took 496.581537608 seconds)
SAVING RESULT...
DONE!
