cset: moving following pidspec: 13383
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.371400919 seconds)
loading group "string"... done (took 0.572248284 seconds)
loading group "linalg"... done (took 8.083585251 seconds)
loading group "parallel"... done (took 0.170872409 seconds)
loading group "find"... done (took 1.231220912 seconds)
loading group "tuple"... done (took 1.872332012 seconds)
loading group "dates"... done (took 1.330994889 seconds)
loading group "micro"... done (took 0.222466184 seconds)
loading group "io"... done (took 1.018349452 seconds)
loading group "scalar"... done (took 39.710237282 seconds)
loading group "sparse"... done (took 12.564459512 seconds)
loading group "broadcast"... done (took 1.005668576 seconds)
loading group "union"... done (took 13.838443507 seconds)
loading group "simd"... done (took 4.662783887 seconds)
loading group "random"... done (took 9.55182278 seconds)
loading group "problem"... done (took 1.763518254 seconds)
loading group "array"... done (took 21.71702905 seconds)
loading group "misc"... done (took 1.743740485 seconds)
loading group "sort"... done (took 3.43529251 seconds)
loading group "collection"... done (took 18.28838189 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.559955223 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141121792 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149969125 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.136761268 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.167262604 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133564017 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142722445 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100492617 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.914011014 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162668878 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.130535879 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431063279 seconds)
done (took 5.593318967 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.187622068 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094624011 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095587958 seconds)
  done (took 1.263641966 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.083517439 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143146047 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083072571 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.083087453 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.083396846 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083057692 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082632318 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.083314651 seconds)
  done (took 1.71521777 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.089100917 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.084492898 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081793627 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.084551608 seconds)
  done (took 1.413933369 seconds)
done (took 5.751032456 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.804144617 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.233199468 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202850149 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.431360313 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151403148 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.196124682 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664631179 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328776002 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.206070939 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095461521 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.131318372 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.370959553 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.146466636 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66415392 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0968811 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110353152 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160889172 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.446349621 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087081981 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101338873 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108866055 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146918126 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101497186 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092441403 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166186593 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086500929 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.159364678 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10460123 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084461766 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.235351337 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.193476364 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688946863 seconds)
  done (took 10.91114215 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114433499 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113628245 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.086135732 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14396985 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.113711848 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085890501 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09398823 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085955865 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107866491 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144642722 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.106804905 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121362811 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084390517 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085234182 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098726412 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228065496 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.099255822 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099945001 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090968712 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.096703484 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126261322 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093960066 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097533438 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09857614 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.147573783 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19685819 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116194138 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113861434 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.080036714 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098217321 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.135547426 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142562304 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.082551817 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081086173 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.144080938 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110129247 seconds)
  done (took 5.18189406 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.00265465 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.168180674 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.109254872 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151866777 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.083103587 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128552238 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083418302 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099852275 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.228271402 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.465840258 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.646806854 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.155094371 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129969661 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082369391 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.123068668 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086626465 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085776355 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086184361 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.557251356 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.118339005 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127657347 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100964483 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0893143 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088917574 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.083617896 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091102806 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085382703 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087557603 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.131251516 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092447257 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.315642903 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142072408 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086547511 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.958613081 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.184218647 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086589419 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120399471 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.177967702 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.105618368 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108666188 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.156984244 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.224441728 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084523413 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.186026898 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083352245 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091190265 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085287294 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104143466 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124237011 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135997258 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08321347 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084745061 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.188920484 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081011332 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100452855 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.161395087 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16912735 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082113451 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.314710126 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.110410613 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090082505 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083093116 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.190465548 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135270846 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084763362 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083738852 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085232269 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086925217 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393622647 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084172906 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.965601306 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088091653 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.095581127 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089038143 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089472079 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091945222 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090867384 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.106598438 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083129141 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.089847801 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082930893 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083791526 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084910211 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.098152203 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.407908535 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082695624 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088557459 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082597697 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11009484 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082019778 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084184437 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08374597 seconds)
    (92/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114702267 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117002269 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084273384 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082652522 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084187034 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095398547 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085713599 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128223412 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.186951825 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.11744855 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117373115 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085985768 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118125406 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094590655 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085173586 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.483377853 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082491059 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091389536 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084205037 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08275413 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084593419 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086560889 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098571752 seconds)
  done (took 23.934683671 seconds)
done (took 42.104253926 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268668321 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083416099 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084732858 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084208113 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084229611 seconds)
  done (took 1.770160716 seconds)
done (took 2.917343688 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.142139688 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117478321 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082517336 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119132011 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083004048 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119615071 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119880898 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094982982 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11828253 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082346941 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115975526 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082782987 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082428707 seconds)
  done (took 2.5233132 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097074927 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099438049 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085445605 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098293416 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081450313 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097923813 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097157264 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105591774 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097850037 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088198255 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078783694 seconds)
  done (took 2.1671864 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095561639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099184468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085162983 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097303267 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07870064 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097102233 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097035293 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100899053 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097127966 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089818992 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078465426 seconds)
  done (took 2.152242466 seconds)
done (took 7.977419049 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090509995 seconds)
  done (took 1.215015577 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.548580277 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.620006295 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.095409018 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.118358829 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.212157587 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.125389118 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.255335939 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.10001986 seconds)
  done (took 8.375674195 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109740503 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098289104 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08546265 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088047473 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087272244 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086994695 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084338225 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084029254 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087634529 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08714348 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086234599 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085037436 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085382978 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085940341 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088726397 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087663642 seconds)
  done (took 2.629470814 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110691982 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112496063 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.088704518 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.090366147 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088441087 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.087725454 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090179717 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089704869 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086937905 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088598707 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091239955 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089178843 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087381474 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07970249 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089715108 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092185851 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086842581 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08934149 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090902565 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090911328 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090314265 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.079280192 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086844818 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089775352 seconds)
  done (took 3.405567995 seconds)
done (took 16.761479376 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.121418893 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085522402 seconds)
  done (took 1.337751959 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.092964376 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.095371995 seconds)
  done (took 1.328528645 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.093834973 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.078418434 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.099602438 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091460803 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082339876 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080884049 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.100226483 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081559423 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080732616 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081024649 seconds)
  done (took 2.010751167 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081260795 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088375802 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.083496094 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094227591 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087927183 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079379508 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086499739 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082815817 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.09111525 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077831784 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085177896 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098092818 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085919449 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099573717 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.086459768 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082900048 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084819662 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082094854 seconds)
  done (took 2.700631755 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07819277 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080872082 seconds)
  done (took 1.305202982 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079315215 seconds)
    (2/7) benchmarking "second"...
    done (took 0.07646961 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080882331 seconds)
    (4/7) benchmarking "year"...
    done (took 0.080590767 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07790254 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077361586 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078276503 seconds)
  done (took 1.692919713 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.421232649 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134138147 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338632301 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087922414 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.09766515 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.278373611 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082295656 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086913663 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087036784 seconds)
  done (took 2.800673222 seconds)
done (took 14.324764224 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095886477 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.102483963 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112125031 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.4025848 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108438534 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.082723244 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131907172 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193614077 seconds)
done (took 2.385686661 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.226887446 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.806035069 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.507305285 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.226324885 seconds)
  done (took 2.686849977 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353452055 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.102580753 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074647192 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083474597 seconds)
  done (took 1.772615392 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082593328 seconds)
    (2/2) benchmarking "read"...
    done (took 0.085024256 seconds)
  done (took 1.319187998 seconds)
done (took 7.160306894 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.202650499 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105181237 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081724321 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081860614 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079570336 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081967026 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.080061938 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079575055 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081877829 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082328826 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082047647 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081658658 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082096492 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079279918 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079185605 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079290222 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081777873 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079483845 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07905134 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079376432 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081924341 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079359813 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07943935 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081596791 seconds)
  done (took 3.27077346 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.096787214 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.081212389 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.086941592 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086189301 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084522785 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085947636 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.086318088 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.082342603 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086535692 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083755467 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083947957 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083830433 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084185319 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08393709 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084291217 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.083952674 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08611171 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082200471 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084228392 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084186819 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086431997 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082272609 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08378114 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086221775 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08420077 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08434407 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084035426 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081793991 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085949551 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08461899 seconds)
  done (took 3.709484827 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084096521 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.078347864 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07913444 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.088181913 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079019396 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079002169 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078156159 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078898001 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079411373 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078990606 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079534928 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078758401 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078370062 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079338243 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079107037 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082791484 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09635794 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07919341 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078609122 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078671045 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082409551 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078314775 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078392831 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081473749 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079224435 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078491367 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078806029 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079483907 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079095277 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078531605 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082425016 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082921947 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078661266 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086873991 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083266127 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078386221 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083687904 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078293178 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078918413 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078485258 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078026986 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078825417 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078710912 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088839683 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079081746 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0796783 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078509262 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080006803 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079121148 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.08084666 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078241727 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079575511 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080917887 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080184875 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083743822 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078212918 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079438831 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078386545 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079638899 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078090197 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.077898824 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078176669 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.081873621 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079382664 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096337916 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087100509 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078361467 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079379715 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079549513 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081969354 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079878344 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094200868 seconds)
  done (took 6.9792636 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100828078 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10117897 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081996411 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.081753392 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077092492 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079436695 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085271013 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079322533 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08183298 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099226788 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079546095 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082365243 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081369931 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083949252 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079622262 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081861135 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088445083 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077216933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079633407 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083568357 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079564187 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085277203 seconds)
  done (took 3.032881683 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161511798 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085792258 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.12170223 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090546954 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085891166 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090627115 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085170019 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08571402 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085654745 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084009083 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082954448 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085241722 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085439316 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083516982 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083782643 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083284401 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085622081 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08303274 seconds)
  done (took 2.821194992 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090988915 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.080931473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104542509 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08131308 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081881838 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084420384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085629073 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089494042 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084117267 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.081815043 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089086312 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084226374 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083860945 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081717044 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084079151 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081265051 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.084504519 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082064578 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098930669 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086310573 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085713293 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089651957 seconds)
  done (took 3.069348521 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093939317 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083171874 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097485309 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083098676 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076536044 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079171204 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085893835 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081168503 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085392811 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083880173 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081402834 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079104348 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083935409 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081029467 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.08430041 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081404941 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083267113 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081960132 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083849711 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076995467 seconds)
  done (took 2.840472482 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097684669 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082178978 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082920898 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088360215 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082391703 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082477034 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089561362 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082269269 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082459446 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10401514 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082767148 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082546 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089005154 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086397165 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082711976 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088768365 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092161445 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089255615 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082418573 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082347232 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104213251 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082385873 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089881983 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083550781 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082799799 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08237247 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083039518 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087288337 seconds)
  done (took 3.602625651 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080761866 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080253492 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079895694 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079925102 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079313728 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079623342 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079673108 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080106998 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08199423 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079760216 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082066574 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081770311 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082013258 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081766036 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082351795 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.082159271 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081954115 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079407122 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080061094 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079636168 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081782235 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081748131 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081940307 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079798025 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07928978 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081661786 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080056602 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079560898 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081686253 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079523464 seconds)
  done (took 3.602065454 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088796962 seconds)
    (2/2) benchmarking "in"...
    done (took 0.08876783 seconds)
  done (took 1.357328695 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076528503 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096003041 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078783686 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087275117 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084412887 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082957175 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088086448 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085142713 seconds)
  done (took 1.853203346 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09992987 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.091333063 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082153163 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.091351801 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.090318743 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099989896 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144755659 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08137153 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092450503 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082482841 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.097922358 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08347065 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091884991 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086203035 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09167236 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095200674 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079073587 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086198607 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.082933484 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079738632 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081999947 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094683183 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091035298 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.076533686 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087033883 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10930591 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097942773 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08012483 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088064112 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094175221 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09155981 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075339323 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08194491 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.081960009 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080021744 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.090007011 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099918688 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088819255 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094232792 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081724666 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089927014 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076828455 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090039682 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092777559 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097615439 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081346458 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081877084 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076451939 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082537658 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087661451 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076958376 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086889352 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0764657 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093917985 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089420655 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096968918 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080859164 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087447917 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088486857 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088811368 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093029599 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088355209 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091023849 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081521618 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097596434 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091361364 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093103688 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076510251 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075371289 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079175687 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095536058 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110339855 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091354388 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081438433 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081986313 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079067197 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088683886 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081857431 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091021609 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092764786 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080810342 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086163444 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094331789 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085830981 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087881402 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087920161 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079520001 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08353717 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08240486 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101721485 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08049309 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079300778 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082724922 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097599406 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091533714 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.080965383 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082027427 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092808819 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07502087 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.080895 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081295259 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086299055 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09427134 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084113759 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084651933 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093613208 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087438022 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085647889 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0873482 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.076929153 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.080421949 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.081968067 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092216801 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.074877495 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087053519 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083670561 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.080031987 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09193658 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078693942 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.079149439 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.225041301 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09573969 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.0824019 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079926595 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089503653 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083037141 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084954004 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096451002 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081711274 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077358415 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077437629 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090085843 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081163025 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089848536 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085076391 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08924222 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076162846 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080058954 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085937725 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094594303 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084727882 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087062223 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092082616 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087852182 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081560429 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094232424 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088585103 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084057847 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09247527 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084934147 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07662473 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083585525 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088421773 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08100516 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08842138 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084591364 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088041723 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.081823071 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080501077 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088009244 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083125661 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083591745 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086388156 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08078076 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096674288 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088155269 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076905497 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078801265 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088539131 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082949824 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080601911 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083318825 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087473725 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.081452514 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079704381 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081597864 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087573298 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089354061 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084305894 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081977551 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090516912 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09958599 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080741362 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08808636 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081121315 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081862038 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.081711822 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095988506 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091971306 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085433063 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088360681 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07845102 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091383636 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093285057 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083586566 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079220165 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083327931 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085003559 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092908497 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084785899 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.081476429 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079481614 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086972683 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083475157 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087694962 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080452438 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083441796 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08584102 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080065659 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086918925 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081470944 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095453507 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088456952 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076760005 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083634208 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07936841 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092564907 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076381034 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082197225 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083192997 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.081383884 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08034397 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08761909 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076156769 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092922101 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093061638 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08572535 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082484217 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08003808 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092599693 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08623485 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088626014 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087184429 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089561857 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094814309 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082472533 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086409103 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094566637 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.07941683 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.074554691 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092123615 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.078280939 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.078282049 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079166936 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.07818029 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.22526567 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090737212 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093626283 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077013052 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089535475 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081033918 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085267132 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077720379 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090929077 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088896121 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085604167 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093878143 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082088815 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08111518 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089621859 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.080897967 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.081983661 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083032937 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088550897 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083698821 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087266229 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084598034 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087231695 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084072534 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079374585 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087522755 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.081014379 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086810723 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090581155 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081470015 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087305607 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088035521 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.081947545 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087481648 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084521999 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083998955 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089239341 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087850975 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08637548 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088916945 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076678737 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093649724 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.080579952 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094548006 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086765009 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078351031 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087152375 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088293946 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085952927 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.081699755 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08167933 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087281951 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080712204 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088124056 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093539144 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082452279 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096690288 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092368728 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087197714 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088040359 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086815252 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086752175 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08354807 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08561208 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.081401164 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086690142 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.080838577 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089553118 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087962743 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086179024 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087072438 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.081778418 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086486176 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.081591893 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.075987521 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083662535 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08382603 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.080960995 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094236362 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.081491639 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084030399 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080178179 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082421203 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.080630153 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078479799 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088180111 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08860544 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.081533128 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091760036 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08406061 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087253815 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096764256 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.075640835 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079688166 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079000379 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082499149 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093431921 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.080987307 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095120784 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086492166 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08353568 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078626907 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.081707008 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.079865106 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.075951912 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07859233 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089375329 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082445313 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079899025 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.080104511 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087619473 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081336919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093124383 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.080280904 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084489387 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.079967066 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07719265 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082348417 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082602743 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087252028 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.080231419 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081277996 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.077236351 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.079679603 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084092773 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086050653 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.079978577 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.225052882 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095804776 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082972211 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089303851 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084319448 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077686197 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089303443 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081485908 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083043051 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083487521 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08920366 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089011244 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083095979 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096235126 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084096056 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087653702 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081048158 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.079353841 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.080641073 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081177778 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.081535946 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083747444 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.082109509 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094897056 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079367013 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088358318 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086657217 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084693065 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092017477 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.081310149 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087625221 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086886908 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082842365 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088228508 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094996519 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085681576 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089163505 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082264211 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087348208 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091915773 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083981103 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09261729 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086975009 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.081717109 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087378895 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082581587 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081001658 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081183268 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080488899 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091617948 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.081727995 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08393879 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083366017 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079235437 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085168502 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083502715 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094953346 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087940776 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088491096 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.076461838 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.07880889 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081964671 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082395225 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086822535 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088264988 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090867405 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088057206 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084711079 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080097675 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095878116 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091546025 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088801118 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082283085 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089065375 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.082172084 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088244107 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085480079 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086273145 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082199146 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089227095 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087372454 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083674583 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091600449 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089208369 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082185524 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087560038 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087439004 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086119073 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076348647 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.081474861 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088244273 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090364493 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088028019 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081139343 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096614661 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082322395 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086534814 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083735557 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080941997 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089873171 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077066223 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087409704 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081826961 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082112008 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076869623 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083842242 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082151423 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087518571 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083100871 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076576479 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096539342 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095908027 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086589936 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079693329 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079158921 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.075904057 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076042867 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082962943 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081130523 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086157423 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094728331 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082626689 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082647537 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.075624467 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079827571 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088435706 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087834498 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.215648336 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079000557 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084974066 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088554632 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094574288 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080340352 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081301942 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089467116 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088674567 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079438405 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084408188 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.07853957 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089178074 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098807343 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.082145137 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087912374 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092257133 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094687771 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.081928886 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07657407 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.081101761 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087122176 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087727933 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.082641858 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.082067275 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10163783 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088974167 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084634233 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081102617 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088727227 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08405028 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095135887 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082291436 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.081922046 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093215573 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088488253 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088315775 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091579364 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093144581 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087988275 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087183137 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080050902 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086959328 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.079991399 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083681628 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.082178321 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.081571971 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085570504 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.087936337 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085732983 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097599305 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095524495 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084725756 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078233646 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08388993 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083499703 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.076387012 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.082068916 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079718968 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.079654103 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.07998842 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080520336 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086918881 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090336236 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085917499 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.081535238 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.081944441 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075921494 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090923211 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08833633 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08735218 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078819818 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.081881651 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.081594553 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089632153 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083553052 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08005092 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087869304 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087270431 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087338641 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.07674892 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093359283 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08025295 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088191677 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083766227 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081208606 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.08173966 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089219852 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085302862 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082456532 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088644662 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.08826539 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083302921 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.078828723 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.078727832 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090477549 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.078985165 seconds)
  done (took 52.73337 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11360366 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078164076 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078158091 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076540947 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086877943 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078631825 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07743263 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078170479 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078219189 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080389164 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077438309 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077616697 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084711664 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092397909 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087146213 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081675716 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076955875 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078301651 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076879375 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078612524 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084671665 seconds)
  done (took 3.002946496 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.085159796 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090689244 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089392242 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097591826 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086235851 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085489742 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.089834937 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084585602 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093237276 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087927172 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093393018 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084810822 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087706863 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087832757 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088303426 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085551679 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093322059 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086643973 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.084662631 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090238528 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085102934 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090332505 seconds)
  done (took 3.198827391 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.079682151 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.078888938 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087725751 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.076350955 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.080448926 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076639182 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08333593 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.078897372 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08429703 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.083215449 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08260336 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.082399377 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08704723 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.075666474 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.084050583 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.078704119 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.122374978 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.083596287 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.080965332 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.081807095 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076801934 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088391599 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.076172298 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.076758704 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.082732081 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.083367843 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.081676545 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.078874041 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.080901901 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083020463 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081092781 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.07923751 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087435607 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086524107 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082768116 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.08254092 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.080260656 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.080657454 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.076759555 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.078882923 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089524073 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.076699452 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.081354101 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087831138 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.07884895 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.079233192 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087578644 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.080542503 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.076164607 seconds)
  done (took 5.286046935 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089942909 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.12661193 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.082755746 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108760885 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.094447062 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.087110208 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.085471643 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109551273 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078377228 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079274296 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.095749149 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.093660435 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.080488749 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.084901164 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087356281 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.080818922 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.081240186 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.079617106 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.083670594 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.079987889 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.083671953 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.087108289 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.094169584 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.092307918 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.083934395 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.079377023 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079643175 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.083863135 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.091711525 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.084039847 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.084300366 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.085313189 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.09471284 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.085606837 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.079400862 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.082477543 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.095942068 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.080487577 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08245194 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.078470856 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.082623446 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.084413944 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.087314958 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.095816169 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080497132 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.085862348 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.080186455 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.078085851 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.092020231 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.083268804 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.08750669 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.093729568 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.084046806 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.080630442 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.084934504 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.094500124 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08056855 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.079128859 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.082993201 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.091883372 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.078632332 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.083629858 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.092927118 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.082148243 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.087040568 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.093071627 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.085305382 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.083971035 seconds)
  done (took 7.290564593 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088585524 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109957761 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097657235 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098253477 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091554951 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.091734441 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091469275 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091788322 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091129828 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.095144694 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091467882 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131344255 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086670692 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093046329 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.092343743 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091426737 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091169088 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091681374 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091170602 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090688938 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091092251 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.097310307 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091052554 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097490127 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094311085 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086413516 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090521378 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091072002 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097128082 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091321335 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094617055 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09083129 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091483612 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097470254 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.093778124 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108360852 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080619054 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090418277 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090257472 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090915335 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086585112 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097446184 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090494605 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087085575 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090743774 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090286941 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.097617674 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.093903321 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092740332 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09464767 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091112187 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097108301 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090671893 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090721582 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097329748 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.099186566 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096596473 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097671005 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090711827 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096845385 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097431785 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.099711178 seconds)
  done (took 7.107682745 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093240535 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086401664 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094891234 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075452407 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078953566 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087878076 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079255246 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081996126 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087783475 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.088183249 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090147141 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087179049 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089843405 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0898657 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087768315 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089804247 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087281157 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087029887 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088010577 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088329144 seconds)
  done (took 3.041585739 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088887561 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.098259674 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082228243 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086462361 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.084982823 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086802321 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084362035 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084732165 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082643714 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085166869 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090943387 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091064795 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082500765 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08664019 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092128081 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086653858 seconds)
  done (took 2.679997943 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095038074 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.085537741 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.093185304 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.080662331 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.082236524 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.077058586 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.080498674 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.076401054 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077145155 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.093697433 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08061072 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.091802112 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.081611694 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.079585541 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.077712168 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086465157 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077196119 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.078231684 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.080374543 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.092316153 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.084733879 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.079637139 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.084552191 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080576682 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.083933359 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08525118 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.080119371 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.081686053 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.078068814 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.080920631 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.083875666 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.084737155 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.077762674 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.078284268 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.079568179 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.096345429 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.079908458 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.080327941 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.08615491 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.081240256 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.079433816 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.083303226 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.080464855 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.081579336 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077068458 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.080908445 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077013448 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.083848871 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.078469167 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083769982 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.081026236 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.083384729 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.080999842 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.088182026 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.083617488 seconds)
  done (took 5.82347268 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093759283 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.084816204 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077082616 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07909907 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084787388 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083000259 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084921201 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082530496 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082866044 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079358844 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082963518 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084887367 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083276763 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084512209 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082779609 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08464661 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076635301 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.082208468 seconds)
  done (took 2.794981045 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08562157 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081699077 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.088536325 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081742213 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.081521792 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083709958 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076846162 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.07963836 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079422703 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082017424 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081390672 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.083972864 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079632953 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.084237933 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081516154 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081819245 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.083776114 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079353472 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082126846 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077532537 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083941644 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079466415 seconds)
  done (took 3.090794734 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.109584961 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.100731511 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.157048609 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.097249664 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.103705343 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.089407526 seconds)
  done (took 1.950233284 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104827017 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115793621 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082083051 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084563965 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090147791 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084986323 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085656351 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08530858 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092068782 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090037336 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085362843 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092859066 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091922782 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092362886 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089812616 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092922128 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08551052 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085067883 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082159789 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09747185 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085293542 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092376478 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085733418 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084967157 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085136372 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091544964 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092516498 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090767663 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084969085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092221119 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090008103 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08548069 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092909639 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0905646 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084721834 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09270275 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085353471 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09726894 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090786024 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092385523 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084731215 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090729822 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092661255 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089443636 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092758559 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085543492 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089637913 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085172296 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085399626 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099198415 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090600798 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091607488 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090407834 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092926949 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093612214 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099179861 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090810928 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091981284 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090423049 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090052675 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091761033 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090593497 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091372713 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090645109 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09007645 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091990352 seconds)
  done (took 7.255677219 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117196599 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083136445 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086097748 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090255047 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092484789 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08592941 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085604446 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085623007 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085596504 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082756257 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123918505 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086056521 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092057212 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092701231 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085850625 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08587504 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086114667 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092395339 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082830755 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099333641 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085686808 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092111801 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092116035 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091701203 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090830119 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09076406 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085527769 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085560958 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08544791 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085347333 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089331373 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085791567 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091870568 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082177124 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092148459 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085227239 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085716184 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089752494 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085390082 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090261741 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09184445 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09736803 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085674995 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086062309 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090561733 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08537245 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085405076 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082657637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085551172 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082256579 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090436337 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090891105 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090234105 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092028416 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085625688 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08549571 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085924205 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085477015 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08566723 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090969079 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093555865 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085507023 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099414057 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085550596 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086070258 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091689438 seconds)
  done (took 7.19956242 seconds)
done (took 149.749586047 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208391461 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182331923 seconds)
  done (took 1.672505083 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.090192094 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.119406298 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099427081 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151838729 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087701287 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.123957063 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120076784 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097267816 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088379778 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089284984 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089497695 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091548725 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155375194 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086522054 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087686857 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092055452 seconds)
  done (took 2.969157079 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.120337499 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.183223063 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127039992 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.086782646 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.122904486 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.095811819 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086688295 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100557681 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094111002 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.088708727 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.095588108 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096330351 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088322039 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093586682 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093635744 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095893787 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.088756518 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095537037 seconds)
  done (took 3.15645272 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118735039 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.113550904 seconds)
  done (took 1.537808233 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.177192946 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.151162913 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.217466135 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.363772852 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.172814177 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.163144484 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.158079477 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.153872207 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.127683268 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.151324518 seconds)
  done (took 3.136445748 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119154666 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173743081 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309631581 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139258198 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.094197324 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113005945 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14101889 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.099376776 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.1019762 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101563911 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102107491 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096151151 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120787867 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094684046 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.090924375 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096464897 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124936642 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090472569 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091290931 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096598951 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.124829512 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087711785 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095035758 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.08959468 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098804366 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098871616 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088865629 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08740201 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096379971 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.090790573 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097667305 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111489386 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098936924 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.124533878 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092158242 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.126785776 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097004519 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09446942 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.091298235 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095778099 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099123806 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099141121 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.096821107 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096635691 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089062542 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096891689 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090487524 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087475703 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098930879 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.089399799 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098445553 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097376929 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.125112566 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.089147305 seconds)
  done (took 7.065229788 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.124156075 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.12323309 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088587706 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.131155771 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122652537 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088550085 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.124093234 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117258484 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.126324997 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089208244 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08698587 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.088346787 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097693541 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.101154746 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.135854406 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.124419976 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.08989504 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.087982203 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126475793 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.126045093 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.087424041 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120189996 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116486958 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.12598515 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.085019057 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088044093 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.087107314 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.088191588 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.093602487 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.095417302 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087043123 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.097097301 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.104127178 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092609635 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.085096725 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086754958 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087653147 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.096774613 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09634833 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.095920496 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.092025579 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085549079 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086777446 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.087840044 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087606207 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085744484 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.094863048 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.09673035 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.095716765 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086603649 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.088167872 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.087122682 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.088001695 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09636734 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094874359 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.09770727 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.09662921 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087182197 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086743022 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.089561211 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097945139 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095841691 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.096308936 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.087947166 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.096851122 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086654773 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.098642238 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10033379 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086895867 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09042913 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.086697291 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086387472 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.087968095 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.094601048 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.094130612 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.088098488 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086722483 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087013836 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.097101171 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094983919 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086880043 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.09383169 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085768983 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08657531 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.087855638 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.087990822 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.093714656 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.096122424 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.087777591 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086243294 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.085820788 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.08550974 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.084361963 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.092888913 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.094991854 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.094074985 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.093500694 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.085476409 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.092926271 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.092888081 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088166147 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.093179416 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.084951106 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.086112659 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085845876 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.092268357 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.091666817 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093473159 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085064255 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.225162005 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097487353 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098609597 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089305832 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.096306564 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.098045146 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.096723396 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086568718 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.09897688 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08852324 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.098393345 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086989768 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.098664857 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087923233 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.095901558 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087990693 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086477904 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.087056146 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.096806662 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.088149795 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.088203665 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.088497548 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.086890624 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.095914501 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.098889807 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086386007 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.093564291 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.093251387 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.087122355 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.093551981 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085149507 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.096694467 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08717673 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.087522462 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086500774 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.098385754 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087570239 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.087216246 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.087232571 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.097624291 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087086703 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097240258 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.095050557 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086523759 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.101757206 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094775668 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.092964987 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.098461591 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088863553 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.08758915 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08702834 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087088131 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.09431304 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.096331843 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088609249 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.086852615 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09452844 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.097507015 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.08643297 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.094789497 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095097676 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.095022285 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.087449875 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.086603392 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097768237 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.096638671 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.093960055 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.09467179 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.095543361 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087338805 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094880802 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.095487057 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086706196 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10203437 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087388658 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.099511065 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.095741072 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.093755162 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.095810653 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.096885789 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.097493869 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097802181 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.097394853 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085453458 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.085978164 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.095641769 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086391211 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086784247 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.094139197 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.088917354 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.087981548 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.100634661 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084666855 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.095636756 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086087944 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.095053793 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085154603 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087159334 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100269567 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086614826 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.087359182 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093510677 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.085625127 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.092395626 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.096197971 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090938314 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086519044 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086044493 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.093796178 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.093584597 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.085156306 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.22556228 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089620492 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.096168309 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.095843853 seconds)
  done (took 22.549564193 seconds)
done (took 43.407166964 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215341259 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166823845 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179330525 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.127513326 seconds)
  done (took 2.093800656 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121653012 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.114079499 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.104772507 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08335713 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.11151675 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083486741 seconds)
  done (took 1.95855481 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28774186 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.205970101 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190067872 seconds)
  done (took 2.023101897 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.226592495 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21014553 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.480171359 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298577677 seconds)
  done (took 2.652522719 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.153373662 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097291932 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.079709938 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.096677662 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.139125772 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165783031 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.108085182 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.132360355 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.091965289 seconds)
  done (took 2.45618602 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.157564299 seconds)
done (took 12.681804296 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.125904223 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.149170098 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087160211 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.089984051 seconds)
    (5/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.242714965 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.083594603 seconds)
    (7/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.217169198 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.182708779 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.14670005 seconds)
    (10/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.191858585 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09131816 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21910976 seconds)
    (13/309) benchmarking ("sort", BigInt, false)...
    done (took 0.218496034 seconds)
    (14/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139712981 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12076458 seconds)
    (16/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.187774519 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067092553 seconds)
    (18/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113258829 seconds)
    (19/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.189229227 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.32386997 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199995802 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.21770488 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.202761718 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.090580214 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.124470604 seconds)
    (26/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098904142 seconds)
    (27/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.185367184 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.177604471 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198848919 seconds)
    (30/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.124316169 seconds)
    (31/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093970952 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100772794 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110052108 seconds)
    (34/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092182527 seconds)
    (35/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.093618229 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.084218428 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.168698146 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08472047 seconds)
    (39/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.187517183 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106313593 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.088949952 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.088846001 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.084951795 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.079520221 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.129316481 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.084426639 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082360537 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111803633 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.236891602 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.172395453 seconds)
    (51/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.170340184 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.084195707 seconds)
    (53/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091322705 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126063394 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.089751292 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.097908224 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.088061907 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.232995415 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082947613 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.089534393 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.092905134 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.226469636 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.079950399 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.09668948 seconds)
    (65/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175978222 seconds)
    (66/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068164412 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.092036637 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105561981 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.084318249 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091543032 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114892643 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106777513 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.190806042 seconds)
    (74/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.201666394 seconds)
    (75/309) benchmarking ("sort", Float32, false)...
    done (took 0.149092441 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166852465 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131497857 seconds)
    (78/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.083423192 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089357417 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.093406132 seconds)
    (81/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.077891546 seconds)
    (82/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089111387 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104947138 seconds)
    (84/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090415807 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.095416401 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193833415 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08234613 seconds)
    (88/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.086973855 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.092007131 seconds)
    (90/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.148064462 seconds)
    (91/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090432932 seconds)
    (92/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.290853519 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115942572 seconds)
    (94/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.090204156 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.097998954 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.087519143 seconds)
    (97/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.140674081 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.078378672 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.085082976 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158363012 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.219809553 seconds)
    (102/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067568988 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.129324115 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091439021 seconds)
    (105/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067816721 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146338825 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06624645 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.083401949 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.100937019 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159990183 seconds)
    (111/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066834559 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.111375597 seconds)
    (113/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.170064119 seconds)
    (114/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191695376 seconds)
    (115/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.08697632 seconds)
    (116/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.090681533 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.089186199 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09015865 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.198317332 seconds)
    (120/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.244964701 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.200816526 seconds)
    (122/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067183633 seconds)
    (123/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.09465769 seconds)
    (124/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091102285 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.105555846 seconds)
    (126/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.087549013 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.08894125 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.083233676 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.088458664 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.084436433 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.08909795 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.094411693 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067060636 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.090390726 seconds)
    (135/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079405604 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.15748155 seconds)
    (137/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080342609 seconds)
    (138/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.086055848 seconds)
    (139/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.122429353 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.083495289 seconds)
    (141/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068014768 seconds)
    (142/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.124725803 seconds)
    (143/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.171643057 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.108597878 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.144662042 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.162948911 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090584317 seconds)
    (148/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.219276993 seconds)
    (149/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.091777051 seconds)
    (150/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079133874 seconds)
    (151/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.092875477 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.159681129 seconds)
    (153/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.182261364 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.128979817 seconds)
    (155/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066576324 seconds)
    (156/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.122121652 seconds)
    (157/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.084151861 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.110221344 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.228783877 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066297784 seconds)
    (161/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.087020754 seconds)
    (162/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066999688 seconds)
    (163/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.213974398 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.194445663 seconds)
    (165/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065746395 seconds)
    (166/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066204943 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.087243483 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067354804 seconds)
    (169/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.083558219 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.206575317 seconds)
    (171/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.092267053 seconds)
    (172/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081606878 seconds)
    (173/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082376761 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.104212341 seconds)
    (175/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.087576069 seconds)
    (176/309) benchmarking ("sort", Int8, false)...
    done (took 0.160082759 seconds)
    (177/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.076725743 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065948859 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.083504676 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.083557614 seconds)
    (181/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108333002 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083164391 seconds)
    (183/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.089324203 seconds)
    (184/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077501737 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.088430173 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.08839661 seconds)
    (187/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088640799 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.190326892 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.186949191 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.103307643 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089637628 seconds)
    (192/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.175456306 seconds)
    (193/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066716368 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.082582502 seconds)
    (195/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.121090148 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067048917 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096208732 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083106483 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.16856805 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.186167935 seconds)
    (201/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.084135056 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088497949 seconds)
    (203/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065329135 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065230703 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.26965846 seconds)
    (206/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.084096954 seconds)
    (207/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098504111 seconds)
    (208/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.176773281 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142412546 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.092776839 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090116835 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.090665935 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083904501 seconds)
    (214/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066663789 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.160435185 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.105641749 seconds)
    (217/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.088741324 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.145526918 seconds)
    (219/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066805198 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.105962109 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.084048156 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080057062 seconds)
    (223/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110761827 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.089414666 seconds)
    (225/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.094431545 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.084421509 seconds)
    (227/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.090031106 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.084066126 seconds)
    (229/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067188728 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.107665856 seconds)
    (231/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067834224 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066911278 seconds)
    (233/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.083026502 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08031602 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082570406 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.085024901 seconds)
    (237/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095962801 seconds)
    (238/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077931884 seconds)
    (239/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092217097 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.083161508 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.083294732 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066866093 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.083373976 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.069416496 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.083969543 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067289624 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066134037 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137716085 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.079938864 seconds)
    (250/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.078924655 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.105861807 seconds)
    (252/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090547916 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19796007 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.083430647 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067331214 seconds)
    (256/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067130048 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.16838652 seconds)
    (258/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067208221 seconds)
    (259/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106169835 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066412935 seconds)
    (261/309) benchmarking ("sort", Float64, false)...
    done (took 0.14964967 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066624871 seconds)
    (263/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066332878 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.104833673 seconds)
    (265/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109754309 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.083408505 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.090141382 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06690807 seconds)
    (269/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.088275322 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.108749154 seconds)
    (271/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066554958 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.087853433 seconds)
    (273/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.09696245 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.166523272 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148430449 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.09852976 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080807575 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067415851 seconds)
    (279/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.090636514 seconds)
    (280/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068123834 seconds)
    (281/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.12268079 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08327212 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066673886 seconds)
    (284/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.079190342 seconds)
    (285/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.088177709 seconds)
    (286/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.083415089 seconds)
    (287/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065919932 seconds)
    (288/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084175178 seconds)
    (289/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.085696927 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.160193612 seconds)
    (291/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.096431828 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083029415 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.088585836 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110329799 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066376917 seconds)
    (296/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.125697614 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.08901836 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.173542662 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.087714009 seconds)
    (300/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078412421 seconds)
    (301/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065998061 seconds)
    (302/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.077771102 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066437285 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067420065 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.108667583 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065938033 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144358397 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.082873703 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.110333942 seconds)
  done (took 36.344299255 seconds)
done (took 37.694563162 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099040277 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11341307 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092239289 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.109486087 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.099718736 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093119313 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.090075169 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.094405081 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.097713815 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.098766429 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097511682 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071161869 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09344474 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093160862 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09124265 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113914319 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097760893 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.091806194 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.092280683 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.080715365 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.091686854 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084254455 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083313984 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070963078 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095420618 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.088101289 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.093009337 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.092672302 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.084308862 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.083789179 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.086215967 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.092353346 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.083300518 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.094693687 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.087737469 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.089814069 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.091948229 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093963275 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.083439424 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.083986616 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.093417864 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.083727421 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091269777 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.090167135 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088927932 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.087616879 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.091768091 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.093415012 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1126149 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088785368 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094009574 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.094546675 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095299282 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.089027727 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085840156 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.091617765 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.086900152 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111610318 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.090846533 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087382254 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.093550962 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.090215495 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.087505808 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.091512389 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.091195924 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.094026991 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.092917966 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.087378495 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093541505 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087957632 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083277779 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.091922859 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.084753997 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.081894947 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.093633327 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094946667 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.077660044 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.085624474 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.088877928 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091050412 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.08255887 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088621465 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.082966202 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.087793505 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088589799 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070348822 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085506655 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09062277 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.080798675 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.091783215 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090581756 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.090807112 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.083669284 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093830214 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.080334169 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.086484419 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.083601898 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.083950095 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083302529 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085710335 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.083278189 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08837419 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.09226261 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083197246 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.087959268 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096878325 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.083178883 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090643551 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.079880337 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080509101 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.094849903 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.093521702 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.083378823 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088890131 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.080358264 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.08894025 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.080376558 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.082975051 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.083717979 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.083503426 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.087968566 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08303571 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088395055 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.08848357 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.094869853 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.082627026 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.084653677 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087307518 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082416541 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.086249965 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.082287138 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082885092 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.081923958 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076229915 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087305415 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.082332785 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.231093428 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090651858 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093549829 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.084483512 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093848534 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088079093 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.089226536 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.088390283 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080683317 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075679023 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08953772 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08883576 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.083713541 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.083986982 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.082624991 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08345173 seconds)
done (took 15.091007196 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.083047199 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14709491 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.110855476 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.109794648 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.102139159 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.084638543 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.091184577 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.111049718 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.084166696 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.117752258 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.106071133 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.104079119 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.128006482 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.080853664 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083838276 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.086000648 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.083792249 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097656165 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.111853419 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.1083039 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.130037644 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.081546798 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.105725699 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.106702685 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.103733607 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.117990258 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083174004 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.084902043 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.087418671 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.108408577 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109089578 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087485072 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.084894915 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111497942 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107463395 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.098090474 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.084976642 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097423909 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085220996 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.083914808 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.085869903 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.112239839 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.096766585 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.096825615 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.083890664 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.091651976 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.082480707 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.096643296 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104941292 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093901927 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.101213777 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.113812584 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.08509926 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.099671851 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.080850759 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.099489952 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.091418183 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.084388218 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.084114639 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090311885 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.084315667 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.086963885 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.097027813 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.094507937 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.088232868 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.098535998 seconds)
  done (took 7.81470047 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.099857821 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.110353873 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100584552 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101463646 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.083637754 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.084109705 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.084882648 seconds)
  done (took 2.109632113 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.082323732 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104230341 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.105051666 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.106386578 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.096185472 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.107817497 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092707066 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084922171 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10754242 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.083441201 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.102712796 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11409098 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085596189 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096494631 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107546076 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.084668309 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.107965249 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.084646896 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.085756316 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106777169 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087206041 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.109425798 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.0961781 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085311502 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09570083 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.085125815 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129102023 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092682891 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083350571 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.086031003 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083055973 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.124012158 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095559461 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.096921696 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083462417 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098377621 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.096127557 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085806701 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.094107521 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094522095 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.096056709 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.086082927 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.083840489 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.083556562 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.087861975 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.094093074 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.083489084 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.086056201 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.085909929 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.102453304 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.083678382 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094963164 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.085955091 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.087194178 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088848816 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085438096 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091035804 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.082903078 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.101827108 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082674399 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.100250632 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.099769749 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.096237579 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.099510089 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085300908 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095640852 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.095941061 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.08591539 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086394845 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.086390765 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.099676537 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085918967 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.086549756 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09408619 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.084779448 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.108254278 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.107332341 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084307467 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098633522 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.08532406 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08350134 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085143124 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.107633756 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087842659 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083206186 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.090084251 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086843607 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.085336126 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.083633933 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.088805427 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.083646565 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089665919 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.086288213 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.086623313 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087622152 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.100202847 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084050494 seconds)
  done (took 10.417499971 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.08488392 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084045007 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.087288848 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086077243 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.085623686 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.086208462 seconds)
  done (took 1.98374839 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.106397309 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.082496209 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.093589311 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.084959426 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.11712828 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101388482 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.101796887 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095993808 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.099615306 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.09522593 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.102683779 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.102847889 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.106825578 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.088008887 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.101531693 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.087554602 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102304075 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090342733 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.093832418 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086397279 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100009004 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.085835506 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086152726 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.100958538 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09221705 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.087634306 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096437399 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.09476978 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.094717382 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095743414 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.088209859 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.091370776 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.092925581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.095072409 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.101681005 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.092855807 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.087539696 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.092769376 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.087426674 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.091123806 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.102875911 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088243258 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.089175256 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.092385407 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.096449707 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.092449002 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09204089 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096747454 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.101433549 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.092224899 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.092497494 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.085935214 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.090350712 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09007664 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.090696947 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092448395 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.089817123 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.099605182 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.08687515 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.093258607 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.084442703 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.091454414 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095435496 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.091703552 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.093585864 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.09268774 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093235397 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.088460021 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088439144 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.087325314 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.093348324 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.084298796 seconds)
  done (took 8.174236545 seconds)
done (took 31.925819997 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.529829902 seconds)
  done (took 1.948908785 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622845974 seconds)
  done (took 2.07102448 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.618575789 seconds)
  done (took 8.063406036 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396645739 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.465553465 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.758698392 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151085446 seconds)
  done (took 3.260523003 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.753030315 seconds)
  done (took 2.209610358 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248576793 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.244921305 seconds)
  done (took 1.963094258 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.371210106 seconds)
  done (took 1.81961953 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.099777184 seconds)
  done (took 2.550587047 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.243986817 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176261228 seconds)
  done (took 1.872066349 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.462993797 seconds)
  done (took 1.913650215 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.281765343 seconds)
  done (took 5.733021316 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233743401 seconds)
  done (took 1.725396313 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.255775211 seconds)
  done (took 1.709126893 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.761585411 seconds)
  done (took 3.215384679 seconds)
done (took 41.518717458 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09912432 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.102334903 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103141116 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.098659083 seconds)
  done (took 1.83673797 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.091309396 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.088832297 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.092733706 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.088575 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.092771605 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.088842141 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.090436064 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.091202749 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.088873825 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.089341419 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.088651949 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.088797958 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09191977 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.090748704 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.087725132 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.091992975 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09258813 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.089005343 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.091509797 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.088932201 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.086950141 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.091123149 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.09167095 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.088150051 seconds)
  done (took 3.61614898 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.093936219 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.09158947 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09433097 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090314798 seconds)
  done (took 1.831797432 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.091980023 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.104828613 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104901961 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094775707 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106688948 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.101742866 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.085526907 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.08529317 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.086637466 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094076819 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.084363798 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.111141185 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.104066466 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094684313 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.097031053 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.081128411 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.083971701 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.103218733 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.095471257 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.095684131 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.086841043 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.094906653 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.084874294 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.104947962 seconds)
  done (took 3.736432145 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094530396 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.117616148 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.096551006 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.107295709 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.109122743 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.081717194 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.095468331 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.109145583 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.142406069 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.0819552 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088034166 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.081987505 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.090338932 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.081857418 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.096840506 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.124246208 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.128203264 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.085654169 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.114030958 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.081855062 seconds)
  done (took 3.476802307 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.088551899 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088992402 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088329487 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.084177242 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09573825 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090890632 seconds)
  done (took 2.004112818 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.084427591 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084362463 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.085206308 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084858542 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09068776 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085425049 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083947785 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.085866039 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086357858 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.086041708 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085390747 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.084496999 seconds)
  done (took 2.490768517 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.200322619 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.08459473 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.084779233 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.081996476 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.089393999 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.084811482 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.100274406 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.086671955 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.111838495 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.085570286 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.085476718 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087540088 seconds)
  done (took 2.647976148 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213621255 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092021255 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250319508 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16562709 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122899002 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128298157 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128842911 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128431592 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.150981011 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113146024 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175001027 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176942112 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120214863 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148921912 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103653869 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.116230454 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164479654 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178238548 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121467213 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173868801 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155001221 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138535417 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16032494 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11688125 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119672315 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132453306 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.08788013 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095212637 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183174932 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149252507 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155896601 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125542631 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10562959 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194346723 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17618071 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15251245 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161432678 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099633685 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.116510624 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.145121335 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20805869 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101858279 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167146029 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120469156 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09302475 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139378996 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125638393 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126099882 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111448974 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101363313 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147680142 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183384157 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136195617 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096120783 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129179992 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119432589 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116625246 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12471338 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18287092 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16108882 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135383794 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.085423335 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120749585 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153187023 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139703536 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115196589 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12925765 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101371179 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137891843 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157974219 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128947835 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145350327 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117952835 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096847335 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124154938 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139583186 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129626571 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166531739 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125923965 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.084101472 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123747899 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104414186 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090160396 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.15167419 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088701345 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173774422 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111806693 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109704604 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135596773 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116245283 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116438072 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152337787 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139031774 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112363444 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.077814531 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112382883 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123572265 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141631613 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095741876 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114571116 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117981208 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085823452 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395791605 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.095253339 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141014164 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.096166406 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141880758 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146503717 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.096445113 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139179412 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123807679 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12152564 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147745838 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173958405 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107319782 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099801621 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178447509 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138257271 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.11926716 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156760045 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16627272 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118386936 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113332163 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157356032 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180950453 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106886921 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172623312 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120169707 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101382714 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103251371 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135408108 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122654424 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.13465971 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097428003 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.130303452 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17353985 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.090516122 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112592833 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147553911 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09537496 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096848548 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120206015 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118307242 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110544845 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.112874664 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.114890351 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14750719 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134252111 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117348313 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136561625 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112551621 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174886299 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103937836 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.114477302 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116649994 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.08326488 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13921822 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162158281 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093254171 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165789184 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129365887 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279716427 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135120234 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100329665 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149654926 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095819658 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.086571663 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151912066 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124930415 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123825453 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15896349 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129134363 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.135097554 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.131195932 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143936747 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142137162 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.139703482 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12054577 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.104469506 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12812233 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138489615 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.088767167 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.105135328 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.09553756 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119884926 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110633587 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100367835 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155256172 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13540661 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124727203 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127082229 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111762446 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158683233 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.090087959 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137234481 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.13118765 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110804521 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.159001739 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159839514 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14218246 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114404861 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149936191 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.087123698 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090765349 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102217288 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134181308 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099353588 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099176914 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126445192 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155935321 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137641618 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143331017 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133411673 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130077676 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162179356 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.083450289 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.129121791 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15049226 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129492574 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.11550405 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253728943 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.111156624 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150573075 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120209686 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192163253 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127800007 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139573928 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169238618 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.117689555 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096046043 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119213937 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143412243 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116650095 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149963892 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113136184 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102873059 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120334897 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.091911736 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112328168 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138156285 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134391419 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150492568 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.125583041 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145875925 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093622769 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128952366 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135178463 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133784543 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.078861422 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131109145 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174323286 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110193216 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129762473 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159408724 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09348773 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.151219321 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180931361 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15820604 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100108918 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120685269 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132710477 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137368121 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132009203 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149175586 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120847598 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151391353 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123801416 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.098484305 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099456794 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110148643 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117701564 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10533513 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.113225001 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121548637 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.106812837 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140081332 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115879962 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123105779 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278527879 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.115134587 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.109419949 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112553502 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18613652 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132554034 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18628317 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.116134628 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.152255765 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169406691 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090257101 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094548512 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.093691755 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150193075 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100218379 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142876371 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125095644 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128956861 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135048169 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149832492 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110589334 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.08480257 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124586393 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145783963 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137348779 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113363995 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.116694444 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169269246 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111455519 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091885299 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123287669 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12802419 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117606837 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179056647 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.074911588 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120969151 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091023229 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09354115 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134373227 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161028889 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.093117753 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.111649902 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130996945 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124689688 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135392015 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111173873 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12135529 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139511126 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153762988 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135939055 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.101668919 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123793258 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136159869 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159143275 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112298306 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.108188125 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176485911 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305158274 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162281885 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.097454177 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127879026 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126165772 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121014025 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144792354 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096859376 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167408481 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094241929 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142408329 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112526529 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098876576 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136156491 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.123282848 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100868259 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151316104 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127421181 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095940327 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090895231 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12567346 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129543347 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116081562 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.088359723 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146570828 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.088720122 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14616651 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181831976 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094201545 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116268398 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107334795 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092468592 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115322903 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11376344 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099121531 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.111650361 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175434776 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.097530443 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153899947 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14134193 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122475538 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146351203 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114334922 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.651518195 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.092778815 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159458245 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127349843 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179337318 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112589071 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129764673 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123637555 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132041486 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150308838 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115133252 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.191722391 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290868134 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.125090409 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093898809 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117138992 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116810639 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099150358 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120149875 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125041787 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125838148 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.104274152 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.127812922 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133631798 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.097895 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111832539 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163007561 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129756506 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155483968 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149291378 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100751953 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130726864 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147328164 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094520011 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.130680908 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164691742 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120659813 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113953694 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.097319905 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.112460947 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178774509 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.086740506 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200212674 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13047785 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121525006 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129556712 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120219457 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141224204 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11883992 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134895277 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106816339 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11987399 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128417126 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097117632 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.0925888 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119264004 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125046861 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.113057476 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110023197 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.11555007 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159114547 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.085090823 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111457114 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125528505 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151035091 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174882147 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.098673284 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098546118 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130808647 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124682647 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120556693 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281181839 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.095540378 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098269651 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.096163127 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097436848 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120274162 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127737427 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132943203 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124518271 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171312698 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.100021921 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.240579611 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111549542 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119050861 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.085931107 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.093553011 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111942523 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111939813 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119506454 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126686223 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181491903 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.111174202 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105668817 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104335502 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.091170713 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099455439 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138352979 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126093812 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13057999 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115424704 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.078789522 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12107397 seconds)
  done (took 64.367014514 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119083047 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.092826191 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.114714344 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.160810159 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.135850366 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214417591 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.165555555 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203762011 seconds)
  done (took 2.815361174 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.083465247 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.109567225 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.121977609 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.100576585 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.084874732 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.085690103 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.244219354 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.099233266 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.083849239 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.10763483 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.093723933 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.084078069 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.425924969 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.084441745 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.08597853 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075942761 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.083035097 seconds)
  done (took 3.643026125 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.393384828 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621174294 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355096665 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.09347739 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.860438944 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107209922 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.200164869 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.157407025 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097272033 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533495705 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.386199445 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.150425058 seconds)
  done (took 18.559298255 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.09780441 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.091784815 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106807606 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.10631881 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096067272 seconds)
  done (took 2.103998693 seconds)
done (took 114.601619215 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.095126148 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.440838449 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070057682 seconds)
  done (took 2.139851162 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.102368849 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.101640692 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.103660247 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.101772877 seconds)
  done (took 2.019897748 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.089724576 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.092167503 seconds)
  done (took 1.784704432 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240307424 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191835426 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.113517715 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.095581284 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094186447 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.095768584 seconds)
  done (took 1.895073501 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.08572344 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.088040551 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.087530834 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.090508648 seconds)
  done (took 1.956857511 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.088069005 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066777097 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069404717 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072301739 seconds)
  done (took 1.903083974 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.099592379 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.097679302 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.093979652 seconds)
  done (took 1.900773855 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.115476109 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.105449857 seconds)
  done (took 1.827638279 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.094073398 seconds)
  done (took 1.698858912 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102148681 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111139159 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.145363938 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.132640928 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.15570601 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.132188174 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.102828804 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.104480772 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.097108749 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.104893151 seconds)
  done (took 2.792515837 seconds)
done (took 22.163271015 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094489303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.379052908 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.378343048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109392915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.687754342 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.375524544 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989002103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.110950447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.159379515 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087017709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103721555 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667739475 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.979480303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344803854 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966388233 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.340488935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.66839963 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088492255 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087549779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088153801 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977630521 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088238756 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087685314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088479325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668203952 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.392664727 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088516598 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.345190137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08813133 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.08960372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375792174 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088469857 seconds)
  done (took 16.671124287 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086085926 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.137356265 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.091949222 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103799367 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.08943591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088732766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.090787236 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088506517 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140247877 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.086934788 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105316825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.088319877 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092279183 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089272616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109200302 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088668024 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089120941 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089053945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088884157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.08838705 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107599833 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088239001 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088859978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088470579 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.08792072 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.103097124 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086338537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.084849304 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085354225 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087661799 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.088102938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.085986095 seconds)
  done (took 4.634925522 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131844614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144593249 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.092249855 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123846497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132389237 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09008335 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.166586698 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113970713 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148140704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088511644 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104764299 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.089082235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124065048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089342581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.10937672 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088854604 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089783437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088611645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088234453 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087865713 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10789812 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088184594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0881931 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088939797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088320164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102392724 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088688405 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088921851 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088334783 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.090148018 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091465274 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087419046 seconds)
  done (took 4.911869867 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.086291362 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.089445766 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.099830746 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.099829489 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.085676275 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.088122515 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.089633653 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.086266144 seconds)
  done (took 2.347831216 seconds)
done (took 30.178727181 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.093022681 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.08494565 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.089657745 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.104878102 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.092169579 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.096282636 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.082583396 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.092372145 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.089722137 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.090118463 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.091251324 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.086398762 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.088706141 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.083374486 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.09056309 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.08439238 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.098809787 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.088632711 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.098359855 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.098868057 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.086445664 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.090287418 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.091890447 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.097330057 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.097470671 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.097848176 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.093003175 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.08936794 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.084331712 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.087060965 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.093392026 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.100497464 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.08654659 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.096647047 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.083036536 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.082927606 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.087053393 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.085984765 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.097391973 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.092231219 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.085189984 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.092309529 seconds)
  done (took 5.419982234 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.099697266 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.1075866 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.100946085 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077944286 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.083529914 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080993081 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.105666965 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077426036 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076225254 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.104919854 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072152968 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.076654573 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079010063 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.06991173 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075511313 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.072845885 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078038458 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.071447656 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075661274 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076718648 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.104770129 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070357071 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.093923979 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078432521 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072345996 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078308613 seconds)
  done (took 3.794542153 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.090678624 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103479359 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.110059585 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161606577 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.130143697 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098460195 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099563806 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.11046189 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114320022 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.086172439 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090286012 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.110186406 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110184917 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.091875169 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.085953462 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102433387 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.10105681 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.087880909 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092732459 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11422771 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.106662525 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102804561 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.111549595 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.102111529 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.085011514 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088304367 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.090560268 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.101891682 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.088018335 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.09728822 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.091466633 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.089985943 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.08687118 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.096464872 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.088693366 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.085954959 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.110889166 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097761305 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.098881111 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.086921676 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095842696 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.087192384 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.111519957 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.146084688 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.085678687 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.090808371 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.089851833 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097531937 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.085573109 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113546908 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097889334 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.08585666 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.087050683 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.0850786 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.084781434 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088203174 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.087348694 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.085898459 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.093397146 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.090321974 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105273501 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.089421736 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.100650949 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.082888434 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.093876079 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.083104026 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.085531048 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.083351181 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111753214 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087965586 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.131231465 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.086995349 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.084484455 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.097353247 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.096180669 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092357321 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.08571532 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104201624 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09774515 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.089884891 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.094643438 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.089976858 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.089781801 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11721436 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.08663999 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.086122009 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.085344315 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.090323345 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.089745469 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.086171533 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.096815289 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.084372811 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.088650819 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.102221057 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.086256319 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.085810515 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.0900955 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.089213015 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.085642655 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.097209736 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.090001198 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.087659849 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.096475161 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.086527975 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.090813407 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.099527456 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092224425 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.083674611 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.08807681 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.090215809 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.087718018 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.088179708 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.089723515 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.087968996 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.092921119 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.092794115 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091362965 seconds)
  done (took 12.771716853 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.178617505 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.174292805 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.090628604 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.16604132 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.097091261 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.097672622 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.167964804 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.113845837 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.088151739 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.089800874 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.089130968 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.12862235 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124314147 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.138843668 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.099274548 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088742261 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11070867 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132078268 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.168752677 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.162722637 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109402435 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.096192303 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.091229779 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.089736363 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.089342964 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.096356869 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.103737597 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.094069448 seconds)
  done (took 5.034278301 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.094537732 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.119745157 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.089927824 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.107612743 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.105589248 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.085408072 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.089934993 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.089556623 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.104302792 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.095131892 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.085746244 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.093518221 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.09084274 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.088605547 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.088523617 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.091927933 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.094974079 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.087207046 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.089014209 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.090515601 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.098174924 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107421912 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.091379807 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.088545096 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.090766468 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.087711851 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078391025 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.100263376 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.088149658 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.112666085 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.085739735 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.090061995 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102610994 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.087690015 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.087500579 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.088112198 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.085641332 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.085197536 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.089125225 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.083498087 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.083822523 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07367609 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.086031988 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.094674485 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099821599 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071929604 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.089706597 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.090695046 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.090721198 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.082787211 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.090624287 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.09026609 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.090964956 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.095167372 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.089508577 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.089817853 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.08755273 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.092608045 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.093831578 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.086814372 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.081011356 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.083842304 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.089808339 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078812251 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100662104 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.090123676 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.083570263 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.085276602 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.088171362 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.100048885 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.085380086 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.08685602 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.080319249 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.084877079 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.087891951 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.091266656 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.085876744 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.082370227 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.086135197 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.086544098 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070644021 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.087179281 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069025028 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.090786386 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.083180872 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.083987971 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.087941497 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.089998278 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.096057386 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.086799749 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.091548158 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.087506034 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.084612748 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.087896694 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074113286 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.089435085 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.098241556 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.09650553 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.083218399 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.081085324 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.098400495 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.087700962 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.082015123 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07279395 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.092540244 seconds)
  done (took 11.031885281 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.107673615 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.084386646 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.10142156 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.109074345 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094726406 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.089646536 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.09732327 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.086405007 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.10349518 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090966674 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.094254269 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.084986801 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.098371686 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.096906828 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.08669928 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.097760463 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.089997395 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.105701184 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.102658683 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.08438169 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09596302 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.098962891 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.097593206 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.100060005 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.098129301 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.099903259 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.097256863 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.093702627 seconds)
  done (took 4.37090651 seconds)
done (took 44.041029614 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.720806817 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.898347795 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.708307089 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.924499828 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.775563911 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.949700345 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.800866211 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.703563743 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.045472289 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.74800549 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.04062764 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.794823222 seconds)
done (took 64.884795903 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.744068202 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.838705117 seconds)
    (2/2) benchmarking "String"...
    done (took 1.92681712 seconds)
  done (took 5.396201738 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.909654351 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.384090029 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.946063025 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.705672456 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.71329071 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.964302546 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.509772368 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.153560151 seconds)
  done (took 30.007856789 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.927640063 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.939365799 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.426995222 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.461865078 seconds)
  done (took 15.433070166 seconds)
done (took 62.215821296 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.70331742 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.710037467 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.706957424 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.688979875 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.804419995 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.715684312 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.862982584 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.931464153 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.708391499 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.694607854 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.710696007 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.140734803 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.721720758 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.855639921 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.708764369 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.719840879 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.72042652 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.15739271 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.86691059 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.723653553 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.730259759 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.748241045 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.709335069 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.850641055 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.758735474 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.710057293 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.132184385 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.716598389 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.330453099 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.70943954 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.741244159 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.034781137 seconds)
  done (took 202.655222473 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.708702113 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.712873374 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.776459171 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.752848646 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.054357985 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.892991797 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.811027366 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.187195197 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.715900904 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.722693177 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.992433457 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.710304006 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.011230421 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.707798895 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.736021646 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.712511316 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.93954279 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.011012793 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.739731876 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.878724671 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.711054753 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.871137839 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.80389657 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.982949075 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.739483336 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.813791965 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.722227603 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.723237538 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.896405917 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.914523494 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.729229562 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.718015521 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.907523732 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.58166766 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.724193004 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.724911525 seconds)
  done (took 167.97070836 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.899291914 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.711950612 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.71043307 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.709712446 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.715602514 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.710465673 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.832201766 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837918862 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.350996044 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.314470844 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.769188864 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.711205116 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502817888 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.710659775 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.710750595 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.777337143 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.724679647 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.711618496 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.725907269 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.736835982 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.716731748 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.711833977 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.833493459 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.728144973 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.711359828 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.720095689 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.711755865 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.717335214 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.078200474 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.711779587 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.72046939 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.711814953 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.716752456 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.951405297 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.713160558 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.711844802 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.580410289 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.323522008 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.712344308 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.794308236 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.713406768 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.718242841 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.71089714 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.930195313 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.71312132 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.712650781 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.712219834 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.715729652 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.849784398 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.71194878 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.834890498 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.715091294 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.192480669 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.71354684 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.714228898 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.400387869 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.554399156 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.713898708 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.7168416 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.7142307 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.714251268 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.727158274 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.374875356 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.793978679 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.715319467 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.718225026 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.719319041 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.715406519 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.98345405 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.713697649 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.974835456 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.777245772 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.944321423 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.837866051 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.720419899 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780733407 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808792624 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.715686761 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.714272916 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.715917759 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.715985021 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.794976894 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.715218758 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.888616011 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.725692533 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.716859099 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770408626 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.783997485 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.716069996 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.715411873 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.71482289 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.716594595 seconds)
    (92/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.562292289 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.992641608 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781345541 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.715196155 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.716859783 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.854276541 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.839689438 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.45590554 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.71688778 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.509754044 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.873633451 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.71762968 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.847623583 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.718234473 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.798761849 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724164808 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.71829109 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.751452102 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.718110497 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.716491712 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.716813361 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.775850883 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.090254459 seconds)
  done (took 395.41521685 seconds)
done (took 769.632181029 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.316623082 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.289170864 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.390070024 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.303288629 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.28083832 seconds)
  done (took 13.21883067 seconds)
done (took 14.859749979 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.805983468 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.808491062 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.739260342 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.803525593 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.737757695 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.803298185 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.789498416 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.74176382 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.771498111 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.742173423 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.772374001 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.741642221 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.728744367 seconds)
  done (took 24.625575794 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.946037012 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.948729336 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.782706719 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.946747509 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.758462974 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.968054699 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.872954158 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.864358099 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.863595389 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.730946782 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.727028651 seconds)
  done (took 22.049493153 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.9586361 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.960302952 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.78975627 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95232357 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.761877414 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.948889519 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879318179 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.867463189 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.879215913 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.753184917 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.72539468 seconds)
  done (took 22.115791484 seconds)
done (took 70.431487618 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.723396142 seconds)
  done (took 3.362709034 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.744093946 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.913372068 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.726692881 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.72294016 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.721032368 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.71782618 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.720211937 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.717533618 seconds)
  done (took 15.622393079 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.713010665 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.716556867 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.713248186 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.715500995 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.714441189 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.715912908 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.713769028 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.712732755 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.714355206 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.715612709 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.712313733 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.712217073 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.712894263 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.713493951 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.714807194 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.714813242 seconds)
  done (took 29.059075941 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.713665645 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.712832733 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.712521613 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.713421386 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.712473301 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.713207296 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.713086529 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.71324407 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.71292499 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.713682963 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.714025849 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.712610097 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.712296236 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.712615696 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.712709642 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.713369644 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.713053341 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.713481681 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.717517509 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.714880554 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.713482768 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.712608462 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.712583691 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.714363335 seconds)
  done (took 42.754802795 seconds)
done (took 92.438520097 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.494417896 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.480494241 seconds)
  done (took 9.607716474 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.715312384 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.716245624 seconds)
  done (took 5.071663941 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.715887259 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.716133043 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.717913953 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.71702507 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.716403045 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.715842043 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.716845314 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.717067194 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.716658414 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.716515278 seconds)
  done (took 18.799577581 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.715360711 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.715357835 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.713074604 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.716993048 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.716727412 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.713942773 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.715892769 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.715849952 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.717131549 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.713545769 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.716755047 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.714578361 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.716118897 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.713848722 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.71829182 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.713196491 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.713637343 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.713513091 seconds)
  done (took 32.50592426 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.716562738 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.717107541 seconds)
  done (took 5.067378459 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.714968185 seconds)
    (2/7) benchmarking "second"...
    done (took 1.714768665 seconds)
    (3/7) benchmarking "month"...
    done (took 1.713546067 seconds)
    (4/7) benchmarking "year"...
    done (took 1.714586252 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.714515856 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.714747539 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.714519243 seconds)
  done (took 13.635239965 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.717399719 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.861164564 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.927766451 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.371575777 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.718325556 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.721009776 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.64362401 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.720784257 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.719546941 seconds)
  done (took 19.035645863 seconds)
done (took 105.357362265 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.568347614 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.706288907 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.967442959 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.833181503 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.71487654 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.042390813 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.722682913 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.991774301 seconds)
done (took 42.17851836 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.713269471 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.380442058 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.402782467 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.734744837 seconds)
  done (took 15.138994432 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.679041486 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.993677994 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.719583483 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.543406555 seconds)
  done (took 21.564864254 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.067391755 seconds)
    (2/2) benchmarking "read"...
    done (took 2.050306985 seconds)
  done (took 5.742757534 seconds)
done (took 50.782124733 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.70631147 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.703908469 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.706099052 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.705608083 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.703647292 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.706854905 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.703260294 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.702482437 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.70441971 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.703437385 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.704008468 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.703803415 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704301436 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.701723483 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.702263863 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.701779113 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.704149833 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.703037112 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.701355069 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.700533662 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.703268312 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.701176126 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.701721498 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.70558727 seconds)
  done (took 42.50715192 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.703312291 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.702245053 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.704107677 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.703015859 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.702686756 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.702018563 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.70314618 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.699918604 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.702571753 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.70413584 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.702353289 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.699488932 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.702371726 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.700007818 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.703438857 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.700369444 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.705842962 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699367989 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.702071548 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.698880289 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.701894123 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700011314 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.700965054 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.701913419 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.698967616 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.698968353 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.701838841 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.700053284 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.703855745 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.698767301 seconds)
  done (took 52.670089405 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.706130678 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.7091981 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.70170201 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.702544429 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.701074156 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.700897052 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.70020566 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.70011573 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.699967879 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.701288639 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.700667203 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.70015948 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.701447954 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.700738913 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.701577837 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.700615661 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.701733725 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.700694405 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.700223551 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.700244213 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.702163507 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.699482875 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.699636213 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.700181905 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.701691695 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.700754394 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.700303712 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.699924404 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.699812235 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.700123319 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.70039448 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.699130245 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.701020778 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.700663645 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.700117693 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.700318682 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.70396446 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.706806413 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.701732335 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.700635971 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.699112815 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.699520896 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.700074155 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.700843253 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.701253147 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.700032571 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.700061991 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.700192541 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.699499191 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.700229327 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.70022452 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.699332364 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.699518554 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.699778411 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.700152101 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.700197584 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.699957406 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.698980748 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.699959695 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.70112182 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.700621978 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.699962531 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.702715672 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.699688134 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.700411053 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.700047136 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.699705865 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.702221125 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.70023752 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.701306676 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.700687471 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.701903815 seconds)
  done (took 124.080287658 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.700958843 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.698601886 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.69786062 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.696787616 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.697114402 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.699794157 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.698193607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699286937 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69736249 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.699792093 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699452658 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.697309705 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69764571 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.700132803 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.699125431 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.696557144 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.698957708 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.696584511 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.700820672 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.700238814 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.69941959 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.696470034 seconds)
  done (took 38.987185047 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.699802954 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.700538349 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.696524714 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.699859721 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.696027293 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.698903649 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.699348602 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.701852439 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698844204 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695743713 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696583634 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69941615 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.697303719 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.697765266 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.696257504 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.697159413 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.699011464 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.696040423 seconds)
  done (took 32.184684005 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.695924418 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.695870459 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.699910646 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.697001605 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.696346403 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.699749524 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.697566971 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.698864041 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.700783712 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.696735512 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.699134946 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70114219 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.700229616 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.697861285 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699401495 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.696534756 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.699700658 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.697783345 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.698501304 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.696305182 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.69585848 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.698675838 seconds)
  done (took 38.97685964 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.698454376 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.697824886 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.696114617 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.697065354 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.695579381 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.698876025 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.701433843 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.695389638 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.69905144 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.698706563 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.696205707 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.698702187 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.698554093 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.69661219 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.695690813 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695538354 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.698810547 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.696968556 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.700304658 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.696713959 seconds)
  done (took 35.569647985 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.699042319 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.699184706 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.699024506 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.701456857 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.698526307 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.698472821 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.698342624 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.698765779 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.699503877 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.699814491 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.69881039 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.697394127 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698719719 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.698337618 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.698980403 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.700051669 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.698569657 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.699208037 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.698137488 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698424672 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.697627337 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.700041608 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.697526311 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.698836669 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.698701134 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.698320723 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.698961322 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.698537914 seconds)
  done (took 49.184364542 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.699192317 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.698200212 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.695950675 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.696662748 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.69631239 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.696688359 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.69610925 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.695953467 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.697985162 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.697285987 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.698152665 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.698434451 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.697464821 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.697248946 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.698536908 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.699823648 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698001565 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.696191806 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.696982559 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69698203 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.698262607 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699126532 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.698149881 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.695310615 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695419923 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.697949057 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.69590245 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.698972569 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.69857518 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.696557489 seconds)
  done (took 52.539372717 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.716290867 seconds)
    (2/2) benchmarking "in"...
    done (took 1.716478863 seconds)
  done (took 5.048636099 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.695197777 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.699669671 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.697828863 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.696665388 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.695220174 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.698641249 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.69744142 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.695015476 seconds)
  done (took 15.193007547 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.699877695 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.698389831 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.69903561 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.697628424 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.699336196 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.69854839 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.708111688 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.698509713 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.703657193 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.700189041 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.70657192 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.706135785 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.704730925 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.70207467 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.700809008 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.703565153 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.69839708 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.698987959 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.69943307 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.700194617 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.69947056 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.703706224 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.704177801 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.696180983 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.702164602 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.711755641 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.70576236 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.699642784 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.70107207 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.705209703 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.702456824 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.697687596 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.699211559 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.699333938 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.699588008 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.699598697 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.710820747 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.704476627 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.707212169 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.698588261 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.698921804 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.697144925 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.703153259 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.705061858 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.702749178 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.700236898 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.699681827 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.696663631 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.701370388 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.70600099 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.703624669 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.701527689 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.69824805 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.70633218 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.703933171 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.712045732 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.70144885 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.705520157 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.710394259 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.71269503 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.716845398 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.709630821 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.706148906 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.701257083 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.712901591 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.722944382 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.712199813 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.70043773 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.698109889 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.701545297 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.710761903 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.715452136 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.712828032 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.701499384 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.701466374 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.701072582 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.704177025 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.701207456 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.713394274 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.7083206 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.702294258 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.703180718 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.713183028 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.721455908 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.706135569 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.701802277 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.70292463 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.702052687 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.704306772 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.714847364 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.703855228 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.701982869 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.704021468 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.704328985 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.704373444 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.703080858 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.706292683 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.706084595 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.700663718 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.703784652 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.7025379 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.710701726 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.713661301 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.704420811 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.703420488 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.713631294 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.703853943 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.706575331 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.71167645 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.703263219 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.703683524 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.705777336 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.711212674 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.702231859 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.708502203 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.710875582 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.704060635 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.707052862 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.703467375 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.70724561 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.714698894 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.727274072 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.704485279 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.704331797 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.710457954 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.713982563 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.705031038 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.710538184 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.705727733 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.70186415 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.701686345 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.71058211 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.704061924 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.708213964 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.704453165 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.708349876 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.702507759 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.7066434 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.704573714 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.709380474 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.707478112 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.70732362 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.710643001 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.709250517 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.706670943 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.709847687 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.714096943 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.707192208 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.710961942 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.708592177 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.704140779 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.707302028 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.708556438 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.708552533 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.709309133 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.706625995 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.708103752 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.705809799 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.706193995 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.705882624 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.709096058 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.707740436 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.711506945 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.707182161 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.713095135 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.708409383 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.705684334 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.707010325 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.706957548 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.708650461 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.70740518 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.706367293 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.713215477 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.715045517 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.709334962 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.708356186 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.714271335 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.709449025 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.7113473 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.709305175 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.713534343 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.715839374 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.70796846 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.717621083 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.708452695 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.708297753 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.708420152 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.710314842 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.709327732 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710228912 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.712667308 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.714549915 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.722980056 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.717576051 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.710098186 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.712393828 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.710395691 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.711852914 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.71540997 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.70838944 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.708584769 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.709473287 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.7095621 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.709130797 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.711220092 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.709497287 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.708902188 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.709794331 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.708398855 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.708398864 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.709148147 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.711175878 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.711586279 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.707871536 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.709106675 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.709366614 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.710097477 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.706476394 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.709668558 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.713936838 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.709583953 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.709722625 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.718450435 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.707678959 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.713707425 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.712156742 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.711104819 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.709509122 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.70868587 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714754119 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.712940864 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.718962366 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.712418902 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.712261487 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.719152862 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.711824188 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.711974905 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.714386651 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.711073949 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.707453632 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.713859665 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.715889452 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.710868533 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.710848548 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.710210296 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.7116599 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.71166457 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.719732952 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.711135756 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.71202377 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.711742001 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.713905031 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.708426618 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.714660447 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.716737274 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.714053971 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.717766288 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.713937076 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.711716011 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.715352464 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.712072799 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.711701147 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.711316726 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.716421568 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.716980436 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.719910261 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.714381706 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.715331643 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.714752218 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.714313374 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.714135188 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.712292407 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.71340311 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.725506396 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.721081895 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.72018862 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.717014832 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.712780054 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.719416866 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.714977869 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.716258044 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.713113753 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.714908076 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.715524149 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.714568831 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.710245601 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.715019298 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.712426909 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.715840336 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.717159219 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.715523543 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.714029054 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.714418936 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.712774556 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.71520889 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.713360346 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.714467002 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.712952746 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.716697199 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.717271038 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.715724878 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.715082231 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.722430395 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.716208448 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.715987683 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.714896103 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.717140811 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.713295167 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.716984342 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.713772864 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.719209033 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.719460414 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.720555927 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.72392689 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.717555018 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72297592 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.715047913 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.719393638 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.721415729 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.711611397 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.714440855 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.71556381 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.714051757 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.724103192 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.716662605 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.715857907 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.718127059 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.714332168 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.714532336 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.71542034 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.714380716 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.714451225 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.713945169 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.724582477 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.718174761 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.72047768 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.718778731 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.712712048 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.714224865 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.713878656 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.714890508 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.723442249 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.714196046 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.717948824 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.716034887 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.71656985 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.713772258 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.715842998 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.71473948 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.712241725 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.714698152 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.724356086 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.718981548 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.718055737 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.716301579 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.724229746 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.717081253 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.724305527 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.718696865 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.717512032 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.715830062 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.71569926 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.718602412 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.716465281 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.720801835 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.715965523 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.718965173 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.718590721 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.714989861 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.718582349 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.720222732 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.716292001 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.718422671 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.727635016 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.735712252 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.723092794 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.722445674 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.716201678 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.721110612 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.72206356 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.718845733 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.717900974 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.721838073 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.726614547 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.721590266 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.718116636 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.715878153 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.718896746 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.718223808 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.717097459 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.717388837 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.716988424 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.717190153 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.720557889 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.717108661 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.722793091 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.717550257 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.71923218 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.720544094 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.721007306 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.728463859 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.717860844 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.720508959 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.716511614 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.717477572 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.721909502 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.719711611 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.717150664 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.719197068 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.718120399 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.722239373 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.72684381 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.723547334 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.723880511 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.719478118 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.718715111 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.719860582 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.721787922 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.718484905 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.7189 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.719271786 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.722508197 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.719639849 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.720660514 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.718818753 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.720442619 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.721307031 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.719174143 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.724714301 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.726679831 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.721515913 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.717364647 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.719335452 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.719241072 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.72191727 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.721609163 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.729781211 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.724668753 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.729632181 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.728216581 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.724256524 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.722623115 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725542102 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.728144848 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.720021678 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.722468385 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.721690458 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.723081287 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.72178039 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.724144956 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.720488058 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.729735087 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.721683852 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.72180821 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.731336679 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.724832016 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72114732 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.724582015 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.724652704 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.721068661 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.718066772 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.720680946 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.722590947 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730199955 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.724862427 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.721227971 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.727014844 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.720475403 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.724527811 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.723856058 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.720881791 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.72515762 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.719533789 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.725220936 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.7209346 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.722664949 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.719707975 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.722559054 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.724013338 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.726361565 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.728408645 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.719215077 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.727461919 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.724819553 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.723142551 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.722587262 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.722600668 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.719027697 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.719393635 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.722306733 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.723358065 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.723783954 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.728562189 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.723627916 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.723556261 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.722179336 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.722627333 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.729133624 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.733652604 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.727860292 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.719960977 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.72422502 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.724244198 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.728117432 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.725790614 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.722623189 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.725166248 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.726847299 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.72293167 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.72358157 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.722674757 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.728514859 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.739302147 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.724957465 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.724020631 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.726147528 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730214076 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.72396366 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.72107031 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.72452665 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.726995968 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.728318693 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.729533566 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.723582599 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.734258968 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.726879561 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.726691351 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.727837627 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.728176992 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.732011841 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.729170335 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.724557858 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.723772041 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.732262641 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.740436872 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72516956 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.735544297 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.751217235 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.727697655 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.726513017 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.723786407 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.726488364 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.724213426 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.728186493 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.724794023 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.725625084 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.724505379 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.7253194 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.727663449 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.732772853 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.730849562 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.725651989 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.725661296 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.725442458 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.727329238 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.722541745 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.72531603 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.724876222 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.725391367 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.725132408 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.726024453 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.726994818 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.740425241 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.734863006 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.726012718 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.726820559 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.722440321 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.731894706 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.730073714 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.736114823 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.73150674 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.725233939 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.72594271 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.730672979 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.725514304 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.724225433 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.729419906 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.72897043 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.72775115 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.724597082 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.738617931 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.732678378 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.733593632 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.727799685 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.726536134 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.728284849 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.728909239 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.727227947 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.726305028 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.730019886 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.730090018 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.729942162 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.726535565 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.728226624 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.732139457 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.733874941 seconds)
  done (took 1024.233359219 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.724916122 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72420355 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.725182384 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.724786216 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724777523 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725313969 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724867019 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.725122428 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.725922588 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725182928 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.724915845 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.726965722 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.725895035 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.725396214 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72577383 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.72570891 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725844432 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.726431428 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.726176008 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725775939 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.726017758 seconds)
  done (took 37.880563005 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.728538576 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.726326199 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.725797191 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.729159803 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.726751456 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.728622223 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.7271009 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72808858 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.729123486 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725975747 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.728694355 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728936499 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.72684871 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.727046054 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725493366 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.729228972 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.728674134 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.726021924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.730864757 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.727154734 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.72903602 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.727064146 seconds)
  done (took 39.656510405 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.729963861 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.731719195 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.73008162 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.727031469 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.729525744 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.727156872 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.729674618 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.729912431 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.729604788 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.731525788 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.729949202 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.731883092 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.739559481 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.733784818 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.733455958 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.730629952 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.874124032 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.730523373 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.730935995 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.730528565 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.728922766 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.738287688 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.728795389 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.727975947 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.732684349 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.732029644 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.731883642 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.731556528 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.731159407 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.734174844 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.735064845 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.730619505 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.732803101 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.736125305 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.732808048 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.734470549 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.735306553 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.731175763 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.72887023 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.731697107 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.742938154 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.748197024 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.731687512 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.740313888 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.732978857 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.731491125 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.735301316 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.739792243 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.72960473 seconds)
  done (took 86.68776426 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.731450116 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.731655286 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.730394008 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.733026613 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.731929332 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.73258921 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.732373189 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.731698835 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.730971893 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.728997562 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.733752138 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.729206632 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.730014448 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.732806787 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.733851469 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.731082109 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.729693359 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.730580826 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.730578066 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.730020438 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.731775997 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.73323247 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.732845474 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.730326542 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.733217008 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.731106334 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.733438875 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.733853066 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.731794931 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.730987123 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.733571865 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.732656803 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.734890628 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.731072279 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.731517648 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.734580303 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.73532456 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.733446705 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.734376783 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.73169486 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.734835518 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.734563658 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.734111726 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.736904466 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.733086733 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.732396224 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.731846064 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.731432449 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.732635849 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.735746024 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.734155948 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.732939679 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.734978326 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.73264581 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.735030262 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.737258706 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.731949662 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.731991833 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.734225958 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.732622816 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.735305924 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.733865809 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.733179484 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.73488008 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.735355433 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.733172533 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.735183826 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.735112316 seconds)
  done (took 119.485225498 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.734653399 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.736316743 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.735489427 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.736813251 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.737107524 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.73593465 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.736781489 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.73557656 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.735887781 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.736632185 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.735348256 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.735884227 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.736249115 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.735417771 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.737039671 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.736221983 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.735755599 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.735622327 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.735848838 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.736547021 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.737034042 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.737240179 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.735503567 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.736791483 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.737112788 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.736778921 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.737957901 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.736789697 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.736500607 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.736427754 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.736818101 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.737366959 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.738211812 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.736370382 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.737644053 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.737106338 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.736863487 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.73722093 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.73809865 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.737477969 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.737190191 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.737671962 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.737250955 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.737754659 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.736961166 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.736467199 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.737576491 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.738627966 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.738235071 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.737850851 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.738088402 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.738712943 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.738608472 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.739072705 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.738948233 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.737559485 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.738278943 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.739103759 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.738414663 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.737615735 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.737394234 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.738559012 seconds)
  done (took 109.352172213 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740336741 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.738043287 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.735919658 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.736692987 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.738161638 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.737852227 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.739226454 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.73934589 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.73958151 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.738761229 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738387825 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736379171 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737127983 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739731178 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.737052372 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739601874 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737162954 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.738830305 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739212611 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.73712482 seconds)
  done (took 36.419541912 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.737164417 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.739041614 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.73568403 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.735231405 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.737979496 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.737250442 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.737908709 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739119231 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737424049 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738524691 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.738726627 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.740217897 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735357742 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.736185754 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.739235915 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.737621306 seconds)
  done (took 29.460550359 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.737782687 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.741295706 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.740454951 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.739634409 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.73817638 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.736983951 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.739544207 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.738374023 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.737023282 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.740415426 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.740243543 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.740826492 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.739507842 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.740229055 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.737276715 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.740288366 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.737082623 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.737715384 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.741451722 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.740795347 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.740084319 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.738198491 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.741976405 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.741901598 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.738939405 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.739403162 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.739243633 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.739432241 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.738344119 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.742137044 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.738254928 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.738853777 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.738061681 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.737453982 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.742484926 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.739750217 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.740800937 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.741386142 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.741367846 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.740828944 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.742369539 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.739008558 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.742496186 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.741854956 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.739483866 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.742791746 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.739808066 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.739722473 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.740128494 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.739222481 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.742308651 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.743129916 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.742203905 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.741893459 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.741798514 seconds)
  done (took 97.359832311 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.741405496 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.74278475 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.739022845 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.741667281 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.742303401 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.740301306 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.741564303 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.739568578 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739247336 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.741742263 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.739747936 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.741453787 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740054625 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.74313745 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.740979181 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742035059 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.740086144 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.739537642 seconds)
  done (took 32.995846246 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.742948419 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.742712621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.74238815 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.739718047 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.740869223 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.743852801 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740472564 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.74573354 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745498229 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.741362523 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739759665 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.743604707 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742077724 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.742396438 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.74151271 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740170599 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.743210297 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743733037 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.740218411 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740837965 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.74326515 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743210984 seconds)
  done (took 39.989240944 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.74432592 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.742932443 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.758624056 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.760436462 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.764732413 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.772065218 seconds)
  done (took 12.202661291 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740372332 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743799078 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.741430365 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743783885 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743730289 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741679088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741007049 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741547107 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744432805 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742148353 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742426157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744277663 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743612242 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740983369 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743708554 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74321952 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741220894 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740595678 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74129163 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743856402 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741845885 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743305237 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741618421 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741397131 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741104184 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740766297 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744094141 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742097975 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741589442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744657706 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744535525 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742474665 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744915768 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742479464 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744599308 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744510387 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742458104 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744738384 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744602038 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743359262 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.745177332 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743897935 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744895542 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742785924 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745200228 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742599245 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741744279 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742137838 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742495757 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.745029608 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745216881 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742106869 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744377018 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745251759 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745375069 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745631584 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742814887 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742727794 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744728398 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743929504 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742418947 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744605483 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74320123 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742807116 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744646264 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743202084 seconds)
  done (took 116.71140338 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743322174 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.741961791 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742082527 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742216622 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743191499 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.743440628 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742765761 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743535498 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742649752 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742678823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744896345 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.743228062 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743203399 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742249921 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74360905 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74393032 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743646183 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74266917 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742628699 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746850989 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743500926 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743441919 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742715855 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745104654 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.743153251 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744834753 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742895442 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742639195 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743649764 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744864454 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743353996 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742941146 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742904351 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.743001993 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743449934 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744309484 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.743411373 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74416541 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743417256 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747512298 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744225427 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747605168 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743843489 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743500719 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743316834 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744060535 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.744225473 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744273017 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74389329 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74320248 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745222525 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744649467 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74401713 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.744384399 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744778162 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.744190346 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743919027 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744708865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745388161 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746487598 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744439103 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744594318 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748597808 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744096601 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7452233 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745637186 seconds)
  done (took 116.766164573 seconds)
done (took 2387.767559013 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.816521547 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.769297562 seconds)
  done (took 15.2493246 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.912930335 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.862734633 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.751544166 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.751673428 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.752400844 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.776836668 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.77294247 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.752666903 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.751350237 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.751470921 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.751651004 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.941441774 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.762029432 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.751255727 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.751246629 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.84608344 seconds)
  done (took 50.309291263 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.756181641 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.753935899 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.766011619 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.756080384 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.754788472 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.765679496 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.788176876 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.757250043 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.787417501 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.766698876 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.821686031 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.76388364 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.754269088 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.804302287 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.767498982 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.769566323 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.843347246 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.828465159 seconds)
  done (took 33.672828163 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.831558951 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.754525444 seconds)
  done (took 10.260048377 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.75689151 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.787297929 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.74579391 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.745776713 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.756671129 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.771060719 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.77858178 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.777678106 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.764657039 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.770210668 seconds)
  done (took 69.326143578 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.760468996 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.755656516 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.754777454 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.754839538 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.748949298 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.751438638 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.754200822 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.752441627 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.405268886 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.788772101 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.76207447 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.759506967 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.753810314 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.756673955 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.751002088 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.782234415 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.862798687 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.750181131 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.749919361 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.761313078 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.756019068 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.813076478 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.767067618 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.752992327 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.785411283 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.405029918 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.766685352 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.760935524 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.856531214 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.749933217 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.754194771 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.756433726 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.758070194 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.138191532 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.038433641 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.755126812 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.768243129 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.762047982 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.750664689 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.863199458 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.756034872 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.760344824 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.468801442 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.019473139 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.84604058 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.794079987 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.079674261 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.770638019 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.758466348 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.785337628 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.757092174 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.756354671 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.77035298 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.237125093 seconds)
  done (took 125.904332621 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.747753776 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.102257284 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.919084306 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.749782559 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037471828 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959541416 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.750938736 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.799809127 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.751815182 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.98339033 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.008281777 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.856917123 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.750812999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.7518467 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.751582138 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.749459769 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.908185303 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.824930686 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.752485247 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.748851517 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782248161 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993811315 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.875096141 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.753171507 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.781673246 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.963744897 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.874475503 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.8562089 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.531108882 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.748827081 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816286298 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.752109776 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.75210233 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.749682639 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.909582606 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.845350299 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.839265233 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.752889176 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.75108975 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.750838145 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.418004273 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.952680294 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.848498341 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.883479348 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.004308749 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.956898748 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.53598076 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.749979334 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.490959561 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.917354953 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.981507429 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.981932797 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.874944351 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.752619414 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.10385648 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.750512975 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.751812376 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.004329224 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975512114 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.850009158 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.753767004 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.75368624 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.751377455 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.996039852 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.754624871 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.84990715 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.752456289 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.751719433 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.850956677 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.85386553 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.979308094 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.96765021 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.785239277 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.110638874 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.261947358 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.001037163 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.820375474 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004646911 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.753574081 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.751357995 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.833613178 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.601030938 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.008455979 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998693869 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.000930283 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.790514107 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.471086423 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.752871686 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.982525854 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.977718727 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.014549047 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000886401 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.990436642 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.084026498 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.753286811 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.755602477 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.998718082 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.880395812 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.754466605 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.099169469 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986419739 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.289818705 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.783056059 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.059922864 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.886413495 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.755807022 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.392923692 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.753614078 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.98495403 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.797116305 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.754477278 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.756202583 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.976197404 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.749190742 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.754522827 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.409702439 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.819258976 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.757096752 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988876911 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.756705366 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.026211838 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.756699429 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988685204 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.197842262 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.788557965 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.946293572 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.002461666 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.756291489 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.997499171 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.001389739 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.870917181 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.979135558 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.462239773 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.754447939 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042413331 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.756648396 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.754843629 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.928676146 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.756907824 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.900232271 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.758538565 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.05237859 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.780261202 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988839135 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.757222473 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.012629933 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.791414791 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.808440574 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.758291872 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.883542382 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.756004767 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.679379068 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.916707717 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.756839942 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.754386146 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.312135646 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.75620883 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.907573044 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.985397247 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.780904681 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.831538945 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.425544222 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.756144855 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.839567641 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.781546677 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.151982062 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 7.168821368 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.010195357 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.757744633 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.755713978 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.755269375 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.99512255 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.942694735 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.756949775 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.757003116 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.668886928 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.75584504 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.755574084 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.94135128 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.111632506 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.756683168 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961571046 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.757813957 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.886989359 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.76117941 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.84220011 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.09735295 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.757539797 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.757350175 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.756322041 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.758594822 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.758721048 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.968187928 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.785563286 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.255102116 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.896552931 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031577069 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.070618091 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.001368617 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.803920614 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.759639701 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.015438714 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.75969804 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.822890149 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.759130396 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.780851835 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987403115 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.762447267 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.024058168 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.031055429 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.61240081 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.808871418 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.760677262 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.758242102 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.758228346 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.905801668 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.84619905 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.760679542 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.757575851 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.874863048 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.882784533 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970037853 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.75959843 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.811294953 seconds)
  done (took 877.536303307 seconds)
done (took 1183.923786195 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.758476885 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.757578673 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.746142941 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.76112265 seconds)
  done (took 28.703383209 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.765970107 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.763419728 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.763673008 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.76370536 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.762925107 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.764196521 seconds)
  done (took 12.261769593 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.818355951 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.76147903 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.761357418 seconds)
  done (took 21.019610879 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.834155734 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.14425937 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.894612686 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.174579141 seconds)
  done (took 9.726342756 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.764881269 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.763897284 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.765964082 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.765279329 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.76556089 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.766211445 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.764734347 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.764900113 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.76757776 seconds)
  done (took 17.569236256 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.97083057 seconds)
done (took 94.932092286 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.875155745 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.890173236 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.931537608 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.794888435 seconds)
    (5/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.968557022 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.909658644 seconds)
    (7/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.319255618 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.758212509 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.475564709 seconds)
    (10/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.717583799 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.79221001 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.771344497 seconds)
    (13/309) benchmarking ("sort", BigInt, false)...
    done (took 6.773085792 seconds)
    (14/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.778487799 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.117397212 seconds)
    (16/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.845769013 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.059267809 seconds)
    (18/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.795101466 seconds)
    (19/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.868707657 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.938185546 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.770689201 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.068328145 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.633115254 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.803816044 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.76190791 seconds)
    (26/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.778400709 seconds)
    (27/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.972010152 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.876457125 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.774772477 seconds)
    (30/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.667640549 seconds)
    (31/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.788519579 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.863448841 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.775006697 seconds)
    (34/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.878651755 seconds)
    (35/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.873748404 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.772989095 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.980885181 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.772960534 seconds)
    (39/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.307290032 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.181763256 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.948806343 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.851830076 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.771798829 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.14886861 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.879754346 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.772367753 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.059568254 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.866115934 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.875853506 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 2.09389667 seconds)
    (51/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.957563361 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.527801174 seconds)
    (53/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.77626552 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.911947938 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.923587766 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.026407566 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.004504401 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.075370839 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.93455783 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.797013496 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.788441786 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.199350116 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.869872757 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.440983224 seconds)
    (65/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.866945763 seconds)
    (66/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.764250751 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.876403249 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.116530579 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.84030563 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.790773718 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.786852594 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.480055621 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.135601792 seconds)
    (74/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.151026787 seconds)
    (75/309) benchmarking ("sort", Float32, false)...
    done (took 5.5167564 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.873509891 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.888298478 seconds)
    (78/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.838200231 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.919058671 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.106864059 seconds)
    (81/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.020057023 seconds)
    (82/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.874482611 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.077673352 seconds)
    (84/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.936648462 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.777337252 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.853686662 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.404819298 seconds)
    (88/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.861487393 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.77515161 seconds)
    (90/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.759601266 seconds)
    (91/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.777082788 seconds)
    (92/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.681445689 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.888231434 seconds)
    (94/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.793545881 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.949719996 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.775242055 seconds)
    (97/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.429557986 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.101101479 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.779750869 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.000914136 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.758482091 seconds)
    (102/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.898300718 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.78358761 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.109323016 seconds)
    (105/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.761807708 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.967775027 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.94160632 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.967125535 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.61024405 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.784798586 seconds)
    (111/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.916175284 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.571809347 seconds)
    (113/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.849248434 seconds)
    (114/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.154573287 seconds)
    (115/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.919244406 seconds)
    (116/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.801097281 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.988927022 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.80165337 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.938652608 seconds)
    (120/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.087856315 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.146090113 seconds)
    (122/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.986834584 seconds)
    (123/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.781402525 seconds)
    (124/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.910008821 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.041183458 seconds)
    (126/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.796302628 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.032891737 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.180661219 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.035126385 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.177778435 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.806052638 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.778301542 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.193412657 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.80237504 seconds)
    (135/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.979167253 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.780288371 seconds)
    (137/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.805949712 seconds)
    (138/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.917253188 seconds)
    (139/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.841928649 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.045261334 seconds)
    (141/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.914949102 seconds)
    (142/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.861689765 seconds)
    (143/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.022545054 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.696210391 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.891207491 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.778920559 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.055185284 seconds)
    (148/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.119618306 seconds)
    (149/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.950227096 seconds)
    (150/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.771590955 seconds)
    (151/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.810772991 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.326293621 seconds)
    (153/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.053308978 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.768133675 seconds)
    (155/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.374132931 seconds)
    (156/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.847928996 seconds)
    (157/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.780391197 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.654404503 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.765599537 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.947698145 seconds)
    (161/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.097628798 seconds)
    (162/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.094606666 seconds)
    (163/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.769834449 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.72278208 seconds)
    (165/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.222362679 seconds)
    (166/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.101032718 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.815614779 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.762837898 seconds)
    (169/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.95613774 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.065716882 seconds)
    (171/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.919354745 seconds)
    (172/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.938174284 seconds)
    (173/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.91391215 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.706936023 seconds)
    (175/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.796012993 seconds)
    (176/309) benchmarking ("sort", Int8, false)...
    done (took 4.668829331 seconds)
    (177/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.911806527 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.092768312 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.789309187 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.970951113 seconds)
    (181/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.810503573 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.942180273 seconds)
    (183/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.809491093 seconds)
    (184/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.903584222 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.814081365 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.805556496 seconds)
    (187/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.84733822 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.060625509 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.787768006 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.699138042 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.027655266 seconds)
    (192/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.981843306 seconds)
    (193/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.055396243 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.193650912 seconds)
    (195/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.874283385 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.081848428 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.283340937 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.791092653 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.990113304 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.940865982 seconds)
    (201/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.783827942 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 3.431821193 seconds)
    (203/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.958814633 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.079476588 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.926660539 seconds)
    (206/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.790187518 seconds)
    (207/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.458890368 seconds)
    (208/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.949854147 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.788048414 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.768183154 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.018094277 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.806513851 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.763863418 seconds)
    (214/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.324502767 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.785539197 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.806413869 seconds)
    (217/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.559805984 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.917911155 seconds)
    (219/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.065769309 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.935560792 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.145047115 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.683810894 seconds)
    (223/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.828659489 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.807435784 seconds)
    (225/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.916313996 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.099165883 seconds)
    (227/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.811528107 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.127377912 seconds)
    (229/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.160028041 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.76384316 seconds)
    (231/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.90756 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.529826035 seconds)
    (233/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.867950058 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.911178764 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.865880716 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.844861571 seconds)
    (237/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.790593209 seconds)
    (238/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.90403986 seconds)
    (239/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.884458334 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.105141775 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.129164015 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.556326474 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.100693701 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.128457657 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.78837546 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.805492436 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.326856893 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.788054636 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.017637137 seconds)
    (250/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.972991438 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.769981798 seconds)
    (252/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.182941584 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.78387568 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.792121859 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.173026892 seconds)
    (256/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.027902375 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.787550776 seconds)
    (258/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.96857458 seconds)
    (259/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.802294488 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.014014741 seconds)
    (261/309) benchmarking ("sort", Float64, false)...
    done (took 5.542965065 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.146877102 seconds)
    (263/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.886387898 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.703299687 seconds)
    (265/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.786447163 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.277609164 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.117450675 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.968618151 seconds)
    (269/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.944140537 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.465514102 seconds)
    (271/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.272978148 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.804191135 seconds)
    (273/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.281197726 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.79246668 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.815507138 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.615892539 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.892398294 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.766148045 seconds)
    (279/309) benchmarking ("perf_sum", Int8, false)...
    done (took 3.183154389 seconds)
    (280/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.791672226 seconds)
    (281/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.532821648 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.043668287 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.965589892 seconds)
    (284/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.026067897 seconds)
    (285/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.874331359 seconds)
    (286/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.169260722 seconds)
    (287/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.886739325 seconds)
    (288/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.923007849 seconds)
    (289/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.846330981 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.783222701 seconds)
    (291/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.483943325 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.149170966 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.548554681 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.90023497 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.144854449 seconds)
    (296/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.771776952 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.95519179 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.854044469 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.832965074 seconds)
    (300/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.766966683 seconds)
    (301/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.303859087 seconds)
    (302/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.953691343 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.019714794 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.773115119 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.003355287 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.037131462 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.825709172 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.005592194 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.907406978 seconds)
  done (took 977.561087976 seconds)
done (took 979.536564594 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.818099521 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.813144034 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.796405415 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.816883221 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.908421331 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.822551753 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.805625014 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.797619487 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.84339864 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.845010757 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.794542965 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.819818908 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.798539277 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.796978008 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.796566227 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.812583568 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.112274272 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.8317598 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.815823349 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.805093658 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.813938129 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.793557091 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.845397632 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.819536205 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.800265861 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.798949789 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.799416892 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.817647962 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.90964089 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.80059368 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.800532951 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.808996734 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.113127951 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.829388866 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.79192512 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.817732341 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.80875751 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.806405057 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.800659724 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.829705953 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.201649749 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.838737027 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.800236864 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.797893277 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.798080032 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.801935568 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.800670463 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.805480474 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.812528707 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.813730864 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.192828758 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.856768743 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.8031833 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.799504913 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.8086256 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.79986004 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.801756973 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.816881783 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.818266985 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.815852656 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.096536462 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.836314371 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.800972864 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.818186573 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.807143902 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.227870074 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.835709453 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.802295204 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.203736757 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.846961003 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.228949739 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.850657228 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.800539485 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.814094445 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.831534494 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.114971808 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.827972275 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.798333627 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.809589213 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.796966498 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.808398682 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.813532354 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.805509707 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.801049916 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.814918802 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.825839228 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.809816441 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.802034767 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.808072759 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.820474542 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.808369519 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.811709897 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.80294424 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.794687415 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.810364716 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.803439997 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.803806001 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.804237635 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.806485524 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.810552384 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.203903149 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860779907 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.797296471 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.79750972 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.800095695 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.815827309 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.202477912 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.846053589 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.823132193 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.848831012 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.802731078 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.100972711 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.838618795 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.819381221 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.810441423 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.803895243 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.796001117 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.09933083 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.229932137 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.859643226 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.801964072 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.798655493 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.817620826 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.802939292 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.798931428 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.117263107 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.836500051 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.817729418 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.923943458 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.812241633 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.834689568 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.799040965 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.806162462 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.831277819 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.820239075 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.834632488 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.804808853 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.819574597 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.819626196 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.799580757 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.815386539 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.81253748 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.803808933 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.808154339 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.796184645 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.832170305 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.817795001 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.817001208 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.824251021 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.927609132 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.802536669 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.102287604 seconds)
done (took 283.286689038 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.878507161 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.802476742 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.899257842 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.800832081 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.885211141 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.891840108 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.798267215 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.799231477 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.800230862 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.245593788 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.797957178 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.798474935 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.794792154 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.798677227 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.886672226 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.801178627 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.79893045 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.145134387 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.80110928 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.876445202 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.801385807 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.797969336 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.801837835 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.253917197 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.802786688 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.798382237 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.887585042 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.801453847 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.152962057 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.800665586 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.800345632 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.21270777 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.909529189 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.819796819 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.812324229 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.80979917 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.888222247 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.806116127 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.888520655 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.887589502 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.902344009 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.842634888 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.80465096 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.798996627 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.806687028 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.802966012 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.799096422 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.8301432 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.797595408 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.800195925 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.144509012 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.812106009 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.809272767 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.800626686 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.800591279 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.823817528 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.800728994 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.803910553 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.898531365 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.804132268 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.868783115 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.190335462 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.251132165 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.803593209 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.804688138 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.800447411 seconds)
  done (took 180.152878705 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.871642426 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.879818454 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.869762933 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.809506808 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.853907009 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.87217836 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.809336266 seconds)
  done (took 14.682018644 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.810822877 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.804157534 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.854748367 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.854233335 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.8041653 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.960445581 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.80361197 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.815664636 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.802261712 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.832367802 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.80438444 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.803641736 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.810232372 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.800586177 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.853369644 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.816166913 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.920892259 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.806865428 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.804818905 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.954225943 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.803635501 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.811030449 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.832511133 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.81660628 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.80548396 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.811742127 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.377020601 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.805081433 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.802196968 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.804449757 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.802539839 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.847590428 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.805578217 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.802243968 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.80263265 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.919268993 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.805708523 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.803137987 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.805660997 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.807803238 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.80530534 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.804970808 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.805832873 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.802683072 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.806153407 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.829629684 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.807563043 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.805579245 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.805088072 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.807843151 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.83164221 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.806868722 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.804277595 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.804340114 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.849757438 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.814439005 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.806766608 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.803643858 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.807780859 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.803054919 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.957384175 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.85666941 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.806162909 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.857529987 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.807072063 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.807763406 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.806795856 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.806641417 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.899316087 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.80657916 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.855923385 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.805605847 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.966120131 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.829846821 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.807448314 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.80988108 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.81121257 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.807404394 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.80116197 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.815682584 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.804532001 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.809272505 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.813656518 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.804182844 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.803973587 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.92033032 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.948874913 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.804349536 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.820907612 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.81515131 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.806634349 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.851550212 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.808062257 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.804755654 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.865258041 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.925125661 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.836814314 seconds)
  done (took 199.488282318 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.813796699 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.816749094 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.809993248 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.827947374 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.810894833 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.809101734 seconds)
  done (took 12.609973551 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.811567028 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.809820118 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.809595984 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.808833331 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.809667503 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.809868692 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.809940989 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.813310263 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.81307241 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.808623096 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.810337644 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.809020689 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.808918164 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.809558606 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.808557544 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.808240391 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.809274257 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.804832392 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.808909844 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.809113138 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.956040416 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.809922072 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.808937106 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.815881181 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.814363739 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.808890424 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.819824359 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.810116524 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.808310083 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.821521453 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.813821292 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.809995817 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.813926089 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.816167915 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.81493415 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.814996407 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.814273692 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.8112826 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.807398661 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.812729915 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.811480123 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.809560337 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.810376815 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.810895895 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.814076668 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.820396321 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.814716855 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.819764095 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.810704423 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.810998601 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.810265124 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.811692168 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.812236265 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.812440277 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.817041884 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.818296861 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.815149608 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.811851471 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.811448202 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.816737683 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.812711306 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.812363358 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.81576977 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.8163681 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.81821035 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.811805514 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.815527137 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.816338283 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81161168 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.812100608 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.812577033 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.809379814 seconds)
  done (took 133.352741074 seconds)
done (took 542.020542634 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.047971178 seconds)
  done (took 8.772316479 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.822271325 seconds)
  done (took 8.601237894 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.378437214 seconds)
  done (took 10.103373207 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.832735048 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.854124041 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.820962998 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.81197734 seconds)
  done (took 29.067845589 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.809675661 seconds)
  done (took 8.533358392 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.827062312 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.802505046 seconds)
  done (took 15.384501407 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.953784069 seconds)
  done (took 8.677546917 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.85237324 seconds)
  done (took 8.587457799 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.811084886 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.832853581 seconds)
  done (took 15.393342932 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.788096981 seconds)
  done (took 8.512548676 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.960369748 seconds)
  done (took 9.78188942 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.828675969 seconds)
  done (took 8.62171045 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.841432691 seconds)
  done (took 8.565524669 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.88792623 seconds)
  done (took 8.61194444 seconds)
done (took 158.938929555 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.810230966 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.80824276 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.811427471 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.808708945 seconds)
  done (took 28.962989923 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.863705458 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.844359089 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.846469085 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.855835369 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.847835721 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.845112262 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.837894877 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.839707757 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.856591117 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.853004988 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.848907474 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.851834571 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.844873592 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.838123407 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.848005612 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.846991692 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.857340502 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.847617111 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.837719708 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.849817409 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.813593426 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.857794166 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.849277681 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.812879104 seconds)
  done (took 46.019658801 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.010373987 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.88619587 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.967201085 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.864981172 seconds)
  done (took 9.453799026 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.864376094 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.866850223 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.877687806 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.917010448 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.939676086 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.876124908 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.840502243 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.834842978 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.821702846 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.868718637 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.94314924 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.862187649 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.953801045 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.814282068 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.001370279 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.813315014 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.8137596 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.865610199 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.917643834 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.930909804 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.81503622 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.865748956 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.868630622 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.861772495 seconds)
  done (took 46.760839872 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.812831484 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.821101998 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.819617299 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.813537167 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.815695614 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.813509767 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.820518546 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.815088955 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.835402844 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.814551174 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.813644967 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.813546014 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.814392628 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.813789968 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.814895795 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.826296509 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.827515319 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.814463444 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.818200772 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.821134185 seconds)
  done (took 38.087036498 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.809251817 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.795444665 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.159728398 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.065328844 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.80918075 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.812078658 seconds)
  done (took 31.178159957 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.832208149 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.824401849 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.818725522 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.875563979 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.963006352 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.826658964 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.819606685 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.831798297 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.867621656 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.888328032 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.843570221 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.849764722 seconds)
  done (took 23.972238856 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.815260677 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.818806599 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.818031007 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.833530076 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.829786273 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.828560387 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.825830107 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.812774724 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.834541265 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.838305447 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.828128229 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.831058597 seconds)
  done (took 43.648764957 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897138444 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.699297485 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257106486 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279896907 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345718854 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023154064 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.813719077 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.905991074 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.817247334 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087241063 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.153212089 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019360843 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065893057 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.611526723 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.818665245 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.264253416 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10886814 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036141426 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840461423 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426422672 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924296032 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389841407 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.483707462 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925918711 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024289385 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.946988654 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.074792825 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.769489679 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867598525 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82350468 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824331971 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.81607187 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088953157 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940397942 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891329239 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824439642 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237653277 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.527751895 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.806876469 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.445511442 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.295483375 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.931271974 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823639551 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81688401 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.748689596 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.610520717 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91252864 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.819982944 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.518223214 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.816792804 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826595231 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895889168 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.820061946 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.631059994 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508281377 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.091470033 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.814067503 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822761935 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382762484 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81496368 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489051672 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.756361793 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.911704276 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.486815018 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269526107 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.971663138 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.822001917 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821503741 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750262012 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.434398921 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928815503 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961977872 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.837195491 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.46528294 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108510539 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.234049259 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.873746904 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098511773 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.730824282 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.756670116 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043575675 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.77422146 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750559533 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.673839295 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.750557984 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031824835 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853177334 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.388328213 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854493761 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907908599 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.828741107 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838221405 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825137716 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040881625 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.697246207 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819716687 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.126668148 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.077004348 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84188346 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911491361 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751525998 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.822850802 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07236197 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.029048453 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.131254264 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.271500902 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909772455 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799078268 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.831652461 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.806568919 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.829991616 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.092052603 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881256203 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811462886 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937541187 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.750154231 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066489145 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.712865779 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.0486108 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.163795213 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056707407 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.133361558 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.067906999 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886594503 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.824032453 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.820766033 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.489331165 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.434789808 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.043241491 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.815281668 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.567169766 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.828581561 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.818718146 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750915186 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.479186057 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.195205268 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.902304822 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.041479579 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.811864033 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094747177 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752236624 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962703129 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.80672826 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.039610209 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.468218824 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.895593207 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079257695 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.123810171 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.112074592 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828034277 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835329887 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913807716 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839362803 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.304904131 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.07048583 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.820652737 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.820503046 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.480371169 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.883344786 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825670455 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.824664341 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.381331192 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09470455 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.85064037 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.827663495 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.709090286 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.83287876 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887536261 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824469345 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.828998063 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.341335401 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.333482393 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.82821548 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.468735517 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043388892 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831243968 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.474792756 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002351297 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.841605224 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094238834 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89015192 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.754167829 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.524192243 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.524375697 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821659722 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755415369 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.822300195 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83090096 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831464805 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.017907119 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103236124 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872725691 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.441199479 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.926263921 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832292744 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.82670651 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823163916 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.318868787 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835325653 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372620602 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.947973148 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957695658 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.837276761 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.756002795 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.825324385 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827679304 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.825129781 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.777745992 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874925215 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.433858382 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030526347 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083752808 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.24165067 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838825364 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.44627619 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.940467913 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.851070772 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.127661926 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400559773 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.934260171 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906551592 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.8343765 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.500653829 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.561511167 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393936962 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124905312 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143704329 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173705735 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.253482933 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.158432947 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.916593379 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058892167 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.352884618 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885094706 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.920803123 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768668627 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845232864 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.474148694 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177311348 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838673775 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050983799 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112084001 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.192249966 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962877286 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037287744 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860973166 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.688047267 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.862980801 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.345383578 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849169398 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.208344282 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029842208 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916782445 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.124143979 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911446531 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.826903356 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168142321 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86747728 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.540952511 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.182357421 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.260592803 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.303753246 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05003648 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.830809834 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.269976022 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17779363 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.058375256 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.95016866 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755693539 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.833162406 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.828349779 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.814367097 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.795667986 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.671388598 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.075216245 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830074587 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053065647 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.982067423 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196424942 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.726075024 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.821729405 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817008771 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069841848 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.541819033 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977516021 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.168756384 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.398987313 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820597297 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.747726564 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743391713 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.514534303 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.816383558 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.78496076 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019647856 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.913337973 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.493420733 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331321299 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123224818 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057257224 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.81504856 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077086499 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08283599 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.299800109 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830973465 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.900101852 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.104481589 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.513808285 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.046667717 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062486544 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366138053 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.048700676 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293432062 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.78536942 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.822366749 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032408739 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.040650824 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.223046415 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004644657 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.538841351 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.84101076 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193991959 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89675547 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.214914078 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018824955 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.930330783 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840851118 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910591854 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838717533 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.840398828 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.840277965 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842895683 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.223143694 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.946157828 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.842858063 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911437161 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860190314 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.410046249 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.843540451 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107886022 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194669775 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.170170198 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898486842 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.83218877 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838239999 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761525169 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958981973 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.266593599 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.099265146 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.948904278 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.966521539 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849276058 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.15489483 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.130655118 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154950772 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106681717 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.726529674 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.514678377 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.960214131 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.052936423 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839593967 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.040372561 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047993833 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132827249 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30111688 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.014186085 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028593989 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100153321 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19654899 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.826517134 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41243795 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.834451203 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.238960375 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.87120635 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.230132104 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095211212 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841909734 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959838275 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.842897773 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.035093239 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.298084945 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.542083445 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189048148 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.693350432 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.843887697 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11605056 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.171486737 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147897786 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916897602 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844473616 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.529565067 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972079381 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.722823497 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.073245303 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.835387095 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043048675 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.547296636 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.842442848 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116594048 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147568888 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.83186469 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.762978738 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875250082 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.842836853 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.055892519 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053387039 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088020457 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844650355 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.839863288 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.649815774 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123020021 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900778803 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766151182 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.836489829 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884684709 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.067422692 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854906267 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.352209457 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.537575237 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124436655 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.758235955 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856676358 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277313809 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.226841709 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175097102 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.366588031 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06573225 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.396263195 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.722227544 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216404664 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.838242323 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278438008 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21967175 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.837108604 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.379442256 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950509073 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.110051324 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161483978 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.840247108 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548295997 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.874641552 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058877229 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201882022 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775593818 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.840834957 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.867491544 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.838182931 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.843773475 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846878033 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.797093381 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327103114 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.682922033 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324880593 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.838398673 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.842484605 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.202607119 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420107674 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954625298 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862883724 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842060743 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.547817199 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.128465875 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.092245267 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395782728 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.917481699 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.842163871 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838859294 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76503646 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.030496067 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.035494088 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124695125 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.243460028 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.958017495 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841949352 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.052131845 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04623639 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.246431447 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977309843 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.00673257 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956910122 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.763213608 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.549037702 seconds)
  done (took 1642.639666418 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.839072609 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.888774591 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.94547984 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.91230068 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.88031902 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.882818894 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.911384434 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.861293061 seconds)
  done (took 56.876745059 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.837676995 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.003525345 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.849687547 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.838860367 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.851657359 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.838328314 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.007458595 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.849934122 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.846095529 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.846930535 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.839403078 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.837906237 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.106483677 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.86293827 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.837975766 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.821762321 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.846552924 seconds)
  done (took 73.729876347 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.839355137 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.051614038 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.872254778 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.837206356 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.026341648 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.839698894 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.81713337 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.88729985 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.843039876 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.250519036 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.134887407 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.844481347 seconds)
  done (took 89.998710315 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.853216332 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.844269323 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.845248126 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.844212796 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.845227115 seconds)
  done (took 10.992415425 seconds)
done (took 2144.062764443 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.227788684 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.021746927 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.068820278 seconds)
  done (took 5.844132472 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.983699152 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.033294672 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.151410837 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.157367586 seconds)
  done (took 10.082029303 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.123828293 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.218711186 seconds)
  done (took 6.095672073 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.160433031 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.871273934 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.255851308 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.837241917 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.838932992 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.839480635 seconds)
  done (took 22.27362461 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.839434305 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.842010576 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.839880812 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.843244505 seconds)
  done (took 9.115894433 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.818270706 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.506396085 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.817472493 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.833937467 seconds)
  done (took 20.72917604 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.993659897 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.958202463 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.984799214 seconds)
  done (took 7.692811739 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.984873661 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.63491318 seconds)
  done (took 6.374667424 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.999648698 seconds)
  done (took 3.753378708 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.867907971 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.11120121 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.329134692 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.366147688 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.420185056 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.660580942 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.142518666 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.069896472 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.293760603 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.288477713 seconds)
  done (took 24.302175184 seconds)
done (took 131.533071639 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.182928018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.86408458 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.039872395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.192827988 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.068059369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.040287428 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.054718776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.184321923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.871019069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.863795185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.19698727 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.068312877 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.003075284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.855894581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.011086092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.857297704 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.060951562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.203501016 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.883120529 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.096210854 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.070593076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.844434441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.038519864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.858011444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.064716602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.992208739 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.38891155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.860932617 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.027213284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.402895287 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.995573471 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.239349834 seconds)
  done (took 167.136650008 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.841364921 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.841991737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.84149848 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.840065689 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.323418507 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.842782063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.842307178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.841627685 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.289483341 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.281321145 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.841097337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.314269194 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.842024802 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.840589823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.84180491 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.842923189 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.458934606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.841910534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.842580105 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.840081246 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.842607733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.147318413 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.842129485 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.164991295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.451365671 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.843449817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.840886196 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.842435159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.841673463 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.842201328 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.841331678 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.840700126 seconds)
  done (took 208.391544335 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.734739139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.843205724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.84201535 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.841691629 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.842975966 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.842506731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.843809345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.84151669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.608131186 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.600117592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.842869255 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.842893003 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.843014621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.841284382 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.844599291 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.841491955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.842367818 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.801316795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.843997597 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.844673407 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.844672214 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.602804579 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.848744633 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.6183809 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.842704731 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.846107704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.843512162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.843585251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.842992092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.845431753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.846150177 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.843239939 seconds)
  done (took 219.656294899 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.09778515 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.848228696 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.84771292 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.779510901 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.850521361 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.847615932 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.837082693 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.095487911 seconds)
  done (took 18.964203015 seconds)
done (took 615.911433909 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.335913578 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.925750605 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.037060684 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.871155403 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.24071545 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.925918313 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.866124769 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.942515104 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.504159481 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.938233445 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.533803606 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.892683286 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.611000603 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.896263749 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.988599614 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.925271137 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.419814897 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.503466737 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.04784115 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.034207256 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.056308709 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.851146216 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.949218724 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.538192357 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.634963647 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.849967828 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.91841238 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.41497767 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.877815647 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.024853537 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.621971684 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.172765494 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.882195864 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.867275376 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.920688241 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.900333345 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.132443594 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.880994101 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.994057531 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.59973862 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.069929195 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.414599798 seconds)
  done (took 102.773495498 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.835010869 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.831893081 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.832651002 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.832561931 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.833251977 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.83299781 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.832633977 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.833510546 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.832593323 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.833311753 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.833479536 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.834173639 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.833105607 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.834119789 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.833971539 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.833371646 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.833159083 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.834067232 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.833648777 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.834441086 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.834161112 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.834330594 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.850329313 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.833498499 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.834148088 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.832852702 seconds)
  done (took 49.456870392 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.851195365 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.004069749 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.094390998 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.873474169 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.850904925 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.853247427 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.869854263 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.85479321 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.853485869 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.852794238 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.938165697 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.857738753 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.869651009 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.092788681 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.869720513 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.850005966 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.851538381 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.851226779 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.010247149 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.869778315 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.872337828 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.85561962 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.871598217 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.865296995 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.854030321 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.852107784 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.856059353 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.27395117 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.862102883 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.939654559 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.950813882 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.878126928 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.210749006 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.103076811 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.912137635 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.861887999 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.851283778 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.940404441 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.858969499 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.852556674 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.870746858 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.858723635 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.090896619 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.360718422 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.868609594 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.85186055 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.281236814 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.952334171 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.896402745 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.864024767 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.0937171 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.872300302 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.853436269 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.853487149 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.888531187 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.859388878 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.852854575 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.13957255 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.867497158 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.871363229 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.858437231 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.854354942 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.018992021 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.863068472 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.004484919 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.864561915 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.859402617 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.854641499 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.092969244 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.872664795 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.35577237 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.869428501 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.853108384 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.941036247 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.010521035 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.31259941 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.867018779 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.022206472 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.230016626 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.879657082 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.861805848 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.261331892 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.884055231 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.862011459 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.855383216 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.855493779 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.853265327 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.895248244 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.870781756 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.28246627 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.366827217 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.162471344 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.882622356 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.869486491 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.855433641 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.142704785 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.863834239 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.854783974 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.089816995 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.373183935 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.872172453 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.86202337 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.345902794 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.872585646 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.874890112 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.864215553 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.098399542 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.873133854 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.895437568 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.854784901 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.862090791 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.859295379 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.874676262 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.862644105 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.854996127 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.340243577 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.963037579 seconds)
  done (took 229.810902857 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.85300238 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.854253291 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.850715812 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.85482256 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.849636274 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.855305661 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.849663055 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.849716645 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.856305008 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.850809435 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.849338079 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.852048637 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.852252914 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.855291121 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.861370444 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.856602147 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.455928003 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.849956212 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.850890702 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.851276759 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.515816244 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.858002934 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.84850904 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.85004384 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.852130576 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.850775633 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.854436958 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.85544659 seconds)
  done (took 166.911952195 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.856751358 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.973830564 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.875661244 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.887070923 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.86630445 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.854803285 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.881640837 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.872853436 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.863110506 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.853596049 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.854743642 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.918902557 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.86928142 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.955811862 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.887835309 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.88943333 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.963057223 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.863021538 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.854593567 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.854517276 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.886288894 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.849035314 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.919968837 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.986289756 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.877148874 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.97613038 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.860705882 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.858042854 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.857677605 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.977143637 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.874281116 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.918399698 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.888963166 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.877540973 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.979487921 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.983531118 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.963242388 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.885845773 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.862056379 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.855753462 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.8555275 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.841125395 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.976205816 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.880452352 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.860461063 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.960859377 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.879824877 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.859330569 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.867462981 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.857237439 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.873200516 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.877609013 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.929247296 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.995327822 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.892715676 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.883049747 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.884293008 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.143314984 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.867946908 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.960803185 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.847714049 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.975651294 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.88119023 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.841907946 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.858533251 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.863789108 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.887782704 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.891030159 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.965544115 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.866752343 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.959802496 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.891962391 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.865959217 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.858343588 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.860738595 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.977751341 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.980461531 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.89464473 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.899515491 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.892541171 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.851210601 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.860969846 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.843301319 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.878059492 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.864445626 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.976628503 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.982765478 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.866017242 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.860837201 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.860445494 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.861811085 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.886219464 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.987915259 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.897473979 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.954471079 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.929052125 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.938620781 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.877989701 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.873211474 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.863968196 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.925973678 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.875788256 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.871149714 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.190643094 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.93062732 seconds)
  done (took 201.422468595 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.247023606 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.90588894 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.918819433 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.178128577 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.212277358 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.784120905 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.911796383 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.908711698 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.933951133 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.100149731 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.97176733 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.925727241 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.89905984 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.884530066 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.908547287 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.931810041 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.915688271 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.251318357 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.011833534 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.061527227 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.90114414 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.17869768 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.189993483 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.300648558 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.945544688 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.29593787 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.491855905 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.043039143 seconds)
  done (took 60.988088289 seconds)
done (took 813.124083578 seconds)
SAVING RESULT...
DONE!
