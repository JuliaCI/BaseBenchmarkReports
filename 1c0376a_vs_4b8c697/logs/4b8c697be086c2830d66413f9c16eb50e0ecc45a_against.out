cset: moving following pidspec: 21087
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.388802536 seconds)
loading group "string"... done (took 0.512617543 seconds)
loading group "linalg"... done (took 8.454902538 seconds)
loading group "parallel"... done (took 0.173002923 seconds)
loading group "find"... done (took 1.372418449 seconds)
loading group "tuple"... done (took 1.964049517 seconds)
loading group "dates"... done (took 1.331889686 seconds)
loading group "micro"... done (took 0.212401325 seconds)
loading group "io"... done (took 0.555837111 seconds)
loading group "scalar"... done (took 42.085823651 seconds)
loading group "sparse"... done (took 13.12829535 seconds)
loading group "broadcast"... done (took 1.162152123 seconds)
loading group "union"... done (took 14.654186 seconds)
loading group "simd"... done (took 5.119489859 seconds)
loading group "random"... done (took 10.487165506 seconds)
loading group "problem"... done (took 2.151184843 seconds)
loading group "array"... done (took 24.765879312 seconds)
loading group "misc"... done (took 1.150024376 seconds)
loading group "sort"... done (took 3.774703585 seconds)
loading group "collection"... done (took 21.602677649 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.588598521 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13736129 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146634219 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.176439766 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202437697 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138106577 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156877148 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.165385359 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.025527559 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210524171 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14159291 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.506405665 seconds)
done (took 5.358986419 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223539435 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083331667 seconds)
    (2/2) benchmarking "String"...
    done (took 0.12598467 seconds)
  done (took 0.908637439 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073612251 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.174938337 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092318708 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110742616 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110812145 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.092873302 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.111043231 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10901162 seconds)
  done (took 1.512245453 seconds)
done (took 3.427243599 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.767471014 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.827647109 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.544931367 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.123739015 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157170444 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.130367126 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.307462628 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.14541666 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.118453587 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111203148 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.181046535 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.407527726 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.477537898 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.002250012 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093371308 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126598073 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.080601818 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.756072522 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077618116 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114426906 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.50141621 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.107241164 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113772966 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124037625 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.203002075 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112411576 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.181629409 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106010537 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.66944962 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.098873764 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180869 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.094459457 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15907467 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.211391035 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09180982 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.090047752 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679366956 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190271877 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.106471025 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.091472871 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.726280105 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075961844 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190555668 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105674869 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108880699 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.196474299 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.0970682 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09164132 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080948067 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099903249 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.155272716 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.524982375 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10334715 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141981195 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092539842 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.707103284 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090698497 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152367778 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.121455151 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107655621 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.0792125 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.103917346 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157504515 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096323054 seconds)
  done (took 19.810248323 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113727216 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136508889 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090792377 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135490423 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135846668 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076206212 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098009714 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074143744 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121947533 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179133309 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135198792 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140615287 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07213371 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091857496 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097950871 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248341849 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116708893 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100599339 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.093819288 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0878043 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137824361 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.091989868 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106636825 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107706924 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165352646 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200798581 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106913515 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120638004 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089283036 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096008749 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138567548 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.159165912 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072585691 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089726911 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1742161 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102802909 seconds)
  done (took 5.024344703 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193787845 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099766142 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.202603869 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.169247263 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147037431 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158248468 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097820956 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258474478 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.176111944 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162422608 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126369137 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111909334 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076034186 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.092257085 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155751205 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075829598 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.70281846 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164988825 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.141789804 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118691935 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098914917 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07916361 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.72738956 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083198795 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095156821 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082235852 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087655362 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078109397 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166574576 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098914524 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.190137709 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118136736 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103398689 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112971391 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207351957 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108255414 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094059425 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081689361 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129024149 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076389577 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.209897604 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087915409 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09371588 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075399029 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.117953762 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113070303 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130260706 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095671071 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103790604 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22645982 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095632419 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095928492 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.022424337 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194995725 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090763105 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.092253825 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.333916837 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093701381 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098491188 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075816814 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.289750008 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130009556 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.094816037 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076117775 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100808786 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078433972 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.387740275 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100978796 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.040910276 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079876217 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.150756863 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095078303 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098714616 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082765003 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080892835 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114411567 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075056132 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095753983 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074702227 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094872989 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079910287 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111561128 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096452546 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076148042 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144479781 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112619799 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094461574 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124410207 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096237706 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075007848 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125457132 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076766437 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097879909 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137572557 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08272935 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114463086 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095465734 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123555184 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092828595 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.176088582 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093194342 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104687138 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098674469 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124713834 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114642899 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075770595 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09777997 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073754124 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093902554 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143038674 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090652132 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076360262 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.095150719 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089020314 seconds)
  done (took 23.389525956 seconds)
done (took 48.923993937 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.378594387 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108457096 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10751023 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105344015 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104555909 seconds)
  done (took 1.580132961 seconds)
done (took 2.333721659 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310149607 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190075728 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083658089 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167013569 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100157906 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173245527 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156111311 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113064629 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.182340027 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096632989 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161099874 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094990435 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083361191 seconds)
  done (took 2.690689916 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088014909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112365405 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077545777 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085970897 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087710845 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085761121 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102692222 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107218396 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102206919 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081765863 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088412475 seconds)
  done (took 1.770441578 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086969456 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09471209 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09483974 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087453988 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088906039 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087641456 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104136528 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099216501 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104315301 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084101634 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089307118 seconds)
  done (took 1.774073928 seconds)
done (took 6.97741123 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.070416585 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.453815412 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118626012 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16791885 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.304861995 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213808393 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.604556617 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131429053 seconds)
  done (took 16.009099334 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10701765 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109202231 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077986343 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095812313 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074256806 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095069761 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07563356 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094082963 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077944979 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078191804 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092775745 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074559061 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090947807 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075780683 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091937724 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075332027 seconds)
  done (took 2.201240503 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111199011 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110597094 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098227679 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083903307 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096717026 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079343245 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098876862 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080757139 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09399324 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079448391 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100177251 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082037325 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097630643 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077665535 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098637134 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084479342 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094778749 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098305199 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081567452 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098739536 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083465367 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095511173 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.082002982 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098832737 seconds)
  done (took 3.064342107 seconds)
done (took 22.026970145 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159063547 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080003454 seconds)
  done (took 0.994288929 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095726621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113279138 seconds)
  done (took 0.972948005 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102422458 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091891456 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.129382196 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092742638 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093180178 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.075427586 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124651652 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093104576 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077443093 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.076770046 seconds)
  done (took 1.719665632 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080599175 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080045073 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100379748 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113181677 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088179352 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094700693 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080844149 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096361827 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082578099 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091557164 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083844745 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111466208 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099818303 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.095690068 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09748055 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082142012 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103329505 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097583471 seconds)
  done (took 2.444548426 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.075838822 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.077429998 seconds)
  done (took 0.91550129 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079773219 seconds)
    (2/7) benchmarking "second"...
    done (took 0.073891123 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094510876 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094611361 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07425973 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074998328 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.091567421 seconds)
  done (took 1.348360705 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.459498859 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.176735215 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316447383 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10835012 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128180684 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.335218338 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130070284 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108201803 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106931048 seconds)
  done (took 2.673678992 seconds)
done (took 11.828321234 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087599701 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.127071897 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.468405809 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.096637517 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088249521 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.140722789 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.24652549 seconds)
done (took 2.021940115 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333780787 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117456902 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084629514 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077003417 seconds)
  done (took 1.375971162 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075231369 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080813855 seconds)
  done (took 0.929077722 seconds)
done (took 3.076185624 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075036612 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.123269692 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.072850019 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.071792134 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092238113 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071261988 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090219665 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07402644 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073574954 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.091206119 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.073961357 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090268169 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071196801 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071166575 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090518161 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071924769 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087707458 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073760519 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.192887812 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088321718 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.070677294 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089996071 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070954838 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071943686 seconds)
  done (took 2.85408738 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100945641 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092478619 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080245244 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097171117 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079484357 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.096797029 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079699122 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092354298 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080335985 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093561245 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078417147 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094727872 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076965505 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095825459 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076753317 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095144857 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081361401 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091943774 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077052569 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095882413 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079936298 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09152998 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079076244 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096294543 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078959138 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095642795 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076511479 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09210273 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079223149 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09545857 seconds)
  done (took 3.396164552 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.082112856 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070600922 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08874741 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08264785 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088233683 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077066389 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.088135275 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.072240409 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07602075 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089109404 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076609998 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088528475 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071791666 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.075262689 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093822552 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079156171 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106972497 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071893795 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088373187 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076966086 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07719016 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089010821 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074219896 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089178394 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071534011 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070892882 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090615885 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071695252 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089390026 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.071235733 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093100355 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.078319424 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072147429 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101044628 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078265782 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089138224 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080339807 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088879009 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076399776 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071312964 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089591802 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072977775 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089934123 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083835229 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.075020584 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091840229 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.072615068 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093965307 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07602182 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096882044 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07161839 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071772735 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094016972 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.076907536 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095142411 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07154505 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.072180052 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.089176228 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076973794 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088499034 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071102724 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071579117 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096236688 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.072555519 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112485645 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.082412528 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088651521 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077256471 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093520449 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079570564 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094892711 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090966521 seconds)
  done (took 6.726538848 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076866261 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099477605 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073761005 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074866158 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087609352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073089064 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097478913 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072502839 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091255973 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09055356 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089629316 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074075058 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073385249 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093096389 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073351789 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09093059 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082676901 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087854482 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071685815 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093007279 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07302464 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096214654 seconds)
  done (took 2.616208955 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21337962 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101792624 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135065509 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090341194 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108669514 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109662372 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079237999 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098342469 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078707228 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100465421 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083527868 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096813152 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110974341 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082504364 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100261717 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08394644 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097397339 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084973836 seconds)
  done (took 2.633597974 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087535679 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092534563 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.0985213 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092828249 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077292344 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094973126 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082409819 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108721264 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076941958 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092000309 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086223199 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094705352 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077016931 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091492311 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077897671 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092363668 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.077328763 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075042904 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10315449 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098556666 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082255027 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102645951 seconds)
  done (took 2.745498599 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092235371 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094591309 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097922507 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097334851 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07459578 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094300444 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083430939 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093029236 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.084476 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09425871 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075179252 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092619411 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083078203 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092632906 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.082357265 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09211621 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077779043 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075788847 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094813596 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07417849 seconds)
  done (took 2.52921449 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116996643 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106675894 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090181082 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119504958 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092562909 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106580508 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118661208 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090740276 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107768762 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103436592 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107015935 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088713601 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11951288 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115338694 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089459533 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119355157 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117253805 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100557322 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107538698 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090440464 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12079535 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089573413 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118484528 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10827901 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089867678 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107019938 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090613663 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1143015 seconds)
  done (took 3.734131687 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074624921 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074407167 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090566482 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072640745 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.072447296 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091085164 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072949491 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090022299 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074843643 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072528816 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092896691 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074296225 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091602581 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074584723 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073965126 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09254885 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075053684 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.091039155 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073651979 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073266623 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091887266 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074931759 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092515602 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072039656 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072315274 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092165444 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072577826 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090840438 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074285161 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071919077 seconds)
  done (took 3.190466991 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08279475 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097951521 seconds)
  done (took 0.970178422 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07342123 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108542772 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072723197 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078600924 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099535997 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075618607 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102372014 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080598975 seconds)
  done (took 1.477479052 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099638267 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112796383 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081250133 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105152959 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094083007 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111397203 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155182178 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081579276 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.100668436 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077113548 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112893023 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.076101552 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.082783617 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099332839 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085263248 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108906039 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.076737785 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103273653 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084822133 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096092567 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081620824 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109057414 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086334403 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101582593 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079810817 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105885198 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089413343 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105737231 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08081481 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107199473 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083392947 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08824847 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080044621 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099845958 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076681705 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111634086 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092634153 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098921983 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085275239 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099706555 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085727748 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091840147 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086516859 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101160784 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089113762 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098351414 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081814698 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092316456 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076795246 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079423995 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093154301 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079742862 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.088281948 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085264664 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102602808 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09440215 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096746787 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.080522978 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.098385202 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079868279 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101291373 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080599585 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104228308 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079955423 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102886102 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085813631 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102328977 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074984049 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.069450463 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094858568 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.085383827 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117369768 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104929828 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081583147 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10043105 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077837037 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081753532 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100144919 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08396687 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105737147 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080473705 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10087324 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085409837 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09708101 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.079943775 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100577988 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078996586 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096575911 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.076494813 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114204286 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079199947 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094612478 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077652507 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.103720213 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080959997 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079954397 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.095123664 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085602279 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.088906128 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081714698 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099782496 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082755732 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.105675717 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081750661 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100045235 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.084796979 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.104057903 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081187986 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097893954 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.072568267 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099808346 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.078767813 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084320531 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.087932577 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081772714 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098798431 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082850181 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.103700761 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.077292112 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099007483 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086349914 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106021546 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078678466 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090139858 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.080343806 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09922566 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085821724 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105234724 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078973814 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09285975 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075522952 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.0838919 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098878219 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.083291599 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100544918 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081373624 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.088744083 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.07828451 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099800985 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.087669481 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097825121 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08329102 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10522814 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083123447 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09729885 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087006283 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.097446858 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077237949 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103510844 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081008021 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075194145 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104379332 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097493772 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079099937 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.080684101 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104832512 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080354888 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101101339 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078992657 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.09912187 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083738188 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.094610466 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081257026 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097683397 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.088731138 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.098507847 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075119337 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.072874411 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101102284 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079367242 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097803275 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.076668816 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.098798564 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082159494 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09610609 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079881733 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080766164 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11214957 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107231766 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081977534 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102156241 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.087446017 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081806922 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102550425 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080805377 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102168318 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082326126 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.103575035 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084136068 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100129092 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.081283428 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090664504 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083158802 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105532355 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.076358366 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.076773954 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.094654621 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.080795647 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106593193 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08137726 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100219208 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079062761 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101871587 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086682757 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.098858772 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081052945 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.095003423 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.082003219 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103721015 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.083610158 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083477064 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106812574 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081653016 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09309461 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088075823 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097226272 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.084968993 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093137028 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077521903 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096048625 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083916838 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097209181 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080676837 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.070631044 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104069595 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086209179 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101051512 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.077316116 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099554183 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091273766 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098477613 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084272544 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.100026003 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.084038184 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114068469 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077699124 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099126792 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089155384 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.098989845 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.070388595 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.102145613 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079013462 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.093791572 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088715184 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078387861 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101263312 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083527494 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101151311 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070397856 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099170103 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079233563 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.095666941 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076372755 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104716973 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082011628 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080240767 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109254259 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101328785 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082411388 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082210458 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099198611 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082971836 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101387127 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082098234 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101844082 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.079647146 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095597291 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.080686262 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.095255901 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077807594 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.099120738 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.081512604 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081479986 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100736397 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080428982 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10430339 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08195017 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102160658 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117279349 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.078971747 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.095751794 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08249932 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102853812 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080498119 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.080987158 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093848886 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086709903 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101399417 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087213121 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098989107 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073526636 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10097832 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081349302 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101948139 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083923356 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100558203 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08020359 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080159392 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09913376 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090543452 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096213736 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088524115 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103462433 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083855027 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.099780121 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.081809348 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09862358 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077360698 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.099676812 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083027358 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10015916 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.080639431 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102701581 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082878079 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09946137 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079970966 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08357381 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.1010115 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083426712 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090039586 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077723638 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.095731999 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082028433 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103463866 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083920971 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.098001406 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081274206 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082564542 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099172314 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073677722 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103439938 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083664919 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101572491 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090234956 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.096205238 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082550331 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110150223 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071047492 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097588066 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077921537 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.077960318 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105110867 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082162335 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.105259772 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08293815 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.095977448 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.074419477 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101392784 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080432146 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090140307 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077986661 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103991996 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080076256 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080630998 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100529331 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084850018 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102098035 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085002084 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098848508 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081252381 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101928826 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074017593 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096765757 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078482416 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081625799 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102864689 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077614738 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092918051 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081801778 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.09984217 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082815458 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098650525 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081306288 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104847529 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08140429 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081502629 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108266077 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.071120737 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100850597 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081293317 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101218165 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.077700065 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10191668 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083037697 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103462623 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.087248532 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099708274 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083991708 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100527181 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.078648626 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.080333427 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100850559 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082854551 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096167707 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084190184 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106594555 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078771131 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102171395 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0819132 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097267256 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084433079 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102315687 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08253258 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104266564 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08264024 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.081229038 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.103258699 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.081854636 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103029303 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083606166 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.099081291 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086552363 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096753853 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088943512 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101737998 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083942308 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.099020233 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.07858947 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100173755 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081427113 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079900682 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106374015 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084199214 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.096366715 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.077198258 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097210288 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082098758 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106152815 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087848906 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101114286 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083073535 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094326643 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075015591 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102415963 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.078878982 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08087315 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103488544 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086084004 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101942553 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079945797 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098913913 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.086582729 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105612871 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.085772625 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097672866 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.085104491 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102262033 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08297284 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.098127235 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082021839 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101779999 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084048717 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.080291658 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097127595 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090126316 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104764854 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08379291 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09934011 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083578841 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100768506 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075656847 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102501233 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084278967 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103623718 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082932492 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101159349 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091942633 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096544202 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.081422285 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106580706 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081618451 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105475341 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076944769 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101782595 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08457172 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102415994 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.075765494 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.077714335 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098724993 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08160526 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096630241 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076644641 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110438773 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087128135 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.100786139 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081011652 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099241265 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.075784722 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.075678006 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.09717783 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084003064 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099675024 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09027561 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.096171163 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078076404 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095210496 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082244809 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10165027 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084327007 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.074405169 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095190773 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.07850673 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.101849158 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088658747 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09961539 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082217566 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102064026 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083101937 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09761001 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088605414 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093613566 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08426446 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112329629 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083942109 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103517881 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.08512212 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106754624 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084237881 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096556908 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083470141 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.082495181 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101705484 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.083792636 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10404151 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117090235 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083288416 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.077754903 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100210207 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.081625043 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09680378 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089094888 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10472842 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083762133 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.104066767 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080924943 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103588491 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088993182 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105001371 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083300881 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10202384 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081380496 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101709227 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08053059 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081121158 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104229575 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084449402 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101681234 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.08615199 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.097448455 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092779937 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.108583503 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084228847 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093882775 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079310377 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098000293 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077977796 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.083901091 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.096177043 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08100674 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099608144 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081669865 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103440779 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085170323 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.101972378 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084508548 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082195458 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.093189118 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086930993 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.102362956 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085684171 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094367588 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08290783 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103212531 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087026408 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108474255 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081420167 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102549392 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081785518 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103846356 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.076981861 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.084875316 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09993532 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.082151443 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098822379 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083547362 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103682405 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085067414 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103846974 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084732085 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102254585 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086949762 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106021697 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.075813433 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.074898412 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107362889 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080267839 seconds)
  done (took 54.969307122 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123604858 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103370974 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074503998 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092987686 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119359346 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078077618 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072539593 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096705597 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078577137 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106021098 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073318544 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093049436 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115022461 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100341155 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117029258 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10702157 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073996794 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096545777 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073565856 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097764558 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094459738 seconds)
  done (took 2.827651303 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.098585064 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111840695 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089455587 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115731626 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104014614 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091731215 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110725942 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1112969 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095569935 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106061168 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114074783 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091894311 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105766064 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104722234 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085914662 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109073684 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096145909 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105060317 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111976423 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090223055 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109538971 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108982414 seconds)
  done (took 3.108141773 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087343016 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081024027 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.10677289 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073241558 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101298053 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.07359509 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106222556 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.076086152 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085480015 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.101579567 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.079318748 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.102806125 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087676185 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.092330623 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.08100798 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094859902 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.086446709 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08245392 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103038733 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.076601279 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.12108712 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.096572531 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076516886 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.080028701 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111628828 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.082795191 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.10212328 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.082314938 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.098947207 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082196143 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.07547113 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103830977 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084937294 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.099196526 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.079909024 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100983604 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082469107 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096150126 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.07980976 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084539441 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096957788 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083041889 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109310717 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.078855954 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095450462 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084192784 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101613946 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.074146166 seconds)
  done (took 5.16328485 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.111948457 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130299677 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102036313 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142082617 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120631467 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092145786 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106840952 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144834978 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.079164958 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083805601 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122097107 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116562276 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082347837 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108696287 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102063582 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082742985 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103838308 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.078146067 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.1066888 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078842693 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108254961 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085278104 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116564684 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.112660409 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087562614 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100921756 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078219383 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10769897 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113098082 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089581044 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107991604 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089963011 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117128802 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103391064 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078577397 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103629974 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099682131 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10218852 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084221788 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096776152 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.084978628 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10740991 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.08453876 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119113018 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102088 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084870025 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102652801 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076394774 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114342715 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085193228 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113532245 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115816706 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086277241 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10179004 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087257735 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116942098 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103077714 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080198966 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106154915 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096998151 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096112754 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087037975 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114140599 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103473741 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09229329 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115762832 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.082543337 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107593212 seconds)
  done (took 7.838309484 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110150318 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107603985 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098577595 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120605727 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107943449 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088430492 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108252463 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.086926234 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108230242 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114231859 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088288903 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155202802 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.083841735 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115535235 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106822943 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087873392 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10727676 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086807339 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106829253 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08735253 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107428983 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119221276 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087401984 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118657666 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119995654 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085071047 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107367343 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087684106 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119294799 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106802286 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099495543 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.108458125 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088012372 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120068634 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120370226 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106399944 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082319338 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086808772 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107452342 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107000773 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084618739 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117791116 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08813931 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103985032 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087597137 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107755797 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119083906 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.100193388 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114505065 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113760306 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.087330723 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119411733 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106894888 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088713584 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119645519 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12916269 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099829361 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118881751 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106357562 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099178442 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120997814 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128133179 seconds)
  done (took 7.378908701 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112272753 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114691659 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118965865 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074119329 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097592763 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087866291 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097068083 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.077594384 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113800082 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094074923 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116062937 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10704102 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091989926 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116078611 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086002535 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11130395 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106157362 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087649929 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114739887 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105701955 seconds)
  done (took 2.886797981 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088351694 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118567364 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08030958 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106287643 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082156822 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106459124 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081754725 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102704528 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080829648 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102265283 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092152327 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112253055 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080272861 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107090989 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112797861 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.085958282 seconds)
  done (took 2.391006931 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101264007 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121218179 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124968252 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084787923 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076903828 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104353131 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08221145 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095102542 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.07635335 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107269127 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085332106 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105651412 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082474729 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.076466725 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100699981 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084930204 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096280551 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083525156 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102197509 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104796206 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104613414 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08188495 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103605714 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080807424 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10267417 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084705028 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106844809 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076739716 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097735365 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083828333 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102870288 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.088004028 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096442708 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085071534 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097361154 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.076970711 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102609605 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083465158 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.104626441 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082622881 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077006348 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102805392 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082101969 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101541568 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075396157 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102789129 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.076158482 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10567865 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081411425 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102549619 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082723314 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107302856 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087396499 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110636774 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090135167 seconds)
  done (took 5.98487702 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095299085 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103642786 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084980905 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096689774 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083449345 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.08763572 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104337989 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.081251284 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101921954 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076887812 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102071146 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083969226 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101867792 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083922506 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102347425 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084705764 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09500418 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.082039195 seconds)
  done (took 2.51361538 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086037465 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078642018 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107822817 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079442875 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10045659 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082199056 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096083475 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078493162 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077356344 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10025098 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079736765 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101586583 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078769479 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.102427245 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080653451 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099921169 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.08210153 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076854736 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100072578 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075789209 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101467657 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078150936 seconds)
  done (took 2.80756269 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.096416516 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.13090032 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093768146 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.142175737 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.082654438 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.105909237 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.092499473 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.105934806 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.121885397 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.084064132 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.082604733 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104566002 seconds)
  done (took 2.109199055 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106006378 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137031853 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080604124 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102776177 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09403559 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106607325 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084865715 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10645674 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119148838 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097936847 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107869862 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118978639 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098693246 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117651678 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113418236 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093666181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105792321 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083973882 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101973385 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125563694 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084534688 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119819937 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103812765 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085246452 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105721587 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095554069 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12000891 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119148713 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084583463 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119459155 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112814134 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084553404 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120674164 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11923938 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082285657 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119514264 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105948158 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107972724 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115378528 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116611463 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082452765 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115146447 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118979263 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091988303 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120081609 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083538204 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113481269 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105068367 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085954267 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133958196 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114615575 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117596492 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095028416 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118272326 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118537792 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133969054 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098410431 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11740102 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113905094 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09845736 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117209537 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114735883 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117720132 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098527522 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114804265 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116988223 seconds)
  done (took 7.950285365 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119848825 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102239113 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085958692 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122992147 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117198719 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085358154 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10566165 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084194673 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105251101 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081078706 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152051127 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106117689 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116083796 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096511641 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106544891 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104696319 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08665233 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117717777 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082399379 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133368297 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106200922 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09624036 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118310342 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116648806 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119875041 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094179085 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106423195 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084954298 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106624274 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084612045 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113877712 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105168506 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095831549 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102981282 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116857806 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084770095 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105769904 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092938734 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106269968 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114632978 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097437076 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128766005 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10557127 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085268653 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118596972 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084060762 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106786719 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080942177 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107223889 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101745218 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098270442 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119589292 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117458651 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117198754 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086249045 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105223468 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085423655 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10631236 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085247789 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114988307 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117366023 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086050925 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134427392 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104916366 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086048595 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117612855 seconds)
  done (took 7.752798884 seconds)
done (took 149.326440318 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.09886476 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136560013 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096016612 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163397469 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081199171 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135735842 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114166866 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.117466349 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080540533 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079526275 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101720821 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083282371 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.167937176 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080709698 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100589617 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.08436322 seconds)
  done (took 2.589131076 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.177333586 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.282896081 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100194621 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107848661 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087363645 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104822243 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085632963 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107982992 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082617185 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.112475983 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083653642 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.103866029 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.093266947 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103383757 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082233728 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101885329 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.093225658 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102303113 seconds)
  done (took 2.888710496 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111050655 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145104594 seconds)
  done (took 1.130315878 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118031253 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180684855 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292120252 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.374222849 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.13066165 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.122426304 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155485583 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100468696 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198138208 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126911495 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125541858 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086670753 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133654469 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.113814505 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.091394402 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.107898598 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.113143715 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109864775 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.087548772 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.110078855 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.132342511 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.08885761 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113270314 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.089569904 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182360033 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12450922 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087790425 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10919968 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.108553167 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.08881653 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113885729 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.101060225 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123772367 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.164470262 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.114479046 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.161560802 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116809669 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085693235 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109995132 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086370086 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112304331 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.111319651 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101649725 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.107313322 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088695323 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116231311 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088671952 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108728116 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.095470018 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118184361 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115901072 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.094013785 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158327138 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117059072 seconds)
  done (took 7.589447076 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793621894 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149316998 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086695747 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.900540738 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112539556 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123351646 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.802240929 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108190289 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230265325 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.812650636 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102074831 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122778662 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227320848 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.24987974 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.136721067 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310593599 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674774054 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124964931 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.136777547 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122898152 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11710768 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133903294 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1042289 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.449789308 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109325597 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084569839 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114460472 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117042542 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157760903 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086230594 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110526061 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177657533 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.263532395 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.176983905 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110304562 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083363888 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10693919 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166782578 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266186708 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195001168 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170848354 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103038809 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084545536 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118933451 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105966675 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103840486 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160777802 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171954673 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170133916 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111961826 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097986812 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117339112 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117063709 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.160914365 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083133278 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.334128483 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337453303 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085576259 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115877934 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10179828 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260420124 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085046121 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224031534 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133399374 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188143449 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108031218 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756204066 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187793277 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085010369 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114523307 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092298646 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113273505 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.096340537 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165430738 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387044047 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121411843 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.089481458 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106463208 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203418347 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085307642 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107752457 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16051337 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108780661 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094194621 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121213351 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096445279 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190735563 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247075699 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.097497781 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116147462 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.08999838 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120131772 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109182531 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209767777 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194679624 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176852993 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210373652 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097820304 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18329141 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164473548 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095402928 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167875122 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116247721 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124387859 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097372432 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216077148 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138815128 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08587615 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112627197 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092313754 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.141344367 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110270543 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.093562218 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165199753 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.504001165 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170591944 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082062543 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113492852 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093732696 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160920012 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115620441 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260372624 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095652514 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165502339 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11517738 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082331099 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11853761 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160860304 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120914058 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094975507 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120756247 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114926443 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248939337 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195200653 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122180061 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214572549 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175283567 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115736638 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171448512 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116763052 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167109543 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094149114 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118713433 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087046271 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771117089 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120832289 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093501623 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113942005 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190972123 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085103144 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085614005 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107682818 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082152558 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8045388 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088034856 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106081125 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087169006 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115950706 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093472114 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114131594 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089820421 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181917602 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207296728 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118772615 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091297321 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.1084508 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159321656 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109760795 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086388357 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085329464 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108928233 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095148274 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112055755 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087369046 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167435469 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18060806 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.197193111 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575647639 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084831138 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107203903 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207034829 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107480434 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.302261561 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094146814 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22352819 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164600182 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082392021 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.338282563 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165281462 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.192819003 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111076466 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170589173 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082520231 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114367622 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162495105 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084521098 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115068141 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157864297 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123968941 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09799027 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.140209078 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10797532 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224270117 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082641335 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167952108 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11063039 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09616447 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306765508 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084967577 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128705554 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158705302 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112664006 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086105118 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.758990848 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085861654 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117234873 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095021048 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22194918 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162517351 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115534836 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093005367 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119360907 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159708884 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207752391 seconds)
  done (took 43.036991873 seconds)
done (took 58.106598911 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298323376 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.252349607 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.245793484 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185820962 seconds)
  done (took 1.957462572 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172865164 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.123869238 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141747917 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104985701 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.126285282 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.105535122 seconds)
  done (took 1.678998583 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.40835771 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.330333472 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.279102529 seconds)
  done (took 1.920892849 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.242615834 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.26292683 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.316386262 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.392243344 seconds)
  done (took 2.223224064 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199060354 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097447323 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119133579 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110609081 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163884761 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.202218832 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136338598 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.14683495 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103969353 seconds)
  done (took 2.230049181 seconds)
done (took 10.916569656 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.210683165 seconds)
    (2/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.289059709 seconds)
    (3/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.15586113 seconds)
    (4/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.133727535 seconds)
    (5/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.252817751 seconds)
    (6/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119420865 seconds)
    (7/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.259247113 seconds)
    (8/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120078696 seconds)
    (9/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.223463964 seconds)
    (10/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.203080898 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.113399259 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098299388 seconds)
    (13/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.219138192 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113283232 seconds)
    (15/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113073895 seconds)
    (16/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185025787 seconds)
    (17/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.190918918 seconds)
    (18/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098755257 seconds)
    (19/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121476407 seconds)
    (20/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.226910738 seconds)
    (21/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093338811 seconds)
    (22/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219919217 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121696307 seconds)
    (24/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.220097747 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11484275 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.196261618 seconds)
    (27/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118540074 seconds)
    (28/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.238685537 seconds)
    (29/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.243585408 seconds)
    (30/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.172617996 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.189018131 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.22685363 seconds)
    (33/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.155920671 seconds)
    (34/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131880412 seconds)
    (35/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.20481374 seconds)
    (36/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.187710249 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117268868 seconds)
    (38/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099267669 seconds)
    (39/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.145044574 seconds)
    (40/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.20737477 seconds)
    (41/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.226144691 seconds)
    (42/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097542701 seconds)
    (43/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111427852 seconds)
    (44/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.073532193 seconds)
    (45/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.097514115 seconds)
    (46/286) benchmarking ("sort", BigInt, true)...
    done (took 0.238878042 seconds)
    (47/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.199193427 seconds)
    (48/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.17558823 seconds)
    (49/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.161444828 seconds)
    (50/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.100782585 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.139025072 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089750382 seconds)
    (53/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.195713241 seconds)
    (54/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.133363113 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091427977 seconds)
    (56/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.184582875 seconds)
    (57/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082149457 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134963991 seconds)
    (59/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.22041416 seconds)
    (60/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09115829 seconds)
    (61/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.178691637 seconds)
    (62/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.096084273 seconds)
    (63/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091890723 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.107823851 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11487877 seconds)
    (66/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.09399613 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.116297365 seconds)
    (68/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.121312935 seconds)
    (69/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.070728614 seconds)
    (70/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.096685521 seconds)
    (71/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09251685 seconds)
    (72/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.114774216 seconds)
    (73/286) benchmarking ("sort", Float64, true)...
    done (took 0.234347072 seconds)
    (74/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109638104 seconds)
    (75/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.161835478 seconds)
    (76/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.181703543 seconds)
    (77/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089335531 seconds)
    (78/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.139203472 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.083450433 seconds)
    (80/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.07868601 seconds)
    (81/286) benchmarking ("sort", Int8, false)...
    done (took 0.209858202 seconds)
    (82/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097469293 seconds)
    (83/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120000602 seconds)
    (84/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098163178 seconds)
    (85/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.215213499 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112446454 seconds)
    (87/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.167602973 seconds)
    (88/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.19350539 seconds)
    (89/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.188263351 seconds)
    (90/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.179110475 seconds)
    (91/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.109032414 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.18962771 seconds)
    (93/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.215442527 seconds)
    (94/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121399215 seconds)
    (95/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.083636312 seconds)
    (96/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.070586042 seconds)
    (97/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.194557845 seconds)
    (98/286) benchmarking ("sort", Float32, true)...
    done (took 0.234571104 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.113196957 seconds)
    (100/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185692963 seconds)
    (101/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.09755346 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088517868 seconds)
    (103/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.117898895 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088119064 seconds)
    (105/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136007557 seconds)
    (106/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074611223 seconds)
    (107/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095425612 seconds)
    (108/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074530939 seconds)
    (109/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.196215005 seconds)
    (110/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122478546 seconds)
    (111/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.133217525 seconds)
    (112/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.114176336 seconds)
    (113/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070892854 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119951582 seconds)
    (115/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.159566513 seconds)
    (116/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.156018741 seconds)
    (117/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.071191306 seconds)
    (118/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.132626666 seconds)
    (119/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076867448 seconds)
    (120/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.11049548 seconds)
    (121/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092940198 seconds)
    (122/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.176994689 seconds)
    (123/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.109561328 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090415096 seconds)
    (125/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.069842273 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 0.179329905 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.1195474 seconds)
    (128/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110805573 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.113284644 seconds)
    (130/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.156715269 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089404385 seconds)
    (132/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.105870924 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095375202 seconds)
    (134/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.102766817 seconds)
    (135/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097086306 seconds)
    (136/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.095683393 seconds)
    (137/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.08724967 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093435665 seconds)
    (139/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.183275171 seconds)
    (140/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.095394549 seconds)
    (141/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072901798 seconds)
    (142/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.109095589 seconds)
    (143/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090080976 seconds)
    (144/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118610448 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084005524 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.090806943 seconds)
    (147/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111245076 seconds)
    (148/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.088070764 seconds)
    (149/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.189133504 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.096732254 seconds)
    (151/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.194431848 seconds)
    (152/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107755182 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.099472498 seconds)
    (154/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.106200701 seconds)
    (155/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.07463796 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119360602 seconds)
    (157/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086429607 seconds)
    (158/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114424817 seconds)
    (159/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074655588 seconds)
    (160/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.097139173 seconds)
    (161/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116186942 seconds)
    (162/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088738418 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123253823 seconds)
    (164/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.072595169 seconds)
    (165/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.094068999 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090011686 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131449086 seconds)
    (168/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170149754 seconds)
    (169/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.135075846 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.116190491 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.144514018 seconds)
    (172/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.089082487 seconds)
    (173/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.095739663 seconds)
    (174/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074722897 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.130273191 seconds)
    (176/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075114121 seconds)
    (177/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080792701 seconds)
    (178/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164526775 seconds)
    (179/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.072097811 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113862578 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.087439264 seconds)
    (182/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.098412236 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091789635 seconds)
    (184/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112828429 seconds)
    (185/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.084537733 seconds)
    (186/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072219741 seconds)
    (187/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.119674049 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120570524 seconds)
    (189/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.087902925 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089762285 seconds)
    (191/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.094902919 seconds)
    (192/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074975899 seconds)
    (193/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.107185597 seconds)
    (194/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.088724054 seconds)
    (195/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116530684 seconds)
    (196/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09237582 seconds)
    (197/286) benchmarking ("sort", Bool, true)...
    done (took 0.227319315 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111169683 seconds)
    (199/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.110338913 seconds)
    (200/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.101452035 seconds)
    (201/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.089035018 seconds)
    (202/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116024662 seconds)
    (203/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168200839 seconds)
    (204/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.097566919 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098459905 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120732743 seconds)
    (207/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091280016 seconds)
    (208/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.094819158 seconds)
    (209/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.109392708 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113713353 seconds)
    (211/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.071894861 seconds)
    (212/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.09550657 seconds)
    (213/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.08834235 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108775095 seconds)
    (215/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155116558 seconds)
    (216/286) benchmarking ("sort", Float32, false)...
    done (took 0.171296252 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.074711849 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110535789 seconds)
    (219/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.074583063 seconds)
    (220/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.096343552 seconds)
    (221/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.0729848 seconds)
    (222/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.113452522 seconds)
    (223/286) benchmarking ("sort", Int8, true)...
    done (took 0.20204963 seconds)
    (224/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.096040588 seconds)
    (225/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088632389 seconds)
    (226/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.096243019 seconds)
    (227/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.170151011 seconds)
    (228/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.083429646 seconds)
    (229/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071908238 seconds)
    (230/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.094712778 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077547696 seconds)
    (232/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.096305392 seconds)
    (233/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090613194 seconds)
    (234/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11364946 seconds)
    (235/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.131610329 seconds)
    (236/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.095053146 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08424038 seconds)
    (238/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.087939901 seconds)
    (239/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111775399 seconds)
    (240/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086217921 seconds)
    (241/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114330791 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101937378 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115528459 seconds)
    (244/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092448489 seconds)
    (245/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.131994131 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121979372 seconds)
    (247/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.131786358 seconds)
    (248/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.080064694 seconds)
    (249/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107846698 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.075144288 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113652853 seconds)
    (252/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192781433 seconds)
    (253/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.071090486 seconds)
    (254/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.072829532 seconds)
    (255/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.09479227 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089696577 seconds)
    (257/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119148341 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091867439 seconds)
    (259/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.11025164 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093147573 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107621128 seconds)
    (262/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089376462 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107433293 seconds)
    (264/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076141667 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121051314 seconds)
    (266/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085057454 seconds)
    (267/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.120948344 seconds)
    (268/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08698559 seconds)
    (269/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.119547879 seconds)
    (270/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104701837 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.109721525 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090870495 seconds)
    (273/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.108768203 seconds)
    (274/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092011758 seconds)
    (275/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113825178 seconds)
    (276/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09228542 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.132004741 seconds)
    (278/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072210406 seconds)
    (279/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.072734689 seconds)
    (280/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.09835261 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.113555995 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.110474916 seconds)
    (283/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072573842 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.098154032 seconds)
    (285/286) benchmarking ("sort", Float64, false)...
    done (took 0.144425305 seconds)
    (286/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108012194 seconds)
  done (took 36.353630459 seconds)
done (took 37.268935927 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097023758 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148725292 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.093681638 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136851363 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097286554 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.122821808 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092815075 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.119764455 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.09654191 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.122424461 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095358468 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102772517 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094007902 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118572791 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09486146 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139107314 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097600355 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.114092624 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.086428942 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110249926 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.086211874 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110709947 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.08912157 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.10251932 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094761933 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.11644141 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089380194 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118863051 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087464389 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109369422 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085349291 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090147191 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.108667898 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097265847 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.113685679 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087329519 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.118979936 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.0936686 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112389777 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08703145 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11610389 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087154538 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113792464 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09128499 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.110608978 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085740231 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086643747 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121472978 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13971023 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087446936 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091680096 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119014185 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093557893 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116084243 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085222821 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.110498615 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.086964813 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138529128 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.086755189 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111854536 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.091139645 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.114951214 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085357387 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110700664 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087454913 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116747088 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095152812 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110076752 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093225194 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.089390113 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.107007688 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.087383831 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.108956265 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.085183279 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.1166113 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.093925601 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.10654068 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087863791 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089926869 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114297259 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085841025 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109261529 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090169548 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111544509 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085547231 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102403927 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.08529605 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113169774 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086333295 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087080661 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113279508 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089943377 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112231379 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094112268 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109721313 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.087058458 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111435134 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087791562 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112819701 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085876244 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.107151234 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085561877 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090853658 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.108466498 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.088507162 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.120653881 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085802043 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.113995721 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086528226 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111097673 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100424859 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117626343 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.0870832 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112645598 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.083712303 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.113874408 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08495866 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.085223246 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.108606271 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086779765 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11262151 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087840246 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109487839 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.089760474 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.121769422 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.100625121 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.109913783 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08594825 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087246139 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114133736 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.086866001 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.109523234 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.086912022 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105662742 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085898139 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108399376 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090123925 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108791861 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086709424 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08748554 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.111042657 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088876677 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111511751 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.087744345 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108229757 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081111494 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114599095 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084857928 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087880322 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111750953 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086051427 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.107069721 seconds)
done (took 16.310743291 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094874422 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18563066 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145287177 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148188417 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.119916512 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.12894213 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123806091 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118305593 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.121180294 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140524272 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.114564909 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133852695 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148228942 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.094905045 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129301707 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.117938945 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092979154 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129473104 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127020745 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138276111 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143974632 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.094599274 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.140182742 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138354319 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093555782 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.140113278 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121333992 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093549757 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122381493 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110819715 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134282734 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122289589 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.09699751 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130596463 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100958527 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118288137 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.104683749 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114384439 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094360106 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.118990572 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.131715737 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106869819 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117112101 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.10063636 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118705151 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122243766 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093101757 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11731004 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094989092 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113665806 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099850879 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138671813 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092103293 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120973393 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119057603 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094125364 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120692674 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.096849723 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.12219252 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097054699 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.1196577 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097322806 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124129123 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.136858858 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093009553 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120229939 seconds)
  done (took 8.756164885 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108250768 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14592701 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.12753656 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.100917716 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.123931608 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082841241 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082376314 seconds)
  done (took 1.742167283 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085225103 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137649347 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116137412 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140856715 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.10778548 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.144879396 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125703953 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085142544 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133476257 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094493366 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137078658 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163190876 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085593127 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12148636 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118377677 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.110867195 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.1195262 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109612745 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09244009 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.144077982 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089174308 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130860222 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.12278179 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085906451 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.13113369 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.08683529 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174927815 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095270596 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109155375 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090360591 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114813026 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.177555405 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107308773 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120002975 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082205348 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13773301 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129297788 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089210443 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133216177 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.089782893 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13091945 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091360473 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117043434 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.089957141 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116898501 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100500147 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120603736 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093959631 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115591434 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112146294 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.120949503 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106989307 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111780633 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089234669 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.119060698 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092079524 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124032782 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090114784 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136909575 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09244407 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135047654 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13578781 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105240652 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137297716 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102267193 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.132506016 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.129954916 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.090687652 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091852512 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117838995 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136585555 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088919589 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.12065691 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09953519 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118488112 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111879765 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137228412 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090152229 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122161156 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089096241 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113569393 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08573344 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137266746 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089351162 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112269233 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102213378 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122481053 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.089468816 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114437168 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.107182894 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114588166 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.096461177 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120438715 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088435296 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125933384 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138352122 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.09565767 seconds)
  done (took 11.970959733 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.086629758 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086815253 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116990208 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087371991 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111822101 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.086644524 seconds)
  done (took 1.564680485 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115251694 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114828502 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101692249 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118460027 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128561062 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.136251766 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135331227 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096379373 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.130744138 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099509455 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135545117 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111223061 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142183732 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11813298 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110235443 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118395708 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.11043995 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115856403 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.099880595 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11511557 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.103244541 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118645664 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089237836 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133674601 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09455686 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119349534 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092985608 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127228045 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100828552 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12150608 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09295319 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119573569 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09340211 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121068076 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135117112 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09384745 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113908553 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.095447597 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118747581 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.09423669 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137096583 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09054198 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125673262 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095490341 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123143867 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.094130898 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121479061 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093429559 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135214388 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095923349 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121888983 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.092481227 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120440608 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096312337 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119024873 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095819928 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121222854 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110444644 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118171412 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.118399758 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090244019 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094634117 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121216189 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119808289 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095841171 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121333033 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.092892293 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114209503 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090558956 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.092374541 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121317941 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.089961942 seconds)
  done (took 8.994762285 seconds)
done (took 33.996771591 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669933354 seconds)
  done (took 1.652529132 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.816215099 seconds)
  done (took 1.799777656 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.595490186 seconds)
  done (took 18.603884687 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.459561027 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.553463456 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.966074481 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159374483 seconds)
  done (took 3.121932506 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.943031376 seconds)
  done (took 1.944528763 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.290654814 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233695751 seconds)
  done (took 1.512107843 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.807178491 seconds)
  done (took 1.805507338 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.489005662 seconds)
  done (took 2.483605518 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333544521 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16967727 seconds)
  done (took 1.505644411 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.561570408 seconds)
  done (took 1.564074931 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.291986746 seconds)
  done (took 16.294266519 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237791553 seconds)
  done (took 1.248639478 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290807977 seconds)
  done (took 1.291366955 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.573913268 seconds)
  done (took 4.575201267 seconds)
done (took 60.398083103 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09572709 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.10043501 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.126014634 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096318756 seconds)
  done (took 1.417141143 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101336859 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118958852 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.097842911 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118547365 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102285264 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12001537 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.092454668 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.163729183 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092894228 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.121285468 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.092959457 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119027228 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.095115976 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118649731 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091945586 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.121173489 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.095483887 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121221164 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.09505178 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120495899 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.091083982 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120377644 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.094704917 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118495814 seconds)
  done (took 3.637052897 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.096720498 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089941887 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118912907 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088965107 seconds)
  done (took 1.400591931 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100666618 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131176428 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106139361 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125652299 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.105348909 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132664289 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.088910592 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114909089 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.090949104 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125290429 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090493345 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.136550471 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105027163 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.111634044 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.09987519 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112948162 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086499908 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132691273 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098226492 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126625921 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088383912 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124941164 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.097196877 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129991674 seconds)
  done (took 3.675456372 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170726248 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128096748 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138226024 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094965896 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163879744 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.114773174 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114172857 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140929833 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087876243 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126713033 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092437975 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167857315 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.097585809 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117270668 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089743862 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.121670107 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.09755469 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.125511067 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090848192 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129060164 seconds)
  done (took 3.420501033 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096251993 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115919874 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.085891078 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087105367 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122941088 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091340544 seconds)
  done (took 1.613106124 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.086007255 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085279479 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.110768677 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084738155 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.1158435 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085115741 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082889988 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111338697 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084172565 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.084329603 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.110443455 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082715054 seconds)
  done (took 2.140728022 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.37069286 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114450924 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.090890517 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113591936 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.092765404 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114681069 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101609486 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.115007249 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117054609 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.115278382 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086820162 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.117463833 seconds)
  done (took 2.570230929 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20177282 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09355536 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258559378 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347712497 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153064009 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161572512 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277041983 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161134194 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181635139 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135308221 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191053733 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125717699 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150350575 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175244329 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137028277 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.173764344 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171464592 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195899188 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118343767 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225938382 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158959394 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13633679 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174590204 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148322156 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13444173 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154537926 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09038763 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125196041 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168371519 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166163707 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170138709 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145741495 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109412301 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196428582 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230400235 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177440757 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298217561 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129253247 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.183731746 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.181152718 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225076341 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139526817 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193097276 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153434966 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099946219 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178263083 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154632898 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177471205 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129323303 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110240913 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209563764 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17324447 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175904689 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105723359 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325545758 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119192923 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143771307 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180020117 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182905543 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187556416 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165266733 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.091156566 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209313902 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176574484 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176432045 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114865377 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163708247 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123140547 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170906386 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192035288 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174778649 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161654572 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180900946 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131678157 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161522615 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166612399 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150254675 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146228188 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157690469 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119940858 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14608334 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108122374 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126076368 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157173134 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121003652 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19994282 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133753184 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.186223238 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198696411 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15580868 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130312583 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160661202 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16139518 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144510049 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.089667474 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143814646 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159713568 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154678659 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102535772 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154650588 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141410836 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125466566 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12193169 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121626246 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156531168 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104354504 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163743518 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161111834 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.098625202 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160782048 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148257137 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154999771 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166344678 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18240871 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102449778 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130403945 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190337214 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155919821 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104222914 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171018156 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181606368 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.163477302 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135549282 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164613308 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189860313 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139865365 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186411241 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110101893 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130813906 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.148198691 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155412489 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125473893 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154430733 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127493716 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.149459304 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188399281 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.096419031 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135278741 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171031735 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096514124 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12776271 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112107624 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133222335 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140131447 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.116900766 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133899545 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155326045 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157263367 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148693869 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129294051 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139038298 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184292096 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131133514 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.157051733 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117133304 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117998656 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.176083895 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182066138 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098021713 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220976867 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165321575 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192273386 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162162032 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101224451 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173362259 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12693663 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088574005 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161052191 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158438525 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15972259 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179854894 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189858598 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162854898 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150672903 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146878008 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163265814 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.171751209 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151523611 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114354035 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15925371 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156826227 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092314561 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122330966 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123790459 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112009738 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128422655 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100600191 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176115021 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161313561 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210533113 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130718126 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138959688 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177855332 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123560605 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160379552 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.168835736 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108578642 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180994526 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1770707 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165132695 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13941329 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171153515 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089900493 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121583116 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102262547 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161759156 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131303979 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102995567 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142175203 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178284781 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17011695 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14819075 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197319055 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161290225 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188682265 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120555953 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.135413008 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166969914 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154683785 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18204231 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105597301 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15509887 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173802629 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139704544 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18606967 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159565702 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164612695 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19587651 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154316614 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098623559 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147995396 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163671179 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139271778 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133910672 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143302486 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133733938 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151684674 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102731818 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124161324 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177193822 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113054083 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204405405 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124918807 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198376466 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095935839 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140290946 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157005644 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114888785 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114819606 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165982049 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183385834 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141903392 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15511582 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170225499 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100434216 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307032741 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183630858 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179848028 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134077215 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140224431 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129985628 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156335124 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160213666 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176432349 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141028185 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175274964 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126719008 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139987836 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133923158 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115687183 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147221751 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.148815505 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129064409 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121856199 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141527383 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178528109 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140876583 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154751661 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132785037 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144817919 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147665366 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111709988 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195292732 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154876783 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174071409 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153549551 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164266169 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19352612 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12304426 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097834811 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124845007 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176022109 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101618585 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159354678 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.181595068 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191418156 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154030205 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162375952 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136675001 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.089762806 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156652213 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146684273 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19392547 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137096472 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105233693 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213382859 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119448198 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128626901 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160551064 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278282884 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113076092 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170819409 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115148151 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275537988 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094868751 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126928213 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156087197 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165172197 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10582311 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179391735 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161015993 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113225247 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158573895 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136394846 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184972157 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199787665 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165097824 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171833773 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14121665 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154947997 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160424665 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173323261 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112057014 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141958662 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160826539 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178898172 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.184617102 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1026355 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160194305 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160439628 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155577693 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170347423 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131195902 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196462904 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100204843 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160814517 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139149451 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120575369 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126177467 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.182513091 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128501363 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172331547 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154890949 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101556346 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125190779 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148565042 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157414301 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10992654 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127838937 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174949692 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094179308 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160153617 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177484565 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127994194 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12331129 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144379644 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135328005 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111261611 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144691467 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133467821 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140387803 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178096755 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131513699 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173180784 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172801404 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160253813 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15653882 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113033077 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664616053 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.09594033 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177740721 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142858057 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180710688 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146115259 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164798276 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157173137 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11800764 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16414015 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147690335 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219390212 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163435162 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155462888 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100480559 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144111295 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11140739 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.12899684 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149065307 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159920817 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107863217 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135906979 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15496314 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112927516 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14158286 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135054673 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178487479 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114348414 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178183456 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17615656 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135742474 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164236268 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172420315 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098022967 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156886642 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167807124 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14078576 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148651927 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.09929901 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132763943 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177753264 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092746127 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15820723 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157856243 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157405047 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159367507 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102595204 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15772181 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14022933 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156849868 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098897066 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152003014 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154375939 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103186075 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126415 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151825359 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127997867 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155332211 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12424555 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140686503 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17671938 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122208533 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101373393 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283827351 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152233228 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188529366 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.150254218 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102956268 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14178851 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146137017 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149235522 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128310658 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126710762 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100151368 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129142794 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.180227084 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.150700823 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124202977 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179976509 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157723468 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195689373 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.1341621 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.263283146 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106316922 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15193972 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.126881608 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.098500533 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140730746 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101642353 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141387504 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187672124 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174573299 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149772857 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.140440269 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094945741 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126230577 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100844382 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158852782 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151975158 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15546487 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110144004 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.115213101 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140999244 seconds)
  done (took 74.133825195 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142513971 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129487138 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145061727 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.19220663 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163231246 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23882891 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202488974 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222907083 seconds)
  done (took 2.531263184 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.098575015 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.1553709 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.136531701 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121087985 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.088271115 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.327413523 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.136157522 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121296798 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.115146785 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.134137618 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.114608968 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.522489213 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121368792 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.093204041 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.109733634 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.112288033 seconds)
  done (took 3.601483576 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.26524103 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533113293 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.030890527 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.22705129 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.220733241 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.170655221 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.728548101 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.179432838 seconds)
  done (took 12.457134517 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118749635 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.109626787 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.161146703 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.159635406 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116641338 seconds)
  done (took 1.773996669 seconds)
done (took 115.373872601 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093362507 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095293393 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121624982 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.097255645 seconds)
  done (took 1.50205393 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107582374 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078105334 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109558889 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077341091 seconds)
  done (took 1.482054159 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.420378561 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.076710201 seconds)
  done (took 1.63745625 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112686242 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131108507 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104199727 seconds)
  done (took 1.461921154 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100192728 seconds)
  done (took 1.211374057 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094036139 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096006241 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138341475 seconds)
  done (took 1.439514951 seconds)
done (took 9.842828205 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109396196 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.433046321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382414417 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1351347 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.68942039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405327886 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.06631994 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15311976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164322024 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087146477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134553494 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667270794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.037377502 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.34340297 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.028639067 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.338985594 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699746544 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090483946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123230536 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.08981381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.075301088 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086931552 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118305784 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090289587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668939165 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420499388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088100183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.380310821 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087507269 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12189215 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374425454 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117389447 seconds)
  done (took 16.90745529 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.092556027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175595839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096090162 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118841819 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092410763 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117589057 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098222901 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.130017427 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178604184 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087800994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13466945 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087981396 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093103163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118482807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107760964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116729132 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091426521 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119375208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094587605 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118636488 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108014016 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116569454 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09014378 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089390324 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116218155 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101731973 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118754816 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100568112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.1174175 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094126227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120531772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089426398 seconds)
  done (took 4.640084945 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137274924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186086411 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095480059 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151566893 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.165434866 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.08946611 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199566026 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155950521 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180442952 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087912441 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136261997 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087976869 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153496673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088094809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138103032 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087826755 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119472243 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091174373 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123863594 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090699977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136547959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08795667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119327433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089943592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088302374 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130958967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087323854 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.129991858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088033544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123464331 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091445129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118051241 seconds)
  done (took 4.975683384 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096335482 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.096630291 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132990503 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133427062 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09086325 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.095460651 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.125166279 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.089746355 seconds)
  done (took 1.975690375 seconds)
done (took 29.608038534 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105823391 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094023633 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130399733 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100081973 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127659283 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101359045 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115912086 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098375316 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.128654514 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096449418 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103828624 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116232259 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.088830508 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115449253 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.100471663 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092461626 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132628675 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097869008 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.138346706 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.104050156 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.119196741 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099541698 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126928858 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.108290922 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137440838 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109212055 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133975382 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094941041 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118718317 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.088884184 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131511202 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11013197 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120395796 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10427181 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122083445 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092247136 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.089047873 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.120168617 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.103732487 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.128940862 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.0943406 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128516613 seconds)
  done (took 5.777913756 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115036093 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161562274 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.089046812 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.118876944 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.088926823 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.156443661 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.123407756 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.117790081 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.088972547 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.143505041 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.115435948 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.118760383 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.089093778 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.118537274 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.08795969 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.088520143 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.142268003 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.142905257 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.117529407 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.14899545 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.163872745 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.119859777 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.152983663 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.112311771 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.159346007 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.152501771 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.108831877 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.15489133 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.114856931 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.118104638 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.117257895 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.14993613 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.088561384 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.118043112 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.15911978 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.12371858 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.145521418 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.158520264 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.119267533 seconds)
  done (took 6.032329817 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097352115 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102819838 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138381241 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181559223 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125338938 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.12735372 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098865491 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13656747 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104542865 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118598824 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.089599816 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148182913 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107968754 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126070418 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090534251 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.10322475 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138321081 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090259471 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123341491 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107230454 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137217421 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10196133 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131831154 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099340221 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.119242581 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096279067 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121859113 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.103932326 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123592699 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095995966 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122788669 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093338036 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091785063 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129947128 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093333289 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126654731 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.110471964 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126255062 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097175579 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119464512 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100793704 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123189123 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.110075109 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.15729202 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089222332 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125487351 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095164411 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126404733 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.086862343 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136459587 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107835434 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.118142148 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.104251785 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118831658 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.08838808 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102934047 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.119462918 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.090829611 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126788024 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094875003 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137773267 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093110651 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133595737 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089012719 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124099226 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088600067 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088132115 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123493317 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.109705399 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121522174 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.157607972 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.089540586 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09428617 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125829497 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.093794908 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128136546 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088830125 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131382808 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098610008 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123965649 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.098911489 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091647949 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123463122 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106417984 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13395213 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095631339 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125012965 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.094685317 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123161653 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089119601 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132170651 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091948391 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12238789 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.10466207 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118481883 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091520378 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094459575 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123437834 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.087641012 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.1318301 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.094137526 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.118432465 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.099308332 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119098893 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093245623 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.127599931 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.0929734 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.087765006 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12429868 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094676727 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117867097 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09339774 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122750913 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091490759 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131030192 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.09591842 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.090571928 seconds)
  done (took 14.170536785 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231482637 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216131001 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188173509 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.297071155 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111040732 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145351827 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212113023 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.163174354 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089485811 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157933734 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178124237 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186190229 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175696816 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.189543305 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170638377 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088867314 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106924825 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.170293915 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21485133 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.293301402 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.107829754 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134767693 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161874042 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159663416 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107954975 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135516673 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111356568 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.140090296 seconds)
  done (took 5.78824338 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104648007 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156347756 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096349573 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144891388 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147136982 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090817926 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094399289 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.121269812 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102542322 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135974916 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09126213 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127578021 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.096177334 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131523794 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.089993633 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.130212716 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.100255976 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.130136147 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.09131479 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.123126301 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.103279435 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.13850239 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.094447869 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122953275 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105209105 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122131019 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.09193495 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141379797 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129178271 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115403212 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.115953063 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098335066 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.103146767 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119627451 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.091823598 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.123169354 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091525149 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.121832323 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091753897 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.086406572 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120133888 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.08002648 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122061626 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.104383555 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126451161 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087306713 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124701334 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.09405927 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126956927 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.08601433 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091595782 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123825349 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.094153138 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131121131 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.093938301 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127835761 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093496214 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091339296 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.128689563 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.092352446 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117904585 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092026959 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126320181 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094283936 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128100012 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094801403 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12182042 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091320028 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093781867 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126286403 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.092186513 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129113455 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.086917799 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121017523 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098599036 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129441355 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093188996 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091012536 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123877778 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.088941873 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.108818485 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088520788 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076790854 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124935455 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088959828 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122851337 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.091929949 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125133362 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105805464 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129548504 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096278845 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120161172 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091199084 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124879933 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087535855 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093330883 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137959902 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13977804 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089066979 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086768808 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.135943771 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090726382 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119549492 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081894862 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130080464 seconds)
  done (took 12.636877626 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129881221 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.170620215 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121005149 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.108788135 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155438062 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.13060371 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129413561 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096802202 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.122102345 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108441207 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.1237704 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098825063 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092344992 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134402151 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162172183 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099497703 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121113088 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104186927 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126581686 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.142913204 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140857143 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.159777945 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.129595952 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124045829 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095128836 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.156454283 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16385271 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103578957 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132776257 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131178579 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134800454 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.165837317 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.132132222 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125939269 seconds)
  done (took 5.527549626 seconds)
done (took 51.054784086 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.242596741 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.434649677 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.208682338 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.210297025 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.274778726 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.233499528 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.214307229 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.215826211 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.006641484 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.215084978 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.209047419 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.213571016 seconds)
done (took 27.819741057 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.264772097 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.567201898 seconds)
    (2/2) benchmarking "String"...
    done (took 1.543069978 seconds)
  done (took 4.249360663 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.211382452 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.210028784 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.456473907 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.210762137 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.226071538 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.210060399 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.215371989 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.219260042 seconds)
  done (took 15.883981374 seconds)
done (took 25.751240849 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.223092157 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.452349725 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.514149562 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.235181416 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.209464533 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.221070508 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.214363521 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.26270955 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.218010811 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.210311331 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.211953498 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.485672088 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.228867968 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.607268145 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.216905418 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.229070733 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.22946038 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.453542147 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.226188416 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.199473248 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.214646109 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.197295851 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.23584489 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.2297651 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.221916619 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.214165345 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.256676154 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.21143289 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.405831083 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.221433633 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.254333484 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.212618952 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.246982001 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.222677586 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.325944703 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.239970206 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.401813799 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.224445247 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.203650065 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.219905426 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.402614164 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.630235885 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.212821173 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.221639304 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.219221024 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.296430633 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.204051068 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.94081546 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.214640309 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.226004714 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.2715409 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.592273787 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.221349169 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.227411537 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.221729207 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.468232161 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.21724887 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.265923272 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.249599642 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.22342149 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.215246797 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.215022039 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.212976049 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.221899596 seconds)
  done (took 144.343006171 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.216179013 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.212055683 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.215449446 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.220153518 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.211636501 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.21520658 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.21579212 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.215167941 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.21540981 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.241481873 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.217604158 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.216204086 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.219590629 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.227043704 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.215269383 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.232176135 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.217853329 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.215511291 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.232345636 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.214422741 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.236512413 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.213410416 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.216788955 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.212734242 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.220538834 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.294137593 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.244936763 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.227247311 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.214992352 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.215473984 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.26206778 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.267757067 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.85119929 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.066983589 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.22685612 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.240130849 seconds)
  done (took 80.741796674 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.214469565 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.217643783 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.220052116 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.248447029 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.218258843 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.810763081 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816515336 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.944573844 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.390370305 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.641600006 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491746517 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.216740733 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314115433 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.231571977 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.2156975 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.220045358 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.234743488 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.244376196 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215958526 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.217812533 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.812673357 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.232954338 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.406660494 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.39329801 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.235614352 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254569805 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.61945343 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.218936585 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221976476 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254382074 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.5589676 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.2673782 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21937046 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.622614107 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.512947461 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331326348 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.218423035 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.251886836 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.222640683 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.221662737 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.503929673 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.218876889 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.221555192 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.219789635 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.222818523 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.876995626 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.217364763 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.799980228 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.219356402 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.162897123 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.216182406 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220118604 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.570201235 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.859040617 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.218363795 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.222141521 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.224823464 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.223724906 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222518414 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.254137358 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.561970285 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.319025577 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.22063234 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.226948671 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256244393 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.22211881 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.258141725 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.225175041 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.039150653 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.276134711 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.324513365 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80380599 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224326735 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322232509 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340487717 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.221243883 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.225243502 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226175164 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.224383109 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.337515282 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.220044858 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.640869391 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.396923173 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.235765961 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.604090077 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.32387727 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.221637787 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.614092756 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.225759688 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.223648941 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.969976101 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318851045 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.225363271 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.224790339 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223308225 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.643506419 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801577852 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.49053106 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.227436117 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.738097955 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.231313107 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.651105848 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.798029152 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.898886992 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.222376686 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340255402 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.396760321 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.238119775 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.224505108 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.612524299 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.226075872 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.286619681 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.221742246 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.624756081 seconds)
  done (took 368.846174293 seconds)
done (took 595.072081949 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.856279027 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.846023153 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.950472285 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.829721264 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.79568326 seconds)
  done (took 10.42786863 seconds)
done (took 11.575835285 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.415492358 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.9019908 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284175285 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412295894 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255246377 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.433386159 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392773622 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.246217347 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.329426375 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.304042947 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.328250591 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.275376922 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.258852915 seconds)
  done (took 18.99251654 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.576125447 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.224977777 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29269001 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.585627063 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265122969 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.554425095 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.447347006 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.242851084 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.446282023 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241690973 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239869853 seconds)
  done (took 18.269944767 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.569356632 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.22548292 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.292444431 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.599947544 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.264941205 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.554925261 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431674958 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.251670995 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430609476 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241253637 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239139752 seconds)
  done (took 18.25133795 seconds)
done (took 56.665332744 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.269003898 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.397631981 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.249726851 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.239684242 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.237154553 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.239284133 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.240204462 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.237711893 seconds)
  done (took 11.263243464 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.232560652 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.232689311 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.236179 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.234406562 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.233373136 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.234072469 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.231904752 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.237645234 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.234681461 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.236890106 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.237065698 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.232334559 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.230788009 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.232399929 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.234493107 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.232956672 seconds)
  done (took 20.895567918 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.234147131 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.232716939 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.233580101 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.23283347 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.232980662 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.233043468 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.234191597 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.233769983 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.234585787 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.232991629 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.233260911 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.232453812 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.232568732 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.231562586 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.23308033 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.23373171 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.235134514 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.235102199 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.240715178 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.232446298 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.232349841 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.234715654 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.231842609 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.233753692 seconds)
  done (took 30.764560719 seconds)
done (took 64.073815749 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.228594863 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.251117729 seconds)
  done (took 5.632038983 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.293753747 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.29678018 seconds)
  done (took 3.744463343 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.234942236 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.236396765 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.238182278 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.234710784 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.237067957 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.237650399 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.236590606 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.238113074 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.236272834 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.237991862 seconds)
  done (took 13.523538763 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.236985442 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.237368142 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.23351605 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.236126319 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.241777302 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.23390651 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.237634715 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.233842566 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.237062996 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.23522661 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.237170246 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.23397692 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.238889626 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.235095531 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.239573402 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.233896341 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.232805057 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.232470195 seconds)
  done (took 23.398874343 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.251603605 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.258490859 seconds)
  done (took 3.660626946 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.362082748 seconds)
    (2/7) benchmarking "second"...
    done (took 1.271599326 seconds)
    (3/7) benchmarking "month"...
    done (took 1.341237679 seconds)
    (4/7) benchmarking "year"...
    done (took 1.330589634 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.273463436 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.254672035 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.27835198 seconds)
  done (took 10.262584479 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.238843691 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.427726487 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.532329384 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.80798246 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.237572666 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.240421401 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.090134601 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.243571261 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.240162991 seconds)
  done (took 14.209884459 seconds)
done (took 75.587797553 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.230918698 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.24867844 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.264039543 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.238841982 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.576017094 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.236189619 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.230020842 seconds)
done (took 16.178709457 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.224038886 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.218499852 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.223217272 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.229686431 seconds)
  done (took 10.049466298 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.242267325 seconds)
    (2/2) benchmarking "read"...
    done (took 1.593570992 seconds)
  done (took 4.991029077 seconds)
done (took 16.192048047 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24139984 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.23696301 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.242581462 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.238633349 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.240002942 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.235016955 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.235345976 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.238740472 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.241033899 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.240465737 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.239851497 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234949514 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237824504 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235981479 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23660379 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.237757385 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239158177 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.23969425 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.238593755 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238894689 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.237254571 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240328226 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.237447669 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.238380797 seconds)
  done (took 30.875282072 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.242264442 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.237804076 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.243220543 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.241876597 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.236330209 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.240226996 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.242582335 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.238048731 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.240461509 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.241752893 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239198259 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.238740656 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.23945638 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.238929782 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241898778 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.239893213 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.240120823 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236745503 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240724449 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.240509207 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.242492808 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238133978 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23788438 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243555141 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.236151664 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240105458 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.241413932 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.239095908 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243203408 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.239526656 seconds)
  done (took 38.358912019 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.249226806 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.248027085 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.24117419 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.241509988 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.240322064 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.241766404 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.241288535 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.243828789 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.24242724 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.244377881 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.240582406 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.240116988 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.240678719 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.238924671 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.241066523 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241666984 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.243594106 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.24209886 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.243625903 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.240451931 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.242929598 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.241698383 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.240055874 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.243687173 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.237943164 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.23908759 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.238710975 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.241350643 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.24035628 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.240022854 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.242173728 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.241446471 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.241578847 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.242576225 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.240372635 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.240039928 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.246331902 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.248355784 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.240103743 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.241857683 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.239730961 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.243563116 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.238357689 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.243156547 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.239970786 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.240968561 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.24027804 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.243633222 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.242957083 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.242005631 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.241447686 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.243001981 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.24171377 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.242911901 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.243699212 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.24087946 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.23923201 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.240051411 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.239552483 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.241990243 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.241934808 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.242213498 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.243699976 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.242466796 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.242283786 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.2429738 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.243332961 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.242360643 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.242221463 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.242064523 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.240556552 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.242245932 seconds)
  done (took 90.574381447 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.240868833 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.240145859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.239916545 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240634719 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239857266 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.240535305 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.240877607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240662012 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237858141 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.240122879 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241621789 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239718888 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240127613 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241398326 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24367554 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.24098086 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.242162925 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242557992 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.242582733 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24220097 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241267018 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.240128459 seconds)
  done (took 28.458127487 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243480942 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247737733 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.239152931 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244197848 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241175948 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241865106 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.242182804 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.24239146 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242147337 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240839056 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237603617 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239621826 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240507219 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237391516 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237574086 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240125958 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240428501 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242298238 seconds)
  done (took 23.49931857 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236851146 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.23825964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.241337696 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239717505 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.238479149 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239848283 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239323836 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.24199911 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.241547041 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.238624411 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.243116665 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239088123 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.242648642 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238484305 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242796582 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240111679 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.242942343 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242230948 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242051118 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239705578 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238893349 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241189671 seconds)
  done (took 28.448408446 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241780193 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.244227582 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.241127182 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.241238438 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.238384683 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.242181689 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.24167515 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.240582038 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.247913279 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.240263954 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237132154 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.241419638 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.240175379 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.239237939 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.239352076 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235739499 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.243751611 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.24016767 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242112053 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.237138292 seconds)
  done (took 25.973872866 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239872757 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240541102 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244413981 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244900631 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24389594 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242795112 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242228845 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.241539683 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242512067 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243065573 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243241366 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.246368516 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239267603 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241499258 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240726864 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241661861 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242872255 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242490516 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240946453 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244629146 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.24073167 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242638244 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242437496 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243390587 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242881539 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242420412 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24225462 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243572022 seconds)
  done (took 35.947002121 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240837284 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242238452 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238222913 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.23832593 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.240292389 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.238526397 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.241204458 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.240583744 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.242802963 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238555071 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.240430153 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.240050685 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241902588 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.241722372 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242057093 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.243113738 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242836067 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.238514352 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238262945 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237738372 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.24314903 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24076488 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.239257875 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238964251 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239323266 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.241955163 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238334029 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239215035 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242059294 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238869254 seconds)
  done (took 38.370634495 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.282377674 seconds)
    (2/2) benchmarking "in"...
    done (took 1.284216058 seconds)
  done (took 3.726365297 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.236323764 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239834032 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.240981542 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237952099 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23774975 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242084571 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241965192 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23783679 seconds)
  done (took 11.074504619 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.240504608 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.243263196 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.242498336 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.241212186 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.241901426 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.241715464 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248720066 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259020011 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.241034941 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.242675226 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248781865 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.249781662 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.244599967 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241739722 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.242556627 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244219719 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.244106731 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.241642299 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.241115591 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.242806426 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243629068 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245343711 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247484266 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241467354 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.242984764 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.252893443 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.24616793 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.241258094 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241937744 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.246334667 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.241592002 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.238882473 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.243441448 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.242334925 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.242454826 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.24248519 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250577226 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262265537 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.250324372 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244748778 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245512391 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.239936359 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.243209892 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.244239211 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245863518 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.244556132 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.243907714 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.240853391 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241975542 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.246377333 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.249746433 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24437699 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.242990785 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24641449 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.246006909 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252804183 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.262655668 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.247220149 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.252865866 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.255978499 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254785723 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.250342624 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247859196 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.247961066 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253255202 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.265904946 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253742347 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.259088656 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.243067561 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.244608024 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.250763064 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259473814 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.269509567 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.245963964 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243656754 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.2449933 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247353773 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247335742 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253742393 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.263802573 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.245669596 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247212242 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254683163 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2654972 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.24572448 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.246296354 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.246492158 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.24745574 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.245723138 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257424143 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.264391131 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.246555575 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.246520061 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.248997706 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.247228188 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.248840336 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.245304749 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248764127 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.244148951 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.247360717 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247709567 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250582837 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.253543284 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247534687 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24562276 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.253920624 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.244582557 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249229993 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.254856181 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.246900391 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246184913 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.25182572 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252789916 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.245616471 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251401441 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.254369695 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.248592614 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.25078451 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.247754712 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.249938193 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257765642 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272714876 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.248017847 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.246636189 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.252961058 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.257545567 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247660361 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.251100197 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.249361284 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.246312915 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.246300178 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.252487947 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248689836 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.251893189 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250901043 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251237943 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.245616244 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.249079412 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.250167625 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.251119335 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.250991022 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.250149513 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.25135742 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.253612433 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.252135968 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.251816802 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.257472158 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.249863136 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.251035676 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.249926369 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.248403093 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25054818 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.252153479 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.250950316 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.250727672 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252378469 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.250653052 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.249359904 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250666926 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.252908167 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252097612 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.252121831 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254421649 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.252141737 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.255586179 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.249773787 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.249501873 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.250987263 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.249436675 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.251178385 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.251357799 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.250095397 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.253815913 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.258415938 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.252800791 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.251315524 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.254727323 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252120029 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25306663 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252579 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.254619864 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.257980707 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.251519941 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.258238009 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.253042917 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251663414 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.252104726 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.253828843 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.251428748 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254008343 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.256676652 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.258216654 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265458227 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275390324 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.254291502 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.257289188 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.255359823 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.254636648 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.255423821 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.253449176 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253194048 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255105184 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253272679 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25456172 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252788518 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.253740272 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.253044118 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255479846 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.253775281 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.255924707 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254973903 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255060089 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256297783 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.252565508 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256720018 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256120437 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.252533008 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.252211193 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.2542645 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.255012941 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.256043301 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.255675044 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.261559048 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.252725533 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256353856 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25698697 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.252557502 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.254870392 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.256003741 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257275019 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.255423299 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263287128 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272298455 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.255259193 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262395624 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.273797724 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253902327 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.256990484 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.255307937 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252306503 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.258618739 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.264917211 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255597991 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.256537624 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.256386812 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256185692 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257267824 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.261573981 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254839698 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.255766199 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256649118 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.256903411 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.254220754 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.257023322 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.257158637 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.257977026 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258656101 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256559584 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.25719263 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258159988 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.258400379 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.256050664 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.258055805 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259519396 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.265955523 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.260931243 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.257822039 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258784818 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.258301147 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261837303 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.257812743 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.257185306 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.257997974 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269358205 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281443977 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263953503 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.260173913 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.258790706 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261856617 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.260678045 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.260150069 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257856426 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258111168 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.257705178 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.258281526 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.256234652 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260218338 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.257969982 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258929607 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.260105958 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.261270401 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.259013228 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.257252669 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.259365595 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.260464038 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259245547 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.259233796 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.26177043 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260736561 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260263511 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258678163 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259661435 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267442382 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277763762 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.2604504 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.260991669 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.260692259 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.260833509 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259515227 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.258742893 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.262087862 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.267130543 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.262734135 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.26677582 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.261581866 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269588205 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.262104174 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.261908857 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.268359363 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.257252718 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260385249 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.260122801 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.262417324 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268263698 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.278997052 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.262828345 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.265182974 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261840797 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262589381 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.26238113 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.261930452 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26312564 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.261705111 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267854673 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.281195286 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.265279789 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263833554 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.258243035 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.262310927 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261075842 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.261201559 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265640043 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.262983752 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.262477238 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.261955615 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.262027227 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262909572 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.260305712 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.261718667 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.259553208 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.262104538 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269453885 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.281798665 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266624272 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.263996818 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.271394584 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266295301 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270950633 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281643946 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.262683649 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.264610668 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.264050371 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.26449691 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.264370028 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.265435463 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264570855 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.265901428 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.26721088 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.262519676 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.265825072 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.265234785 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.265421885 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.264517278 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275364914 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284386072 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.266904024 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269501315 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.262309265 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265027868 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.270192888 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.265213028 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264145668 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268237872 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275151561 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27196495 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.266650297 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.265275545 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2652823 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264898362 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.265723671 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.267118299 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.26485734 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.265300418 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.265624682 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.264912484 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269098207 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263607863 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.267628918 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265963486 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267700825 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274098236 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.266366285 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.266785869 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265203323 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.267367137 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266569607 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.266256808 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.266644786 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267315104 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269042243 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.267752657 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274062148 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.272306894 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.269472383 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.267513878 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.268426411 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.268089156 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.268359048 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268238608 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.268286728 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267343216 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.269052375 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.2667273 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.268345565 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265132197 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266935745 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.267431037 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266672701 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271957016 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.275774868 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269735284 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.266180307 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.268687416 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270273477 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266536632 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269476862 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274695117 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272926636 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.27919456 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.275905938 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.272674137 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.268166266 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272133209 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.277318256 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.269783534 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.27046176 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.271330372 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.269137079 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.269848643 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.271085462 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271181565 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.273958737 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.272268544 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269780388 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279561837 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.292600435 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270563382 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.272324639 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275930927 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.27117342 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.270358371 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.271489665 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.272201958 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279000353 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.288033454 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269898824 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274301661 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.269897627 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.272562374 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276275549 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270939639 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.270838805 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.267480483 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.273371043 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271281888 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273287997 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.270618387 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.270866788 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.272967881 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.275985413 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278361273 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.270399808 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272586239 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.272002942 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.272232506 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273032546 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271584582 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.271030548 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.270243527 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.270501407 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272279915 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.273349392 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.276595673 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.273080633 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.274241872 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.274709087 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274207277 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278283353 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.283101518 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.279443245 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.27212304 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.271665993 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.272522439 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.273702984 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273732892 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272628637 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271884962 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.275315776 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.272692793 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272681547 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272802235 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.276453599 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289375919 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.294483576 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275166064 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.276846686 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27641199 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273435247 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.27279654 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.272794115 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.274501591 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.275884767 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.281882015 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.273546869 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281937517 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293812641 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.276398882 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280290962 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277498172 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.28158587 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.277398259 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274954333 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.277161237 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.280049421 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290113244 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277368824 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284726767 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30378793 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.293266171 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.279050144 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.275546627 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276922533 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.277568481 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.278176826 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.276925484 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.277361678 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27753713 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.27826574 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.279235097 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283509192 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.278281027 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.278928101 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.277700724 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.277928173 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.278521824 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.275737494 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278532877 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.276558032 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275942641 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27665268 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278704994 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.277145269 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288626692 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.301396257 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.278278273 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.279898658 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.274783552 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280878423 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280798972 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28808694 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.285856038 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.279072692 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.276579866 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.278521452 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278899766 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.277419016 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.278685271 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.277871301 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278050891 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.276194842 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.290264646 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286257997 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.283357647 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.278337714 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278857872 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.280835219 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28099564 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280557273 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280187768 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278464401 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.281008972 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282216084 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.27931672 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.27960332 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.280472009 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.287426869 seconds)
  done (took 753.515709204 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2773472 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27639449 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275484647 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277251409 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279372629 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27800911 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27729996 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278376524 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278016848 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278120499 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278675602 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27857018 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277414418 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279103503 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277123758 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278756394 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276967202 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278256296 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275524441 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278094728 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27935119 seconds)
  done (took 28.0265715 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.280520281 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.278188166 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277659329 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284060384 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278230846 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.280595024 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.27865451 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28221458 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280703604 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279746473 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.283172341 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283380352 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.279465585 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.277541516 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280082871 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281854233 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.283878545 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280014555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.284129425 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280896602 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282581423 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278324521 seconds)
  done (took 29.37232893 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.284315179 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.282974776 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.281789162 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.281878572 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.283134804 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.281527164 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.282894373 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.286168545 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282326639 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.282775149 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.281722129 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.284779285 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.289419721 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.286848948 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.285610224 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.284315676 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.284050838 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.284466195 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286708527 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.283202696 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289240545 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.282249728 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.281133637 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.283035831 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285247006 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.285222203 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.284438725 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.284607899 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.285414872 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288420457 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.285268716 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.282416124 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.287284219 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.284996119 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.28683489 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.289433549 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.285568388 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.28419734 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.285153417 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.292831294 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.304011773 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.285599479 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.291752887 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.284318032 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.285182281 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.285962123 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.29483116 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.282639617 seconds)
  done (took 62.906548791 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.285086816 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.286483155 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.282839232 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285419363 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.286131128 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.284647545 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.288210663 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.285226191 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.284329774 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.283201208 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.285244289 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.285548064 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284822404 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.285306796 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.288660895 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.284301414 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283804645 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28441974 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.283277206 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285791999 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.286721843 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.286986383 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.28739405 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.284350269 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287164221 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286257059 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286685539 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.288275013 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.286373606 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.285019088 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.287412799 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287203853 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.28902429 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287188802 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287401793 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.288162744 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.289230965 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.287305848 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287577724 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.286871987 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.290116152 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28855494 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.287795125 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.291444846 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286835722 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.286758811 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287530626 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.287273622 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.287576114 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.289633939 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.289735567 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.285822028 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29189207 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.288220905 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.291175515 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.289721695 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.287748977 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.286042405 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.290616756 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.28793707 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.285820821 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.28879997 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.286829267 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.288951377 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.289080623 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.288780147 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.285711431 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288487759 seconds)
  done (took 88.722647787 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290668487 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.290939541 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291250916 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291034508 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293122046 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.29036808 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.293995963 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.290523949 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291381855 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.294115607 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29224646 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292696926 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.291851608 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292524726 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292863539 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292463584 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290217763 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292828847 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290355474 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29332597 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.289358507 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292370851 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29041966 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292702842 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291805394 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293794363 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290845507 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293057898 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291953746 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292414553 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293084197 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.292409031 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291176845 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292230549 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293148248 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.293702334 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294342438 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294288608 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.290483799 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.29240437 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293157632 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292593045 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292763464 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.29246135 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294399504 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293320905 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293239163 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.295108398 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29277506 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292864794 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.29225368 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294439122 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293684871 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294062925 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293146957 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.2931203 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293767939 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293543996 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294983164 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292609553 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293126396 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.294312858 seconds)
  done (took 81.343545555 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29370239 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.294196017 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.290824925 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.293261397 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.295002055 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289398532 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.29477027 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.295548451 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297515143 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.294949081 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296777337 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292186932 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292281508 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29576318 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290965884 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294430604 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292085638 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294204932 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296103828 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292118673 seconds)
  done (took 27.083207642 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.294972737 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297347958 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29257348 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292603905 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.295096857 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293690663 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.295716313 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293921206 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292862268 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295416493 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.2964855 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298104209 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293380184 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294415585 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297769236 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294355231 seconds)
  done (took 21.927434992 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294761947 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.297149123 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296856234 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.2976809 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.294657635 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.293588933 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.295270424 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.294493181 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.29258958 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295640862 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.297238685 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.296932728 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.296556122 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.297626044 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295554919 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.297315216 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294077819 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.295677254 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.297462329 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296623535 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.295913268 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294794982 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.297590237 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.297659388 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.296324817 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.296717788 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.296023018 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.296244758 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295813641 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.297973659 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.294786684 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.295564743 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294360646 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.296790419 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.296833382 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.297904588 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.296701647 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.298583396 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.297728604 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.298941884 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297665121 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.296149498 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.298812679 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.298485368 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296090776 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.300024571 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.297881456 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.297818597 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.297193588 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.299125348 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.299678968 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.299568569 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.300219345 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.300066482 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.300817748 seconds)
  done (took 72.541421514 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298818525 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30193816 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295823258 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.298513518 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300530116 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.297039209 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.301107828 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29981108 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297022305 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.302988095 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29903708 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301262844 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298752777 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30075427 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298270557 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299516337 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.298246403 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297710864 seconds)
  done (took 24.600047861 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.298741167 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.297725114 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.301443804 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.298844668 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.297402275 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299963711 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298961526 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.300102187 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29940186 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.300953051 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299106091 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.301691518 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299163114 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.302567176 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29861958 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299048404 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.302693641 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30080346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.297995713 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30032677 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.302696706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301518269 seconds)
  done (took 29.812246366 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.30153875 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.301582877 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.302373917 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.31782963 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.316388785 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.300829669 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.302183062 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.302511208 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.326509469 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.346633413 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.340786864 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.320285024 seconds)
  done (took 16.993207916 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302746228 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302036975 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300560682 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304403162 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303762732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301330516 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29729101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302445363 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304308835 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301581585 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301414367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303814967 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301560387 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30064667 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304017807 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305527235 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300844564 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300046948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301259103 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3054842 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3017272 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303890812 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303221599 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302606903 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302105254 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300852879 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304864133 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300773252 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302738592 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304556289 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305135588 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302284346 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304527231 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302406053 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307109478 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304994649 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302243216 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304324758 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305890507 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303988228 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306522972 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306875228 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307102925 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302981697 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307571468 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303401601 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30357 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303227985 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303518418 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305690943 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306106316 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302885838 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306281341 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30681436 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306848441 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30597944 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30619695 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303250578 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307126366 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30406852 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305747098 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306519043 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304299987 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303999551 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306729127 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304550207 seconds)
  done (took 87.270274842 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306694398 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303502389 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305786624 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305178749 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306059361 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304859839 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305631428 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305027945 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304645561 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305733346 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307952002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304045116 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305148378 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305587083 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308577461 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304938503 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308118535 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306990845 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307717847 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308304057 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304961668 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30639729 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305528306 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305633765 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306783484 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308633339 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306159182 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307920277 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307496623 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306928498 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306957231 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305760067 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305850813 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306413428 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306404227 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307929651 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309135591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308326598 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305476236 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310043947 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308190571 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311029231 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308571537 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309747935 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306915347 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306910651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309076863 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309373377 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305246853 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306762186 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307881594 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308681092 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309088267 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30600978 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309574909 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308057684 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309840873 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30924961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308479907 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311419013 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310157011 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307167359 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312157614 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309492151 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308370455 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307853066 seconds)
  done (took 87.504759983 seconds)
done (took 1768.081128589 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.473227907 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.426063325 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.311333666 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.312903664 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.307273348 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.303621963 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.316799887 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.305230333 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.309026309 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.308122667 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.310575425 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.496095931 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.305954155 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.304008256 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.311694332 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.405030238 seconds)
  done (took 26.72986695 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.33904403 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.313058115 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.420625534 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.32601411 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.336263529 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.481682919 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.363855649 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.310510959 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.473213683 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.350847833 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.30246564 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.347507949 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.312679096 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.306312425 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326547535 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.483423927 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.547878825 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.302262294 seconds)
  done (took 28.868914032 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.736347503 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.306957119 seconds)
  done (took 5.264941606 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.335049184 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.313584622 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.32045405 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.318468285 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.308698095 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.303417859 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.316313596 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.308469931 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.311832842 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.430515844 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.314509355 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.329041708 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.334813403 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.316780168 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.315554012 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.3530887 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.488179431 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317069137 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.312621567 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.325052316 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.320029571 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.405156889 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.352206853 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.316740759 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.435576454 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.306256423 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.337386189 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.325074993 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.45832206 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.317451775 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.318797004 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318327095 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.320469217 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.187909229 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.819969115 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.307225649 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.339672552 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.321091503 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.316884037 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459144627 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321614588 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.326238628 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.312820424 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.799202428 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.447468105 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.429864448 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.318865918 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.317291424 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.32292887 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.384362154 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.316148503 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.322937296 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.363421581 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.069908216 seconds)
  done (took 84.248587163 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.319480953 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.312694882 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489878284 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.324223532 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309832404 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316507297 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.306591925 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.582419827 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.313428202 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324239876 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.62482682 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.844168277 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331449738 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.35355441 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.150611851 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.383722933 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.312866365 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.313041346 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.327464236 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.310095937 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845369739 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310593254 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.307168763 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.566299713 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.35051551 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788017 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.305882539 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.3221417 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.312780854 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.306308749 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.802802894 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.33335523 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.376264698 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.313474329 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.569314542 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.662589454 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.632373571 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.308827605 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.344706954 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.311888327 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.326509244 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791227469 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.649663056 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.310054491 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326003503 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790987116 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.308918096 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.323852417 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.323458744 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.561441362 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.316923424 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.316031138 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.312225287 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.313212334 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.315368653 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.380962294 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.436477931 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.798458718 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311537529 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.309684834 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.374998237 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.315842396 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309934073 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321076643 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.321080197 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.655504855 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.458857069 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.317928738 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.657315452 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.795022938 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.33153672 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871036725 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.332395137 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.336428791 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.331699305 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316527433 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.312836875 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796690275 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.336606794 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31050333 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.642726164 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.31552106 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.629076248 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326955449 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328400605 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86983323 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.325521824 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.317751943 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317415187 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.312730248 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.312153041 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324130197 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.576294214 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.331414526 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.319804847 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.318951444 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.370448438 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.322279613 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.313673219 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.32200763 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.872906619 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.33710525 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.316831614 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322461019 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319311098 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.312897561 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.323846975 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.320613676 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.581248349 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.315304091 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.32346325 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.32038136 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.316465257 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.319760765 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.558977888 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.331454814 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.615112566 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.318070585 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314771928 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.321146694 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.321858024 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.370145269 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315804265 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.314993772 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.221483381 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.614601101 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.334075606 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.315394678 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.323443269 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.32191528 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315723308 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.317352355 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.341613454 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.324442993 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056961683 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.350336543 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.344350681 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.322691456 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.319756938 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319649389 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.316906695 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.321834663 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609660641 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.585492675 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.449602752 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.317231653 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.322631255 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.029161121 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.375548193 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498135001 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.337222473 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.318379548 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.564377784 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.49855095 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.323063343 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.316022727 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.321912809 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.577759227 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.31709211 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.614522034 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.834784498 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.330373611 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323965677 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.060853173 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.035939065 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.325099523 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.326039046 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.635715298 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.333546765 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.324806026 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.322737663 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.324584877 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.32350728 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.329245698 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.321645234 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.32357189 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.32488116 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.488739464 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.51116674 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.336140557 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.334176269 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803563885 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.326003115 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318375068 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326993555 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.319765321 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.32244762 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.384886341 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.32548752 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.330770497 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.326177935 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.332881425 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.872901736 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.318835583 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.325997696 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.512808107 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985037818 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.340878357 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.325636598 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.325948787 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.197038064 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.826686056 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.336318515 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.621343421 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.31990572 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.362855085 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320232499 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.43052301 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.826823746 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320105286 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.326590261 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954861764 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.341263802 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.866469229 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.321639195 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.325613282 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892804709 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.341333316 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.326237534 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.320395984 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328689601 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.621390868 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.320704307 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.341355369 seconds)
  done (took 494.115990978 seconds)
done (took 640.448152888 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.32384974 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.329234806 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.311924853 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327361989 seconds)
  done (took 10.531777203 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.33834647 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334547683 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.33266813 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.33050863 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.333890036 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.332878374 seconds)
  done (took 9.244604996 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.329395996 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322505362 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.328956294 seconds)
  done (took 8.222553808 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.528255197 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.353618173 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.640055454 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.343291155 seconds)
  done (took 9.106314219 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.33614189 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.333485575 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.335136715 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.337384574 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.337663786 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.337987471 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.3345801 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.339719845 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.335795416 seconds)
  done (took 13.268546442 seconds)
done (took 51.613814352 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.43250682 seconds)
    (2/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.312927603 seconds)
    (3/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.172552172 seconds)
    (4/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.3742568 seconds)
    (5/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.313446546 seconds)
    (6/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.412418728 seconds)
    (7/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.311231571 seconds)
    (8/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.328793894 seconds)
    (9/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.314900359 seconds)
    (10/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.32582136 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.568212178 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.380599149 seconds)
    (13/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.320157038 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.351915887 seconds)
    (15/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.370261434 seconds)
    (16/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.353049743 seconds)
    (17/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.317166168 seconds)
    (18/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.346862639 seconds)
    (19/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.330189271 seconds)
    (20/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.214158819 seconds)
    (21/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.455917312 seconds)
    (22/286) benchmarking ("sort", BigInt, false)...
    done (took 2.328919557 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.332140722 seconds)
    (24/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.330538649 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.200724052 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.313133885 seconds)
    (27/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.428189438 seconds)
    (28/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.33068428 seconds)
    (29/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.3316473 seconds)
    (30/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.31549556 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.323065122 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 2.323851854 seconds)
    (33/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.909756669 seconds)
    (34/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.324768997 seconds)
    (35/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.317536778 seconds)
    (36/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.428486394 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.439570778 seconds)
    (38/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.414892131 seconds)
    (39/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.934857455 seconds)
    (40/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.542892305 seconds)
    (41/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.836416307 seconds)
    (42/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.322639961 seconds)
    (43/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.421429847 seconds)
    (44/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.315419504 seconds)
    (45/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.518334769 seconds)
    (46/286) benchmarking ("sort", BigInt, true)...
    done (took 2.329362222 seconds)
    (47/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.333891077 seconds)
    (48/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.326336467 seconds)
    (49/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.322227286 seconds)
    (50/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.341488374 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.952089506 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.963121652 seconds)
    (53/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.327046084 seconds)
    (54/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.323306395 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.461066544 seconds)
    (56/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.318014137 seconds)
    (57/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.3189999 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.587166794 seconds)
    (59/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.318482609 seconds)
    (60/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.414912292 seconds)
    (61/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.320188583 seconds)
    (62/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.328831348 seconds)
    (63/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.360857055 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.38906283 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.733474158 seconds)
    (66/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.157202895 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.333609722 seconds)
    (68/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.464866719 seconds)
    (69/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.917757138 seconds)
    (70/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.324013471 seconds)
    (71/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.438059732 seconds)
    (72/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.12805404 seconds)
    (73/286) benchmarking ("sort", Float64, true)...
    done (took 2.329189751 seconds)
    (74/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.344155879 seconds)
    (75/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.329792578 seconds)
    (76/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.313608654 seconds)
    (77/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.465017399 seconds)
    (78/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.342636638 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 2.331614407 seconds)
    (80/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.711244008 seconds)
    (81/286) benchmarking ("sort", Int8, false)...
    done (took 2.333948185 seconds)
    (82/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.384832311 seconds)
    (83/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.340128845 seconds)
    (84/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.47021529 seconds)
    (85/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.328940352 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.683692666 seconds)
    (87/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.334283081 seconds)
    (88/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.837287012 seconds)
    (89/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.334758438 seconds)
    (90/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.332610777 seconds)
    (91/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.334671166 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.331239176 seconds)
    (93/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.330686215 seconds)
    (94/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.330876356 seconds)
    (95/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.446643657 seconds)
    (96/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.284479653 seconds)
    (97/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.31733169 seconds)
    (98/286) benchmarking ("sort", Float32, true)...
    done (took 2.347901616 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.7408359 seconds)
    (100/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.465844152 seconds)
    (101/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.05343987 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.07036528 seconds)
    (103/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.41550886 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.22724822 seconds)
    (105/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.186207983 seconds)
    (106/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.33882097 seconds)
    (107/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.322207408 seconds)
    (108/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.340403236 seconds)
    (109/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.336972113 seconds)
    (110/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.345621202 seconds)
    (111/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.067599895 seconds)
    (112/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.337343992 seconds)
    (113/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.32617312 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.548969071 seconds)
    (115/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.323638954 seconds)
    (116/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.333887682 seconds)
    (117/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.805239847 seconds)
    (118/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.334959989 seconds)
    (119/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.319649669 seconds)
    (120/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.355142513 seconds)
    (121/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.331685542 seconds)
    (122/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.354731875 seconds)
    (123/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.41428735 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.199739644 seconds)
    (125/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.920230577 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 1.852782234 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.359670683 seconds)
    (128/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.347362816 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.616956847 seconds)
    (130/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.693137705 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.062652912 seconds)
    (132/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.937383419 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.594908951 seconds)
    (134/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.324133024 seconds)
    (135/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.383670059 seconds)
    (136/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.320709263 seconds)
    (137/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.397664406 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.44734521 seconds)
    (139/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.324103963 seconds)
    (140/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.572219175 seconds)
    (141/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.319334443 seconds)
    (142/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.471252536 seconds)
    (143/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.337227498 seconds)
    (144/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.474425339 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.068904041 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357959593 seconds)
    (147/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.444840606 seconds)
    (148/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.36186122 seconds)
    (149/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.324755684 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.346200161 seconds)
    (151/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.269033261 seconds)
    (152/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.176887544 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.741496811 seconds)
    (154/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.613792625 seconds)
    (155/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.319524248 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.361388263 seconds)
    (157/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.356348694 seconds)
    (158/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.364593129 seconds)
    (159/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.324355745 seconds)
    (160/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.346998973 seconds)
    (161/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.3653445 seconds)
    (162/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.339404034 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.281137472 seconds)
    (164/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.32056477 seconds)
    (165/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.332658932 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.897331697 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.349900778 seconds)
    (168/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.329338781 seconds)
    (169/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.34743019 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.704082452 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.351316787 seconds)
    (172/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.346105879 seconds)
    (173/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.698760892 seconds)
    (174/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.320762911 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.354699407 seconds)
    (176/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.328734378 seconds)
    (177/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.325694351 seconds)
    (178/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.369365846 seconds)
    (179/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.32617229 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.742077422 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.364918926 seconds)
    (182/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.32547732 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.360535569 seconds)
    (184/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.774110278 seconds)
    (185/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.081808804 seconds)
    (186/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.320295087 seconds)
    (187/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.059323508 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.39402139 seconds)
    (189/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.404477186 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.231904378 seconds)
    (191/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.139224068 seconds)
    (192/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.320771083 seconds)
    (193/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.326469745 seconds)
    (194/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.341236986 seconds)
    (195/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.361499718 seconds)
    (196/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.338798187 seconds)
    (197/286) benchmarking ("sort", Bool, true)...
    done (took 2.339416485 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.397329606 seconds)
    (199/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.343718399 seconds)
    (200/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.322885849 seconds)
    (201/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.32295237 seconds)
    (202/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.376769121 seconds)
    (203/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.325594611 seconds)
    (204/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.329398121 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.342330564 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.568980498 seconds)
    (207/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.344432947 seconds)
    (208/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.521917596 seconds)
    (209/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.343079039 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.18166907 seconds)
    (211/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.207639827 seconds)
    (212/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.334800407 seconds)
    (213/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.428744159 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.36354673 seconds)
    (215/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.331025115 seconds)
    (216/286) benchmarking ("sort", Float32, false)...
    done (took 2.337600853 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.326192212 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.385156944 seconds)
    (219/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.326223186 seconds)
    (220/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.337643523 seconds)
    (221/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.323572173 seconds)
    (222/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.46670452 seconds)
    (223/286) benchmarking ("sort", Int8, true)...
    done (took 2.34164165 seconds)
    (224/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.819100594 seconds)
    (225/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.467213526 seconds)
    (226/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.339824404 seconds)
    (227/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.367081414 seconds)
    (228/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.795617966 seconds)
    (229/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.323560083 seconds)
    (230/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.707240569 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.322938428 seconds)
    (232/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.3785691 seconds)
    (233/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.424467974 seconds)
    (234/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.392630045 seconds)
    (235/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.693143791 seconds)
    (236/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.178299844 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.550428541 seconds)
    (238/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.370255494 seconds)
    (239/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.405263979 seconds)
    (240/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.443859707 seconds)
    (241/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.613091045 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.361012142 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.364849697 seconds)
    (244/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.359839312 seconds)
    (245/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.372956344 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.730709757 seconds)
    (247/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.699170893 seconds)
    (248/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.346296886 seconds)
    (249/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.350469595 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.339409769 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.352874142 seconds)
    (252/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.44355331 seconds)
    (253/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.530805044 seconds)
    (254/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.331715344 seconds)
    (255/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.526453311 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.346310599 seconds)
    (257/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.400147872 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.352535725 seconds)
    (259/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.452710354 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.437126528 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.426982239 seconds)
    (262/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352694101 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.460390502 seconds)
    (264/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.332762608 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.344717865 seconds)
    (266/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.546543393 seconds)
    (267/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.384794911 seconds)
    (268/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.440021862 seconds)
    (269/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.349274878 seconds)
    (270/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.348307381 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.381857568 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.184408794 seconds)
    (273/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.368032377 seconds)
    (274/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.371632402 seconds)
    (275/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.430322807 seconds)
    (276/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.374055567 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.345156921 seconds)
    (278/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.222161573 seconds)
    (279/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.335289339 seconds)
    (280/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.375215252 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.364587175 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.363667658 seconds)
    (283/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.283933823 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.346686297 seconds)
    (285/286) benchmarking ("sort", Float64, false)...
    done (took 2.340363928 seconds)
    (286/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.097348372 seconds)
  done (took 567.11006965 seconds)
done (took 568.354691525 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.380083546 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374245109 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.357521978 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.378846333 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.467708726 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.532353635 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.370204102 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.360210764 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.408630682 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.404865578 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.359460139 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.533820072 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.361277507 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.359928086 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.361361184 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372251367 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.351786294 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.352024181 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.375350896 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.367095602 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.375668928 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.355602135 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.408670925 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.531785302 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.364808754 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.362910983 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.36128861 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.378691834 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.471071424 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.361433801 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.363004795 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.368744282 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.348838781 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.352578065 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.354959195 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.378913952 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.369104118 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.370287089 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.361474174 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.388549428 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.361847172 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.359953371 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.357924876 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.361336748 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.362200865 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.364500068 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.361119604 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.367539704 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374261438 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375800352 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.361993541 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.375473339 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.362103791 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.359172205 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.36931157 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.360554371 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.365273217 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376324255 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.379932268 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379335605 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.358896766 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.361083505 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.359697213 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.379189499 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369962007 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.347941968 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.35865325 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.367270481 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.361818191 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.367917004 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.350901293 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.371511238 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.365832592 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.377133115 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.391445712 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.356739037 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.352669209 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.36298587 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.371956215 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.359882481 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.374348667 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376109537 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.367989445 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.364290884 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37849402 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.538861672 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.375996887 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.363669784 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.372094789 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.38256766 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.371026634 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.373780647 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.369066666 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.361517203 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.373627283 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.370792337 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.366227411 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.366177633 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.369800587 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37507294 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.36192603 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382138629 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.361364706 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.360909182 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.364398616 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.375045825 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.355066432 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.365610389 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.386600742 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.41078301 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.366703241 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.351851541 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.377842921 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38189614 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.376449868 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.369137884 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.36099434 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.366592747 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.359257191 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.380702852 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.366862508 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.361999793 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38333022 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.368784891 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.362273639 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.359837389 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.363857072 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377462982 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.486735048 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.378631052 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.396188048 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.364768482 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.370299673 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.393953173 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386666407 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.398601795 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.371160662 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382183954 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.383943609 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.36430692 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.374268813 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.376914807 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.367836592 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.372643799 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.36150069 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.39579137 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380410443 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379621755 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.386771842 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.487629915 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.364710411 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.369325289 seconds)
done (took 226.594322324 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.426570396 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.364009185 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.448395921 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.362713422 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.465203494 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.464518798 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.363803428 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.363086148 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.360857745 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.738145256 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.361852261 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.361181865 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.361062086 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.362593966 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.446559913 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.363146099 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.360373266 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.736904755 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.366597035 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.437653451 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.364230733 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.364650794 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.365880182 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.777657036 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.364062679 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.362295563 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.436700478 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.364875326 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.709163096 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.360860871 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.362481499 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.742248262 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.459460865 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.384472761 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.376826956 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.373522821 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.467571325 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.381275764 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.44761894 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.447204819 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.449545737 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.405588149 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.362314126 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.366295191 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.367455893 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.369597846 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.364966274 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.393768307 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.368359388 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.366485734 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.707296448 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.378323485 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.37563034 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.364247299 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.366004486 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.386993175 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.366469912 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.370459117 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.458422683 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.37157164 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.430647764 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.746859636 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.777431555 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.369789959 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.364073932 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.368249214 seconds)
  done (took 106.715282624 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436761032 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.440327996 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.480722794 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.364389272 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.420531976 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.483975503 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361022315 seconds)
  done (took 11.258254522 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.375168283 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.366807002 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.429174135 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.429780608 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.370111403 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.605523539 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370210251 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.382489716 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.367638638 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.457348148 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.371608857 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372729599 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.377077298 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.367023304 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.427334856 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.381929475 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.483812171 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.37319918 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.373250286 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.519753442 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369679237 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.376499029 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.444684115 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.384740341 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.375601483 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.377254242 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.321238015 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371147076 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370114329 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.371262828 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369927356 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.476001939 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374022108 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.368626856 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.369791474 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.550922456 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.373419032 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371698677 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.37190193 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.365432733 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.372836824 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.373522849 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.372414507 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.370321357 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.373798959 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.39544214 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374752227 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374775779 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.374961228 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.374756976 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.461027619 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.374765424 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.370294078 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.372890565 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.465576703 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380630545 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.374873949 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.371897689 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.373563362 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372782408 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.525766084 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.431952439 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375013597 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.431285309 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373221109 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.372457824 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.372976015 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.373456191 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.465466254 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.374502552 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.431512476 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.369806148 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.623042746 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.395303535 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375613948 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.376711105 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.377533376 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372057152 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.371977293 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.382743479 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.370703642 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.375279003 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.379403817 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373262947 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37228185 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.583782832 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.547140415 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.372526165 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.387097773 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.381450949 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.372710838 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.458907256 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.377137826 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.373080309 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444389732 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.488983772 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.453145228 seconds)
  done (took 142.192763933 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.380606583 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.384636866 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.373298064 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.39621663 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.376018645 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.376109049 seconds)
  done (took 9.565855359 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.378420064 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.376736532 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.378145638 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.377113919 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.37753169 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.379548 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.376543033 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379692633 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.380119023 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.376250613 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.377417095 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.377521251 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.378321915 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.375090903 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.378234865 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.377294751 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.378507326 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376559337 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.378375543 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378390721 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.378786447 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.378510376 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378236038 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.378707091 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.382857778 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.379324285 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385153597 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.379657336 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.377261012 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.386293445 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.380246448 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.381335142 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.375658172 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.382487858 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.381620928 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.379761092 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382065689 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.379713471 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377494401 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.379684742 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.376095402 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379380514 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.379493072 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.380571089 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.380852091 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.385653805 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.385844634 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387921479 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.379677444 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.381260507 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.38200264 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.379330325 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.38021345 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.378816306 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377969304 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398681198 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.383221044 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.380245397 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.379417597 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.383262365 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.381139365 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.379748738 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379185149 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.38469768 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.379068985 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.38126107 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.382436346 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.38460807 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38126629 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.380732479 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.382507194 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.378109812 seconds)
  done (took 101.657024974 seconds)
done (took 372.657326418 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.80500595 seconds)
  done (took 4.088755023 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.48079094 seconds)
  done (took 3.765956165 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.961971148 seconds)
  done (took 22.255458662 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.447876726 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.410765759 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.380572262 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.375759556 seconds)
  done (took 10.901884368 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.606754776 seconds)
  done (took 3.892691242 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.384087948 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.367086011 seconds)
  done (took 6.036202967 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.685105929 seconds)
  done (took 3.96656966 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.802145089 seconds)
  done (took 4.095937276 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.397632801 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.391456592 seconds)
  done (took 6.082472575 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.3669635 seconds)
  done (took 3.652699319 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.730014227 seconds)
  done (took 18.01706509 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.381630538 seconds)
  done (took 3.670524241 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.409115918 seconds)
  done (took 3.692451871 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.873024447 seconds)
  done (took 6.159075522 seconds)
done (took 101.561942716 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.374650337 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.377761559 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.379575643 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.376321316 seconds)
  done (took 10.795775707 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.417158821 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.424135726 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.437429422 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.427815977 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.42174736 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.418879744 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.410064669 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.410747523 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.427859939 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.421627941 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.419766564 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.42160116 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.432988334 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.410349454 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.420215984 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.43926246 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431029258 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.419270498 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.412044205 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.422696501 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.387201725 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.428621861 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.420549962 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.387418163 seconds)
  done (took 35.358402812 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903412276 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.456135056 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.541027448 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43787728 seconds)
  done (took 7.626136047 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.436510762 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.437164011 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.450216398 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.488391648 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.514638665 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.44809625 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.410995903 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.407956906 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.394977045 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.440002312 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.514178172 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.45621763 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.521416844 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.386958193 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.571317435 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.384565283 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.386332632 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.436513209 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.490951641 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.523593898 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.387357133 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.438860175 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.441802283 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.456517414 seconds)
  done (took 36.115859678 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.384496544 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.403620007 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.385727845 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.384723853 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.391033588 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.382919485 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.386796612 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.386435407 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.386631533 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.392945574 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.382699836 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.398602978 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.385778108 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.385014529 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.392310407 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.386765831 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.391609541 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.382735133 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.388707091 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.393685498 seconds)
  done (took 29.062107293 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.382379095 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.380526286 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.731699241 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.633684889 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.382539459 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.381207915 seconds)
  done (took 14.181723619 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.454325862 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.593979104 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.389200731 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.735881514 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.817580036 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.388912884 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.389133782 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.63121891 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.934654301 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.917315995 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.443935457 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.458289718 seconds)
  done (took 20.44712561 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.391124826 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.382952009 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.384601153 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.398930774 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.442054288 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.394657277 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.39656589 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.380885518 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.443152438 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.44588699 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392991199 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.442844812 seconds)
  done (took 22.189187899 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469368602 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381611458 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385145326 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411228983 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383119945 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589095973 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418934583 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124565882 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.407650543 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658876184 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390222429 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465372453 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638701501 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379782617 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387254789 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.370783582 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604651563 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864717005 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381966722 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383265327 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409768526 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39502811 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395393873 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.601545761 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599137925 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3811669 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.646094442 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386636465 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666428358 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400282787 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397916723 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385206352 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659792013 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046610214 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500735994 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598947345 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400567899 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380386478 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.3747315 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.401607408 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38858843 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383979747 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398537205 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386771769 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387644164 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390963767 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138101846 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.410173059 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.384836214 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387689547 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648028542 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486189123 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.393314031 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385724094 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388651833 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390171371 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.390912084 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484776143 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958271516 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386670057 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397351654 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.389655983 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392240685 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396719506 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010029263 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.386747709 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393031766 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394416921 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389241495 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382584641 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423788761 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39224225 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.407299318 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390829528 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091819969 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394782965 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382077964 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926820506 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380303127 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.388658859 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61237096 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386748352 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389286342 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.382349432 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390302797 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100065113 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397707235 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.375300489 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413338601 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.131849579 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621640289 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41148986 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41343717 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615047453 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.377464943 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391174532 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.391470215 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38563811 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405109239 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140633356 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407863505 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.389446496 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644354239 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.60469315 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399515706 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.377679539 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87909706 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413641332 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.406080466 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39363864 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605024954 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.970192118 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400310218 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390217539 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408700278 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391782314 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145815354 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400879047 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.398248524 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402378784 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657254746 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.178446923 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388307224 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460732287 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398171348 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392060981 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392782413 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395509352 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390515278 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.595602202 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422114806 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.402887143 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.38911543 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392204302 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.383242793 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385016858 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.387060679 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615976338 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397009798 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669372079 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393554567 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392633655 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386408974 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.610133809 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.396852835 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.400952495 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651422527 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397919991 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403955897 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40517814 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413436491 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490482188 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416238119 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.394577956 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649137224 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.391984428 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.394703275 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391867958 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396398144 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402979613 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.400848999 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397195911 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98626928 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366613053 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393729547 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283987487 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.408634216 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4605962 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402943849 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608408213 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.405310954 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401083119 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.402748935 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.392134337 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612304321 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403864323 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.394066457 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474338073 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.884658169 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.996842929 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404899708 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.397393479 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.391521348 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.393861459 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39536984 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394871163 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397742136 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607102258 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41237558 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40129317 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.980669882 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392077252 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388309345 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.404121134 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408505296 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.400985537 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397620086 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.394616613 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389139441 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39593858 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.408891684 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540705332 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.411989374 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397160742 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.912451878 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403449309 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398838958 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396988923 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432281777 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40030909 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287157348 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657113616 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395236758 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667844255 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399493711 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.4126117 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.397184753 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40627349 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403237838 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.398779149 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406114657 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.410318417 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398113504 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400394047 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956247733 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125501686 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927122023 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405666336 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.403694786 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397358507 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149944002 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418475806 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39849393 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633574002 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140738725 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418365468 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888114894 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.426269047 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156667237 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648009759 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628798124 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400697967 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.408190072 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657929568 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613737326 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430815299 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402642321 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394026748 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.376855443 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984550028 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425180931 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481024629 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151968367 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425824878 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394954261 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.466748949 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401413459 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830710781 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417478374 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399839083 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401351964 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394226022 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296833963 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408476314 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401448452 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01863409 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398299672 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.888398657 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421876435 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611520105 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.413651321 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.403793731 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.408783982 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.396599123 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.649042535 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65319513 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404891523 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397401578 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941997061 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.251628087 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.40794822 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399247813 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147059148 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408871035 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68561082 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.41267897 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.409566499 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398528894 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404717218 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401565949 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.399454607 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412586996 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392497964 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88502474 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.402855906 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413305951 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41492675 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248849734 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655145721 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.41467259 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.984876593 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624770828 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398465962 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429938244 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.401971863 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400696402 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.38508315 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404299102 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639507306 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478122741 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629411463 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415089375 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.392884054 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430053151 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61973329 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398228763 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404300572 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64269937 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.405139354 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.410727105 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111365398 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425732862 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399251812 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40120761 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401827988 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421022571 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470811622 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618323105 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.418630744 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.411569324 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810777035 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425154264 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402528828 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.418880725 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499657203 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40728929 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.417567684 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.173570358 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993609831 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13479614 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.991931745 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667710516 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410560572 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409698642 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4059043 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549172234 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400492893 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679600937 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40360913 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.399332131 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431885982 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402018469 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42314955 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62070062 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676181397 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407485031 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407919964 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40882458 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.408758841 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418880974 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.618312627 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897873954 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958681443 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404855259 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417501116 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.163523763 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702254908 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40761449 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409078159 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409914906 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.416345213 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.411378793 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.415501924 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416567039 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559213557 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66115909 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081697664 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.43925181 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.432341195 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.184025364 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404912511 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666598852 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40127972 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.628432474 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001299575 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114482936 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674183983 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47113459 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625792466 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.409718905 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552147219 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.414413795 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409628039 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41017587 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257016212 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.402145298 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.419307487 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00000249 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667221305 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.404849579 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.414003068 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43618737 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.417373169 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632326402 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131094888 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636412299 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417060939 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416567643 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412330752 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003005729 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671525875 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41353919 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.407580003 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654975349 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651054727 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432450879 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.86165722 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.409213153 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969697896 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.379068485 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432036431 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414464774 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119746243 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0113892 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.417065555 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911772665 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41657191 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420262548 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690087625 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.414438133 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416621213 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690888262 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.412411952 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424108598 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632142612 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.000996684 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170614355 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.423639307 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423769868 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.417715645 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415320147 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452283208 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417197667 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414438761 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.842606605 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.436616723 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414937418 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418393858 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.41942866 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421248078 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.414003653 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414364179 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.412773453 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.416244012 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.402762137 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421392713 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514465884 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009179068 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436037909 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.088634882 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.740326959 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.66529196 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40983715 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.403883865 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.416932542 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409952775 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416619953 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409298878 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41684742 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981091137 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.417498131 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.445578065 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416070892 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.629508427 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621209213 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415085523 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637113033 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418749384 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449323548 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.401814457 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415468855 seconds)
  done (took 984.059803057 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.444439044 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.424687274 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.425902827 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.454342287 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.45784104 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.465462891 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.497797718 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.442274616 seconds)
  done (took 20.934398808 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.42534459 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.425360325 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.418318318 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.429404579 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.415257283 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.885909645 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.430800175 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.428267585 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.425332676 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.413749861 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.425109591 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.072043555 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.423563804 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.418563528 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.40960678 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.427885634 seconds)
  done (took 33.206361867 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.400309141 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.555873752 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.353049447 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.455552953 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.416372861 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.41798576 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.638561371 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.441462351 seconds)
  done (took 27.004840878 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.431341959 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.424177577 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.422302215 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.42514752 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426297136 seconds)
  done (took 8.453240403 seconds)
done (took 1250.720435755 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.423176528 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.42148056 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.418141267 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.417000029 seconds)
  done (took 7.004085632 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.408345301 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.400293051 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.40282375 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.422315454 seconds)
  done (took 9.958546834 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.12138503 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.071704685 seconds)
  done (took 5.520868167 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.420861815 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.180204536 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.15103454 seconds)
  done (took 8.074980618 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.71195701 seconds)
  done (took 3.033533738 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.84401192 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.797334716 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.59988582 seconds)
  done (took 6.56575045 seconds)
done (took 41.48290551 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.432547682 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.663891752 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.574393161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.421861402 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.572621492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.577395204 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.22308461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416450936 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.419412308 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.425168062 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.418406743 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.573390222 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.136694357 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.665820923 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.133506408 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.667933842 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.58433275 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.43365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.41348202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.427313869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.220844164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.423738417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416893346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.428200741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.573681513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.563100226 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.416106183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.665998479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422009929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.417721038 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.559838828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.426246445 seconds)
  done (took 84.039872777 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422121372 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.414993051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.420694967 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413268851 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414544431 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.419407372 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.41625785 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416393316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.425970369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.417430476 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41566961 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.415634378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.417318431 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.42847882 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.415556242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.415667305 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.43473005 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.415663584 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.416450036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.432300027 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.416080775 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.422579454 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417701889 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.425628869 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.416018443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.418164274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.434672619 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.426172627 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417950216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419887886 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.417466966 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.435048617 seconds)
  done (took 78.782492749 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422253243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.434360563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.415667013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.416445107 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.416597101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.416056321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.415948797 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416161338 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.416180149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.41735381 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416641036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.432043845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.417174274 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.429590758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.419113387 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.416278005 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417333405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418273039 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.419759155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416579442 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.418894485 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416743737 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.418692439 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.417022742 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.417176281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.436067806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.425340026 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.418461217 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.41824051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.443226435 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.41881265 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.419398708 seconds)
  done (took 78.786255676 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.6190233 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.433013296 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.433156026 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.366714259 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.433754392 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.433397059 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.424324632 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.621805444 seconds)
  done (took 15.096141102 seconds)
done (took 258.028253791 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.425010312 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.441620334 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.64831832 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.4464016 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.43777415 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.454956243 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.449774596 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.621971908 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.388171493 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.631319443 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.424709723 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.444007401 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.422062014 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.464660839 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.703075464 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.546820238 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.301103206 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.410166241 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.760346772 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.447488595 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.696107734 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.420403048 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.63386664 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.382481384 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.457598371 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.420373813 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.420737028 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.320375732 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.446802544 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.77359419 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.435848595 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.409894115 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.487499301 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.499202275 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.555363047 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.542669312 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.44857199 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.488030276 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.634751393 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.428409277 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.437446256 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.192146244 seconds)
  done (took 84.733536077 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.435550924 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.542275345 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.435252193 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.434961215 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.43411346 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.533758842 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.515087664 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.433335201 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.431347549 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.433688836 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.434285961 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.432378442 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.432175627 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.430736024 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.431667301 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.431814652 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.430981247 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.435193579 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.434300437 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.467701555 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.534887691 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.43481605 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.426048079 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.432164689 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.517108548 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.534552338 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.432086821 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.426984226 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.465118487 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.432597858 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.432179243 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.470416071 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.434395033 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.433530815 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.535386059 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.520191052 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.435639418 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.432258921 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.534819425 seconds)
  done (took 58.190028391 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.439745685 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.681173065 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.854512634 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.446577875 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.436446722 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.440552846 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.511375885 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.434218982 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.440204441 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.44236796 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.587367562 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.436531912 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.474084071 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.881191577 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.445856676 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.444877285 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.436642648 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.440559879 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.694718488 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443477635 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.532666158 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443596646 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.516554304 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.452309829 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.457259307 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439183826 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.448382594 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.012443042 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.445997046 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.595776001 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.229353341 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.515428288 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.988704519 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.874609692 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.234631781 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442824612 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.441224854 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.597512242 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.438799846 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.437421683 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.514968994 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.445594528 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.870446306 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.127856842 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.460409841 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.438450257 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.035479116 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.591923438 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.679633291 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452404417 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903018576 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.44833551 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.441376495 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.441771893 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.682898065 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.450833058 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.437647524 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.056766457 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.467116821 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.515444291 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.445061138 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.439638245 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.702703293 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.436961967 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.691742442 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.438464462 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.44913562 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.455802663 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.877917615 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.449538425 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.148450228 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.466607474 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.440539087 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.594122825 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.693154071 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.062984083 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442517708 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.714740368 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.998363685 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.522882591 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.445875058 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.006307516 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.522110272 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.449131383 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.447233709 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.446906234 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.445178666 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.493233275 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.518471654 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.080575565 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.149242142 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.076102707 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.543167073 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.460963095 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.440911944 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.058568583 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.462988968 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.443285591 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.867557872 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.147434223 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.466530631 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.451368009 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.157261773 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.468479296 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.519404433 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.452837442 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.886986611 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.448215437 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.493475298 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.44178688 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.451063704 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.464272167 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.522124658 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.452497448 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.447172317 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.117775806 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.632257696 seconds)
  done (took 189.608668228 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.440868312 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.454747259 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.455293429 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.435763592 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.441257726 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.448434636 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.437678369 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.441931477 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.444839605 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.437247522 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.441978699 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.448108851 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.441094563 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.456024799 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.445728612 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.445076226 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.437868148 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.438226914 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.441845125 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.435165837 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.441127537 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.465831883 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.44429723 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.436113253 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.441945269 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.444168291 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.453104134 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.438004515 seconds)
  done (took 65.777477433 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.449516161 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.007816657 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.443300986 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.579103924 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.471754301 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.43878888 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.572525334 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.508194842 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.454002995 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.441695686 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.44345853 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.749257079 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.453808619 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.960991197 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.644235541 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.573537016 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.968339345 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.468472329 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.443483956 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.444025295 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.576626785 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.45874706 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.748527487 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.018677644 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.454459344 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.010888242 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.443564953 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.44690348 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.445207074 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.01498212 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.450817534 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.750883149 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.529435801 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.502864036 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.016379053 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.96849858 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.981632964 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.591933642 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.44551067 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.443393596 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.443373574 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.436851643 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.01377248 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.453735458 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.447861439 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.009211156 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.470043526 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.44609836 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.452000953 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.443339644 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.505968448 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.506332101 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.759391164 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.028834133 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.52853815 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.456498015 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.576562591 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.832371425 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.449611692 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.959346175 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.436646843 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.023774415 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.472828651 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.43746055 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.447094588 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.482509885 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.594865652 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.575995259 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.967218028 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.464706757 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.957086819 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.609304195 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.447301377 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.450696707 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.448037242 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.024878071 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.967635705 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.611903513 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.580956918 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.642407578 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.445109588 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.446465087 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.444445762 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.52506045 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.443718268 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.021235568 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.978872648 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.462462675 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.451780508 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.451242004 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.448750105 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.623688959 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.031582102 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.530273504 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.952526226 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.770605401 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.7576279 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.452222612 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.507347853 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.469050511 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.760110575 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.455715177 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.505003952 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.900215705 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.758524694 seconds)
  done (took 171.623548823 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.695758439 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.463261273 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.564292028 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.606211911 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.061487435 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.041185405 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.445561962 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.573215705 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.569700061 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.708807673 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.453483772 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.5512627 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.668669504 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.524539485 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.190125035 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51781905 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.540160737 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.606851337 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.590829471 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.451645088 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.114777905 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.762966615 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.651201179 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.46521679 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.561322589 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.247511083 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.026677417 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.987641761 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.61730855 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.451224201 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.991859965 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.454157224 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.40203574 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.118026439 seconds)
  done (took 67.031448045 seconds)
done (took 638.295677766 seconds)
SAVING RESULT...
DONE!
