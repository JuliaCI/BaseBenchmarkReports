cset: moving following pidspec: 17370
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.364885759 seconds)
loading group "string"... done (took 0.504501044 seconds)
loading group "linalg"... done (took 8.384637255 seconds)
loading group "parallel"... done (took 0.170641231 seconds)
loading group "find"... done (took 1.344987308 seconds)
loading group "tuple"... done (took 1.924334568 seconds)
loading group "dates"... done (took 1.320522008 seconds)
loading group "micro"... done (took 0.209929948 seconds)
loading group "io"... done (took 0.548513429 seconds)
loading group "scalar"... done (took 40.667775294 seconds)
loading group "sparse"... done (took 12.767164866 seconds)
loading group "broadcast"... done (took 1.036418013 seconds)
loading group "union"... done (took 14.013854776 seconds)
loading group "simd"... done (took 4.857412739 seconds)
loading group "random"... done (took 9.712818303 seconds)
loading group "problem"... done (took 2.068690777 seconds)
loading group "array"... done (took 23.293447738 seconds)
loading group "misc"... done (took 1.070973078 seconds)
loading group "sort"... done (took 3.507787239 seconds)
loading group "collection"... done (took 20.7760049 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.573164465 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13326765 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143722516 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173854566 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200050943 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13647687 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153963401 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.163981178 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.049504892 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.206565997 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138044024 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.495866649 seconds)
done (took 5.316865351 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224075707 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082199074 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125020192 seconds)
  done (took 0.902905497 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.0724871 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170663455 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092656605 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107941311 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107846198 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090586925 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107710213 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106878447 seconds)
  done (took 1.485809585 seconds)
done (took 3.38961088 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.745309971 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.829476167 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.518406491 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.121669263 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153165124 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127540391 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.302500163 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.143089129 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.118687675 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.110612215 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173658489 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.384658567 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.474914625 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.92380852 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092358145 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124265566 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.07866345 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.702514258 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078259162 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114193979 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.505353598 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.105475998 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113162469 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125211801 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.203183538 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113159605 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179575437 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104873699 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.667247556 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099852428 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.181175301 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09374027 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158996957 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.211403788 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09175283 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.088785713 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675478759 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185879883 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.109923919 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.091129636 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.715772522 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076481977 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190016008 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103753824 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.1071669 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185201272 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100125287 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.092027369 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081512997 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099859696 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.15407001 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.467966406 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103541534 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.140693013 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092178158 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.698472633 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09101718 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.151637104 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.121728691 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10678476 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.079684881 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104604293 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156942212 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098603623 seconds)
  done (took 19.482014584 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114346981 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136722285 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090953706 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136272301 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135586702 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076645956 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098367767 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074373903 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123004031 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180353068 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134958809 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140367783 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072378007 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092034333 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097454259 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24643762 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116057523 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101451087 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094736372 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088272038 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135250914 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.092172517 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106266616 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106821797 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164358961 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200749617 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105170261 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120389522 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089275157 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095916088 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13881825 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156004991 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07352136 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090345837 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176970392 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103344257 seconds)
  done (took 5.020255752 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191126521 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098455418 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19759887 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.169740216 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146351869 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.15744015 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098042825 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259378742 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.186426724 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160421483 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12562653 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111945332 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07584223 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.092594267 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075945832 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.699088255 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165637104 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.14238327 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119139428 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099836931 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.078656401 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.158669334 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097970574 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.077728778 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080931892 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.129520322 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.327947123 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166411202 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07979332 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.215263759 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095989036 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106550039 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127796287 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191840119 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123991216 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.113725961 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098610836 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076993953 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.192903366 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10363494 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07269633 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120066756 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128801813 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114714172 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096091606 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103433684 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226220161 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095170681 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09423898 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.012867768 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196545946 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090892816 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.092869565 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332777753 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09295456 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099287106 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075359344 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279524782 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128661422 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092647866 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075888091 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097923251 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077431128 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.387033483 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101547093 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.91389699 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079908847 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.150747635 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095906212 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098321905 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082556503 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081385698 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11510953 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074719696 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095601188 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076807226 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.093776005 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074460235 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09695434 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094345369 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098322083 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075582815 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160154314 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113336607 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09626234 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122102496 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080025216 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092731189 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124114218 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077990894 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078373829 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135039327 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100158393 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.096110331 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097637108 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139216345 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092063868 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.158449516 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092300377 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103508234 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098336518 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124883084 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094223842 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097115652 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094310754 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079404336 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092171616 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076044219 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157763331 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076413489 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07481388 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097406736 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077288609 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107233729 seconds)
  done (took 22.850267626 seconds)
done (took 48.050411219 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.376438917 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105365013 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10736142 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105979248 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105736512 seconds)
  done (took 1.576053509 seconds)
done (took 2.326089369 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.312315123 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.191228218 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083027059 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168186272 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100023402 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172794382 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157356057 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113278529 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.18266323 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09670658 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162450472 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095317836 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082910952 seconds)
  done (took 2.693616817 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08807491 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112000834 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076915342 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08542762 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087634716 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087629237 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102343206 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106717748 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101741533 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080805785 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086714898 seconds)
  done (took 1.764061711 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0870292 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094027626 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093584807 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086238621 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087474427 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086052422 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102403735 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096680277 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102785872 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081147461 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087614601 seconds)
  done (took 1.753299486 seconds)
done (took 6.952094928 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.068229726 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.421848626 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11918559 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167251136 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.305200631 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213376175 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.603400416 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130994646 seconds)
  done (took 15.969807322 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.123447616 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091951897 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076853542 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091944751 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077593489 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092944665 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078101188 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093603515 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077394104 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07642038 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093806747 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077909294 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090829545 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074731408 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09195915 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074974472 seconds)
  done (took 2.195678607 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110183453 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110354662 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098244793 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083504024 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096947389 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079541862 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099568495 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081491084 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093922526 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079309099 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100389398 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082873553 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097757789 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077473979 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098140626 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085451216 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094311118 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.097849242 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082206863 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098260789 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083766297 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096400215 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.081984426 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099615914 seconds)
  done (took 3.063818426 seconds)
done (took 21.978132381 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161143926 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079719262 seconds)
  done (took 0.993279795 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096079651 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113405284 seconds)
  done (took 0.970804489 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102016104 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092266553 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130210203 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094450476 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093317971 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.075971039 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125578362 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093721593 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.076550303 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077449197 seconds)
  done (took 1.722221928 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07995587 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080435423 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101343655 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113122246 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087415864 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095351571 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080831513 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096686593 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081682918 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091242841 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085720697 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111280648 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099050042 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.096266667 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097505449 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082115121 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101914659 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097546825 seconds)
  done (took 2.442873013 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076554614 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078252305 seconds)
  done (took 0.917124808 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079064278 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075064385 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095236725 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094853379 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075696257 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075494012 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.091557347 seconds)
  done (took 1.351487115 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.461583641 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.178040166 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318051771 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109686134 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129532269 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.337645521 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.129959378 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10872888 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090628534 seconds)
  done (took 2.665615531 seconds)
done (took 11.820457875 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087520057 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.128515093 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.471068662 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.096849071 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089310824 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.142031209 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.249952149 seconds)
done (took 2.033023913 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334263075 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117486374 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083200872 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075353175 seconds)
  done (took 1.371739492 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075204482 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080918833 seconds)
  done (took 0.925235784 seconds)
done (took 3.065187694 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073944568 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.124393651 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073870802 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.072087354 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.089929621 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074806925 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.090165624 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071805364 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073661589 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092072376 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07425165 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090152528 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.074312679 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07399304 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087774728 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072174786 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089954856 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071976651 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.191224809 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087733996 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071443113 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090286451 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071491282 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071676101 seconds)
  done (took 2.856287446 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098755404 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092049593 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079666849 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098339781 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078978931 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.096939501 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080602973 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090947254 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080141025 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093536312 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078816573 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095197611 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076078493 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095635632 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077086176 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095486111 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080437341 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090901712 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076009589 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095973113 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.080319489 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091404528 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079437162 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096160856 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078604747 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095225392 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077125989 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091672541 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080146102 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09594535 seconds)
  done (took 3.390195485 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080601411 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071026346 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089664614 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082550839 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088206901 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0769794 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071439203 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089482936 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077291955 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088662324 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076993778 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088843178 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.072000525 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.076400314 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093389375 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077925026 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107492521 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072596873 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088940378 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.0762471 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076790974 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090422287 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074778096 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089696695 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071993434 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071097305 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089513709 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073228972 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090348085 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.072190322 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077239187 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095147088 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072573868 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102288698 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079161518 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088340348 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080355886 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089406346 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076322732 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07186808 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.088746143 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071961222 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089809467 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083036065 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.075843725 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090854778 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071813787 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093076429 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.074964619 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09661527 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071583092 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071789611 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095054615 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.076971874 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095081073 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071913422 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073147671 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.089259721 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076831742 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08955323 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072210471 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071465765 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095318605 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.073910873 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112607613 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083440144 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089161201 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077289473 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093090113 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079292779 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09511882 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090754738 seconds)
  done (took 6.734455506 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077483013 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100206501 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074521718 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073846119 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087794792 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072188284 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096513045 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073000793 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091579624 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091334466 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089429458 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07457258 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074159157 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093937436 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073278924 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091687992 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082909546 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087719854 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.073614232 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093092456 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072937695 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096303396 seconds)
  done (took 2.620357776 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214785107 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100905203 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135949693 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091836913 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110367973 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109018839 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079767491 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099533062 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079518935 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100137638 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082963249 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096152047 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108749452 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08279814 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100925985 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083711465 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096625343 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083797565 seconds)
  done (took 2.635211552 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087320604 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092856602 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098819501 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093235045 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077796251 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095601986 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08174001 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107483141 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077197568 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092628993 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08655872 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094704406 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078216363 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092756356 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077443275 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092160163 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.077784812 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075931051 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103330832 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098084946 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082694397 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103001202 seconds)
  done (took 2.749457066 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092239776 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094646678 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096805032 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096957219 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074022891 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094393004 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083578896 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093317433 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085417776 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095185265 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076487589 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094202769 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084432031 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093482714 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081028182 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09355025 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077411919 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075430455 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095013093 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075373032 seconds)
  done (took 2.534607804 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116647482 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106533074 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08936308 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121360906 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089998621 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107736988 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119052505 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089665375 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107140919 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103661346 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107660165 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09002203 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118206033 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114612883 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089082967 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119477354 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118018746 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100485055 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106636516 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090210649 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121138884 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090509275 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118015533 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107518455 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089547556 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107107997 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090343319 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114085217 seconds)
  done (took 3.729921637 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074943651 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074672455 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089928359 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072647829 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.072089811 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09041174 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.073726545 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090423315 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074790934 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072443107 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.091629138 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07457358 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092611792 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074291853 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07475653 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091869879 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074651034 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089718617 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072219013 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072370928 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091922375 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074832492 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091882526 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072329002 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072611641 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092010979 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072942974 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089972566 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075040168 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07270502 seconds)
  done (took 3.186870637 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083092911 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098333797 seconds)
  done (took 0.971301793 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072758113 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109035399 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072638176 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078024393 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098858455 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076540051 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102666041 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081712923 seconds)
  done (took 1.478389477 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099196944 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113249141 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081913676 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105241785 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093945471 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111480124 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155458225 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08182375 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.101586412 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076703988 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111830462 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075572131 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084268523 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100119391 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085563522 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10930444 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077162716 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103562177 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084603168 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095391026 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082241333 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109264246 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087850361 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101484092 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079119546 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105742377 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089648066 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105308315 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080776153 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106094701 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083557082 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087267236 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080331893 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099183636 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076783736 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112028247 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093524335 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099404916 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085924364 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099640043 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0849042 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092418669 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087703257 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101548264 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088731207 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099034349 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082293104 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091576564 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076913292 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080130154 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09229424 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080677676 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087838757 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086443153 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103898269 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095155581 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096004013 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.081913999 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.097951612 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079797827 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101878475 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080501265 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103962449 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079796522 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103884556 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085640051 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102253385 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075233012 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.070218065 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095431927 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.085691954 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117565922 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105017806 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082180514 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101394262 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077176365 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081551875 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100809009 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08482644 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104516915 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080407459 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101888963 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085980011 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098081951 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080881752 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101270597 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079026507 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097459684 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077038741 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115255031 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.078548329 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095422733 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077507974 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104702204 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080821487 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079256222 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094446904 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085732934 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087540777 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082785422 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100102044 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084122633 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.106134941 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08252875 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101097518 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085165785 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105621617 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082175125 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.098135598 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.072982681 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100959026 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.078530961 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084738034 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088280998 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081611784 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.097942478 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082633405 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104985303 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.077890327 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099349689 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086814527 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105457675 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078548281 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090982399 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.080512831 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099675131 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087223426 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106368507 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078738394 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09282271 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075528538 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084833906 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09891844 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.082344764 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099161765 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082115514 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.088571232 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.077715872 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099772909 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.087635548 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097511138 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082901136 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104933431 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084154356 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09689769 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.085781756 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.097560427 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.076773962 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103681518 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080802153 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.092735587 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086793536 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.098672527 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078751882 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.081612933 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10469823 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080548991 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099820706 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079387301 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100186734 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082472349 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09365179 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081638369 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096668331 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.088257781 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.098440628 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.074886298 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07325903 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101671227 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.077211415 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098146843 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.076509543 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.099250392 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082477731 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095563898 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07982266 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080481775 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111781785 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107759722 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083187724 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102577453 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089202405 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081795115 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102021097 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081238123 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101199039 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082539847 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.103979429 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084753577 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099965073 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08141273 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090843475 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083267631 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105771445 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.076833155 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078605782 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.095248373 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08200162 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107599313 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081148418 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101192389 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079161326 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101115404 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087561323 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.099440035 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081869019 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.095099412 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.081744841 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10416901 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08292702 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083191839 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106910503 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082628067 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094187295 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087499106 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097477425 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.086235727 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093738178 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078315492 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096410768 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084197465 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098217716 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080390992 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.070625075 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105684156 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087975082 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100865803 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078152765 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100375291 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091051762 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098364774 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08450415 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.100529478 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.084971739 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114733014 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077624545 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100504692 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.0901471 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100156584 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071213391 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.102888654 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079016658 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102709331 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079675667 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078316686 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100384688 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08362298 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101030684 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070921555 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100855131 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079307985 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096244604 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075836184 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104750871 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082284691 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081328635 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109250697 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101732164 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08187496 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083213184 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099163826 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082428132 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10150517 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08219353 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10067712 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080072822 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.094800335 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.081632951 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09509413 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077297511 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.098261376 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.081701145 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082831951 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10121263 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080886587 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104139418 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.081727077 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101272487 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117017954 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0784266 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.096164161 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082326437 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102466101 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081164287 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08101465 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094441652 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08741779 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099469231 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088131212 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098655127 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073790189 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100217571 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081586851 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101507671 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082519301 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101428877 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080037882 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080798342 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.099569501 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089371463 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096919798 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.087790293 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102731401 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084525919 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100126431 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082772372 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098513533 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.076826079 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.099908384 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083408111 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100526174 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081157524 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101561226 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082404766 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099230304 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079652961 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083154401 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100741273 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.082929548 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089059259 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077738327 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.096104581 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082229438 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103334868 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08238775 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099467785 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.079856753 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101636279 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.079858583 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073441222 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103408156 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084466114 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100503791 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091138657 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.096107523 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.081904965 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10991731 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071641221 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097279925 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078202214 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.096752672 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087040439 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083040725 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.107271988 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082709224 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.096529739 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.073874637 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.1022307 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080016402 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090745255 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07778271 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103613524 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079891549 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080517228 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100965255 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084310328 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101560623 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086109559 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098381389 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081258526 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101503304 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074138348 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096509521 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078698288 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081485587 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102011594 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078344879 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092590893 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082279442 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.099523765 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082749963 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099522034 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.079863547 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104620571 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082152543 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081061026 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106355222 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.071904736 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100436187 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.080419744 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099507158 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.07802347 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.100355551 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083311988 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101601204 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.087422716 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100160563 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084322559 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100450117 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.078567682 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081638741 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099923317 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082157155 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096396546 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083113353 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106716361 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.07863501 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.101070862 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083721053 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.09750098 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083535159 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102081469 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082488613 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103137994 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082800719 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082174548 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.103627109 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082078194 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102041615 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084519423 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.098985089 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086078171 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095946435 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088884929 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100679531 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083708697 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.099385034 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079285936 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099605846 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081825018 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080017854 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105824849 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083551671 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.095982476 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078113013 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096775589 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08236546 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10532982 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08826359 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101600729 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083249029 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09456321 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.074374077 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102014842 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.078170644 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.081083227 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103980968 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08677165 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101202737 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079138582 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098823694 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.086842422 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105197881 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.085271338 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097264829 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084261395 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101869492 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083423553 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.09892321 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082532184 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1024171 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084379108 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.080176227 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.09677938 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090971181 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105381058 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083679745 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.099304553 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085788617 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100994307 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076003221 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102449874 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084471979 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104236695 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082299334 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100638783 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092142995 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.095785504 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.081088638 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106287972 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082527455 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10573869 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077036548 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.100826948 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084728692 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102558647 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076272629 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078151888 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09782614 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083012969 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097400404 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076630124 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110516907 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087181169 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.100993784 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080197631 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098165324 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076573989 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07609435 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096653429 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083650307 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099521831 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.090147085 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.095846125 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077700371 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095075445 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082050333 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102153987 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084779056 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.074858831 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095875925 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.079127787 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.101550599 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090143596 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100079767 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082184873 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102827049 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.082179165 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097337202 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088510844 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092892424 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.0843262 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112099079 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083172659 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103547264 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086039749 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106868889 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083930883 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095641979 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084142304 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.081966003 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102601276 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.082961556 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102182881 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116058577 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083148576 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.078121652 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100402457 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082941453 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09730509 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089851069 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103381235 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084054197 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.103409747 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.081688911 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10305823 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089171512 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104008253 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083428141 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.102095898 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080403141 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100752484 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08012943 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080634292 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102825704 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084395432 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10084523 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.084249102 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.097384215 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092112714 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.10798211 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084713737 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.092960036 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078334378 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097607315 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077099539 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.083428567 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.095331192 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080506828 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098246691 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081590193 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104419428 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085361033 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.100385052 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085112002 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.081685869 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091270147 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085269295 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.101999489 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085080208 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093091105 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082626289 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102428494 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088337948 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107159833 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080620896 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10160735 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081001629 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103629727 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077485409 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.084569683 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10102575 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08127808 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.097167512 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082980822 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102724497 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084696273 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102568948 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085866771 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10114639 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086983576 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104553901 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.07596251 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.074963554 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.104349939 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.078733542 seconds)
  done (took 54.982824672 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123209309 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102343011 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07269338 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09223414 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119320683 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078152403 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073602057 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09647782 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078337562 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106416812 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073812596 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092542214 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113944076 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102894627 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117816875 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107250376 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073096022 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096307865 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074206704 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096228535 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095023677 seconds)
  done (took 2.82408752 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.097733203 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110520914 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0892558 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114441443 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103566306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091943095 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109008063 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110017651 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095202581 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105862524 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113944733 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093472665 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104286165 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10388731 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086279022 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107959375 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094666615 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105192951 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111619764 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090440742 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107590808 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109579801 seconds)
  done (took 3.094391087 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087304821 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081176691 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106599085 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.072885463 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100295066 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.073589615 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.105972581 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.075260262 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085152845 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.101900701 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.079360829 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10105128 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085987731 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.091918554 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.079684852 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094747694 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.086431002 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081721775 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102298304 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.075582321 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.121332433 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095134889 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076560444 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.078867285 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111008104 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.083626668 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.100348342 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081242069 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.0981388 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081162814 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.074238054 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103455341 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084499684 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.098756985 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.079972766 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100087693 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081466381 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094738619 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.078515836 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084379738 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096614631 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082483296 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108075445 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.078557411 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094739052 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083942286 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10075353 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.073618152 seconds)
  done (took 5.133676931 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114513672 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130195021 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10117944 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140273975 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.11711362 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092276266 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10169637 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139038067 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076033023 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.080214439 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.119296091 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11554261 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08069114 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107973508 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104496347 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082214672 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102771718 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077362417 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106999551 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.077321896 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106601142 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.084921832 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11638008 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.112598652 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087330042 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099134359 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077909329 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10644813 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112017792 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088176846 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106179108 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089895564 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117033417 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099229025 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07793007 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102632757 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.098869259 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101399854 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084444675 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095842341 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085011677 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106202125 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.085431067 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.118845218 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102347955 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083955602 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100906836 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076149837 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114080499 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.084565892 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11196325 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115374445 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087316265 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102611626 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088259291 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118125036 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100907444 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080461387 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105248331 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095002175 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095728014 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087231498 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11467351 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102637726 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091867833 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115464558 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.082639544 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106134262 seconds)
  done (took 7.775414747 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109008524 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107078934 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098307392 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119573796 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106273691 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08733567 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106482573 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.086716838 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106771043 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113631457 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087790041 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.154833857 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08242727 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114064075 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105768054 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087428239 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106579616 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08682882 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106937325 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086761918 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107138113 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117299357 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087562388 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117883271 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119809868 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085310257 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106146086 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087471807 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117526007 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105829848 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099866299 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.107175886 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086966444 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118872623 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119683323 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105372444 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082437959 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086925659 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107506696 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107009801 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083992111 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117427979 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087203575 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103906527 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087620468 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108108068 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118285583 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.099970568 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113656001 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113443244 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.087546477 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118309103 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10714034 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086940756 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117866211 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.126554583 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098789691 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118266358 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106577811 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098974473 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118310222 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127564339 seconds)
  done (took 7.330527553 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110247318 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112754737 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11774766 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074105972 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09581152 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085923491 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095623933 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.075803501 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112050805 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093490779 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115721526 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105852887 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089924802 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114945531 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085928123 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110698011 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106110682 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086093806 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112291253 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106270201 seconds)
  done (took 2.856117909 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08685919 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119287184 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079145884 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105729841 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08242035 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105492184 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081562346 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101566201 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07942407 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101301543 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093434758 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111658793 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079020413 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107187051 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112054888 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086897471 seconds)
  done (took 2.380253971 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101288807 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120526284 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123820265 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084347792 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076146504 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103508266 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081365163 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094589337 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.076047378 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107163131 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085017572 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10430703 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082920096 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.076183346 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.099749264 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08429606 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.094768311 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082952724 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101597475 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103218752 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104714482 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.081409459 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103888534 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080694428 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101624295 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.083971286 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105067517 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076573957 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097897807 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.0820753 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101741934 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087355246 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.095705132 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083622532 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.096537524 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.076619889 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101811182 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082310115 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.104570104 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082147402 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.076563808 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.101019483 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081595829 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100783458 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075005134 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101503291 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.076043985 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104653081 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080687255 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101350192 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.081854183 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105752256 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086007539 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109873857 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089283595 seconds)
  done (took 5.9413293 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094325539 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10268218 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084212995 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098490397 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082941018 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086183156 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103730047 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.081438685 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102276302 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076224329 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101063338 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084063448 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100951397 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083318378 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101766028 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084101498 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093517491 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081532955 seconds)
  done (took 2.50023799 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084736661 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07849972 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106359253 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078690057 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098937111 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081730745 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094850799 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077671631 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076288577 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098440595 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07824897 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100688047 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077596869 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.100289018 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079772188 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098564325 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082425938 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075970287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098272318 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074748283 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10101436 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07806429 seconds)
  done (took 2.780358063 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.102383832 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.14534412 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.102547677 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.242756965 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.08622254 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.103118433 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.107978947 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.110424249 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.11837792 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.103541713 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.084152294 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.102729668 seconds)
  done (took 2.269142265 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103214162 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135595476 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080233528 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101442113 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093508516 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1049799 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084108562 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103935859 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117637598 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098085025 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105336957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118360419 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097396287 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1167631 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113091294 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093230423 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104561963 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084054683 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101051533 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126506429 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084380173 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118822612 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103354441 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085267839 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103966405 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094647874 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120344522 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117249231 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083606012 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118766443 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112141251 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084834482 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117852789 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117840766 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081594627 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118950948 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103188922 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106981893 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113088802 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115514933 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08203461 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112497932 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119200531 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092367068 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1167547 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084453104 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11224337 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103860562 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085149995 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133260257 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113511438 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116808447 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093901026 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118528865 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118223403 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132705478 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097874835 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11626347 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113235489 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098630008 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11633785 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112714338 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115771571 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097470783 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113404386 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116650163 seconds)
  done (took 7.880839644 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118419831 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100904147 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086436561 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118065157 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115342348 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084646865 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104863851 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08363825 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104427324 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080048095 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150462633 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105140204 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115809117 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096010836 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105691678 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10378647 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086095163 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116069627 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082340201 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132825402 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104294187 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096218279 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11644677 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11565533 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11815056 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093152738 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10491416 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083809561 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106212052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083695287 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112390467 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105072291 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095425466 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100714321 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116189398 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085422053 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104131045 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092463069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10504797 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113429505 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097374084 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127547814 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104587653 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085801351 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119127402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083755011 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1060521 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082352194 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105576765 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101886296 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098511752 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118574626 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119533281 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116132096 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085268377 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105620799 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085639471 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104222036 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085182132 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113100879 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11673077 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085404914 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132941288 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105095444 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085369102 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115646411 seconds)
  done (took 7.69652444 seconds)
done (took 149.103153726 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098506206 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134391273 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094633242 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16242431 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080359694 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135149261 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114571242 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115590201 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.079301592 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079452456 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.099957684 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082522468 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166645583 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.079880471 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100003241 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.08303411 seconds)
  done (took 2.568515306 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.174536031 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.277180339 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099575457 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104891932 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086489743 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.102560906 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085096153 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.106187766 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081695105 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.111200371 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.081930721 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.102997031 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.09272174 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101898353 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081765194 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101022905 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.091849472 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101868372 seconds)
  done (took 2.857085115 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110369106 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143062026 seconds)
  done (took 1.121712113 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116762296 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178234852 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.290873572 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.364385866 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.129725488 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.122914783 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155484085 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100002651 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196537006 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125132945 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125385321 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.085493626 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13207962 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.111844539 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.089458806 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.105755936 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112334033 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.108081761 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.087292642 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.107526672 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.130744118 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087943047 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.110684098 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.087566821 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181174718 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122634476 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086635098 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108159294 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.107202698 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088163421 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11199808 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.10016232 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122434335 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.162643001 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.112166107 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.160254195 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.114072679 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086576641 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.107927725 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085637593 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11066361 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.110106063 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101465727 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.105683557 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086944103 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.113618862 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087688792 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106724589 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094524705 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.115880082 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113596071 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092021198 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156510859 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.116353228 seconds)
  done (took 7.504169008 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.780323895 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151925388 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085106042 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882765042 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11109478 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121939617 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.78680821 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107232721 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228584815 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.802608768 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098932193 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122020829 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226710642 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248051031 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.141225669 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309499909 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.689682166 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097862993 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.134901775 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.146922619 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091285938 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13287801 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124217161 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.402460504 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.108809273 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084437668 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111764312 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116647287 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157219454 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085883207 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110654772 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177356364 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.261936565 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.199090821 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086252247 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.082931507 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106704568 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.165047627 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265650056 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191846748 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171796164 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103719942 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083957828 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119176433 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105491557 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104430835 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16112116 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171786318 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168880281 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111034786 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094338385 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117069372 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116811175 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159489072 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082183473 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.33459106 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.341445233 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084668933 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114461229 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100654409 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259805312 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084355884 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223995288 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133355194 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188769169 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106353737 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77870093 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165317063 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084384248 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114217926 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092381828 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111949339 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095617282 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163549733 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386862477 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120626781 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.088002305 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106401839 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216051354 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106643548 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084334451 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160688619 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108824018 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093965884 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121122998 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096527396 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190814949 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.243041572 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.097667834 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116915068 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110661466 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.098081482 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.107920693 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208319175 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192016986 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17902782 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211139231 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096398834 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180982743 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163577399 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093993953 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189786872 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091930818 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123011221 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096569774 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213198227 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138506277 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085228047 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11252974 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091627514 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.140328773 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109568645 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.093179088 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166728402 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479176503 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16393902 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08159242 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110750084 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093771308 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181177775 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094389678 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25800541 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09441881 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164306583 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114576042 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08355022 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115675094 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160832032 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120445148 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093719379 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119171023 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11538405 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248412291 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195179479 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121748377 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213040648 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.17463007 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116249652 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170591615 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114631613 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165901751 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094466976 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118490746 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087171664 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782726754 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121127263 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091876363 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112092208 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183283904 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085522511 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107977514 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085803627 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081533951 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798316818 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087350849 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104837312 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086756086 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1158917 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.094361333 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113838712 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.08931835 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180369245 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20600817 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118526704 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091481371 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107043395 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157505616 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109316575 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085905791 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085157875 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108337168 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.093148679 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111899873 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087726206 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168256286 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177813499 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.197107395 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574265463 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085582762 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107144764 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205479656 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106684824 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303223436 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094383656 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.222277394 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163419811 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08200764 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.334929716 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164406114 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183455223 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111295032 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170760244 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08256208 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114339753 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.15925855 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084132478 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113987438 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157686915 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123372897 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09719399 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.142527938 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107948591 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223421786 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082433751 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166840424 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110116406 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097535197 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306669898 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107241522 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103688316 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157573117 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111378279 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085364147 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.721251971 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085937443 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117210009 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094663251 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221338439 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161444603 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115961088 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093110348 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118867872 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158434284 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209445492 seconds)
  done (took 42.743226301 seconds)
done (took 57.663120501 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29711061 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.250208002 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.245158622 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184429107 seconds)
  done (took 1.951674734 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172812442 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.123686132 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.14037866 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103406428 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.124969266 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.103907197 seconds)
  done (took 1.67338541 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405434885 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.328903891 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.275890301 seconds)
  done (took 1.912123794 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.241098326 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237295587 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.33922201 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.389408573 seconds)
  done (took 2.21285894 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.197355789 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096695095 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.117773169 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111259845 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163509727 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.201609719 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13833506 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.145379281 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102464181 seconds)
  done (took 2.219443551 seconds)
done (took 10.875962588 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.28655776 seconds)
    (2/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.168277273 seconds)
    (3/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.251310025 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.22146951 seconds)
    (5/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.264323452 seconds)
    (6/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.192143602 seconds)
    (7/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.081243826 seconds)
    (8/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.205862368 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.145795108 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.133284823 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098465387 seconds)
    (12/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.129598325 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.090637609 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.152477037 seconds)
    (15/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.230903545 seconds)
    (16/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169662228 seconds)
    (17/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.251829783 seconds)
    (18/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.116873746 seconds)
    (19/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.253641277 seconds)
    (20/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.205232517 seconds)
    (21/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.134248627 seconds)
    (22/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.116501527 seconds)
    (23/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.087415675 seconds)
    (24/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.19064807 seconds)
    (25/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.205717774 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.115242859 seconds)
    (27/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.107406223 seconds)
    (28/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.226390507 seconds)
    (29/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094639891 seconds)
    (30/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.196708275 seconds)
    (31/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12196901 seconds)
    (32/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197877258 seconds)
    (33/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.155477996 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11280961 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.22558499 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094422516 seconds)
    (37/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131375675 seconds)
    (38/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.17035268 seconds)
    (39/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.134276612 seconds)
    (40/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.181686658 seconds)
    (41/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.148880169 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.077351747 seconds)
    (43/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.145224664 seconds)
    (44/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.235207595 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.158801167 seconds)
    (46/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.194222324 seconds)
    (47/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180064492 seconds)
    (48/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.181346459 seconds)
    (49/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.189762267 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091949015 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13487015 seconds)
    (52/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.181134854 seconds)
    (53/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.070892001 seconds)
    (54/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081885437 seconds)
    (55/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.12554552 seconds)
    (56/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.120722135 seconds)
    (57/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.10475664 seconds)
    (58/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11528564 seconds)
    (59/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.100553097 seconds)
    (60/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.09226842 seconds)
    (61/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.173286163 seconds)
    (62/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.120004007 seconds)
    (63/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.091005914 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.107481419 seconds)
    (65/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072306219 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.136589022 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088836204 seconds)
    (68/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.131249771 seconds)
    (69/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.157293626 seconds)
    (70/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.124308876 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.112111412 seconds)
    (72/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.157683841 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113655306 seconds)
    (74/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.072814635 seconds)
    (75/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118541429 seconds)
    (76/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.087205828 seconds)
    (77/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.070313059 seconds)
    (78/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.177997022 seconds)
    (79/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.149672048 seconds)
    (80/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098990284 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.122583247 seconds)
    (82/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088168607 seconds)
    (83/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109954931 seconds)
    (84/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098786483 seconds)
    (85/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.094608674 seconds)
    (86/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.080591164 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.137089283 seconds)
    (88/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083048025 seconds)
    (89/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.20772048 seconds)
    (90/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.175446734 seconds)
    (91/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.074248311 seconds)
    (92/286) benchmarking ("sort", Int64, false)...
    done (took 0.104751276 seconds)
    (93/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.175406427 seconds)
    (94/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.237188723 seconds)
    (95/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.094767193 seconds)
    (96/286) benchmarking ("sort", Int8, false)...
    done (took 0.187540885 seconds)
    (97/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.180148038 seconds)
    (98/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072228295 seconds)
    (99/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121616277 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089710821 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074058284 seconds)
    (102/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.11645576 seconds)
    (103/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119785221 seconds)
    (104/286) benchmarking ("sort", Int8, true)...
    done (took 0.200765078 seconds)
    (105/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133949821 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113178342 seconds)
    (107/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089722359 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.11221794 seconds)
    (109/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094547159 seconds)
    (110/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184727618 seconds)
    (111/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220919577 seconds)
    (112/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.17789938 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.19886909 seconds)
    (114/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.129054034 seconds)
    (115/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.176631129 seconds)
    (116/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.109535312 seconds)
    (117/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096969504 seconds)
    (118/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117683991 seconds)
    (119/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.073290388 seconds)
    (120/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096032527 seconds)
    (121/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123868293 seconds)
    (122/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.085231593 seconds)
    (123/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.152122535 seconds)
    (124/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.07473707 seconds)
    (125/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.112320439 seconds)
    (126/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.136611032 seconds)
    (127/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080073079 seconds)
    (128/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.075070992 seconds)
    (129/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.103319859 seconds)
    (130/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099699925 seconds)
    (131/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.096936855 seconds)
    (132/286) benchmarking ("sort", Bool, false)...
    done (took 0.179062675 seconds)
    (133/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095736031 seconds)
    (134/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118315634 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089625932 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118365717 seconds)
    (137/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.192088045 seconds)
    (138/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096815002 seconds)
    (139/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.097631936 seconds)
    (140/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090761728 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117367628 seconds)
    (142/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.169637591 seconds)
    (143/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.105653216 seconds)
    (144/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088954348 seconds)
    (145/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127125985 seconds)
    (146/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107382105 seconds)
    (147/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.095605008 seconds)
    (148/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.081267279 seconds)
    (149/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.094791766 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.10647932 seconds)
    (151/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12146667 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08391472 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.113550364 seconds)
    (154/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.111469406 seconds)
    (155/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114618744 seconds)
    (156/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074503536 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.113443406 seconds)
    (158/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090347246 seconds)
    (159/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.121099233 seconds)
    (160/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.136837438 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.115699187 seconds)
    (162/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089708168 seconds)
    (163/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.110733498 seconds)
    (164/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.122642873 seconds)
    (165/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119539391 seconds)
    (166/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087504718 seconds)
    (167/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.146500067 seconds)
    (168/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.123742649 seconds)
    (169/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.107213456 seconds)
    (170/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.087744174 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113913172 seconds)
    (172/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.082509976 seconds)
    (173/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.093494275 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.119576207 seconds)
    (175/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116927087 seconds)
    (176/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112412414 seconds)
    (177/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120789294 seconds)
    (178/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.070971094 seconds)
    (179/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.122379565 seconds)
    (180/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.201861736 seconds)
    (181/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089084734 seconds)
    (182/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.095435274 seconds)
    (183/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091119714 seconds)
    (184/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.098343322 seconds)
    (185/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091109306 seconds)
    (186/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117537262 seconds)
    (187/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10828177 seconds)
    (188/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.110177027 seconds)
    (189/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097097672 seconds)
    (190/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111216739 seconds)
    (191/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.084197322 seconds)
    (192/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.098867452 seconds)
    (193/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.080183809 seconds)
    (194/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096281866 seconds)
    (195/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.1209352 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 0.224504916 seconds)
    (197/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089582353 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111073024 seconds)
    (199/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.180182867 seconds)
    (200/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07458995 seconds)
    (201/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.071822949 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114812744 seconds)
    (203/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072308831 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.098927369 seconds)
    (205/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.087903403 seconds)
    (206/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.095562408 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098897352 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120001918 seconds)
    (209/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.110700379 seconds)
    (210/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.105578969 seconds)
    (211/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087586478 seconds)
    (212/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.16835849 seconds)
    (213/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136004756 seconds)
    (214/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072493507 seconds)
    (215/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.131202216 seconds)
    (216/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.090780492 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108714494 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.083782018 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086210404 seconds)
    (220/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189662316 seconds)
    (221/286) benchmarking ("sort", Float32, true)...
    done (took 0.234090889 seconds)
    (222/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.098325685 seconds)
    (223/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092647952 seconds)
    (224/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.072607017 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.115358693 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089196587 seconds)
    (227/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.111741554 seconds)
    (228/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.091132293 seconds)
    (229/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112643612 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090655584 seconds)
    (231/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.094296525 seconds)
    (232/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072724223 seconds)
    (233/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.120345392 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090538338 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.106278285 seconds)
    (236/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.1561628 seconds)
    (237/286) benchmarking ("sort", Float64, false)...
    done (took 0.167208138 seconds)
    (238/286) benchmarking ("sort", BigInt, true)...
    done (took 0.241246496 seconds)
    (239/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.090966485 seconds)
    (240/286) benchmarking ("sort", Float64, true)...
    done (took 0.235781819 seconds)
    (241/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.096240514 seconds)
    (242/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073483898 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114080828 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075134266 seconds)
    (245/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11143102 seconds)
    (246/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.080622537 seconds)
    (247/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.087074448 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120556504 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089891938 seconds)
    (250/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108030608 seconds)
    (251/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.087875036 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182521049 seconds)
    (253/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.10975397 seconds)
    (254/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073091826 seconds)
    (255/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077798038 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112082498 seconds)
    (257/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.072535596 seconds)
    (258/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.109504871 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.096980155 seconds)
    (260/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11514754 seconds)
    (261/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.072507834 seconds)
    (262/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.073337207 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116475885 seconds)
    (264/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083768104 seconds)
    (265/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.111668259 seconds)
    (266/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07511353 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107662174 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090462069 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108254413 seconds)
    (270/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.087855737 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119573109 seconds)
    (272/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083938955 seconds)
    (273/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.079763837 seconds)
    (274/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.113314783 seconds)
    (275/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.074144944 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.110496811 seconds)
    (277/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091359989 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.095766655 seconds)
    (279/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.072575989 seconds)
    (280/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164318023 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.085993053 seconds)
    (282/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.109509138 seconds)
    (283/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.083720387 seconds)
    (284/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.105316202 seconds)
    (285/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.080810306 seconds)
    (286/286) benchmarking ("sort", Float32, false)...
    done (took 0.169252009 seconds)
  done (took 36.192526902 seconds)
done (took 37.101710837 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098832615 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149396548 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.093622843 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136576113 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.098074513 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121274571 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092377354 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.120079283 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.096976519 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.121718266 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095344058 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102461378 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094708275 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.117413414 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094554151 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138723546 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.096932137 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.115209725 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.086767583 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.108694054 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.086208882 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110599967 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088415881 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.101480672 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094269579 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115341437 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089497397 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118267755 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086556623 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108579883 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08459849 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090513248 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.108090583 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097398989 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.112381124 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087289108 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.117637223 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093274707 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111631161 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08743885 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115050181 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086811755 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113349489 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.091499983 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.109577576 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.087147671 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086369583 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12148462 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139758892 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088246189 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091645143 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.117435652 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.092988901 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.114500264 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085209903 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.110820368 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087876534 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139684767 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.085902727 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112093297 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.091229366 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.114584079 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085190681 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110228205 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.086869476 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116379572 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095357315 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108530956 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094344863 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.088892839 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.105963551 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.087152253 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.10873319 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084680375 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.11559942 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.093552289 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.104465109 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087095825 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.090738165 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.112407457 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085817691 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109386658 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088829569 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110473577 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085166847 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.101928357 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.084781656 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.111787871 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.087884695 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087040547 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.112569043 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089683737 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111987044 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094068464 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110347253 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.086718678 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110800552 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087380147 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111749412 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085484592 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105707131 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085414165 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.091408406 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.107431938 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.087363167 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.119102548 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.084556573 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.112837148 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085212745 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109205104 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10003753 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.116766307 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087505134 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111403283 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.083844302 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.112789746 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.083779932 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084345896 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10839707 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08699656 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.110194227 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087565656 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126088546 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.089652504 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.120074891 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.083567753 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.108735356 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08553048 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.086849473 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.113376625 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087830523 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.107350834 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.0860008 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105180352 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085894492 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108361232 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.08982646 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108012583 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086994457 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.086912982 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.110401536 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088199823 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111564459 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.087633261 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107716221 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.082512396 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.110105182 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08509809 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.111796204 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08821571 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086935558 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.106064613 seconds)
done (took 16.244785474 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096026654 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184140039 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144041259 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146563972 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.120115141 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.128804904 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122078023 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117888957 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119539988 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14032833 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113712552 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132901037 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147710428 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.095398696 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.128956656 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.117673482 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092622177 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.128376481 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127375388 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.136898144 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142769912 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.094388826 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.138762793 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138574638 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093161459 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.147297133 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121220894 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093782359 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.120340556 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102364342 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133768873 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.120910545 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.095697059 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130353487 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102944906 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117954752 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.105559969 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114626193 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094208624 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11773403 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132218559 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106621093 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.1155092 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.101989044 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117813746 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120855186 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093768549 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11565984 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095059281 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113205238 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099022834 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138378736 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092497273 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120009631 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118587576 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093839736 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120735799 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.097166055 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.120191322 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097744553 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.118322256 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.120100509 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.098876048 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.137747569 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092561086 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122353013 seconds)
  done (took 8.72518232 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107544838 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145758794 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.101410077 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.12608858 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.121236208 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083293184 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082730412 seconds)
  done (took 1.742310366 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087315598 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136863392 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116238583 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140077463 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108564158 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.14420973 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12501511 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085783304 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132509022 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094006876 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.1366632 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162564297 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085619173 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120517449 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118581393 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.109445701 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118632218 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.110986778 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09261082 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141231536 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090045824 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131255977 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122019132 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085958625 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.129680383 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.087060217 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174286657 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095528809 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108488079 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090016595 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114457994 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.178992831 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107257012 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119928813 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08224366 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136769795 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129512378 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089956388 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133095469 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.089682008 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.131011088 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091894607 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116329422 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090167274 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116275427 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098773487 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119361903 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093870052 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11465338 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112538478 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.119484203 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.105869498 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.110594774 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089214782 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.120226505 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091363808 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123649624 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089094067 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136106635 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092140397 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134953269 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135074267 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105414086 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13594575 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10222969 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.131915336 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.129753254 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.090280498 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091524134 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11708159 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135271192 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088494114 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.119431493 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100090009 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117133852 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112930254 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136050289 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088557981 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12260804 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088947831 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.111527101 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086425735 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136736575 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08926267 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11155645 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101930921 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12208628 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.089519372 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113921066 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.1071681 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11406501 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.096482892 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120386136 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.08857094 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125359976 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137045492 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.094888887 seconds)
  done (took 11.934392969 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089116888 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087286643 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116874919 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087488625 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111496731 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087400108 seconds)
  done (took 1.566222751 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11777555 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113396286 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100596036 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116783057 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.127352769 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134437565 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.134028267 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095821384 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.130741803 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.100982005 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135359293 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111364115 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140356508 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.116636393 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109837622 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117545381 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.11076014 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114506286 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.099297422 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11473829 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.102894281 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.116945355 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090145119 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132935997 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093758797 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118491764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092667562 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126147248 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.1006107 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12174545 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.092809739 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117753158 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093826965 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120471219 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135292222 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09310725 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113861974 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.09544788 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119030306 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.094436374 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136393505 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08967015 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123685275 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095021581 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.121691753 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.093188326 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121132184 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092623749 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.13418101 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096031453 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120542777 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09305446 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118180787 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095937365 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.118978394 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096437412 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119906711 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109694023 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118414341 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.117980056 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.08932075 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094500615 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122007299 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118898629 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094918922 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119820959 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093773712 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113388683 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090540106 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.092335555 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121390899 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.089464584 seconds)
  done (took 8.954984004 seconds)
done (took 33.887548805 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.664188808 seconds)
  done (took 1.64316954 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.808968932 seconds)
  done (took 1.79001586 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.732521625 seconds)
  done (took 17.740045339 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.459937904 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.543847814 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.960457749 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159938593 seconds)
  done (took 3.105789656 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.936932636 seconds)
  done (took 1.941346721 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.290755181 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23284797 seconds)
  done (took 1.510434188 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.804707648 seconds)
  done (took 1.802065003 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.492421073 seconds)
  done (took 2.483832067 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333648196 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.168853007 seconds)
  done (took 1.503126115 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.560346571 seconds)
  done (took 1.55948237 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.866919365 seconds)
  done (took 15.866156939 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236905515 seconds)
  done (took 1.247642974 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294884725 seconds)
  done (took 1.294714156 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.4822573 seconds)
  done (took 4.482988965 seconds)
done (took 58.96345417 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098591085 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098678624 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124425003 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095979039 seconds)
  done (took 1.411728555 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100370304 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118323911 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09815114 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11844226 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100868647 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11934567 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.092407046 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.162769382 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.093787784 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.120498772 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.094221467 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118195448 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.094437105 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.11779529 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091293916 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.120727623 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.096641793 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11966155 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094247893 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119532981 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.090867388 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119971635 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.096114609 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117199178 seconds)
  done (took 3.625053643 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097626836 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090707721 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117634567 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089207008 seconds)
  done (took 1.399304439 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101439609 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130993985 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105524221 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125375306 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107517461 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131748154 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.088734996 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114002974 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.090134728 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125605038 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089847357 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.135207717 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.1063155 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.109470515 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.100566683 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112285402 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086757272 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131772609 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098489865 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126141157 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087715812 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123521366 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095813726 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128426825 seconds)
  done (took 3.663564657 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172040407 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127546137 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136739713 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095399936 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162579603 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.113104446 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.113431398 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139093272 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089144944 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126067013 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092246277 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16571358 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.097666012 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117637588 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.088831914 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.120926609 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097094977 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123629457 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090572364 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127254664 seconds)
  done (took 3.403746723 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098566561 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089963794 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.11041096 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088132085 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122304751 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092031134 seconds)
  done (took 1.611612809 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.088092427 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083954238 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.11107647 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084506927 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114727867 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085014078 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082473504 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11070642 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084614396 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.084791735 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.109646805 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083900024 seconds)
  done (took 2.136665329 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.371424605 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.113592509 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.089805626 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112501362 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09266036 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113028522 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101036593 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.11413834 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11796152 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.114206409 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086289268 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.117190061 seconds)
  done (took 2.559462687 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204078377 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093332152 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256841566 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344507655 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152763491 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16105303 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273514456 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159407497 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179921324 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133251047 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189612815 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126802793 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148963123 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173335705 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136156942 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.172400278 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169961162 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19500031 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117888396 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223590302 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15912627 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137153674 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17345965 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146736488 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133600568 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153470249 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.089695308 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124400877 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167627679 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164685741 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169075157 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144918339 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108940952 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19363124 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227869718 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174846084 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300049653 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128465763 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.183198352 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.178993569 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223112547 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138372277 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192198254 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151438206 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099320541 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176816912 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153572553 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17751579 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128763499 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110361929 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206121952 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173429049 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.176091424 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10588868 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32233233 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118546197 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14374839 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17752156 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182504471 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186225024 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164239155 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092135611 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20639478 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175901702 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175917297 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115767753 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164119504 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123144468 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171620634 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189394128 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173699769 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160799423 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180056154 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13098164 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16116763 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165829176 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148637362 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145803499 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155823641 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118296089 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14484452 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10693303 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124900444 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156064255 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120015352 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198189239 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13175076 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.18573209 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197740784 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153512863 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129966247 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160434392 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160831987 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144230107 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.090086648 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141734239 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157731121 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153707084 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101548136 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152651377 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139225434 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123816594 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121404346 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120624813 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155535436 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104810065 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16239908 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160002588 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.097937271 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16072531 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146429164 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155030578 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165044102 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181516648 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102547137 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128672689 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188982339 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154291373 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10413116 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168667453 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180458809 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.160646415 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135186967 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164829363 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188051246 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138976344 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183607674 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109928417 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130496515 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.147256662 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155805956 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125304124 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152941346 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126766835 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.147149972 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18801939 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.096459857 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133114785 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16982665 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097278897 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125827872 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11095531 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132154816 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139080444 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.116878751 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133358517 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153127599 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155506342 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149091921 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128287109 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137718978 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183080012 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128817808 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.155880256 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117429151 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116079607 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174056879 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181315958 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098115572 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219807312 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.166220817 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193053243 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161373421 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101484518 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173139951 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125190738 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.089648255 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160498421 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158059995 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160085771 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178547904 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188434833 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162227967 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148019081 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146484419 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163227233 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169068555 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151042266 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114302337 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158721791 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155264383 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.091632463 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120652012 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123072083 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11198288 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127296089 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101157596 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175644423 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158380294 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207974027 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129808483 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138552153 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178398935 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122659651 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160857505 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.167293486 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107849727 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179390993 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174926105 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163598746 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139248786 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169662353 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088795025 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120300786 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102795301 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161201974 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130217737 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102094356 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139749332 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176976168 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168820269 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146784669 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19811884 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161451543 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187184055 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119639648 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.133122497 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165587974 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153386004 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179075001 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104745698 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154866194 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172615488 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137575734 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184414658 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158103462 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164137975 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19494803 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152861246 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099055848 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146140994 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161486321 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136752917 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133310101 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14217867 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132524405 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148825508 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103894086 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122409415 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176522762 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112489975 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20282483 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.125069761 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197181059 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096485231 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138718972 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154099456 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114811372 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.11425223 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165242208 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181992062 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139760447 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154598541 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168567334 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099718041 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306419287 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181562455 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178876952 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133073782 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137917195 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129111282 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155242309 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159061597 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174238222 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14049023 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173681204 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126280436 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138451114 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131543832 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115612067 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145192249 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.147780036 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128216671 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122508977 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140233956 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179355633 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139413065 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153989718 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132711638 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143481349 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145001825 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111644419 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194696139 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153674223 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172421472 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151115565 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163434634 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193123314 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121833796 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098817513 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.123176753 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173591217 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101825747 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157592384 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.179969316 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190769706 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153340698 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162666919 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135263028 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.089650371 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155257108 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145598678 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193935735 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136863701 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104598253 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211895332 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120247347 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125796697 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157688382 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279007787 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113925592 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168407077 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.114124602 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273385442 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094148098 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125384496 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1555181 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165886885 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107450394 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176389133 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159903355 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11216617 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156099054 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134072844 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184046801 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19855989 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163232623 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171330869 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140417821 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15390981 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158636233 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172821287 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112297808 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140219229 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158805124 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177400942 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.1835024 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.10167586 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158803081 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159754474 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157342387 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17061913 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130219073 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195468876 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100052422 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159759397 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137391629 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11903192 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125034876 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.182115596 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127909837 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17139876 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153226031 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101117609 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123363409 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146829739 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155466825 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110457186 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125592504 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174547639 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.093822153 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159697961 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175428732 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126717739 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12324278 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143069803 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134027047 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110362869 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142497713 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13203026 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139067138 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175931337 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127748967 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172691511 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170405413 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158703421 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157011902 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112848516 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663247183 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.096986298 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17650999 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143643451 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179978892 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144171365 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162085566 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158226747 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117598565 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162198647 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146773435 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.217078683 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159762191 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.1529782 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099755343 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142836119 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111638821 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.127392916 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146654082 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157615816 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108130886 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133100924 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153479348 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113095727 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.141168073 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135301733 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177754296 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113962126 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176518801 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17633998 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134615819 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162712396 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169953546 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09828348 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.155458004 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166801235 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138430672 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146277364 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.099724431 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131756132 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175032887 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093048067 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157023094 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15733051 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156165688 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158836314 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.103152552 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157231276 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138809325 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155628129 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098843309 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150957143 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155455432 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09908278 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125441355 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149097502 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126825696 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154512124 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122676836 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139215167 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174055084 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121822708 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100998565 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280623233 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153277949 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187431051 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.149301915 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103026896 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139690849 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142628248 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149600705 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12774569 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.125099183 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100323796 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.127101842 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.176427795 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.15100806 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124519762 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178452802 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156201394 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194023872 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13200146 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.2624412 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107006181 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151071622 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.125830811 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.098176885 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139139194 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1015405 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139750244 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185749793 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173652765 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148205617 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.139777723 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095776065 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124136115 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100519612 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156779736 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150316275 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15342303 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11062473 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.114165858 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111138697 seconds)
  done (took 73.610793722 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.143988981 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.12778143 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.143893917 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.189316695 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16152687 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238474581 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.200370544 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221894565 seconds)
  done (took 2.525637942 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.100933241 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.152911424 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.134369484 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.120469413 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.08865749 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.325163091 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.133810626 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119674011 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.117118104 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.133489691 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.112949613 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.518335314 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117626633 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.093577653 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.109272265 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.110827246 seconds)
  done (took 3.574138304 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.146979109 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.513681208 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.818579887 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.22047328 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.217150179 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.168834727 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.696494418 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.176216908 seconds)
  done (took 12.049359295 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.120994939 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.108311833 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158251389 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158787852 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116515283 seconds)
  done (took 1.764441541 seconds)
done (took 114.331114086 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094781155 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095091667 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119671747 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.09658095 seconds)
  done (took 1.489833826 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.110334407 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077290087 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.107799929 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076987305 seconds)
  done (took 1.473168794 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.413534489 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.076515538 seconds)
  done (took 1.623125784 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116220559 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129273299 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103838168 seconds)
  done (took 1.456663655 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101935739 seconds)
  done (took 1.205378452 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096968616 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095937139 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137122436 seconds)
  done (took 1.433231356 seconds)
done (took 9.783246172 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112484407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.426994341 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382141825 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13459759 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.692633672 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.403583183 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00829104 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152216568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1621821 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087392549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132073557 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679980097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020934224 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.342513876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.006780921 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.437148314 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.700136884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089877188 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121272038 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088946234 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015760861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088228101 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115910225 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089906071 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667613741 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418511775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088409127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.479425319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086555296 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120799341 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374762603 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115232987 seconds)
  done (took 16.932246835 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097255291 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173233686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095627912 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117273216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.091816788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116728863 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097273776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.128835127 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17788671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087923354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133459914 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087865586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093747763 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117399248 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108428008 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115272041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090428639 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117932938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09495052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117318602 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106512286 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115161723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090585053 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089170371 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115119321 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100992502 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116998752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100504555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115597009 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09416235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118443236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088843423 seconds)
  done (took 4.616816819 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139755979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18345239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095666425 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149078742 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.164754736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089386089 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1999486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154152316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180827135 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087833795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133589075 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.08745534 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151508325 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089036937 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136770193 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087853345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119054072 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090432679 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122779995 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089091106 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136442925 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087130887 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117214387 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091040438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088204426 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128822368 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088321625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.129193187 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087879756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121511101 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090944975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116510187 seconds)
  done (took 4.947577971 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098495703 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.097636794 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131290703 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.132117628 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091690077 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.095492174 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.124595997 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090536545 seconds)
  done (took 1.968879701 seconds)
done (took 29.566946118 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.10800392 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.092858782 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129316138 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100167377 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.125282143 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102224623 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.114628652 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099265813 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.127055292 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096312784 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103581235 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.114797186 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089115519 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114300964 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.10088702 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.091431233 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130601559 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097593674 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136320937 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.103031162 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.117042427 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.098400854 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125818125 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.107006563 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.136249156 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.107591094 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.131448182 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.093674299 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116447847 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.088718025 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129859251 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11022061 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119497793 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104684803 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120720576 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091793134 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.088480791 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11893933 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.102923527 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.127769401 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094271581 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.127114879 seconds)
  done (took 5.73290531 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.117219301 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.159595719 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088205229 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.116923102 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089139317 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.154916302 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.123894527 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.116320024 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089237144 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.14098195 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.114174683 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.117800599 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.089761173 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.116872888 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.088691024 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.088792317 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.139916257 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.140794293 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.117606655 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.147545609 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.133386988 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.14732979 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.150625381 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.111990929 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.158935564 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.151540052 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.109645454 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.152903408 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.114324773 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.115208221 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.1172198 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.148921532 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.087762557 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.11628265 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.156649973 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.124796285 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.143818679 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.156941791 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.119092141 seconds)
  done (took 5.989371292 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100080174 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102980385 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138117989 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.179906135 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124809042 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.125770345 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.100127639 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135105889 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104387456 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116486829 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090319655 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149312975 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104940229 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124625759 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089515644 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102858096 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135603342 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090337611 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121974276 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106177783 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135763794 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100790373 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.129918356 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098490659 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117336936 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097094131 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.119773371 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.103635433 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12134853 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096363287 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.120568987 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.092501082 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.09172212 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128593861 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.092189174 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123261386 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.109879982 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125874827 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097065759 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118360218 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101309085 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122044818 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.109718286 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.155468505 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089184855 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.123983781 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095075941 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124259511 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087212277 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135842491 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098590959 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089181443 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132838758 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116818869 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087792155 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102855718 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11817411 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.092115595 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.1259587 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094838462 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136803369 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.09366942 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130524802 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089493925 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.094009967 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117192154 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088426629 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121841452 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.109983223 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121754084 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.126880623 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.117079449 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093887478 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124910211 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094374154 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126010311 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088710323 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129942478 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099100897 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093064191 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126744645 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091947516 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120556634 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105895048 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131318899 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096339348 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122575819 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.094396996 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119784599 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098753081 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13013436 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091971786 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12104729 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104929203 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117621616 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091565173 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094864923 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121206507 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.087296437 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129698088 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.094568369 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116657443 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098669695 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117998941 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093899264 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125887711 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092267819 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088597172 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.121046542 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094491469 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117258473 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09181617 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.121243769 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.090762095 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129803769 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.09575672 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091364354 seconds)
  done (took 14.073792308 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.233479949 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.211862363 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187243855 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.295551192 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.109950196 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.14453775 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210426613 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.160990894 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.08979501 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157456687 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176286926 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184140819 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.172633125 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185642559 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170429627 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.089131717 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.136689316 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140812435 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211523986 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.291128036 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108432514 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132836358 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.157734804 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157701384 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.10737104 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133918089 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112149309 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.138055351 seconds)
  done (took 5.743283564 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108035406 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152882348 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096369097 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143518351 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144722291 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090775277 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093698515 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119158256 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101854009 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132842037 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091221413 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12509419 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.094480522 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.128883355 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.088942561 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.127555007 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.098715867 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.127866625 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.092375114 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.121591216 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.102827524 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136486796 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.093997645 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120407524 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105504828 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121193936 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.092195641 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138844679 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127298306 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114662112 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.114103585 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098251363 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.103087501 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.117873876 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.091732071 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.120664041 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091473147 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.118850158 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091160259 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.085656049 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.117340036 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.079974623 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119051617 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10444034 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.124884531 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08678011 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123662224 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.093223746 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.124849259 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085342329 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09119191 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12081861 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.094428109 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129919738 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.092806112 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126089211 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092730847 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.092107587 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.12676792 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.091708809 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115813676 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091099593 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124497829 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.093042401 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127586999 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095720315 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.118857482 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091902989 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093760059 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124263418 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.092397245 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126745435 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.086699308 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.119413369 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100279794 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126748498 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093112689 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.090661735 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120941026 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.088611183 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106889622 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.08885865 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076154715 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.121955731 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.08886273 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119811214 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092073358 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.122778819 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105584267 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.1272719 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.09683596 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.118089002 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092373923 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122128449 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088110338 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.092718644 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135825948 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137211772 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087896907 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086937736 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.133651291 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090455508 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.116737564 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081434587 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128818932 seconds)
  done (took 12.508686654 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132360017 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.168101717 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.119420851 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.108372695 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.152953859 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.131196885 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126215096 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.097117596 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.119666797 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107440818 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12231764 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098805422 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093293989 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.132553961 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.160299008 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.09990334 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119890126 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104062057 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123276729 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.143318279 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138968949 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.157503537 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.129379576 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123082314 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095160855 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.155257408 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164359399 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.102900272 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.130796632 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131008115 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.131979505 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162376832 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.131636525 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.124677155 seconds)
  done (took 5.482511097 seconds)
done (took 50.642495368 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.24257038 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.420361085 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.200361603 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.201721353 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.212318867 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.216653062 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.198549023 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.200003505 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.976933505 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.19644656 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.200557401 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.199583512 seconds)
done (took 27.596892421 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.223492218 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.360756437 seconds)
    (2/2) benchmarking "String"...
    done (took 1.539828736 seconds)
  done (took 4.027875924 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.201507675 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.199387487 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.445955731 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.20088316 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.217316425 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.218580874 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.201103122 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.202796514 seconds)
  done (took 15.811883259 seconds)
done (took 25.39437186 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.258580694 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.398248848 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.453378459 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.211146257 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.202045785 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.20169994 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.202737538 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.229381346 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.210144897 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.203266075 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.194132315 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.48891233 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.214800109 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.594267858 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.20662734 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.209648077 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.212052994 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.444978361 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.199961343 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.244435266 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.183585225 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.210235986 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.21475769 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.219591926 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.207567185 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.205833404 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.218887746 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.197193475 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.410735398 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.2303316 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.240142595 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.202153709 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.225808517 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.200535818 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.300827211 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.233535224 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.400906951 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.206238962 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.189518833 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.201509857 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.392107585 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.584958192 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.201491983 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.202440095 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.202898276 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.262633333 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.19542101 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.886612896 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.20712034 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.221009482 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.218099914 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.581891197 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.209622747 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.199751854 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.201192969 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.443416104 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.223818018 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.223896172 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.241732463 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.213200835 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.199527605 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.203435762 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.225180006 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.203251971 seconds)
  done (took 143.353723208 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.202296333 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.202882751 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.2037126 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.255756468 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.203530866 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.20339256 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.204158699 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.201294924 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.202984556 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.231996908 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.200964857 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.201672283 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.20391902 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.203908035 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.202182739 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.224600224 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.206288061 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.204602722 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.200224848 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.202218994 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.219081358 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.198317433 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.219334906 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.203631921 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.237357888 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.272237841 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.212155414 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.218807643 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.20223218 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.202145117 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.233278773 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.250693234 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.747240489 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.053542573 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.210676369 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.23095101 seconds)
  done (took 80.206527063 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.198441351 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19944564 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199085984 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.229538424 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.199499193 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.702953006 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.704415809 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.904166536 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.469885246 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.337548366 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.424667147 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.200934387 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288537541 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208758491 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197361891 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211648497 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.224348192 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198452401 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198720703 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.69512929 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212126855 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.196948617 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.361418553 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210637989 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225563863 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.594293465 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.355223127 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195819693 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223930723 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.521910229 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.23818609 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194490571 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.510528402 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.680291522 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305827794 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19844597 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22422854 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195701133 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.468947963 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197067857 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.195552908 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.198935626 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.807738858 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.19936812 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.68532485 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202085195 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.091677406 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.195947934 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196338494 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.198239432 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.757901495 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.20301221 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197457038 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.202237153 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.196592147 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196761457 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.223136858 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.194233061 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.287322584 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.197242777 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.20105721 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225911763 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198300117 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.272316496 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198491445 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.299685378 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.254282015 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.310438685 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.688474839 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20110872 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291666982 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312221467 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.198641936 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198577796 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.198977249 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199154249 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.200667694 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305206964 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198743172 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.56306229 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.361299127 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.211987224 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.285123454 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.29446853 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200051366 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.511276922 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203035546 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199203862 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.860219562 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293392881 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198483043 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199693218 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198391473 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.564962872 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.690734271 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.354930066 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203390714 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.485141698 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.199391467 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.574025582 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.679843136 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.831127513 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.203276469 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.200108725 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309215579 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.363534971 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.215150486 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.201300253 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.290667927 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.203574638 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259701896 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201422656 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.20208984 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597109916 seconds)
  done (took 363.432957269 seconds)
done (took 588.122156891 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.828155952 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.810866119 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.358811141 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.805733701 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.769463063 seconds)
  done (took 10.704062886 seconds)
done (took 11.832959744 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.374832073 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.375928783 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258666999 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.379388683 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235118 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.392410946 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.359724208 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.22551366 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298773978 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.277142603 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.297585427 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254276653 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236668201 seconds)
  done (took 18.098104637 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516995775 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.204900521 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265687874 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522941461 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243785828 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551369912 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40273056 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.228031759 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401847305 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222068949 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217934634 seconds)
  done (took 17.91183307 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524267498 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.206837934 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269601784 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.572187892 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248406485 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528719456 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.41395507 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.219683567 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412517758 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220192006 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216715299 seconds)
  done (took 17.966307781 seconds)
done (took 55.107199534 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.243718919 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.366309051 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.228985421 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216350709 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.213509019 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.214824522 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217543402 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.215740307 seconds)
  done (took 11.049856361 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.212869608 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210357114 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.210311644 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209209227 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.21301284 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.209558159 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212352899 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211679582 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213196866 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21245423 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.21467919 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213840026 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.210336769 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.212412386 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.211231742 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.212000969 seconds)
  done (took 20.523672476 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212143385 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.212102872 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.21107709 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.210058147 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.212036917 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.213062191 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213623541 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212644339 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.211527122 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.212310285 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.212021282 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213919985 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211260909 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.212914728 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.212256615 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.21254482 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.213550463 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211811119 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.21563147 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.21018079 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.211230767 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.212248046 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.21266671 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210350208 seconds)
  done (took 30.228507741 seconds)
done (took 62.934328632 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.209437192 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.21149938 seconds)
  done (took 5.557747379 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.270847146 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.277139969 seconds)
  done (took 3.684454102 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213206199 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.214958499 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213712507 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.214067904 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216087647 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.214925952 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.216077152 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213357781 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213714163 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.214282517 seconds)
  done (took 13.280099435 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.21483373 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.214857399 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.213060677 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214660177 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214477337 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.212462156 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.215401382 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.214885689 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21615677 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212972458 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.2153327 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212474892 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215765885 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.213864761 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.217258833 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.214588969 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211796889 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.212962121 seconds)
  done (took 22.994236926 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.228477311 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.238227038 seconds)
  done (took 3.602950333 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.342169977 seconds)
    (2/7) benchmarking "second"...
    done (took 1.254638273 seconds)
    (3/7) benchmarking "month"...
    done (took 1.324351176 seconds)
    (4/7) benchmarking "year"...
    done (took 1.313097092 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.255464465 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.234630621 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.256863276 seconds)
  done (took 10.118640008 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.216840802 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.405519404 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.508265175 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.776501006 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.219767693 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.223123986 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.080198141 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.222103601 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.224308127 seconds)
  done (took 14.013607193 seconds)
done (took 74.388366208 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.209364455 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.226117222 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.216812562 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.237998548 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.554011377 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.237833356 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.213684833 seconds)
done (took 16.034936865 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.196601238 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.19951941 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.211556864 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.199813766 seconds)
  done (took 9.946426856 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.152793606 seconds)
    (2/2) benchmarking "read"...
    done (took 1.531800524 seconds)
  done (took 4.824267783 seconds)
done (took 15.910463867 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217977906 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.21787513 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.217146051 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.214913349 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.216519239 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218850978 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.217608758 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214678366 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.218286537 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.219858845 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.219960913 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.218638779 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.218728187 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218136894 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218745359 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218546238 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218815988 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215172409 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.216688662 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216889099 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217630043 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22004305 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.217412848 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.218237494 seconds)
  done (took 30.368379995 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219503616 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.217010582 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.22046415 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.219911288 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.216385786 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.219137352 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21895405 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.216139225 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217609238 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.218197431 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215951305 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217965169 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.221878936 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.21840441 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219765567 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.21864032 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.220528698 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217716852 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21998021 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.218139407 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218734388 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2167169 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.222412623 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211708305 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.208369934 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208673705 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.210984906 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.208385614 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211159485 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.209551579 seconds)
  done (took 37.641214916 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.212497913 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.209105185 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.203861394 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.205019162 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.203968099 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.20327541 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.204079779 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.203707377 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.204824781 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.197599806 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.196741199 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.196692452 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.196088587 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.197137425 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.198813905 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.196930203 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.199953047 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.190404806 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.191569938 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.1913657 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.190279099 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.190383095 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.189320045 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.191032562 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.190221163 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.191203882 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.186614152 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.186923734 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.187525154 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.188275341 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.188662174 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.187730362 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.189682687 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.188948861 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.184378403 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.184202246 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.189354978 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.190811518 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.185137154 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.185813545 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.185698663 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.186216929 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.183716673 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.183273288 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.182735438 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.183883905 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.183369332 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.183680429 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.185311995 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.184368468 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.183205078 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.183314653 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.18210577 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.182679237 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.182965098 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.18326637 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.183837616 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.182992516 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.184126449 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.18290801 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.182889045 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.18265584 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.183481598 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.182963921 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.183846187 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.183907399 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.183473208 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.183884498 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.180118389 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.181628675 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.180731302 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.180623519 seconds)
  done (took 86.769808806 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.181390367 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.179240925 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.18161408 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.176423932 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176388819 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.17999605 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.177730362 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179574316 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177036871 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.179587869 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179407761 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.177796128 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176907473 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.179315476 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.179245952 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.176663449 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.181201563 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.177474178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.180496231 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.180008632 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.179590673 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.178612823 seconds)
  done (took 27.041859144 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.180686195 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.182029409 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.178021323 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.181390177 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.178425039 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.182667324 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.18100073 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.182868502 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.180227686 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.178523581 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.178486814 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180971963 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.179177275 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179569955 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.177831808 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.179128937 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.179546857 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.178205167 seconds)
  done (took 22.3437654 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.178431097 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.177347222 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.179676403 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.179329102 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.176013278 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.178528189 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.17581818 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.176916598 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.17797062 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.176006622 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.178348249 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178233514 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.17520773 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173314388 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.175438363 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.173460586 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.176707692 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173560549 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.176249829 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.17335514 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.17337693 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.175768542 seconds)
  done (took 26.983408186 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.173980543 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.173905522 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.171982558 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.171779204 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.17200863 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.174761449 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.173728348 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.170484125 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.174590734 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.173418541 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.170535499 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.173699036 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.173059118 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.170493973 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.171114774 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171734463 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.17317232 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.171762246 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.174361739 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.171449098 seconds)
  done (took 24.551680084 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.174276306 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.175649135 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.174763098 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.175916136 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.175310622 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.176262663 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.17677252 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.175678035 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.176377414 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.17684735 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.176255028 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.176419269 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.176147742 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.176975861 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.175665046 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.176918963 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.17726242 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.176500233 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.176625346 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.177076798 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.17631643 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.177114359 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.177183926 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.177183244 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.177275374 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.176711666 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.176457201 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.177901211 seconds)
  done (took 34.039629334 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.176915501 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.176503516 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.174669248 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.174407274 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.173732801 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.17418148 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.17460729 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.174051545 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.177123436 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.17495278 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.176221999 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.177097694 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.176928298 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.17688384 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.177561682 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.17659801 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.176727751 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.174865216 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.174474646 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175949168 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.178375616 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177258321 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.177674832 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.175566977 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176073979 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.177350372 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.175715328 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.175519973 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.178669632 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.17657416 seconds)
  done (took 36.385845672 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.224881617 seconds)
    (2/2) benchmarking "in"...
    done (took 1.222172283 seconds)
  done (took 3.54974865 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.17572379 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.178267176 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.178298316 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.176588424 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.177860122 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.177790851 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.1787507 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176247173 seconds)
  done (took 10.522552007 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.178704771 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.179443006 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.179133684 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.180002775 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.179813456 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.180190023 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.185813324 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.198793946 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.182953119 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.183124932 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.188225053 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.187968842 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.185138297 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182966873 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.181939987 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.18566596 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.182668539 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.183383334 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.182714172 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.184620109 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184092933 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.185281012 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.186240634 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.181737489 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.184775668 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.191738189 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.188050855 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.184131532 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.183509578 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.18641437 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.18404773 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.18106912 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.184618345 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.184259339 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.183738193 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.184666085 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.19178745 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.203349164 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.19018481 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.18598403 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.185849761 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.182490994 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.185888696 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.186448256 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.187184651 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.184366473 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.186885217 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.183724371 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.184849627 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.187788389 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.1898968 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.185248771 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.182793495 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.188703973 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.186733382 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.191777244 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.203316503 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.188938633 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.193537223 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.195023713 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.19663659 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.193634114 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.18801249 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.186830646 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.195189557 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.204697477 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.19403161 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.200217969 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.184724701 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.186431358 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.192076097 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.198892628 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.208742956 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.187282943 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.186017237 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.185204785 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.185278213 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.186411197 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.192153973 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.204244723 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.185963497 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.185324844 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.194285057 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.204311147 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.186478538 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.185328349 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.187351482 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.187036913 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.186607654 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.195125102 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.202942116 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.187752864 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.185499612 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.187249774 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.187114504 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.187146973 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.185980446 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.187840178 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.184162633 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.187662947 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18733163 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.190784708 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.193381127 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.188168659 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.188839141 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.193295398 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.188391087 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.187495142 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.193075074 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.187534621 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.18733272 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.188305997 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.193101001 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.184627025 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.189221392 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.194632368 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.187812762 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.189087527 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.187706696 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.189219913 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.196869944 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.209046841 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.18934958 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.188401853 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.191912554 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.197699412 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.188878008 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.191582883 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.190112752 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.186382314 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.186314365 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.189335042 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.192960046 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.1850543 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.184877557 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.185832204 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.209508885 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.189650961 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.18730247 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.188413327 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.186837861 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.186071683 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.183024054 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.184041622 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.181359474 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.1834253 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.186841995 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.181386317 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.181825926 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.183990263 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.176535006 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.179519258 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.180707558 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.179767701 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.179045813 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180352815 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.180274574 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.181098264 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.1810921 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.178651987 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.179419929 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.179809998 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.18154331 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.17944384 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.182135385 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.180036688 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.179286566 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.178577991 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.179588792 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.17895957 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.181006043 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.177449832 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.181932287 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.185820149 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.180446513 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.179770516 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.182029383 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180960137 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.180925644 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.180352914 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.182610454 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.188022022 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.180121054 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.185833751 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.181767483 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181100037 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.181329162 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.180074903 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.181538681 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.180984845 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.183525691 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.18783473 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.191660051 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202827623 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.181016631 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.183790413 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.182141808 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.18414229 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.185191058 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.181648941 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.182636727 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.180832849 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180569262 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181956381 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.1832327 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.182785628 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.18212679 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.183094776 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.184194367 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.18382957 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182960785 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.182977469 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.182545322 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.179560507 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.183634801 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.182800744 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.181383623 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.180708426 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.18047961 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.182346803 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.183392754 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.18297778 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.18699116 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.180068882 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.183322799 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.183591106 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.182994459 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.182113736 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.184991418 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.184046124 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.183123552 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.18983634 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.198849316 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.184754398 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19056106 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.199740059 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.182941298 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.185167031 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.184187565 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.18158675 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.185572781 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.191293597 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.184173318 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.184517581 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.184334365 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.184775101 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.185087664 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.190262239 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.182300118 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.183541884 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.18460366 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.185665793 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.183861953 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.186397284 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.185625156 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.185422151 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.185799273 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.185731895 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.18667999 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.185150853 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.186184108 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.185300822 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.185764561 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187026473 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.191991626 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.18974744 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.185145565 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.186625487 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.186531556 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.188828004 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.184913357 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.186941508 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.18596673 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.196901978 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.207374337 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.19170869 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.187064994 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.187764974 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.192291393 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.187897625 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.188623803 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.187895467 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.18760114 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.186735942 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.186831613 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.18523786 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.186765431 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.188406111 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.188456789 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.18738866 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.189991979 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.187066108 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.188264513 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.189767095 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.187932266 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.189128951 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.186210018 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.188747773 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.188796861 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.188624218 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.186036619 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.18759682 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.19474594 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.204526981 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.188843195 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.187337587 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.186435707 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.187839297 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.187707819 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.187579578 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.190157609 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.19477725 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.191112216 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.195375788 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.188816419 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.196947906 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.188383454 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.191927837 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.194507634 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.186194617 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.187260841 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.188221973 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.190421314 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.195285073 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.20579701 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.189977779 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.191819219 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.189253287 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.189556831 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.189514513 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.189196037 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.190258779 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.189711936 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.197976256 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.208703755 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.192480573 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.190612303 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.18770306 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.189557535 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.190159625 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.188849421 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.191433332 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.190175779 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.190495087 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.19050645 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.190298249 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.191227268 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.191727797 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.191065718 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.188845686 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.190926311 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.197699227 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.209512783 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.194547202 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.19220896 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.197370503 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.191913366 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.198971935 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.20810519 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.19187432 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.190858893 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.192396269 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.193165816 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.190993172 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.192918393 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.193188237 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.19350858 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.196493825 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.191784136 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.193080807 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.192347854 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.191275129 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.191920852 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.202276749 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.211516399 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.192999823 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.19626944 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.190386185 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.193350975 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.19606264 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.191835635 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.19132598 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.195669576 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.201337206 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.19863596 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.192851763 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.192411859 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.193388966 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.193556513 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.194431915 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.193026416 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.19346572 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.193604054 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.194076452 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.19414949 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.196733456 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.194770326 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.192813857 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.195969736 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.19413033 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.201392535 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.193315375 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.194023822 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.193905814 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.195435182 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.194075315 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.193637606 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.194672685 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.194432432 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.195143285 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.195572179 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.199334572 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.198475881 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.196892781 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.194463726 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.1950532 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.194312211 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.195145978 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.195656454 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.19463609 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.194820516 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.196384807 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.194398827 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.195369941 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.19408353 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.195042643 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.194722798 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194803082 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.197256312 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.200500682 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196083046 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.192546685 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.195822856 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.19569346 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.19468199 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.195438041 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.202093585 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198338476 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.205003284 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.20338415 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.199101148 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.196630203 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.199493165 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.202089675 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.196219202 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.196917771 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.19731406 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.19725356 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.197436785 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.19862297 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.198889122 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.203627276 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.196390669 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.196693469 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.205286442 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.216765397 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.198058582 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.198884788 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.200994649 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.197664005 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.196918571 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.19832859 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.197724151 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.204526712 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.215154623 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.199133931 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.200079521 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.196494113 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.199400167 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.200612588 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.198637843 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.198373625 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.196068395 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.199169597 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19816365 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.198780468 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.196361557 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.197365813 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.198447273 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.200951418 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.203064046 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.196774727 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.200468895 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.200014898 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.199349106 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.199833529 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.199713497 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.197864073 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.196070427 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.197932074 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.199257816 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.199370926 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.202436058 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.19860514 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.200480839 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.199662489 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.199685756 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202262711 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.207751779 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.205741933 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.198570285 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.199440701 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.200280925 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.201843327 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.19945459 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.201410524 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.200475043 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.201333789 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.201416994 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.200629158 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.20195891 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.20260822 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.214214329 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.221006444 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.20066627 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.201540316 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202977727 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.201464776 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.200263543 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.201900656 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.20322802 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.203182353 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.207113979 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.20171852 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.208176198 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.218204179 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.202550415 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.204619988 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.20477808 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.207943426 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.204468555 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.201019988 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.203293657 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.20701454 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.214947093 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.202584025 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.211546558 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226541112 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.218923174 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.203372324 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.202390127 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.20151069 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.202719881 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.204892662 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.203321744 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.203226512 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.203928633 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.203760475 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.203326755 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.207731403 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.204146026 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.206046008 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.203774411 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.202760553 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.203570169 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.202135211 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.204796796 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.204343841 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.203823725 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.204109748 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.203671795 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.203410403 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.214676883 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.227269775 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.204508504 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.204920169 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.201609948 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.207840021 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.207323425 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213295069 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.208885687 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.205722696 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.204722285 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.206076355 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.204437352 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.20412545 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.205225712 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.204405317 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.205793479 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.201932443 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.218173414 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.21149884 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.209938288 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.205218994 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.205347127 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.207145951 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.206549052 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.206938279 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206612634 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.206922024 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.208574385 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.209028162 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.206665151 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.205662317 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.209034404 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.212612962 seconds)
  done (took 712.002768003 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.205110758 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203916425 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.203900066 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.205378193 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203884588 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204703339 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204316477 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.204222529 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.203989811 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.203813014 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.204052222 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204670059 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204508557 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.20533404 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205486472 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.206193081 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205677019 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2052847 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205590982 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206113337 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204980405 seconds)
  done (took 26.429169542 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.209166432 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.204851472 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205457237 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.208867527 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205332407 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208303928 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.207175497 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208394165 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20850798 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206205381 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.210424209 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208842567 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.20654853 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.206713398 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206430468 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209071624 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.210188919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205888004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.209526354 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.207305154 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209419784 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207316254 seconds)
  done (took 27.699541461 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.208025356 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.209874653 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.209950852 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.205839104 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.209668652 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.206926497 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.208435622 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.209648252 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.210529116 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.20976288 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.208435061 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.209801833 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.214904686 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.212954473 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.210806085 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.2091491 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.210355223 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.210118024 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.210353275 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.208022373 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.214861363 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.207916886 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.207798634 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.20899664 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.211318384 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.21039776 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.211891332 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.210333222 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.211380661 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.213905419 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.211060627 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.210409243 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.211625307 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.209657453 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.212170065 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.214446934 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.21142086 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.208586929 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.210624402 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.22067177 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.227937051 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.211831524 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.217715237 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.211839943 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.211291391 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.214375919 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.218516018 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.209826867 seconds)
  done (took 59.277113689 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.212419399 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.212902039 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.210280837 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.213091231 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.213275624 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.212779729 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.212736922 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.21321446 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.211444957 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.211397312 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.213859702 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.210906788 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.211018033 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.212454024 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.213328196 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.210931047 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.21050536 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.211445655 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.211890764 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.211534283 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.211357206 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.214031225 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.214345195 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.212246359 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.214285426 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.211454503 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.210505786 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.213128783 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.211819364 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.211541984 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.214098887 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.213111409 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.214346981 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.211395878 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.212525338 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.21525922 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.213594457 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.212726762 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.214425354 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.213264178 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.215237723 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.214927626 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.214568127 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.214795472 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.211454826 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.213260277 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.212322059 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.212712027 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.212679143 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.215388484 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.214559404 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.213483299 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.215967766 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.213671447 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.215122257 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.216092213 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.213225549 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.213411147 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.216679253 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.213789279 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.212692056 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.216404075 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.213616021 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.215835544 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.216873873 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.213185015 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.213858757 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.215943962 seconds)
  done (took 83.638437324 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215030176 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.216339599 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216569535 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2168059 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216681407 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.216517111 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.216553378 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.216820638 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.217028945 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216064617 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217113618 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.217795512 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.217087597 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.218628145 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.217016564 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.218791355 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.217440818 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216985795 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.217205504 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216931333 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.217430156 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.218178225 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.218157988 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.218806809 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.217705676 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.218227588 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.218668675 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.218034088 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217467836 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.217627286 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.21822292 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.218836403 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.218141312 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.219162927 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.218924018 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.218485089 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.217967626 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.218935022 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.218988885 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.218914789 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.218149848 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218904841 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218482906 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.217885038 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218801064 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.219448469 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.218737433 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.218903496 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.218892173 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.219386847 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.219715083 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218644972 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218724618 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.21928561 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.219559847 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.220298657 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219615096 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219657609 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.219563592 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.220278999 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219709287 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.220972797 seconds)
  done (took 76.668333449 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2198001 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220342079 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.217120475 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.217932313 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220019231 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218429949 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22038686 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.220887445 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219564381 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.22098045 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221653062 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218310832 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220017427 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221201885 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218074055 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221098501 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218634872 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219062563 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221466846 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218565156 seconds)
  done (took 25.533679771 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.219160176 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.221444479 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.219035068 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.21897187 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.221194636 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.21928578 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.222105419 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222352807 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218974659 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222386116 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221936399 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.222194759 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219943936 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.21965371 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.222769912 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.220202786 seconds)
  done (took 20.672743077 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.220328484 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.222428191 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.22131225 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.223011856 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.219874133 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.220142314 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.222432827 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.22013745 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.21996569 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.224339339 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.221841979 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.221742949 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.222979022 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.22265076 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.221151997 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.222947911 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.220556308 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.220886341 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.223891477 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.223065814 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.222573489 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.221452554 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.223924288 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.22406501 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.221329054 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.221618945 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.221375943 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.220195073 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.221366211 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.223879717 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.222873339 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.221337307 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.220911852 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.222326132 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.224420991 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.222485498 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.223656591 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.224899469 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.225396638 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.225088487 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.22480677 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.222785588 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.225953031 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.224354765 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.222673002 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.224857975 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.222511691 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.22249462 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.221990387 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.222552769 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.225077506 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.224949296 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.224911626 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.22642903 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.225345549 seconds)
  done (took 68.395977964 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225661726 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225978053 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.221710349 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.2255766 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.226060833 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.224369508 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226822926 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.224801781 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22345354 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.226332364 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.225041087 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.226836366 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223764136 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.226800904 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22417469 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227962783 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.224045932 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.223545479 seconds)
  done (took 23.198438833 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226369283 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.225377781 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.226423404 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.224031106 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.225007768 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.227037031 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223615041 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.22684302 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227226013 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22474479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226150995 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.227379368 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227887097 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.227784181 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225136736 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226217051 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.227492127 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227271693 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224397178 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226018067 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227672171 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228710379 seconds)
  done (took 28.124600572 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 2.227458913 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 2.225262274 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 2.228291079 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 2.233601608 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 2.225599428 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 2.235056267 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 2.226216047 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 2.225159449 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 2.234347204 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 2.233885154 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 2.22752982 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 2.225903236 seconds)
  done (took 27.895401669 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226759659 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228044761 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225389416 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228051384 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228460322 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226420943 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226923728 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227222244 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229084551 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227586684 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226322123 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228180749 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229984579 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226708785 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229749882 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228645003 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226521149 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227431635 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227458722 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230613793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228041533 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230625826 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227756419 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227007596 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227693721 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228738533 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228837034 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228580102 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227781277 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230990182 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230046531 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227872755 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230360372 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228411883 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230749023 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230216606 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22949291 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230853815 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230967361 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228978597 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.231102449 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231672257 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231070119 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229406395 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230962961 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229408376 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230184653 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22861476 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229617473 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231841593 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231355449 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230180681 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230862199 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231860684 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232275014 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231767129 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230617898 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230123134 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232894032 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23065787 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230131543 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232332659 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230710487 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23042858 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231964438 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230671616 seconds)
  done (took 82.294344894 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230108042 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.231005515 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229772584 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230586408 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230458329 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229297626 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231154826 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230799407 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230124949 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231111029 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234236848 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230084017 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23053222 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23080479 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230982596 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231040678 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231640786 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231920405 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230753888 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234159685 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231243909 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231717314 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232140698 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231338649 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232550138 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234433972 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232599816 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232856682 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232301801 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231708758 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231913466 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232121634 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232613762 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.232113818 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232101148 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231067207 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232236087 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232185602 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231757322 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23506326 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231114692 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234639136 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23239683 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232742762 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233954607 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233004996 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233241379 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233343393 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232373493 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232809954 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233850611 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234659473 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233729714 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234088899 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233499374 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23366753 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23335787 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234269696 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234506777 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23625714 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23265138 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233373101 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236003723 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23376785 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234134407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234323578 seconds)
  done (took 82.496823208 seconds)
done (took 1685.666482678 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.396124614 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.351330569 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.234982588 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.238374717 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.235534174 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.229498886 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.246389651 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.23550814 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.23459195 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.235840065 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.235562093 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.423416016 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.228577687 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.235456941 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.235472279 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.329423133 seconds)
  done (took 25.483116516 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.259765524 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.245736741 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.347176084 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.263411656 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.264031712 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.417273474 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.297427247 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.248739946 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.401031391 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.287199373 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.240230429 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.268884667 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.244029071 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.236817307 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.264841165 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.416285656 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.478646134 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.249565807 seconds)
  done (took 27.588679772 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.654532693 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.266154719 seconds)
  done (took 5.080148758 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.260715614 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.244121932 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.244857652 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.244118703 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.236046461 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.236580487 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.242987429 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.238719285 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.23882117 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.365082339 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.249891931 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.253522993 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.262690367 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.245116201 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.241518525 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.282611466 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.386921647 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.242579913 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.241844995 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.250040468 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.244622987 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.328188356 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.282667727 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.244461286 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.361359355 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.246656819 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.251761421 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.251739316 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.420724902 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.244107821 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.244189216 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.244894997 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.245965343 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.128072471 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.771969031 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.256417487 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.26804463 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.253948599 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.242639335 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.408806229 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.248272676 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.251173509 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.238942077 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.766856601 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.392395046 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.358536432 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.257616985 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.252605896 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.248053833 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.308433359 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.251962784 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.248804118 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.287958552 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.008432731 seconds)
  done (took 80.433140965 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.285606022 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.242063125 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.415205176 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.26053081 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.238809353 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.258677882 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.244293784 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.507279635 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.306431542 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.247722474 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.552259641 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.771377888 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.268693763 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.287962759 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.084328096 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.289842263 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.24225798 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.239518243 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.261592176 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.242767793 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768073188 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.247305568 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.256989599 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.399109909 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.278946606 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.723445708 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.242915327 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.248274189 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.249137057 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.242086264 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.730179567 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.262651134 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.293752131 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.24293779 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.49481906 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.603628858 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.57322049 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.253903692 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.271682759 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.245363326 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.260680588 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.725434704 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.588296127 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.256971655 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.245947717 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.73271918 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.243866797 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.248286126 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.253550902 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.485438574 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.247781219 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.244372874 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.242006053 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.249420383 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.242257575 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.311183788 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.344304201 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.724980825 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244091733 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.256496406 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.254765696 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.242569955 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.247038719 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.242949727 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.247839466 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.589929135 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.390956097 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.245113557 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.586785387 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.728115499 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.263628215 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793095276 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.262973719 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.250476205 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.253609066 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.242801564 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.250607729 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729240201 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.283884733 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.244205643 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.570222187 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.251414485 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.553761466 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.262633894 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.261949059 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779714459 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.251310026 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.326606877 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.245019793 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.246535452 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.244626339 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.246342224 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.501393327 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.262753275 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.244977013 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.245294778 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.291052026 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.251233356 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.246240091 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.2509205 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793585572 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.271682517 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.245119733 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.253973598 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.245530189 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.250553897 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.248773176 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.245913302 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505600956 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.248864156 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.253373318 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.24926488 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.245727104 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.250250353 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.399849631 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.252458469 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.540997181 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.25296029 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.246202362 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.2479325 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.24548087 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.285369416 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.247603331 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.246128119 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.148053347 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.552666896 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.263392291 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.246425846 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.249400411 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.246761136 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.246946435 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.250440474 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.270925505 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.248957669 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974749335 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.288507863 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.274976193 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.247822674 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.252120198 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.247662476 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.256741484 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.247735728 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.53256949 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.507634328 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.392297751 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.251050436 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.248482587 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954598475 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.271673091 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.426613509 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.268140795 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.248226461 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.493549532 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.423350951 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.251130766 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.249288761 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.250018483 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.502435364 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.247932769 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.545721613 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.758285703 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.268690524 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.248748832 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980920192 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.971747943 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.256139768 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.256199977 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.559555451 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.263455662 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.249860432 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.25018613 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.250620203 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.248616268 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.253438559 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.25162105 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.250447324 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.250427717 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38310941 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.43815873 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.268052309 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.261627928 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.731932639 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.284472574 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.250720202 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.263033957 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.254920439 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.249971166 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.323872338 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.251052799 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.262588357 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.253297749 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.256086711 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.801446243 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.256173565 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.257203963 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.440181392 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.904494059 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.274332224 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.250360498 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.251421426 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.127532139 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.756366029 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.264801358 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.546640904 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.260125965 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.288358772 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.26104943 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.264053349 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.756452795 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.261427012 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.252574344 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872259657 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.271111926 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.798790337 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.253134339 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.253867437 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.813226426 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.269873272 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.255347314 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.251319917 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.262842946 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54502777 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.254176033 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.275429976 seconds)
  done (took 478.088157032 seconds)
done (took 617.827138486 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.252096106 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.253261373 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.241576064 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.25698981 seconds)
  done (took 10.182034038 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.263623195 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.260575665 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.261654594 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.260050028 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.262572671 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.259238997 seconds)
  done (took 8.748484573 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.253596309 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.255620876 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.255929842 seconds)
  done (took 7.942915045 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.452271826 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.275334985 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.566346676 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.27651716 seconds)
  done (took 8.750088806 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.260773531 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.260465743 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.261719438 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.262452358 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.264050918 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.265137083 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.262276835 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.262972974 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.263954763 seconds)
  done (took 12.541424302 seconds)
done (took 49.341430643 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.242635222 seconds)
    (2/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.967106134 seconds)
    (3/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.617946685 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.259672017 seconds)
    (5/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.248118376 seconds)
    (6/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.766176541 seconds)
    (7/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.038767387 seconds)
    (8/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.362353025 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.491625819 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.275789958 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.298088483 seconds)
    (12/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.100459687 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.304865545 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.867850678 seconds)
    (15/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.245527728 seconds)
    (16/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.259894888 seconds)
    (17/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.252881847 seconds)
    (18/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.267657929 seconds)
    (19/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.12905072 seconds)
    (20/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.0592491 seconds)
    (21/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.247797456 seconds)
    (22/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.344008386 seconds)
    (23/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.320371852 seconds)
    (24/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.191964749 seconds)
    (25/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.261207496 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.139452736 seconds)
    (27/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.364573174 seconds)
    (28/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.243650195 seconds)
    (29/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.333342139 seconds)
    (30/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.311114469 seconds)
    (31/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.364107266 seconds)
    (32/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.243918486 seconds)
    (33/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.26145891 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.079692957 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 2.257114448 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.375732621 seconds)
    (37/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.262007698 seconds)
    (38/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.246780453 seconds)
    (39/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.273861156 seconds)
    (40/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.283418681 seconds)
    (41/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.252149227 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.246347958 seconds)
    (43/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.849155852 seconds)
    (44/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.248857935 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.281084193 seconds)
    (46/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.247311943 seconds)
    (47/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.246281547 seconds)
    (48/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.24873679 seconds)
    (49/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.245086774 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.368508223 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.521985867 seconds)
    (52/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.245204769 seconds)
    (53/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.260019601 seconds)
    (54/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.254662759 seconds)
    (55/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.462252919 seconds)
    (56/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.84952751 seconds)
    (57/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.251887766 seconds)
    (58/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.287861091 seconds)
    (59/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.251565544 seconds)
    (60/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.362626351 seconds)
    (61/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.115788463 seconds)
    (62/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.383319551 seconds)
    (63/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.284887085 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.315817495 seconds)
    (65/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.056167939 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.154786504 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.147730448 seconds)
    (68/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.262476071 seconds)
    (69/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.251120753 seconds)
    (70/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.283930601 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.266311605 seconds)
    (72/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.252089576 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.285396087 seconds)
    (74/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.254401683 seconds)
    (75/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.313399237 seconds)
    (76/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.246653608 seconds)
    (77/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.87539594 seconds)
    (78/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.250177325 seconds)
    (79/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.259485174 seconds)
    (80/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.275822539 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.604731317 seconds)
    (82/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.387883355 seconds)
    (83/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.260633422 seconds)
    (84/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.262474156 seconds)
    (85/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.26011119 seconds)
    (86/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.266179479 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.60934936 seconds)
    (88/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.542236399 seconds)
    (89/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.00750836 seconds)
    (90/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.262343922 seconds)
    (91/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.249877417 seconds)
    (92/286) benchmarking ("sort", Int64, false)...
    done (took 2.276194511 seconds)
    (93/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.243545768 seconds)
    (94/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.26348486 seconds)
    (95/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.248699378 seconds)
    (96/286) benchmarking ("sort", Int8, false)...
    done (took 2.26107889 seconds)
    (97/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.247964881 seconds)
    (98/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.269277837 seconds)
    (99/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.383321385 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.261616301 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.256852406 seconds)
    (102/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.270396102 seconds)
    (103/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.29115954 seconds)
    (104/286) benchmarking ("sort", Int8, true)...
    done (took 2.261136918 seconds)
    (105/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.261204532 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.889696941 seconds)
    (107/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.714637127 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.663397504 seconds)
    (109/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.338689181 seconds)
    (110/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.360808552 seconds)
    (111/286) benchmarking ("sort", BigInt, false)...
    done (took 2.262068675 seconds)
    (112/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.448289285 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.251104827 seconds)
    (114/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.25126882 seconds)
    (115/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.28096911 seconds)
    (116/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.46048048 seconds)
    (117/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.484029312 seconds)
    (118/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.388843728 seconds)
    (119/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.253178536 seconds)
    (120/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.287433892 seconds)
    (121/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.354298754 seconds)
    (122/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.289618348 seconds)
    (123/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.609203618 seconds)
    (124/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.254520007 seconds)
    (125/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.264290002 seconds)
    (126/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.284466897 seconds)
    (127/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.252991987 seconds)
    (128/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.25350742 seconds)
    (129/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.62105235 seconds)
    (130/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.980256054 seconds)
    (131/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.268754104 seconds)
    (132/286) benchmarking ("sort", Bool, false)...
    done (took 1.795552761 seconds)
    (133/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.288161847 seconds)
    (134/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.542480892 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.986048016 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.544893243 seconds)
    (137/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.264387883 seconds)
    (138/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.273666781 seconds)
    (139/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.254754245 seconds)
    (140/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.282803961 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.375188646 seconds)
    (142/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.736192041 seconds)
    (143/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.276585751 seconds)
    (144/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.317766593 seconds)
    (145/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.27999767 seconds)
    (146/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.281531817 seconds)
    (147/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.252148088 seconds)
    (148/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.617961333 seconds)
    (149/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.821420725 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.273562942 seconds)
    (151/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.26909548 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.001780947 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.293061203 seconds)
    (154/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.110231725 seconds)
    (155/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.312649584 seconds)
    (156/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.252191944 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.279518023 seconds)
    (158/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.109731291 seconds)
    (159/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.374403723 seconds)
    (160/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.269882223 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.105439374 seconds)
    (162/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.284232702 seconds)
    (163/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.350423315 seconds)
    (164/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.159253198 seconds)
    (165/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.289868988 seconds)
    (166/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.279210881 seconds)
    (167/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.476728239 seconds)
    (168/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.624246256 seconds)
    (169/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.255785674 seconds)
    (170/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.278047095 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.157142972 seconds)
    (172/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.527951734 seconds)
    (173/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.451561918 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.266973786 seconds)
    (175/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.364286555 seconds)
    (176/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.278154235 seconds)
    (177/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.353191351 seconds)
    (178/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.450776448 seconds)
    (179/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.279046731 seconds)
    (180/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.254359199 seconds)
    (181/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.40605392 seconds)
    (182/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.261968603 seconds)
    (183/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.376131299 seconds)
    (184/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.260019976 seconds)
    (185/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.295469926 seconds)
    (186/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.368787749 seconds)
    (187/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.283425982 seconds)
    (188/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.258164372 seconds)
    (189/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.30881432 seconds)
    (190/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.266677857 seconds)
    (191/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.353174023 seconds)
    (192/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.25335811 seconds)
    (193/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.642588245 seconds)
    (194/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.270417993 seconds)
    (195/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.294312882 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 2.266354732 seconds)
    (197/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.993769231 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.32721077 seconds)
    (199/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.254411629 seconds)
    (200/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.25904122 seconds)
    (201/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.254713762 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.284907746 seconds)
    (203/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.76653159 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.257841655 seconds)
    (205/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.353051139 seconds)
    (206/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.2555214 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.199926539 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.475875223 seconds)
    (209/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.276933989 seconds)
    (210/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.260600182 seconds)
    (211/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.268875228 seconds)
    (212/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.30492509 seconds)
    (213/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.314424989 seconds)
    (214/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.254730501 seconds)
    (215/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.29909442 seconds)
    (216/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.06906746 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.295773765 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.040967348 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.313696797 seconds)
    (220/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.376642024 seconds)
    (221/286) benchmarking ("sort", Float32, true)...
    done (took 2.268244726 seconds)
    (222/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.256517827 seconds)
    (223/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.300845262 seconds)
    (224/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.257096229 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.272991408 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.695543741 seconds)
    (227/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.312453419 seconds)
    (228/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.296459474 seconds)
    (229/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.381913862 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.834479394 seconds)
    (231/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.853198749 seconds)
    (232/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.25889853 seconds)
    (233/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.27664632 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.675872215 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.492083378 seconds)
    (236/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.274850944 seconds)
    (237/286) benchmarking ("sort", Float64, false)...
    done (took 2.270156729 seconds)
    (238/286) benchmarking ("sort", BigInt, true)...
    done (took 2.27596419 seconds)
    (239/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.298934417 seconds)
    (240/286) benchmarking ("sort", Float64, true)...
    done (took 2.270596745 seconds)
    (241/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.266989501 seconds)
    (242/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.263718938 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.303125313 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.258482477 seconds)
    (245/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.336094474 seconds)
    (246/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.257053472 seconds)
    (247/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.356113463 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.660433353 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.279598233 seconds)
    (250/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.394172866 seconds)
    (251/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.280578249 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.380085449 seconds)
    (253/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.271096061 seconds)
    (254/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.322172898 seconds)
    (255/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.288400768 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.294760328 seconds)
    (257/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.259573177 seconds)
    (258/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.412437077 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.275056122 seconds)
    (260/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.303159724 seconds)
    (261/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.7652907 seconds)
    (262/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.277119243 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.36053553 seconds)
    (264/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.703923512 seconds)
    (265/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.26096452 seconds)
    (266/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.300261694 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.354159781 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.671081763 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.419733725 seconds)
    (270/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.356179761 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.270062054 seconds)
    (272/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.024660119 seconds)
    (273/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.262962327 seconds)
    (274/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.405975002 seconds)
    (275/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.259766486 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.35453637 seconds)
    (277/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.299688828 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.25953149 seconds)
    (279/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.514570236 seconds)
    (280/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.29944214 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.296036264 seconds)
    (282/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.354878403 seconds)
    (283/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.018080033 seconds)
    (284/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.272399704 seconds)
    (285/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.047407701 seconds)
    (286/286) benchmarking ("sort", Float32, false)...
    done (took 2.277934681 seconds)
  done (took 546.583340039 seconds)
done (took 547.762258728 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.306283466 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.301894168 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.28505029 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.307341117 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.39643981 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.460854455 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.296120597 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.287941779 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.333282041 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.334835609 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.282843089 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.460906808 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.285486713 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.286418132 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.284291593 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.29906074 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.27378523 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.303420897 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.301570327 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.29469981 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.302355746 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.285160709 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.336031767 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.461732341 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.289390857 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.288931534 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.289513056 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.306154802 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.397285503 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.288080511 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.289326998 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.296917714 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.288955613 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.284136817 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.28168084 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.306127198 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.29715323 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.296232207 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.290934788 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.318010943 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.274642897 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.291128572 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.288837219 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.288811743 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.288914376 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.291119959 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.288542239 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.293626378 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.300492722 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3025791 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.276056006 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.305876023 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.291050845 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.289695598 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.299191023 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.287829571 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.292515997 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305836019 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.308459088 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306937451 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.277159352 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.294284336 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.291673467 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.30469056 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.296226441 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.283548706 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.287180621 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.295198507 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.278026094 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.296375418 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.284382002 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.298776382 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.290699929 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.302217617 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.32058936 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.291840254 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.28458126 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.288054816 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.297192471 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.287998818 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.299241932 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303035416 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.294715757 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.290354755 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304764965 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.465999053 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.300847245 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.290198356 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.298753152 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.308829036 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.297877462 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.300718466 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.293730491 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.286275777 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.300916486 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.293505054 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.29354077 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.293257314 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.29624094 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.301448516 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.279180706 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313479725 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.288906216 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.288349178 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.291214118 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.303929365 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.291097134 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.291401362 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.31546532 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.33928446 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.293363003 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.283172665 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.294616938 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309281731 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.301668765 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.295381591 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.286995608 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.282964721 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.284029662 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.305098277 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.292735035 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.290600173 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309585863 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.293764298 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.289372301 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.285453642 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.295998599 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.307561523 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.4137041 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.304727946 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.323717377 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.290303161 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.296994568 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.327111768 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310245521 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.324776362 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.296410868 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311773499 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.309648952 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.290656475 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.304147043 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.303762076 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.295235321 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.299023587 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.288922271 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.327847415 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306940224 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308491576 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.315960762 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.414806388 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.291220534 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.283747142 seconds)
done (took 215.461699351 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.352967995 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.290153945 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.376399799 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.291810248 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.389674366 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.389780293 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.288211458 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.288346764 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.28806475 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.670532363 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.289169559 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.287918792 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.28924713 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.289481987 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.373769335 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.290715795 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.288943533 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.632713382 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.291062997 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.361956091 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.288658852 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.289952476 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.291426438 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.672488285 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.290384036 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.286798605 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.361247989 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.293134296 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.638092069 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.284941244 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.288694828 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.63719412 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.381996108 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.309784192 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.301967761 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.298758784 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.391974831 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.309532188 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.374853597 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.376517979 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.378111062 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.330936911 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.287601092 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.292359077 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.294242378 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.293134746 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.291485785 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.320204311 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.292784193 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.292237538 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.636263295 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.302930336 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.291662912 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.291861423 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.292585039 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.322578749 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.29293276 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.295053759 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.383993437 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.294018892 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.356617045 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.674485524 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.673979366 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.294419892 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.289908787 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.292496942 seconds)
  done (took 101.655344588 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.361367021 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.366683986 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.403426767 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.294627468 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.34458209 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.408273269 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.29718845 seconds)
  done (took 10.684453579 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.300715734 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.295820978 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.344263581 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.343214865 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.295423722 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.507533021 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.296546303 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.305845897 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.292800278 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.374289482 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.297415464 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.296949214 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.302667086 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.29139144 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.342726019 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.306423324 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.410809908 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.296054585 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.296515509 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.446602204 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.294048692 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.303247247 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.371494246 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.307072688 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.297404983 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.303803525 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.202449057 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.29684444 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.295590937 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.296212236 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.294847196 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.3977224 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.297724863 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.296552628 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.294890119 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.456645815 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.298375706 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.295944641 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.298754355 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.297191558 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.296256471 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.298483838 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.298609234 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.295903334 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.298603195 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.321497944 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.298720582 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.298630891 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.298415422 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.298502982 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.371204033 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.299172268 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.296305226 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.295767981 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.376361415 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.306533804 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.298511486 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.297243461 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.299590564 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296341432 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.450268601 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.347353451 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.299288302 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.34738072 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.300215832 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.30035668 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.298157129 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.300116072 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391731162 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.298696019 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.347043408 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.295898073 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.522342147 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.322274834 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.301848432 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.302876455 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.30110582 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.299138526 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.297637624 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.306852322 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.297830584 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.30015016 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.306758553 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.297739221 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.299231722 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.482660934 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.456433274 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.297046745 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.313282563 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.307283094 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.297861152 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.374509271 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.300188109 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.297089286 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352885517 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.417067567 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.379701633 seconds)
  done (took 134.602794995 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.307405328 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.309117985 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.303536786 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.324948198 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.302061013 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.300342649 seconds)
  done (took 9.061268702 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.303263694 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.301791762 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.301632759 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.301680742 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.301915883 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.30351073 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.302365726 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303670192 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.304606139 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.302569818 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.30329866 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.303660469 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.30519147 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.303769669 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.303766375 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.304094076 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.301619878 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.301002948 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.302547339 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302369311 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.302387673 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.302415897 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.301749448 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.304617459 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.307900184 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.303846877 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.310623321 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.304489586 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.303521311 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.311919032 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.305929451 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.30481936 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.305726895 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.308977225 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.307385902 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.305117328 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3080314 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.305347096 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.302783415 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.304516816 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.306057488 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.304610399 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.305227764 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.305923298 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.306551449 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.309349468 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.310270022 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.313430894 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.304782955 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.306551312 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.307195833 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.306110555 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.305653578 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.306623005 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.307797402 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327827726 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.310477722 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.306554335 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.306413296 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.307165629 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.305225616 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.310419637 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.312884511 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.312343675 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.307402242 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.310463277 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.312069745 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.312262794 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309405414 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.310482289 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.311908636 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.30816405 seconds)
  done (took 96.276399173 seconds)
done (took 353.485106249 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.718287261 seconds)
  done (took 3.944188634 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.323783686 seconds)
  done (took 3.55537647 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.561787198 seconds)
  done (took 21.787037976 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.36261705 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.328826735 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.332133294 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.312547117 seconds)
  done (took 10.560725676 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.523810933 seconds)
  done (took 3.751447163 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.306327445 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.304555026 seconds)
  done (took 5.838774233 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.562089026 seconds)
  done (took 3.787399926 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.631280539 seconds)
  done (took 3.85718229 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.331254876 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.320673214 seconds)
  done (took 5.887342307 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.295396653 seconds)
  done (took 3.52307033 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.519295579 seconds)
  done (took 16.746836921 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.306160809 seconds)
  done (took 3.538227513 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.326631175 seconds)
  done (took 3.552929305 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.744549497 seconds)
  done (took 5.971130917 seconds)
done (took 97.526301408 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.303660484 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.306380041 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.30625515 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.3056953 seconds)
  done (took 10.447805273 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.36417302 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.344375677 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.346475258 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.356532987 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.349002845 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.346347167 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.338316872 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.337918443 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.356678596 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.349045851 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.347506327 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.348990844 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.347433757 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.337910159 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.350108327 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.34822573 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.35559127 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.347294801 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.338685382 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.349971611 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.314099266 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.356132195 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.349328567 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.314380037 seconds)
  done (took 33.523122564 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.805215694 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.384685556 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.46853966 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.365576562 seconds)
  done (took 7.249820135 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.364884825 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.365637063 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.377185244 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.415002034 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.449891237 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.37644764 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.339536404 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.33652311 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.321850486 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.367075314 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.441308475 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.383226477 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.451809575 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.313936252 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.498063563 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.31137531 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.313997866 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.365723047 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.41591912 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.430960398 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.314284766 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.364222708 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.368804345 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.383229121 seconds)
  done (took 34.298563893 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.313258854 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.333136382 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.313283669 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.31317218 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.322937198 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.314123152 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.312677278 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.314178864 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.313525261 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.319473987 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.312828862 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.327853625 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.313307356 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.313099649 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.319679653 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.315305959 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.319248939 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.312934421 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.313774396 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.321396311 seconds)
  done (took 27.567039676 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.307388153 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.308895269 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.658457018 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.564811598 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.310948232 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.311722679 seconds)
  done (took 13.690933318 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.382915712 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.520328739 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.319113719 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.659653223 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.745846358 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.319337508 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.317021009 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.554086112 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.861303185 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.848480251 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.375964092 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.386346015 seconds)
  done (took 19.522862585 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.320328225 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.313370225 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.321120868 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.330014352 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.36951809 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.325248098 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.324532197 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.31027695 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.372986597 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.377116238 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.324636942 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.370921649 seconds)
  done (took 21.295074945 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40054688 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.312627417 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313503842 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341323395 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314128967 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525341566 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327149446 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.044258079 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.337281994 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584068698 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310955672 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404150733 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.568159727 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320138631 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31467838 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.299266892 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540567448 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794088677 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31570963 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316564726 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34162429 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313805905 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318951797 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.53263255 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528952649 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31110904 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.576592877 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315156613 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590806867 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.330162465 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326074626 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31434864 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58770563 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965966638 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438528917 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522145353 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318712373 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319346603 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.316460732 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.327492372 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332586758 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321065278 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325549758 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31283104 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316570681 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327638666 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057915622 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.345263435 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.31488255 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314691834 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573109615 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415427764 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.320143487 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315651364 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360251559 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319767304 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.321442962 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408287111 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889723656 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324175704 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333977247 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.319845116 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327911521 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327288306 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933107666 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.322001271 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.321290452 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.320931562 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315151087 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319977625 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336137827 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315077956 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.34517984 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31673654 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015903375 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322482992 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321358256 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857898579 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326214759 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.320990278 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543856363 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316735532 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315804367 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.315410681 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316144461 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018673591 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328031634 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.30439272 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345023848 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.050147843 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.553408436 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343773356 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342163355 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.539818315 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.304073265 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318112009 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.317373795 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340971156 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33989657 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.05249565 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341419886 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.322185702 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574231666 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.529252159 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317244253 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.308265828 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804641683 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353575905 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.337517198 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.331727332 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53044092 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.898972717 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33994235 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332363791 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339495558 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316759541 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064518459 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32340027 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.345071601 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322825035 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591360328 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.093848685 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322032797 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386782647 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323403884 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.318245261 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318640509 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341535392 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.320510675 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.520371532 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34123338 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.332882798 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.32118959 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320345194 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.318087016 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334944998 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.324162569 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.543174536 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33365777 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599676142 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32070174 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321802426 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321115556 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.543893364 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.318258736 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.32690024 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582068313 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323106069 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323680432 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335627912 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340978611 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420752775 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343726808 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.331337348 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.579538453 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.326036887 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.326192691 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321115077 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325495607 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328804143 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.327229686 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325310073 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902040258 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303595638 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329334751 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.210868927 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.336193199 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38899066 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.328093974 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531133744 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.324699995 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329742675 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.331706111 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.320104408 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564340319 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332470047 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.332611698 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403747665 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.803182116 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.920369276 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338994272 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.323173088 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.319529785 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.320537233 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321715463 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323602811 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322816453 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534856887 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34281558 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328731571 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922877592 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328995563 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333921624 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.333014774 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335110363 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.331062424 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325191932 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.321391413 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327147097 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354694597 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.339684811 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469223694 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.339511555 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32470293 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.841881655 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.331515979 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324373741 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32581076 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361586364 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335830738 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129490558 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58394744 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321944062 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597391423 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336780845 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.343425096 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.323711009 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32436911 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335354706 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.345335982 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355577444 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.338307848 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336116446 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330607998 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896078338 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052223951 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856856212 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330362444 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.355643416 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328774982 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.064711582 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345291513 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327324572 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558912279 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064317228 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350536955 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816359969 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.345861979 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.07191901 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583735124 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557003068 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326582859 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.348345209 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592627403 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.544291002 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361787875 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336810492 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331662439 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.314350469 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898797801 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349136727 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409378681 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066731754 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349151978 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332350973 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.386158521 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.344913246 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730546037 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350643495 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327785993 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33956549 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340159937 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137381359 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336328658 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329129183 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951198786 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335529315 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.816281451 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351345693 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.541834032 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.347243382 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.335818096 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.333519723 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.329282235 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.587592925 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581837856 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333322855 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330142233 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862845135 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.187404355 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.33769576 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331873241 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071787508 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340343991 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614178447 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.336167975 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.331043808 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339320562 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332075575 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33203421 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.326648837 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340249359 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310000008 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818904879 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.336429722 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373980158 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33651258 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180726447 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587829878 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.345152006 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.910213747 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563661867 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33081336 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359706213 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.336333378 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340900226 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.324554217 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332284109 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568623083 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389051688 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558256617 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347983606 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.320513637 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411871991 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547665163 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332246484 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344647373 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574555124 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.334758477 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.338430025 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060489492 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362534999 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346494038 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337924557 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333776109 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357356025 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403993971 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547377054 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.348619393 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.345823327 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740608113 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371520742 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339693137 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.34978341 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429090861 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336926125 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.337486903 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.112332932 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918639958 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07997619 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.926135892 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597636744 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343622895 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341345145 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338956972 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485562594 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336401101 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61127997 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336343654 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.349033398 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365237812 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345306642 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342620391 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553551333 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612120172 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335472203 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343736124 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336079552 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.3361971 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351370977 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.546218492 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824314641 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884431964 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340274071 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338530509 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086790413 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630477842 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337168672 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339871891 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337092626 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.343262025 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360381395 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.363397864 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336990772 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48850595 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59110593 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005751818 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.370681027 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.369892145 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.113696079 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339779666 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611056104 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335992992 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.554096 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924354767 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.038514534 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606770154 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407857713 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550190977 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.33963174 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486734706 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.347825525 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340509855 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339537641 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18657165 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.338738997 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.351227715 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927694693 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605399733 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.34321197 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.345066551 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367630313 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.350192619 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.564659649 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055866944 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569935189 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352086061 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348321147 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3432586 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925817553 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608163857 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34401032 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.342330875 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576897767 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.58269591 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36664732 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.794344678 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.340587471 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895134934 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.316406014 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365118181 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347147602 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.041806651 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934280971 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.342664039 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834547491 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346857535 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343042235 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621647771 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.349769982 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355838584 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619324936 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.345364802 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345045858 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562480962 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.928972257 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095248865 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.352826979 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365256806 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.347094112 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34151558 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359020783 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347763934 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34712016 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.76422232 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367593863 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34508084 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35221712 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.346263005 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359145596 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.345640579 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341687984 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.351311372 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.331361123 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.348541549 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35898882 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445901841 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909776509 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369245216 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.018379161 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.675138212 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600189924 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343250048 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.332234456 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.348829162 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346205167 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343664318 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346142547 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348824413 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899667054 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.346992293 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.361564004 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34665202 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.562145414 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557168924 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345031467 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561238972 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349188289 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363081592 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.332698292 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34791916 seconds)
  done (took 950.396806551 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.346321477 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.358679505 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.361067401 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.374660347 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.372647174 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.399296527 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.361283356 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.376452742 seconds)
  done (took 20.213288322 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.348805632 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.36098844 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.347006655 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.360408344 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.347611729 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.808505313 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.366278049 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.356957755 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.358147244 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.349679816 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.35198496 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.986958773 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.355780002 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.34479171 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.340630212 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.357353106 seconds)
  done (took 32.009516809 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.29198276 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.484101806 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.21856533 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.382773602 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.395589828 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.34796033 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.577291544 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.376739775 seconds)
  done (took 26.34204929 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.359730882 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.356415569 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.361665698 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.361843146 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.359931588 seconds)
  done (took 8.065599138 seconds)
done (took 1205.850182567 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.352265562 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.354137322 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.353547882 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.355103245 seconds)
  done (took 6.681299076 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.341066711 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.332990663 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.339839611 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.354683385 seconds)
  done (took 9.63443409 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.040687678 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.977655655 seconds)
  done (took 5.285948725 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.353024466 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.111815855 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.088443273 seconds)
  done (took 7.821900754 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.638352376 seconds)
  done (took 2.905426329 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.756175281 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.735264325 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.545233308 seconds)
  done (took 6.305132095 seconds)
done (took 39.901878445 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.353996791 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.603344945 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.510057534 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.354815694 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.51192931 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.512099984 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.084464925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.352429509 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.358373291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.361023266 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.35387774 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.517424987 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.066309244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.603574708 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.073486861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.698643839 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.514397169 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.368303925 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.364032414 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.356029482 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.103448545 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.35040041 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.364437623 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.352991958 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.547286906 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.496891832 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.367453172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.700778824 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.366717337 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.353726152 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.515669545 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.35142571 seconds)
  done (took 82.057339737 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.353035373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.352747217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.351790206 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.348610294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.361397595 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.354873107 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.355963316 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.349628655 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.355119155 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.350036079 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.369578353 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.351189488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.351115255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.360402794 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.357040176 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.362024533 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.351091544 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.359855672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.360575961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.374613698 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.356484757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.356188374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.358533548 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.352012287 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.382562055 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.372173722 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.352571385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.361675416 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.354732692 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.357485988 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.357921823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.372568224 seconds)
  done (took 76.734218035 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.362757507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.356350114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.371884701 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.353294929 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.371700515 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.358808631 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.358551831 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.350984197 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.372450988 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.368403376 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.368227376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.355590606 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.351891581 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.354881399 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.357337066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.356929642 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.367383376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.376860187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.354603681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.36506411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.35768266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.355750641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.356100549 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.361379562 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.370972822 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.353285855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.35635567 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.357798005 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.362029568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.353899678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.361812284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.361548174 seconds)
  done (took 76.813945507 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.54903922 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.365366342 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.363594905 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.300291067 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.365568497 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.363826638 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.355207239 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.553224093 seconds)
  done (took 14.489108653 seconds)
done (took 251.364017228 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.37235933 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.37160309 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.567361394 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.387873889 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.357508917 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.389068669 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.387879201 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.556343839 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.318111592 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.556321269 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.360938613 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.384497939 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.360536718 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.385047925 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.637544003 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.483764564 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.274551427 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.360601198 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.716913712 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.384298194 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.623178768 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.359031643 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.578667078 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.314420323 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.38057094 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.36452253 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.361568126 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.260845323 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.384228881 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.704417138 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.369741868 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.351808114 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.429182773 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.424674171 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.489154352 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.483968586 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.375566318 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.422488088 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.56693306 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.358819509 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.366786444 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.130159091 seconds)
  done (took 81.988154865 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.368168514 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.479639652 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.36724155 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.369323724 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.36661109 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.470206666 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.451015205 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.367442334 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.362790621 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.364698724 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.368231755 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.368057416 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.368530126 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.368631418 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.368694038 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.368881883 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.362966217 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.368698083 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.373936518 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.405421346 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.478258842 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.371119888 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.363526714 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.369539718 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.45506656 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.477301459 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.371143107 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.365811043 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.406711336 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.372149956 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.37213236 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.40835525 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.370424119 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.371826947 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.493660628 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.454952542 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.367672246 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.369161334 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.475802218 seconds)
  done (took 55.680936731 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.375465021 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.619306332 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.787023847 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.382452142 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.371699628 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.377082446 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.448004008 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.376713226 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.373631849 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.376881853 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.542061705 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.377930018 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.40736654 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.811479523 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.379610187 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.37272578 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.371629656 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.370949706 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.626516137 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.384326163 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.463996614 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.375401478 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.447342741 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.385871223 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.389560203 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.372925283 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.378469268 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.96145282 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.379020571 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.540983818 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.140079425 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.445831055 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.898653238 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.800408109 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.144946257 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.378563291 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.375335518 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.547097118 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.378793892 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.373781396 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.451006681 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.377411673 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.799342305 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.054718016 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.39583665 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.376193451 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.981221126 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.550374456 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.613925545 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.3869394 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.820533596 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.381229202 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.377917723 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.37756718 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.611861669 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.384975221 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.376825642 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.988044948 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.395751422 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.450726027 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.378280708 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.374815558 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.632082639 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.379594127 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.624206927 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.380731069 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.381406726 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.395966897 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.809866445 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.379257002 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.073867184 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.398064573 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.377075748 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.545593858 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.624605585 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.016700042 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.383799029 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.64080396 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.914830677 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.453669057 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.385208879 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.953446491 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.457819676 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.385766629 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.380416261 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.37964006 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.375954811 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.424519085 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.448373288 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.016558037 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.069417892 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.013690414 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.472836855 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.392996097 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.379307199 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.987149587 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.392895715 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.376823774 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.795509349 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.079930773 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.400713007 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.384306753 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.076493433 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.399882601 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.456892313 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.387718617 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.814401401 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.382927388 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.424119464 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.377412662 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.386051715 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.402405097 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.455685183 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.387131052 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.378591304 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.046806161 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.572476162 seconds)
  done (took 181.814852801 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.37879474 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.369271896 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.378464229 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.371536574 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.375064581 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.385727035 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.37259783 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.373972779 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.380432747 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.372487017 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.375293658 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.376011087 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.374519005 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.386241309 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.385504004 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.382021538 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.374970033 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.374247983 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.373263214 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.388245579 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.372836597 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.394811217 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.375174042 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.388685289 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.374930111 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.375847986 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.389097247 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.37611997 seconds)
  done (took 63.884708849 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.381881304 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.92970685 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.383490859 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.506803451 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.405883102 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.37926382 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.504734353 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.437773146 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.385183552 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.380327331 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.380977698 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.678475111 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.385364449 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.882796576 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.568440941 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.510224844 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.884961079 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.399155409 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.380333545 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.378213917 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.508766419 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.393632538 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.677638799 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.93677985 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.386886894 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.932851644 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.376540614 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.382281779 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.381759402 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.935528171 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.383708924 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.681738159 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.460595283 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.442584102 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.940257401 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.89034887 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.905197022 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.52831227 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.385657537 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.380998113 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.379717891 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.373583922 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.937295555 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.389678719 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.383039447 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.935638966 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.403963635 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.384959372 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.388984516 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.384234991 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.443395518 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.443047152 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.687227252 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.946222284 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.463380903 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.397824785 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.510800985 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.775945146 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.389834673 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.887018384 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.372647191 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.943615183 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.405478863 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.375475768 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.385007665 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.418485973 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.529348364 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.514791325 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.89282387 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.401760706 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.889222509 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.545086685 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.385217728 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.383114718 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.388318992 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.941390647 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.891368129 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.546164119 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.518210694 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.576566672 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.381414889 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.384853829 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.378317344 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.461863829 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.389654558 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.944515093 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.909364212 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404044092 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.388044731 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.387440884 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.387563937 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.555308762 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.947915352 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.46276206 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.889197463 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.705640861 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.692020193 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.390592876 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.444701503 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.402023493 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.688944163 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.392051277 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.443266705 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.842584355 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.690968974 seconds)
  done (took 164.520259751 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.622233381 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.417098101 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.477003043 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.537234199 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.984679816 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.983099564 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.3845229 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.509303204 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.498638698 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.639642793 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.383958656 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.480200229 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.598218036 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.463460753 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.100024261 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.458077502 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.477719786 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.533831561 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.52729549 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.384628066 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.027203613 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.682765165 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.568926692 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.404523372 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.49081237 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.1461783 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.966503455 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.906456354 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.563509302 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.399208297 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.920000678 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.386244756 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.333649953 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.066491754 seconds)
  done (took 64.616802827 seconds)
done (took 613.778887329 seconds)
SAVING RESULT...
DONE!
