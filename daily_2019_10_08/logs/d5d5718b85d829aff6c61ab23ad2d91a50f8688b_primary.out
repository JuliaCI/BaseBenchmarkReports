cset: moving following pidspec: 32705
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.382621304 seconds)
loading group "string"... done (took 0.560300732 seconds)
loading group "linalg"... done (took 7.145540567 seconds)
loading group "parallel"... done (took 0.154848709 seconds)
loading group "find"... done (took 1.112517835 seconds)
loading group "tuple"... done (took 1.858598192 seconds)
loading group "dates"... done (took 1.194354938 seconds)
loading group "micro"... done (took 0.215039231 seconds)
loading group "io"... done (took 0.929572412 seconds)
loading group "scalar"... done (took 37.678086188 seconds)
loading group "sparse"... done (took 11.651746984 seconds)
loading group "broadcast"... done (took 0.968470112 seconds)
loading group "union"... done (took 12.389380489 seconds)
loading group "simd"... done (took 4.131150225 seconds)
loading group "random"... done (took 8.817150786 seconds)
loading group "problem"... done (took 1.863677126 seconds)
loading group "array"... done (took 19.893133076 seconds)
loading group "misc"... done (took 1.687561522 seconds)
loading group "sort"... done (took 3.125064434 seconds)
loading group "collection"... done (took 16.39442336 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485926182 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123190706 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114892414 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121977269 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148393668 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116893426 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124016551 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085447464 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.83034271 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146698822 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119630421 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41712757 seconds)
done (took 5.134969768 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172645947 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082926252 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081654963 seconds)
  done (took 1.278493651 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066909551 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120533696 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065977385 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066339773 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066643084 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065994039 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065761517 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065689697 seconds)
  done (took 1.632028354 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073694466 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068681096 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069406042 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067681706 seconds)
  done (took 1.393462793 seconds)
done (took 5.668107287 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.771820252 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207506468 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182103493 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398999015 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132863217 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157326358 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.630805197 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331640396 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182644215 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081284738 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106283315 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.321446003 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10701468 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.625356051 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074780557 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090502106 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139705537 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.410684744 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067104158 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082922399 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088730512 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127853155 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085302309 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074178164 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144205755 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068064387 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132618803 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081927286 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067164302 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208041471 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174283764 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652982225 seconds)
  done (took 10.159476889 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096786682 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098160149 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068515823 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136062708 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096399344 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069098528 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070883211 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066964695 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086902681 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12817118 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088668054 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101282828 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065289309 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068526186 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086413033 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207580881 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082131939 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082938422 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072490602 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076851883 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120815029 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078192586 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078389824 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07767518 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127901179 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179277139 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095429785 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097100258 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068929274 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082545466 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116571333 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125628244 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065172507 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066200309 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124076248 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093985845 seconds)
  done (took 4.596291962 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.292480288 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113309303 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14042748 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089958838 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132208482 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064846605 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106756394 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065355969 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080594245 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200340843 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.309830145 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.592143358 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11060376 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104225236 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067762647 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068051666 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066341411 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.357371752 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108558488 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103411176 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081447083 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072008658 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07101098 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.348394389 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069730636 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065247123 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069830004 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059807143 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127325604 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070402229 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.036637611 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.068480122 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124802346 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06653045 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099717917 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086762017 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.270648743 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067958878 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064161469 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149576848 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070235999 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066389676 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084288108 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105100528 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112382272 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065353805 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066699255 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161064483 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083614004 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065150355 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081287656 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.995977148 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153221801 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076093116 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064869055 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247552424 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085573714 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068426208 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063821521 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.200016845 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13864788 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06939852 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068269798 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069419864 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071541717 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065076715 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067041661 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.32118176 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068007955 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075310409 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.846654553 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071412055 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069318587 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074837409 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072082901 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084985543 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066210055 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07560597 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065737428 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067511161 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068474137 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086978319 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356130389 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066054016 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06727732 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064066639 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085332301 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099881922 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065866448 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06456426 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09924043 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06793722 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06540227 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105773046 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06740041 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086281954 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070377322 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1116316 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064850203 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.099279407 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065649986 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097791424 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069043937 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099611315 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078918671 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066294593 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.385995472 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064137631 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064100835 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068156247 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065276955 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068016171 seconds)
    (112/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091384136 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066195294 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06416102 seconds)
  done (took 20.942173227 seconds)
done (took 38.102877911 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.281376529 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079697955 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079535528 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079648503 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078558003 seconds)
  done (took 1.812258292 seconds)
done (took 3.033076312 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119295089 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09829094 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064295179 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095087879 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063762662 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100085192 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098808522 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08081881 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098683321 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063883571 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095408641 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064123797 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063929414 seconds)
  done (took 2.319118492 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082370963 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084618346 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071088249 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084300439 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06507363 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083889541 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082326167 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090716598 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082259793 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073826509 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065279758 seconds)
  done (took 2.050655083 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081260644 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085751537 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070278617 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083417057 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067650741 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083099096 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082817069 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087564758 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082471835 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074683871 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065298469 seconds)
  done (took 2.050928224 seconds)
done (took 7.600449505 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07797139 seconds)
  done (took 1.255487 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.597930262 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.076165222 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081599432 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111953531 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183239745 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119526284 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283245278 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090474272 seconds)
  done (took 8.901423606 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087922898 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069441819 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084264126 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073972763 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073019033 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071576895 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070420064 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073732347 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072121229 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070013809 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071087326 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073233556 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071061754 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073755523 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072173764 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071506621 seconds)
  done (took 2.42719156 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094037813 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093162869 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075296152 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075911384 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073473041 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073814017 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076336655 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075370302 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072748863 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073858806 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076751899 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075911735 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073697658 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065374648 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074270445 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075767281 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07058289 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074245484 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07471325 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074708865 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074361074 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064372332 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071290671 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074198802 seconds)
  done (took 3.090947307 seconds)
done (took 16.860983211 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114407311 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070900016 seconds)
  done (took 1.369318827 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082155346 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084933857 seconds)
  done (took 1.357853535 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084002268 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065557634 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092477627 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079025976 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06585871 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065720103 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089598189 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065981597 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065681087 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066148819 seconds)
  done (took 1.934156045 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068739318 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080692034 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072230355 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083668715 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076577631 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066321816 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075208088 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070111183 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081149786 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064395348 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.0734936 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084753663 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073897623 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086773579 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075455679 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071022524 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073591564 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070126933 seconds)
  done (took 2.545202412 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066253856 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068210163 seconds)
  done (took 1.325798383 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06660231 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064798941 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069222317 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069011979 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06519159 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064566234 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065775409 seconds)
  done (took 1.652161562 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.398883017 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11272194 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.307682734 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07238895 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08448576 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255294415 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066895193 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072075822 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072094835 seconds)
  done (took 2.682233212 seconds)
done (took 14.061614132 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077805455 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08764534 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098655417 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.372298329 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094156008 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067590509 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115615637 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193659836 seconds)
done (took 2.316112825 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.225162697 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611890971 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.391425088 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.198761328 seconds)
  done (took 2.399179418 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330766685 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087965203 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059994813 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068810876 seconds)
  done (took 1.754704045 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06588832 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070363718 seconds)
  done (took 1.345823544 seconds)
done (took 6.923707307 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06659559 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083965535 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064418787 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066759361 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067407339 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.064863124 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067184658 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.064695385 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064725433 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067221292 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069683671 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066936344 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067332242 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06731343 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065155957 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06506952 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067055772 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067199386 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065199268 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064904455 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067095016 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065018952 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064588722 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066990667 seconds)
  done (took 2.851190698 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082602317 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067938895 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072689185 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073366137 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070891935 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.0725896 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072888879 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06760067 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073001285 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069639844 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071543876 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071779319 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069373069 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072079592 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069394801 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071718076 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072669917 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067778989 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069759497 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072164385 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072686998 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067611837 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071512052 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072503897 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071015459 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071038039 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069436371 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067408111 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071597561 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069551446 seconds)
  done (took 3.351055196 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069389613 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063216246 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06350332 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070048856 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063285701 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06485548 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063017395 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.0634799 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064273467 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063174352 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065239631 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062967106 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064088661 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065612557 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064942161 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067854222 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080205193 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064935785 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064220483 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06478944 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067425888 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064856369 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064847729 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065033415 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.172779106 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064381811 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064971111 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064630122 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065854839 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064635317 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067833129 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068484052 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064252729 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06991628 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067210967 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063611418 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067031805 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06318737 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063927341 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062647079 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063261894 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06460778 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064180515 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071426269 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063974515 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064710763 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064406502 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064958661 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063873126 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065661492 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06272867 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062560005 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06505714 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065382157 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068577497 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063944889 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06521981 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064198375 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065717171 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064116807 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06479432 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06410359 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066990057 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065326263 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079299278 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071627344 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064280309 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066179485 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065793254 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067141359 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066645435 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078000579 seconds)
  done (took 6.070538313 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091420046 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087467122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064896079 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065061289 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062006136 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063793307 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067076776 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063822735 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065310077 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069817813 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064016927 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065079857 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064850744 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076148757 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064018323 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065689403 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070021521 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062019671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064380552 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067931909 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065441939 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068927305 seconds)
  done (took 2.724123629 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154348987 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070236311 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10487803 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073090669 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067587752 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072991752 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069684948 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069830378 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06992586 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068115913 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067935572 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069981693 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067613545 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068065268 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068065485 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070059111 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069726423 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068005397 seconds)
  done (took 2.592675564 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077890853 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066186749 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08673449 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066179328 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065841042 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068230624 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070320371 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074422992 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068075323 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065833123 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074223716 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067874904 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067819905 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065885957 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067858003 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065738438 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068399534 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066286348 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073922175 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070578256 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070213341 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073908078 seconds)
  done (took 2.768228847 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079081657 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067760147 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083031948 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068815705 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062055329 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064145714 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070296001 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065636052 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069789041 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067447553 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0654229 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064276753 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069114615 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065413102 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069482287 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065782845 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067324231 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065377604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067082313 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061694489 seconds)
  done (took 2.582442139 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08751849 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068814319 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068339851 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076082467 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06729162 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067491702 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075364181 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067100541 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067085239 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089294576 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067171784 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066726038 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074902644 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072424374 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068349032 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076950945 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076675059 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076539222 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068773015 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068294951 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08907617 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068079844 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076463468 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068347233 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068654948 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068699434 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068413053 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073453019 seconds)
  done (took 3.256906255 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066224746 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066577015 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063438356 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064541989 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063508907 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06275944 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063380278 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063479502 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065759228 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063249878 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065821783 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06543115 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065726163 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065977558 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065730239 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065522405 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066233284 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063450028 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06355918 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063388901 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065467076 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065830117 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065612886 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063082197 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063546562 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065832549 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063610314 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063302215 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065622533 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063027071 seconds)
  done (took 3.167243897 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075923748 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073173132 seconds)
  done (took 1.378064548 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063812149 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080123623 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062814261 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07009712 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069860637 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066499637 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073270542 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069602514 seconds)
  done (took 1.781824812 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081031486 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079329911 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069939802 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081575779 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076895986 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083971163 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135557868 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069136401 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073636172 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064454861 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080700615 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066469469 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073399235 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06778924 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073102411 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073871251 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065986185 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074114128 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07028635 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066220828 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069073381 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076690842 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070195923 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063076438 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068810407 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090195726 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079198409 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067510055 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070719592 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074949717 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073599779 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062216452 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067306298 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068321241 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065331777 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077145412 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083302392 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070476358 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076060816 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068269258 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078588231 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062443494 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072165787 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.0739133 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077981225 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068064117 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068511926 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062604129 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065524073 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070656236 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063444115 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067974731 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06247269 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077531092 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07147156 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078802542 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06648838 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069873859 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070732438 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070893745 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07466329 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069743728 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070333294 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067505841 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077832809 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072300993 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077004672 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062627147 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061612761 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065398309 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077511921 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090843883 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074036682 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068711586 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068614068 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065691799 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071474508 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068897734 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073395919 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074080868 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067897872 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073401499 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075043361 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067790948 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070310521 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076336259 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066232844 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070860661 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065732484 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085416932 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067068853 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066118203 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065959063 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079049802 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071449403 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06799944 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065847435 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074999246 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062392855 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067485605 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067718504 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067729631 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077372401 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071367323 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072315376 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075487698 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074605948 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067143751 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07003885 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063705625 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067711351 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065931124 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07408671 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061159297 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069434346 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067882723 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06783038 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.201188091 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067950352 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069294222 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076560706 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074746457 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067070153 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064779377 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07139092 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068584835 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071903703 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07716271 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06680445 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063305878 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064261027 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072347519 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067873956 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072172684 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073042333 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071866891 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062395596 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066631075 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073274506 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077920729 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068691332 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069712131 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075359844 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.0706589 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067384091 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075268126 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070903619 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06773572 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074546498 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070033461 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063486157 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071853662 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071464689 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067204966 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072410984 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07275025 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070700429 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068897358 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066687579 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075209218 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067514569 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065993588 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066485517 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065677185 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078694474 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070063959 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063020288 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065382397 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078724758 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065960923 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067899668 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066717618 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070224657 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069639941 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06622726 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068003649 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070174615 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079112475 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071979765 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067661577 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072713018 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079841795 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066374734 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068988078 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065852775 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068711512 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06838709 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075818938 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072461614 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072268393 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070994764 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064389965 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073767435 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07544449 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067151124 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065679745 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06688854 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07221269 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073696376 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071857584 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068437574 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065944861 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06849305 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070894112 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070522489 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06777191 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066017505 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074273452 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066041769 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075079871 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069037651 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078720541 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071484314 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062989801 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071565518 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065931677 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073817127 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062264507 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064202588 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065417574 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067586541 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064750845 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067649264 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060021822 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072153872 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072158569 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065433738 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065193863 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06482902 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071682437 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066388655 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068672614 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068332065 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07086408 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075016148 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064272456 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068133234 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.201066018 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067219619 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061342408 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072168501 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065186302 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065306519 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066239516 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064584517 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069681322 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075916702 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072749528 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060530095 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069689067 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065010875 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066177177 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063830663 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073611067 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.0714325 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06963413 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075789606 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069205623 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069420587 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072205829 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068012634 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069902811 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069777759 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071452781 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069290558 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07049078 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065854857 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.0695751 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065572402 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064712051 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069313166 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066278795 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066722008 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072142079 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066472158 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066660503 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068823003 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067662602 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067597335 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066613028 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066561324 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070491039 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067050735 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06759302 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068604079 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061585159 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073417131 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065715249 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07418795 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066885614 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063241975 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073605042 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069631997 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072371798 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067737431 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066998631 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067576503 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066094592 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070374121 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073564451 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064639141 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076627379 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074063692 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067429815 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069389722 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066919678 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067606334 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065838224 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067250403 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067347897 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066837283 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065889916 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071051836 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068473723 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067747069 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069844159 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068938087 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068740825 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069437919 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062747443 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067335906 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067839053 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068402721 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078045002 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068543688 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06652164 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065975603 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067124695 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06523905 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063070841 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074716104 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075783078 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066928156 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073983716 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065617666 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069616713 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078999575 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062800428 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06620642 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066104568 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066431221 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075812161 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068879244 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077736334 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067572753 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06624747 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063350667 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066304096 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06441244 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060169764 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062911539 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068642812 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064655472 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064143399 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06531426 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067855114 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066139808 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074454965 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064679213 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066142595 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065663884 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.192246597 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067347915 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066742022 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070546321 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068328758 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065263426 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06448518 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066167181 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067391813 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068603454 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067099595 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068813564 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076411238 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067056791 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070474202 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069811842 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061656154 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071554537 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069609714 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068680315 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06631088 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071613709 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069759704 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067957909 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075201702 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066492106 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068311846 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068912933 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066155083 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066779484 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066651986 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06696348 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065989758 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068059841 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075139258 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064313183 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070370919 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067062471 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06742498 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073461869 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067855771 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069107009 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073123378 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067176837 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068316755 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074613306 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070821831 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069687119 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067336784 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068430692 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072643572 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065941108 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072857336 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067381691 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067789726 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068515659 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064689626 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065952691 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066527062 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065186539 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072470802 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06755722 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066599388 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06703862 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064566463 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067975406 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070683651 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074521273 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.0687272 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070092305 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062279811 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064109242 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067925852 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064403316 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067967228 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068938511 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071863093 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068567925 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066795746 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065600907 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074950022 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07188883 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069862001 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064714177 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070306819 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067185927 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068538009 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067833765 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067013871 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067875745 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069999165 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067917492 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0656534 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073477275 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069832213 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067243052 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068350391 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067139156 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066768117 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062100026 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068655433 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069822588 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073272739 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070629738 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067832162 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079323017 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06590338 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068162401 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070750159 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066971081 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072337768 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062982551 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069018741 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068187294 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068045831 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062014481 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066034185 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065323404 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06756527 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064693692 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060734864 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075438368 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074301463 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068321497 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064540743 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.194362833 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062274185 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062813419 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066512005 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068371244 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069110471 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077238982 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065851595 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065886348 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062175594 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066038271 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069890932 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071033796 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064593298 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062614477 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066233712 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070626676 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071680669 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066110182 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066079343 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070342024 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068999966 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065527487 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07048571 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064573881 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07133074 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080390811 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067379205 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067768208 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073517777 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074742812 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06765967 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062962739 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067602597 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069668928 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067603814 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067523132 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068343735 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082074768 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070328944 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067345129 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065739604 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069207375 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06618346 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07432252 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067904059 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066641731 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071399445 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068704463 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076467897 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069150252 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074501981 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069834838 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070512468 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066908071 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067196278 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065081511 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065693089 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068268719 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06789932 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072291954 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074378052 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066574636 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077685079 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075841334 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068913507 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063969218 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066360297 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066811321 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.0621777 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06725482 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06474939 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064671295 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064080231 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064874966 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06722209 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071404769 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067148798 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066920985 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066704523 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060293202 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068683758 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068501306 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067359373 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063142028 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066269618 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066686924 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070565455 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069308165 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063892494 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068019474 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068059027 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06705451 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061898083 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073673442 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06642704 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068234925 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066562731 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066566952 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067480205 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069524835 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071190309 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067250393 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068671871 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070061194 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068661919 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063826327 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063396026 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070843836 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063653407 seconds)
  done (took 43.021181016 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100636742 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063754652 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062002041 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062519367 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074461351 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063261277 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06233411 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065013771 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063641826 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065708237 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062727366 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062292459 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071750538 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078448247 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074878037 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067734725 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062203799 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063361286 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06217828 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063556298 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071820064 seconds)
  done (took 2.751731343 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074765727 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070725834 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072638135 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076530809 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067691816 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071154061 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073680902 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071444613 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076752496 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067864448 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08484336 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071138003 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067791004 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067657437 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067669146 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07108408 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076594672 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067846167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071110834 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07324156 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071390217 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072961755 seconds)
  done (took 2.878948776 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06799193 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.0659011 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068561158 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061974496 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067087579 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062086362 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069869195 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064515188 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071244117 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.0673063 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067690471 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067931702 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070439571 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063634625 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06843506 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066207929 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112260429 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072341014 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068017522 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068919821 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063185294 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069007727 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061852068 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062432873 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065485001 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071017923 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069146739 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066466379 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067540351 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066815179 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067461367 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06593768 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067914368 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067045094 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065699515 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065243793 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066015465 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066821594 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063795398 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065378038 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06764832 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062173256 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066242071 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06774565 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064342049 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063933031 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067933316 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065797098 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061227491 seconds)
  done (took 4.599020992 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080798872 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109681065 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068170353 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088776002 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080476048 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075780368 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070024071 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089839817 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06390665 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064719285 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081947631 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080132601 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066249306 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071020837 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072796943 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066318474 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067321941 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065008816 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069939205 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06585173 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070043017 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072292918 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080352515 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079246866 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06985784 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065118502 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065408704 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070415764 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079036752 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07058024 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070518419 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071550129 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080683752 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071286642 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065261893 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068448905 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082083456 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066017028 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069333236 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063591265 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068577574 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070062277 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072164952 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082605707 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066032397 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071160805 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065771077 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063218729 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078723339 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06813991 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075412868 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082013195 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069833203 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065942998 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07051039 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080627548 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065683475 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064004739 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06882919 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.0782696 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0637062 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069986704 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079413011 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067859671 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073002211 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079648516 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07108962 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069153781 seconds)
  done (took 6.364918385 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075405406 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073265039 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081883436 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08072444 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072394123 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072855926 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072805058 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072806861 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07246199 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077415918 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072786393 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093721824 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067763716 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075713621 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073166932 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072786826 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073195747 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073074081 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072762465 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072674754 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072569036 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080377694 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072888145 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080380511 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098761855 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068169429 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072568472 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072708597 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080504336 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072424874 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079695304 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072508355 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073153318 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080802895 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079825807 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072877284 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065147851 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072235683 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072892046 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0720802 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067584104 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080234157 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072178332 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068130035 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072381292 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071836881 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08025965 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079585881 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074868151 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076906342 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072165386 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079930877 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072392252 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072212204 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080430636 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105194466 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080342942 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080752117 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073089119 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080062143 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080119522 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087356969 seconds)
  done (took 6.038556889 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084040582 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074579025 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077379896 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061574662 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064693205 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070028833 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064651687 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064839481 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074693241 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074767925 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07780407 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069937622 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073104262 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076985371 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069922382 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073086477 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069737769 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069840442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074848681 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070071274 seconds)
  done (took 2.754656358 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074277183 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08420212 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067296543 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072426516 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068892162 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071934143 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068765714 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069466858 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066951713 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069401021 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076467384 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076102379 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067144323 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071969223 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076070578 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071961231 seconds)
  done (took 2.463770798 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074861358 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072661211 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080088502 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066973544 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064669679 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062998351 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065686972 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061908005 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062789313 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07791416 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066033611 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068557125 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06634431 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064714993 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063374147 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06916312 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063260228 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063556768 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066186647 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078913727 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076945453 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064669516 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066678153 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066145183 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066181565 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070811568 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067373498 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065446055 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064431727 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067035733 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066542854 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069777688 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065690324 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06560204 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066422347 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065071748 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067718417 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068272929 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070604744 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06790082 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063618838 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065698851 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065459563 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06653927 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062015984 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066433926 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062274955 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068019394 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064031368 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067964002 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067882731 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070382411 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068468064 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074603973 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070691819 seconds)
  done (took 5.025686101 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079786131 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069677505 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062532537 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064215834 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069165087 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067752932 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070159903 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067751038 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067781201 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064518253 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067694679 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068566618 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068217809 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069478064 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067924207 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069509272 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062254447 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067671648 seconds)
  done (took 2.548584039 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071812829 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066506108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073472951 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065858634 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06669763 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068146709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062161406 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064717319 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064707592 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066088786 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066147101 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068112191 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06486928 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06800662 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0659931 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065967544 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068580014 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064860117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066172137 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062162798 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068384235 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064608955 seconds)
  done (took 2.780457365 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092638918 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081704384 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137242833 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078458127 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083062362 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071627923 seconds)
  done (took 1.862681973 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091651877 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079368836 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066781064 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088738776 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073634358 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067296218 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068084808 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067492454 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076362777 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076590077 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067729521 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076233179 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076343306 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075983006 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073223973 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073115585 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067660828 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067537213 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06629138 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084307964 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068289108 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076206203 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068308186 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067280904 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068113227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077810049 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077884331 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076944938 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06749898 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076079327 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073434522 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067303001 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076161802 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076052359 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069300844 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07662497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067799212 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084138893 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072906854 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075323644 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069094549 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073501409 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075988043 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072250783 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076231375 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067464665 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072117027 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067291192 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06861502 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086626132 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073641256 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075203924 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073985849 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076225847 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075890061 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086073584 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076382127 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075866992 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073676397 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078721971 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07615005 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07360994 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075857717 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07684339 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073766895 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075825601 seconds)
  done (took 6.219166174 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082414633 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085812953 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067805993 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076491199 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075816949 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067609824 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067670997 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067830831 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067624955 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067619322 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10796776 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06784491 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075785909 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076064835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068124961 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067601301 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067959867 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075586614 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067406507 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086400401 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067747059 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075921492 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075837995 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075976394 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07676632 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074030783 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067868434 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067433255 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067828443 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067693698 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072657486 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067927674 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075631006 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067358022 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07580517 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068131842 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067653507 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07273282 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067715988 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073458991 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07568248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084484478 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067575139 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067600783 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07620817 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067480073 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067402866 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067243001 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067701638 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067183898 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076158804 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076108429 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076229908 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075266548 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067711358 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067727716 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06753851 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067470695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067944292 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073472714 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075680733 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067693903 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086596737 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068087758 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067945672 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075637724 seconds)
  done (took 6.11870596 seconds)
done (took 129.16079274 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182580256 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165668018 seconds)
  done (took 1.665789843 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069389688 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097525906 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077024664 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128054819 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066903802 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100449063 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099034088 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077954963 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066094335 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066401851 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066614247 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068917836 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131307499 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066517272 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066894699 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069566547 seconds)
  done (took 2.649224193 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098192974 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157886207 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10063687 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065727164 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097015932 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073245858 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064662212 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07512687 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071419799 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065041331 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073611973 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070900534 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064763485 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070622947 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071269103 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073580812 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065247911 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073135554 seconds)
  done (took 2.766384729 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100638289 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092121329 seconds)
  done (took 1.527049264 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158678672 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106336391 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151074006 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346795857 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168613211 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229868309 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130597282 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.13154311 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122133235 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125116516 seconds)
  done (took 3.001531677 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097638978 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152756509 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256419689 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115350063 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072695479 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095565494 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117026126 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077857787 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081165257 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080786721 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080429343 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076310447 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098940902 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073693402 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073419022 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076292556 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103030122 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072647776 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074333016 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077171076 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099531786 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065708605 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07382527 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072540693 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077995759 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078139204 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065726205 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065904938 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07715853 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074686323 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077421189 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094429383 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077437968 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108112391 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070566255 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109395935 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076864737 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074419147 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074486693 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075059758 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081001428 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080098652 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072304722 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076587785 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065596536 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07663074 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065559423 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065685666 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078083168 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067219408 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078029474 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078744183 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111042765 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069518031 seconds)
  done (took 5.968160185 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101038816 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104780324 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072249402 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110653371 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100481678 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07173223 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101571346 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094022785 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103474776 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07010764 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068754032 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070685835 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082201765 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083762567 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111980856 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104715711 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073766844 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071130672 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104430639 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103174735 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069049886 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095373971 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090063589 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10292941 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06764493 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070521428 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068258917 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070670256 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07742394 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079174659 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070465811 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08156217 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085088175 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078964168 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06725653 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068421401 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068453924 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080612172 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079936054 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079245543 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078264319 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067969213 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06824166 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06987642 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070074667 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067988491 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079272597 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080892627 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079991713 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069625177 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070473973 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068499619 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070003124 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080781166 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07826645 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081306006 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080828715 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068933639 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069193966 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072203287 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081447795 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079843562 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079759782 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070190959 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079634417 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068690841 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080678463 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084071449 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06892488 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070434448 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069049867 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070247785 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070027316 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078912916 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07867849 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070696609 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069945267 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068441551 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080845297 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079240112 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06823578 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077682488 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06740288 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068736435 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070168513 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070158848 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078255512 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079881969 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070383299 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068460955 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069471631 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068393871 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066621088 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075998823 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079060645 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077718541 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07786125 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069042596 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078352335 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078816614 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069119124 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080483023 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068069399 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196294286 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07068074 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079669316 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079167575 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080912172 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070971335 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069441516 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079721178 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08124247 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069334811 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079979213 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081145905 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080658681 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069342267 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082669767 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069803589 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08032904 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070091935 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081029842 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070170241 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080284968 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070232457 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069223969 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070189289 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.087064122 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071365724 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069754944 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070180825 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070205372 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080827494 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083635662 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07145368 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081264287 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07939686 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07142131 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079403245 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069681886 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080103329 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070270898 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070208441 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067560316 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083010882 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06918875 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069302201 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069620582 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08175976 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068743364 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081306091 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079699077 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068597989 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08259312 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080862081 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078397183 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08112036 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070148619 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069094745 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068725623 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069926205 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078750821 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080043244 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07123383 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0692864 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079017535 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079720805 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068056818 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078488033 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078637108 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079723501 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069052451 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070477456 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08114329 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081408695 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079099512 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079086756 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079438936 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0685252 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078069189 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078613496 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068684449 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084559226 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068160896 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082847461 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079711959 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077595485 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079192063 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081273034 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080977803 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08076772 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082854972 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06807051 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068300196 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080196551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068872063 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069558258 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077467665 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069333944 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069124616 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082528061 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067885449 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079311006 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067161504 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078066105 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066488945 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068896558 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081956638 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.197699365 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070763177 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080553507 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071032518 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078915409 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082430997 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07971553 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068715914 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070375415 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081378409 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07937943 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069154751 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069140853 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07139261 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079738963 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079061695 seconds)
  done (took 18.728672328 seconds)
done (took 37.648374658 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209395901 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150718475 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198875057 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118820826 seconds)
  done (took 2.113097283 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122115417 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10176065 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095658136 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06505976 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101955758 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065383217 seconds)
  done (took 1.921814507 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313182561 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212478119 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183559805 seconds)
  done (took 2.076571809 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203916583 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188362565 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395731646 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.258147301 seconds)
  done (took 2.520176819 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144882657 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092923146 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06738649 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084762378 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.140514719 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.167313923 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105981922 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.131072149 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079625626 seconds)
  done (took 2.434646158 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150019357 seconds)
done (took 12.587369353 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.098112888 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.232501256 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.148139175 seconds)
    (4/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.202017436 seconds)
    (5/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.141176454 seconds)
    (6/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.225627759 seconds)
    (7/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07208506 seconds)
    (8/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.219221498 seconds)
    (9/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089999222 seconds)
    (10/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.0641045 seconds)
    (11/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07807972 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11661278 seconds)
    (13/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131338036 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08368385 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.225841152 seconds)
    (16/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074844858 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080043245 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.177926454 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075524489 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070873822 seconds)
    (21/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079237583 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.151447735 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.158857778 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072963547 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053422242 seconds)
    (26/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.149384155 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101226715 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108439155 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.150159237 seconds)
    (30/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077431138 seconds)
    (31/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.11818694 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.215024719 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.199631818 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.176583426 seconds)
    (35/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.18646166 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.18935466 seconds)
    (37/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176248499 seconds)
    (38/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077491623 seconds)
    (39/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.205140162 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.194334728 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071229919 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193202091 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072431059 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065158887 seconds)
    (45/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089515508 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077296479 seconds)
    (47/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073995961 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.108901555 seconds)
    (49/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.167107993 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094604941 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.0784115 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051246701 seconds)
    (53/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067968413 seconds)
    (54/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.1059478 seconds)
    (55/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174384153 seconds)
    (56/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075275943 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072061201 seconds)
    (58/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074941436 seconds)
    (59/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137759921 seconds)
    (60/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089386476 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085695984 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094970604 seconds)
    (63/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114161125 seconds)
    (64/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.150592425 seconds)
    (65/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06678301 seconds)
    (66/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075415713 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053614301 seconds)
    (68/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07283068 seconds)
    (69/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07823096 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165216928 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066947766 seconds)
    (72/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.155017997 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065375675 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051099777 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052892338 seconds)
    (76/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054069463 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075543043 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090690652 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088798077 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.154585635 seconds)
    (81/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071720682 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072371077 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088709879 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119650861 seconds)
    (85/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.23623729 seconds)
    (86/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073116036 seconds)
    (87/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.063518008 seconds)
    (88/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.265775697 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.106681367 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119360131 seconds)
    (91/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.074166603 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.068111732 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052233813 seconds)
    (94/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051881706 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072462427 seconds)
    (96/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072070822 seconds)
    (97/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076023195 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065908242 seconds)
    (99/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07351037 seconds)
    (100/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108871791 seconds)
    (101/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054105616 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150570267 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140155819 seconds)
    (104/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185244113 seconds)
    (105/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073199112 seconds)
    (106/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051356628 seconds)
    (107/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052580081 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090510445 seconds)
    (109/309) benchmarking ("sort", Float64, false)...
    done (took 0.12557083 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071026464 seconds)
    (111/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052562411 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051661931 seconds)
    (113/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080889708 seconds)
    (114/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084240826 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.138946363 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097007703 seconds)
    (117/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.195791735 seconds)
    (118/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.157089188 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.174684847 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066050759 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072801008 seconds)
    (122/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103007381 seconds)
    (123/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075426564 seconds)
    (124/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071815733 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135961912 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051638523 seconds)
    (127/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108794389 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175251037 seconds)
    (129/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052548652 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066644051 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.159275983 seconds)
    (132/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052100666 seconds)
    (133/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079321684 seconds)
    (134/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.184988785 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052012722 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.13375328 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073254405 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086965372 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.085292349 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093954497 seconds)
    (141/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158443668 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092329838 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.0702951 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134228631 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071542754 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091205536 seconds)
    (147/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051593608 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087339651 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052909384 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072518096 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086266675 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094205876 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071702176 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076228204 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065259124 seconds)
    (156/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104789825 seconds)
    (157/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.171733086 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070392467 seconds)
    (159/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06422775 seconds)
    (160/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051192934 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.075770621 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168133227 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064964116 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071896816 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07588589 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065147273 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09288384 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071532385 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050858044 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073304913 seconds)
    (171/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052704831 seconds)
    (172/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05163522 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053378982 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07455404 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091139146 seconds)
    (176/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10617415 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051586636 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0704958 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133006494 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064918656 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09188297 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071630076 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.172787434 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091451124 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150292724 seconds)
    (186/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051583264 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065094646 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086281556 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051056721 seconds)
    (190/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147732661 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050945215 seconds)
    (192/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075129533 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084309625 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.21878156 seconds)
    (195/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070050476 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114119205 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067782962 seconds)
    (198/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089653782 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073591159 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063314909 seconds)
    (201/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107492422 seconds)
    (202/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068511361 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073475308 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052321132 seconds)
    (205/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063873954 seconds)
    (206/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051548821 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067273132 seconds)
    (208/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073191797 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064101867 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066111003 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051359983 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089928303 seconds)
    (213/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074918706 seconds)
    (214/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173970698 seconds)
    (215/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.149602365 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065526486 seconds)
    (217/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052270547 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06297529 seconds)
    (219/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117628818 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074434047 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07334114 seconds)
    (222/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070286526 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111143699 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065639882 seconds)
    (225/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066601782 seconds)
    (226/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185465059 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065853636 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067568325 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066878231 seconds)
    (230/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080762971 seconds)
    (231/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070235119 seconds)
    (232/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052584162 seconds)
    (233/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07317983 seconds)
    (234/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.10952788 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066147029 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08598815 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071454704 seconds)
    (238/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067633695 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073555285 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051756682 seconds)
    (241/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051426958 seconds)
    (242/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068509088 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064385046 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066612083 seconds)
    (245/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052155429 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08751565 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065567469 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13142877 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092947778 seconds)
    (250/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052612973 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.0661558 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067465003 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05326506 seconds)
    (254/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051176637 seconds)
    (255/309) benchmarking ("sort", Float32, false)...
    done (took 0.127346241 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06584622 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053683433 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054512453 seconds)
    (259/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053524028 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051124659 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086023943 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06494112 seconds)
    (263/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05218504 seconds)
    (264/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051806519 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051626871 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071311106 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066137781 seconds)
    (268/309) benchmarking ("sort", Int8, false)...
    done (took 0.139083246 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072524568 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118800655 seconds)
    (271/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066495418 seconds)
    (272/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078258038 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052830151 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068251227 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068341757 seconds)
    (276/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055003453 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087690984 seconds)
    (278/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051739138 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088944939 seconds)
    (280/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062196364 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066809436 seconds)
    (282/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05408781 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066251972 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064982302 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052875929 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072480442 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063906113 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064949961 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051079474 seconds)
    (290/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052441097 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063992056 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063888217 seconds)
    (293/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066713797 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135161081 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175441138 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126640966 seconds)
    (297/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050941448 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073083719 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051388425 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132069461 seconds)
    (301/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052070156 seconds)
    (302/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079721357 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089796755 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070854107 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065213842 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086003723 seconds)
    (307/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072118968 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070805728 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124665853 seconds)
  done (took 30.456459635 seconds)
done (took 31.834616278 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085829887 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093425252 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074169836 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092499993 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080761472 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076434548 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072130757 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078035932 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079786432 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081752827 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078301186 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054783927 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074267455 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074334727 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07461242 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091049204 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077890681 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072546696 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072807442 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06467617 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072756465 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065396493 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067354489 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054637884 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077525467 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071276094 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071856433 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073524315 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065646553 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066488194 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068688049 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072657807 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065439714 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078085412 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071431161 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072764339 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074673854 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076437203 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067360062 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066224623 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074423402 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066469743 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072985035 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073138944 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072101131 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071085211 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072991067 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078693326 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091024923 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068080301 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073892756 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076175923 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075837729 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072148595 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069072513 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072654118 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070737058 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090730934 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073191989 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067741038 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073495635 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074011211 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070435175 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072960602 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073236608 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074708848 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075530784 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070713461 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074720439 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071029908 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065172987 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072510229 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068525225 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.0660095 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075122879 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076354979 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06471698 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070938321 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072026517 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071336908 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066301478 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067342384 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066892 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071340568 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067478355 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054385859 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068893433 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071554801 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064304115 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072860452 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071411083 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071786138 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06703127 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074695592 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064761113 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069730465 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065285316 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065127886 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066857376 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069265432 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064974165 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067235149 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074003382 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06671279 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071257065 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078952693 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065531744 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071591712 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064308723 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065016879 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079757168 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074920094 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065055022 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06779417 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064409342 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072053242 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064966315 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065017162 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065420013 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065893521 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070670954 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06458075 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066464923 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071646217 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076373797 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064844877 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067639724 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066275236 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064394999 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06978732 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064586953 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.197804076 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067702167 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.0629406 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068325189 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066442113 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073445428 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067859597 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07327842 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066896384 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074123554 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069487622 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070709955 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071506416 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064211393 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058639274 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067581971 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067888793 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068342353 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065239172 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06751298 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065687087 seconds)
done (took 12.404925143 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066907932 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14344545 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101003238 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095111439 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08590346 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066496694 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075966017 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101934975 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067694952 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102560183 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087148021 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084753864 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11250326 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06487676 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065736917 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069755892 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067631854 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081668942 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101305888 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08675917 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116309351 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065458358 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094436504 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092097555 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088308496 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101454284 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067312839 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070219446 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070120732 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091312236 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086390332 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069482422 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066530545 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100530944 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092379986 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083749353 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066596008 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082705569 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066454917 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066264887 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067522722 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098604644 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080020115 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080699543 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070088932 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069281044 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066933503 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083378775 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088809232 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078617287 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086690185 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102942064 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06861368 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065548129 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064704594 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08560302 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06543777 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068768155 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066246858 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068213979 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066185928 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069008205 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080783623 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081838642 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069572045 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080283279 seconds)
  done (took 6.782510739 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083509463 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089949438 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083415417 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083692026 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065957038 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066671773 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066760546 seconds)
  done (took 2.010509172 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06667655 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087885512 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089191883 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088376039 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084668431 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087334484 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075963305 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066379939 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080920141 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06792003 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087081372 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102110273 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067523595 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073049899 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090590497 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066563893 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089986735 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066795383 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069500265 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089963091 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068738202 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082082859 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070510917 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067285679 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08017638 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066579331 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112909244 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070532432 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067987982 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069225182 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064363426 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107005778 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080110345 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075851873 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066506903 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080830843 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080629796 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064417855 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08270137 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071531468 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080021911 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066397775 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070510305 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064578931 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070604201 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076742776 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067308941 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066747983 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068649796 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085962571 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066994279 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079501805 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069391369 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068558069 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067663717 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070201717 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075899637 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067174741 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085915429 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067731748 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082897724 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082920564 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08023335 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08241798 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068604769 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080222333 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080417784 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069157429 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068600178 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070154927 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083163562 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064840901 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06945312 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078288103 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068084516 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089242914 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089334332 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068546206 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075819941 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066624181 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066402217 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066547859 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088909402 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068769941 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066202921 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070437004 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069415788 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064565932 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065628328 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070005326 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064466598 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067891699 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069385713 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069498377 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06895056 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08298338 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068841723 seconds)
  done (took 8.731878036 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06904671 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068652413 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069606211 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067961296 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068539817 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067683954 seconds)
  done (took 1.903376975 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094436985 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070231331 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080716844 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072635319 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105188112 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087668426 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087514044 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079120853 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083774859 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078878964 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08681413 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08880572 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093117726 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072845725 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086477644 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071984832 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08742128 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075780243 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078291187 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072822707 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086601643 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072424487 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073361973 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081870089 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075898649 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071924319 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067924082 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078859789 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078394418 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079291087 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072550436 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075894436 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070948949 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083042287 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086690416 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070937504 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071989543 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076904296 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072851932 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075732525 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087984943 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073069579 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074224109 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077215995 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078716617 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071100907 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077689342 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076210996 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08631283 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077005384 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077411258 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07125145 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075009339 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076639409 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070717277 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078134517 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076850462 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08630652 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072501794 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070291823 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069264922 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075609553 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077622294 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07550909 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078860176 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077088592 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070391285 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072274493 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072309783 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071684896 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076577919 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069153717 seconds)
  done (took 7.072459373 seconds)
done (took 27.961132201 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546757057 seconds)
  done (took 2.007466224 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600539337 seconds)
  done (took 2.08603471 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.548094699 seconds)
  done (took 8.028904196 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.391535891 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474669909 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.68717754 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130211092 seconds)
  done (took 3.20503279 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.681059349 seconds)
  done (took 2.169518757 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208897221 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195535518 seconds)
  done (took 1.903569338 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379458462 seconds)
  done (took 1.857885262 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.096648806 seconds)
  done (took 2.579151317 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262225055 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165283158 seconds)
  done (took 1.915134468 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.467516014 seconds)
  done (took 1.950854713 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.834746454 seconds)
  done (took 6.319862676 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208454763 seconds)
  done (took 1.737079423 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239734005 seconds)
  done (took 1.721898296 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.692450325 seconds)
  done (took 3.174705463 seconds)
done (took 42.146170267 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080802672 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081540957 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081473477 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078630017 seconds)
  done (took 1.793278485 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076998473 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073989058 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076538037 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07343469 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077020039 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072255229 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074509539 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077013929 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072759662 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073200682 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073013304 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.0726646 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075300055 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074763278 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070938202 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075117 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076673549 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072757745 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075687726 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072523487 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071430838 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07496249 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075060319 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072312787 seconds)
  done (took 3.268307298 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077959043 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072846629 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075174685 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07200191 seconds)
  done (took 1.789097482 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07760247 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092162843 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089841997 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077518256 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092099777 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086184677 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069579444 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069416401 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073562894 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077345467 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068126121 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096473246 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088709589 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076765781 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079024112 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066232439 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06871372 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086989398 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077446084 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077770194 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069706379 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076992514 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068357368 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088239526 seconds)
  done (took 3.38224664 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077662369 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103681541 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078191874 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088244693 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090322852 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065601696 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074442913 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089385858 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122806449 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06552549 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06992977 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065468923 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072782707 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065163587 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076187204 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104684087 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108627936 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068531882 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095937784 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068288622 seconds)
  done (took 3.148504672 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07285692 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06994984 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066110348 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06911288 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077513519 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073291508 seconds)
  done (took 1.926989299 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06792945 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067650507 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06735236 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068243119 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071429022 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067592849 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065851204 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067189856 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067519114 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067093091 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066739445 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065941783 seconds)
  done (took 2.304460432 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.172863416 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068694332 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069134184 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06674218 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071002013 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066214839 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079939603 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068092822 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090873268 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066750849 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066911558 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068817618 seconds)
  done (took 2.451537259 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209643167 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076906283 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237899065 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138337599 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111990853 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115605642 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104907705 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113826611 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143987483 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102150456 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168497637 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166162044 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107691394 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139555225 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089664922 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098038711 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15637761 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163077082 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103877675 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166474607 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146308434 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127257307 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147313846 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101821372 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106381964 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122183135 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071320658 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08055328 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172249219 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133029642 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147562376 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111613506 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094432254 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178236876 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172824135 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144137975 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135710333 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084043481 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103428525 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133643559 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20124156 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08881208 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163818273 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244529641 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081995736 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135720452 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121163757 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121560852 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108272739 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090651848 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146812951 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184498643 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140427114 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087260906 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11308962 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11701692 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116358214 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104408702 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18354952 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164018674 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129579865 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071579352 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100440815 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155109685 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13250416 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.11015198 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127142987 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094071316 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134440198 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155548869 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119701461 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144204685 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129400016 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089476406 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120206549 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140625201 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129283933 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171708681 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125312915 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073389375 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125917431 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104276132 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081964793 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143590106 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075749869 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176403148 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099049351 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106775819 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11363424 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111279678 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111469117 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163149151 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142854453 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244060376 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066635229 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104417927 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121889911 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149686266 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087836316 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109085312 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117611218 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078303827 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139278734 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074782295 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125101162 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075719956 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126150794 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132823292 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076337943 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122918101 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101739697 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10150873 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135716356 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161117018 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089577426 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082795172 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167041162 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123497577 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105097637 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144971091 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157537956 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100235084 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103285353 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150536777 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180987241 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089940295 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164007266 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108466909 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083820587 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088018282 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124897175 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113204184 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123619803 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082745258 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119825144 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170720817 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075536155 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096406696 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133805851 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079468536 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081050848 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106040189 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104438294 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097138225 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10083101 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104587874 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138126386 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123126496 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104273169 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269352856 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099502061 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17226779 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089761773 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100442861 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104126744 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070209291 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139050392 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158939349 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080052311 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167067149 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124801158 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105745533 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120792008 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083349535 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140911475 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07919835 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070978364 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146680661 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111573571 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111056588 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152754751 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106223261 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127005941 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120358125 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135123996 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134015523 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131951669 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106605002 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088251985 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112579955 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126153581 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073079388 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091903051 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080819865 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104500159 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096254582 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083443715 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143392085 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125618224 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100951401 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112423813 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097401518 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148550998 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07712965 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130550507 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119271414 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096260305 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153487227 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153036365 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132065987 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099388035 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145288668 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069783208 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073279725 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.23127189 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125314767 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084239524 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084396543 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118033478 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148344342 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130448093 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140468946 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112314759 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12337908 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155891186 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070069775 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115714043 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149685306 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122549521 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105060327 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090215821 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099875546 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1432208 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108142163 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184117786 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114686862 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126424224 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154310932 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100727293 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083115916 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103426051 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136454736 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105042227 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145512085 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100066428 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088232808 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110689593 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074551177 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100770526 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12838308 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120869614 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137137705 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115577679 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134220294 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077580893 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117390565 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121306409 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122717246 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064080967 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120376024 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162462812 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094152148 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118741642 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155776559 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082363643 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12527763 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319769382 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148985135 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085244784 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111384009 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119962025 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128923066 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121873714 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140352844 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110234945 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134404533 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109472446 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08603906 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088546934 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098290244 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105226057 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094968725 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109576176 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114768546 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096086483 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133082796 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10435354 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110921851 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1192039 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096995608 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090650449 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097287487 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174682804 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120754067 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173346853 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098930573 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146310186 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165602543 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075433394 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079350659 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078557538 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141037643 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084136953 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131997855 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098356502 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106589583 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125327179 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143236016 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095555305 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068630239 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10931079 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138401779 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113188381 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098917819 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104302696 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163529205 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100972544 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079394807 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113901076 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104901402 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101779779 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317227419 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063257828 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099632035 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076830701 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081628743 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129020107 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154633472 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081062222 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103374622 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11971578 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111314855 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129255741 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102306371 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100595135 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116290397 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151551572 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129839529 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090243992 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113614321 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130512215 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157887578 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105741569 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09597503 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172870718 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168864899 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16071383 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088638145 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115211341 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115128025 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108054001 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13972237 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083259379 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165072348 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082347124 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137315065 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105471883 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090896752 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131094058 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099540228 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088970367 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149806741 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118359385 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083158908 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078582884 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119065125 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120479751 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106407152 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075128222 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1398579 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072977264 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132716336 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169032074 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222878883 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106632413 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097408248 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081309453 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11038323 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103927931 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089780618 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100041739 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175218544 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089215085 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150559419 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143381359 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114345173 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139210653 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100598462 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636374337 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078285324 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153325555 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117846559 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174890131 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098431527 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118324947 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110067578 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125081009 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146302999 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105679312 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178016167 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134619644 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116472489 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07993774 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103066806 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103314223 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089049695 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105615452 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113920517 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11702499 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094358702 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116635338 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1245808 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08213633 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095514476 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157373332 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117648206 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145321469 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140939016 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084941403 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118084998 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139407495 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079908886 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122620501 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154327821 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10566023 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24022698 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.0820176 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103569259 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172620842 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073030829 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16514627 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120935836 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110867143 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114810367 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115568884 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133236381 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109279828 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122692156 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0950504 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111828756 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113808341 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08283028 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077428373 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104721921 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11345667 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098104316 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099946028 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099443161 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153320145 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071011566 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09671826 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103697293 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147218006 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178821943 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088242472 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082543727 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120360716 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113759203 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113989035 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121328831 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080100366 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082511612 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082186968 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077518646 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109349925 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112463834 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104989646 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111885984 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166337337 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082893361 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224638289 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095708951 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105047881 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069656692 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079253776 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096845673 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097645764 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108259575 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10054011 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169176507 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094259276 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089960677 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092168941 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072252722 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225033346 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129958071 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113432322 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120245612 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099502251 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062950455 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109370221 seconds)
  done (took 59.248769898 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108556469 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082974369 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097158048 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150120676 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1236639 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212838987 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158169008 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200250317 seconds)
  done (took 2.733421881 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069475533 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094386389 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100594601 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082702601 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066563217 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069044755 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225993794 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080709013 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066849207 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088827455 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080513652 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069493946 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423638155 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069007027 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069852799 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063478301 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067536381 seconds)
  done (took 3.381820764 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368071867 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601922739 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373062892 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073742424 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.840049056 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09370913 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.030330789 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130738282 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073510809 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536822817 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702680343 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124788947 seconds)
  done (took 18.551952983 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076325912 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070301238 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084338443 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084087518 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072622815 seconds)
  done (took 1.988452185 seconds)
done (took 107.510251591 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079878443 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.39445467 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053705321 seconds)
  done (took 2.077463073 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083367614 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084974081 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084865624 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082844046 seconds)
  done (took 1.946174194 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074340496 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076651281 seconds)
  done (took 1.754981164 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224839892 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138836771 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086471743 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082257415 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077998371 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079102035 seconds)
  done (took 1.850296745 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07176498 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074423396 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073071345 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076440839 seconds)
  done (took 1.901694057 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076318451 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052757063 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054902121 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055972149 seconds)
  done (took 1.846981804 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086138919 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079101817 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078159281 seconds)
  done (took 1.852073847 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101292251 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085008178 seconds)
  done (took 1.792695074 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081665431 seconds)
  done (took 1.689101459 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100091247 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113539503 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.1284909 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109630323 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137030119 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109126461 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085605088 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087113631 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07695343 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087020916 seconds)
  done (took 2.640361293 seconds)
done (took 21.481587699 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079001805 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.358657034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360598469 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089403552 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666507269 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356437798 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.968157262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092920925 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117997596 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070950717 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087799556 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649851403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.959835566 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319608865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945971479 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.315397807 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649975554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068338524 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067889961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068263635 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.953135305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068023251 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067651575 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068429183 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649183304 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371808887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067981169 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319584171 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067964613 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069692344 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354831337 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067986237 seconds)
  done (took 16.010086979 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070851937 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117711866 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073979274 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083911317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071023289 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069488356 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071565626 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068987317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119203453 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067605641 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084216189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067620874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071577545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068510812 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087269043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067814373 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06872204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068786927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068298316 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068829226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086679255 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067730863 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067905317 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068435662 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068014227 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079554568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06864392 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068424357 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0686052 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070136341 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071782829 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069686597 seconds)
  done (took 4.012457872 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115964708 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125542465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074829875 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102746648 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111903986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070320673 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143109008 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092500427 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127675401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068212149 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084193939 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067910029 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10062233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068900638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087977939 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068858203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069322108 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068613703 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068499962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069242107 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087169707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06808456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068304802 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068955563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068616268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081678499 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069166455 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068909603 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068728151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069841733 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071846757 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069116544 seconds)
  done (took 4.267491417 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072800158 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075090104 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082913056 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083640976 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069676825 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072037182 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072936237 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069825857 seconds)
  done (took 2.220098117 seconds)
done (took 28.120765607 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078747351 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068748366 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073061566 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081389617 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072611871 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078796057 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067335872 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074754458 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072180218 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073044861 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074635528 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067575053 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07072744 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067890887 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073987634 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067678153 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079488415 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071981316 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079015161 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079394029 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069834231 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073253507 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074233223 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079293393 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079280406 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079487385 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076980008 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072718255 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069195468 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070534634 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07706907 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083717838 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069024408 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079748415 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068039031 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06766558 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071382022 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068090801 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079895045 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076961469 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069779412 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07629004 seconds)
  done (took 4.705196454 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087750898 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091429966 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08495933 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06219739 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066709165 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065531794 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088283633 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059956551 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059687739 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087427096 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05565046 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059254452 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062351911 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053910666 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059428779 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057058412 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062124529 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056130012 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059185739 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059578505 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057939246 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05449522 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060908054 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062601035 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058654831 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061881477 seconds)
  done (took 3.324113505 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074644785 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084748491 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088940356 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127377416 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104475322 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077218397 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077726538 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092254321 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085345387 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066943689 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071332846 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093897847 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088172436 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07375395 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067592314 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084957164 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082434921 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069277041 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073798181 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091182473 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084695286 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08398475 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092598222 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080661774 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066762067 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070211484 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071476179 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081305708 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072191012 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076648182 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071822883 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070648512 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069740054 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078727895 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071644212 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069053662 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090555147 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077205684 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078075803 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068457144 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071042657 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068469275 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089242545 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122795187 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067656912 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074225812 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075320406 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076472015 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068009943 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085707484 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078440664 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067291068 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070483278 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066841401 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067738501 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080381438 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06979458 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069716473 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076054947 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070579008 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085741237 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071428671 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08276466 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067323056 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075158553 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066699568 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068415527 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066780264 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092647185 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069220748 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108461538 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068616094 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068570453 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076207811 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075086604 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073548869 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067994979 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08246062 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077638854 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070870346 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075866955 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070816514 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070833196 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089221129 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069423941 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069014746 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068299396 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073595575 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070316957 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069157976 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080263304 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067250074 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070620447 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083721285 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067008688 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069130974 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073711305 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072284576 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067182754 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078248234 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072663247 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068300649 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077178132 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067643532 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.0706993 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07785588 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073348696 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066617503 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072054967 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073706322 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068198182 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06862552 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069597712 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068765431 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075284415 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073308926 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071709618 seconds)
  done (took 10.536643648 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160543565 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.165727137 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070361964 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147939794 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076645705 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079557862 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14745202 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094312516 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067862071 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068366292 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068802391 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109797746 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10628788 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115562167 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079237802 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068091361 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083638493 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114031659 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149418905 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143136787 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083834816 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076998496 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070164478 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069791813 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070909452 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078451377 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085311028 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076758304 seconds)
  done (took 4.394669556 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081583877 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09688398 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.0745994 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089220469 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092092233 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068116205 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070173847 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070131877 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079876086 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079288897 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067384414 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07360691 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074809725 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071390251 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068896042 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075219471 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07504326 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06933932 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070924121 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07303051 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078033178 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081161869 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071690643 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067142859 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074246245 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066980944 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0646819 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084702774 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068358135 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089879295 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065671671 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074857425 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081446685 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068704748 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06767044 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067447657 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067859204 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067414968 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069485671 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066654579 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066790374 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057704493 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067204776 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080029384 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074026022 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056557637 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072549383 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073415942 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072581275 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065804535 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070811789 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07030869 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07050208 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074367027 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072468022 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072623258 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068928675 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06572101 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075473573 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067356157 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064690246 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065949601 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0722593 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066153481 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075186531 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072182387 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065895452 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067127439 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069277264 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073357307 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067310454 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070914021 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065259529 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069557101 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071927389 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069133593 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06864106 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066289747 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067243504 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067858959 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055749155 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067803086 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054098788 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070458026 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065588045 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066365366 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067584616 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072366898 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08034921 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068914928 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073632089 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.0687489 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066534113 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070557098 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060339144 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070505642 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082872583 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083010495 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067632333 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06576693 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081920067 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07213903 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066697168 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05709884 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074716637 seconds)
  done (took 9.123962768 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08979382 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069783314 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083281208 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091866018 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086900214 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07471782 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076477628 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069232116 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082351496 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073566177 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076550013 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068531992 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076881676 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077327435 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070538666 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077098389 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072433467 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083006408 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082674949 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068505122 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075885793 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080325279 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08954927 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08024526 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078699715 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080011342 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089957881 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072572248 seconds)
  done (took 3.867326963 seconds)
done (took 37.567375171 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.719303697 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.884705852 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.701700239 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.091037973 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.798432168 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.721988493 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.871546401 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.698451995 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.894431434 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.7424637 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.927761291 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.73467532 seconds)
done (took 64.426525381 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.706547793 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.838924544 seconds)
    (2/2) benchmarking "String"...
    done (took 1.972366317 seconds)
  done (took 5.447310611 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.0082638 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.390151657 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.942343067 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.694420315 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.702902468 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.003535429 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.502281035 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.226603529 seconds)
  done (took 30.098921301 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.782869565 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.930813055 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.373181335 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.399719498 seconds)
  done (took 15.17613084 seconds)
done (took 62.163252387 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.709873715 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.697003457 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.731378352 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.680133387 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.753691462 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.706287577 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.948249582 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.70587472 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.693691754 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.680350497 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.694884019 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.112160317 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.704721231 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.111163206 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.695601593 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.704789568 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.775606619 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.327361269 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.850528074 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.713682649 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.717527255 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.743685875 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.694970975 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.7086998 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.744877891 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.697927917 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.120400254 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.69679593 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.316448773 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.69776606 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.723447885 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.152203392 seconds)
  done (took 201.647144543 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.694312674 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.601887373 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.659558366 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.696961853 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.933623113 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.874899553 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.811226286 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.125610093 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.698125367 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.696205003 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.883901309 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.696285526 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.900331297 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.639051699 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.723574872 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.809134217 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.870293553 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.911529561 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.727038063 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.852743917 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.723614272 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.752874151 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.68601092 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.865811462 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.71646922 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.744089117 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.866765815 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.724984161 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.893203983 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.848346264 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.71002943 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.707075474 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.922523038 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.571639007 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.709457495 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.7107019 seconds)
  done (took 166.597444354 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.878351501 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.075785082 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.699074526 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.699028551 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.698691164 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.70753688 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.699016278 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.82797959 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.825990623 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.161581669 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.015077652 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.752749833 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537808925 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.69983087 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.766543904 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.713330023 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.702745103 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.716142881 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.726258399 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.701906069 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.700489254 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.828504357 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.711721247 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.77624373 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.708439775 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.699738235 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.706703578 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.069794653 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.699043611 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.704972731 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.067119807 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.966214627 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.701170475 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.699328166 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.596112136 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.784281414 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.702341986 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.706234928 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.701060269 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.920236548 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.701496874 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.701766872 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.704059942 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.868841681 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.699330949 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.827491771 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.700860885 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.204058429 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.700864411 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.701622032 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.701867998 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.942483224 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.373922285 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.703031887 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.702419702 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.703944721 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.702696792 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.700578346 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.708147232 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.736950372 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.777496418 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.704538334 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.703257594 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.70599167 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.70010731 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.699212674 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.699651338 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.757151143 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.759138825 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.814781922 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.993960097 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.824433749 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.702560646 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.768482611 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.793975995 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.702523415 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.700208493 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.701954939 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.700860712 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.782348818 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.699691007 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.822367591 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.708444239 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.705308804 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750891269 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.770959478 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.701141439 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.596069748 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.701097961 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.700786778 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.00991649 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.771760034 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.701157975 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.701729753 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.700636208 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.825957196 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.824241429 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.478621615 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.701188208 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.850222764 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.71083504 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.905422868 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.706737574 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.887476439 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.706993623 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789889333 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.713323936 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.707973964 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.707178673 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.739253716 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.706995899 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.76436779 seconds)
    (112/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.711385202 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.707112537 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.706986073 seconds)
  done (took 392.505933067 seconds)
done (took 764.324693722 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.419899712 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.372294825 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.483804196 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.401241806 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.374367905 seconds)
  done (took 13.700877963 seconds)
done (took 15.349340724 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.7921351 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.799218303 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.73225703 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.796322245 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.727397402 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.794029899 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.777303947 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.728663453 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.760977814 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.732527287 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.76775451 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.732248027 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.719183705 seconds)
  done (took 24.506820079 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.973867481 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.955156003 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.780667761 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.950408988 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.754761307 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.935643315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.8722757 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.864981557 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.864911619 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.72516905 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.721841615 seconds)
  done (took 22.048231008 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.94903472 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.948919974 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.783054348 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.947445608 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.757440716 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.948113897 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.875137659 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.864274809 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.868931857 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.725941602 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.720132695 seconds)
  done (took 22.037265795 seconds)
done (took 70.237158537 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.719073694 seconds)
  done (took 3.367328584 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.737058379 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.871989453 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.725578701 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.719722744 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.715621641 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.716888748 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.719007073 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.716647159 seconds)
  done (took 15.572112903 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.713022035 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.713478947 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.717282933 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.716726585 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.717542327 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.714163257 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.714531627 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.716077224 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.715612203 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.714464293 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.714037834 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.716111112 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.713017955 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.717021676 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.716967538 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.71474602 seconds)
  done (took 29.093237391 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.715988314 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.714948472 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.714032823 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.715722185 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.714403117 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.714820372 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.71532561 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.715288469 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.714454029 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.715711713 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.715962657 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.714728909 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.717260713 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.714198906 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.716703969 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.715806559 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.716072 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.717051724 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.719785975 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.715818793 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.714692326 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.71551246 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.715959917 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.71600293 seconds)
  done (took 42.829392613 seconds)
done (took 92.509678215 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.595715444 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.102904829 seconds)
  done (took 8.34918513 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.72074334 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.717875782 seconds)
  done (took 5.129394786 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.718856991 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.717850062 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.719274342 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.718465495 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.719047439 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.717832582 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.717877478 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.718716291 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.719229772 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.718674821 seconds)
  done (took 18.837174923 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.717831502 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.71887982 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.714665978 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.719172413 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.720516734 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.714511312 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.718892357 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.719346321 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.717955154 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.717020948 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.719648293 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.717289563 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.719998463 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.718256169 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.720416553 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.718064513 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.719102604 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.717656047 seconds)
  done (took 32.579734078 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.720107345 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.719333587 seconds)
  done (took 5.092873825 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.716703971 seconds)
    (2/7) benchmarking "second"...
    done (took 1.718322907 seconds)
    (3/7) benchmarking "month"...
    done (took 1.718037799 seconds)
    (4/7) benchmarking "year"...
    done (took 1.716829922 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.718381284 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.717727556 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.719176452 seconds)
  done (took 13.679392967 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.721310539 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.879327953 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.947315258 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.381104297 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.721023537 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.72467767 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.671516492 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.723850521 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.726759591 seconds)
  done (took 19.149870097 seconds)
done (took 104.468054889 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.518835884 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.718000909 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.036242934 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.840423405 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.736269439 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.062051111 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.746121063 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.943309972 seconds)
done (took 42.254829056 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.789155139 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.262730523 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.295264365 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.994327125 seconds)
  done (took 12.206901922 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.710613322 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.265183822 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.764608553 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.381090145 seconds)
  done (took 20.027998335 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.086521041 seconds)
    (2/2) benchmarking "read"...
    done (took 2.080607993 seconds)
  done (took 5.828311403 seconds)
done (took 46.507893547 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.721865196 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.720698573 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.720627897 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.722617921 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.722136038 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.719354713 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.722683777 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.722877511 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.719976765 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.722034182 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.723704348 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.722925516 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.723130592 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723760606 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721516741 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719485237 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723974101 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.720267945 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720990494 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721671063 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722763035 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.719658902 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.719318278 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.723307306 seconds)
  done (took 42.977488181 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.724824819 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.721248327 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.72543551 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.723641739 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.721865817 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.724538478 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.722922634 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.720622095 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.723047395 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.72299345 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.723476953 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.721977405 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.724596823 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.721116012 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725291927 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.722915023 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.724071858 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72280904 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725243226 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.722428803 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.725426884 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722199724 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.721579658 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.72413083 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.721914231 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.722378365 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.72664117 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.724385932 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.72557326 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.723099806 seconds)
  done (took 53.360018639 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.73043718 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.733025605 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.724499783 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.724960756 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.725866265 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.726683274 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.725251785 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.725410897 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.724271569 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.725839659 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.724909931 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.725662466 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.72660567 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.72584296 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.724628992 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.727752424 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.726036151 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.724346407 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.726317773 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.727582166 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.726767873 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.726464663 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.726636459 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.724688665 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.724782464 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.725763502 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.724271237 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.726943017 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.724437455 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.725127446 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.725429007 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.724753428 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.72599718 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.724211523 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.72555722 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.725633558 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.729532376 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.73162049 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.726355201 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.725192445 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.725814993 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.725851697 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.726133894 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.725773087 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.726284113 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.726002954 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.72501655 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.726885041 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.726320173 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.726137004 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.726735149 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.725725063 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.726357312 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.726096647 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.726200975 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.726062219 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.727531339 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.726436947 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.724939669 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.726646421 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.726911438 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.726914673 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.727094395 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.726776523 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.727053931 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.728174647 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.728091302 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.727799951 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.726904468 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.727420457 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.727938487 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.726782008 seconds)
  done (took 125.957598066 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.728665532 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.724993274 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.725830633 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.723533378 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725280791 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.726925717 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.725456851 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727706418 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725782429 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.727801651 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72700343 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.725823061 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726260762 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.72751081 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.727114918 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.725702618 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.728648081 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.726312887 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.727886665 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.728606625 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.72786871 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.728237356 seconds)
  done (took 39.648861254 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.728238138 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.72820593 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.725767193 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.728314379 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.726310911 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.729100852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.73048174 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.728807208 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728164897 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726406349 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726536862 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729912017 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.727340614 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726625538 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.727519001 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.726317184 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729797761 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.728139249 seconds)
  done (took 32.762776625 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.725894199 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.72844197 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.729887112 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.727667057 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.727725892 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.729568323 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.726719289 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.730058319 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.730483474 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.72696393 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.731050266 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728565619 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.729240247 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726556991 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730080234 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.727313531 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.732425553 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726635328 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.730248813 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.726902777 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.727240677 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730888219 seconds)
  done (took 39.693931859 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.73044609 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.729834964 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.727726271 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.728104533 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.728079594 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.730530949 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.729362992 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.726584439 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.732083201 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.731396432 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.729420277 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.731414185 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.728692895 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.728951103 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.728781792 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729266084 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.733975589 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.7283181 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.731762005 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.729446942 seconds)
  done (took 36.256957913 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.732993415 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.733389069 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.733037654 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73221199 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731663534 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.732204294 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.732772086 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.733853599 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.733197032 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.733421115 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.733694392 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.732891097 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.734320733 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.732977841 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.732387823 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.732196031 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.732412326 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.732192264 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.732198314 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.732991167 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.732269151 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.732608204 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.732272393 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.733094682 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.734187166 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.733457312 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.73358535 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.732896663 seconds)
  done (took 50.186439965 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.733788759 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.732787808 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.729241602 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.729845768 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.729715471 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.730915328 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.729045015 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.732635779 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.732242219 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.730254687 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.735030309 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.732743744 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.733709356 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.734128755 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.732476337 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.733173136 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733451315 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.730418506 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.731685437 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72892929 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.735495757 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733037747 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.735250982 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.731968346 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732767007 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.734717673 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.731695584 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.731966189 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.73440859 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.732519458 seconds)
  done (took 53.636311892 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.753137092 seconds)
    (2/2) benchmarking "in"...
    done (took 1.754138262 seconds)
  done (took 5.17481309 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.731136726 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.734994573 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.735220846 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.732477431 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.73261213 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.735977422 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.73530067 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731498398 seconds)
  done (took 15.535851997 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.735318135 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.734862365 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.736548676 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.736515739 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.736283809 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.736096635 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.740007994 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.735395187 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.736752732 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.736856509 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.742709263 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.743324147 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.7370092 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.735008481 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.736455901 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.737086279 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.736584806 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.735570403 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.735411288 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.735660306 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.736467754 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.738522591 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.737195433 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.733061449 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.738226917 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.745238856 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.741190849 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.73704188 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.737246829 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.740462176 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.737016907 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.733233639 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.736603871 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.737090961 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.736116836 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.737258203 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.744838879 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.737542844 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.742383423 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.736087277 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.738139517 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.733978164 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.738652308 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.737723618 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.738952079 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.738696269 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.737551486 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.735841429 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.737470236 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.740378313 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.743755022 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.73744152 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.735575172 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.74012081 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.740467056 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.744398905 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.738452942 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.742164829 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.74725618 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.746244598 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.752052276 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.745610126 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.740241348 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.739439735 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747449371 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.761911882 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744417197 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.737284663 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.736727219 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.738263577 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.744550081 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.752001217 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.748386154 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.740288499 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.738052055 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.738505363 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.740539172 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.738859471 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.745408712 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.744902127 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.742242155 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.740711111 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.748058479 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.760480435 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.739810729 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.739916093 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.738226302 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.738803746 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.740244689 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749736613 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.740034382 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.739839016 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.739532066 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.74134533 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.741590525 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.740945619 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.739721632 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.739190968 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.73673952 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.739377557 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.740558161 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.743332073 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.748860927 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.742163489 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.741087399 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.74525006 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.739847054 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74230083 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.746017544 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.738783614 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.741421831 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.740555967 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.747326685 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.7396964 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.742728852 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.750015963 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.74072819 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.743259247 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.74112841 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.74216144 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.750523304 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.767873914 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.741071925 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.741681062 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.744690995 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.752253237 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.741341834 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.744046221 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.74130965 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.738885363 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.740501777 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.742649913 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.74260942 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.743375739 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.740921661 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.742950149 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.739560851 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.741911058 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.742380621 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.743422608 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.74569508 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.743554569 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.744120318 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.746054 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.742695026 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.743468037 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.74817631 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.742765918 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.745203137 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.744278534 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.740693907 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.743355128 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.744290336 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.743314272 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.744036071 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.742840866 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.74279248 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.743013109 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.742663867 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.743212093 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.743811875 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.744559359 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747884112 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.744712398 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.7469141 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.74417886 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.741405389 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.745990607 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.745431742 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.743878722 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.745030888 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.745259826 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.746660206 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.752971929 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.744156033 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.746008667 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.748361158 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.743232864 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.744407475 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.744576621 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.747609673 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.75189282 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.745732076 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.752209794 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.745331813 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.743892982 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.745063746 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.744557455 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.746184605 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74601625 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.748000038 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.752139332 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.75819239 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753123873 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.746563896 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.749524844 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.746917448 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.749254552 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.749203451 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.745796794 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.745190684 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.745602893 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745800237 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.745238659 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.747153643 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.746648286 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.747372186 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.747017064 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.747496532 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.746132036 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.745787291 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.746836384 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.746478394 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.743624311 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.747223667 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.747046533 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.745611706 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.743601225 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.74523788 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.746995846 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.747512145 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.748470382 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.753118812 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.745514734 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.748383588 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.748395415 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.747547893 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.746656755 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.749470126 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.749543226 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.747191306 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754232411 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.747780232 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.749038302 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.753468132 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.747003197 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.748762392 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.750320873 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.748210536 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.744721621 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.750158735 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.754727907 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.747540556 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.749180969 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.747235854 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.748811224 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.749146435 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.752936154 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.745730952 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.748098413 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.747996164 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.751562835 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.746841634 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.749446536 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.751280336 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.749735024 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752609457 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750466909 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.749404088 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749111612 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.74938238 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.75006543 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.750722439 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.753298303 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.756522428 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.753524013 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.749976477 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.751088892 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.751804403 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.754271279 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.750463911 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.75007532 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.750221378 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.763283918 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.756800487 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755992107 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.751293877 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.749630137 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755307653 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.752528576 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.75481865 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.74944132 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.749834121 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.751137818 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.75072895 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.748603065 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.752309997 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.75118375 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.752440003 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.753048271 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.757222145 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.752255384 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.751062906 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.752536962 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.75184258 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.75158611 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.750945693 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.750597967 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.752744784 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.754291117 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.750845349 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.751062888 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.757327313 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.752544165 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.752322261 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.751437175 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.752610007 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.752902902 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.753496467 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.752042215 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.754915926 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.7602101 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.754231468 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.761654944 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.753901129 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.759700973 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.751737629 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.757068718 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.758751855 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.749461467 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.751115112 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.752628266 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.752496847 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.75902377 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.753346837 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.754534202 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.755105068 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.754081524 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.753088546 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.752927908 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.753010403 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.753713964 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.754997836 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.760217478 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.753754969 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.75784268 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.755459831 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.751226801 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.753409874 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.75443797 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.75296845 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.757495158 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.755453101 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.754114629 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.754630037 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.753493923 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.754394348 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.755501121 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.757126383 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.751650423 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.751693899 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.759840277 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.754004001 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.760271552 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.753188094 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.762317211 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.754583394 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76009952 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.754420581 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.755965653 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.753827462 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.754746656 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.755656714 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.755968753 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.754625257 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.756017527 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.755854093 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.758494602 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.754342016 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.757572127 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.757763325 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.754756411 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.755001914 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.764577616 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778837471 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.756821694 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.759155956 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.752460052 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.756176004 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.758689803 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.754795502 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.754793375 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.758245461 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.76530019 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.761860777 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.756247707 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.756648353 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.756294332 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.755871307 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.755565019 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.754521726 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.756757946 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.757090506 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.756682739 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.757515286 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.760526106 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.756121552 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.756758037 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.757265783 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.759883389 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.765867044 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.755903112 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.756578484 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.757020814 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.755810773 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.757899893 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.756396187 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.756435128 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.757366424 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.755990838 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.759737892 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762995434 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.764091407 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.759080566 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.757321584 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.757464624 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.759546393 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.759516422 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.756865949 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.756908385 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.757685637 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.759484883 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.758989219 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.757990842 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.756935275 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.757998073 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.757756051 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758523944 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.760352013 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.765725052 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.759559241 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.755296961 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.758886201 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.75852728 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.757033601 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.759953371 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.764955541 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.761740548 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.768728495 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.76593168 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.763105277 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.758106927 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.761679435 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.766343104 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.758896668 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.760787815 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.760059788 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.759620519 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.761164755 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.763300759 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.760603001 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.76526741 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.758770039 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.759445988 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.767602851 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.761983188 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760612522 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.761698146 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.763772704 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.760165643 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.758122492 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.760790815 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.760309921 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.765130628 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.762454785 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.759631211 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.761332549 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.761698105 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.761063364 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.764952979 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75991701 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.761351276 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.758774735 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.76157352 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.760880431 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.760067087 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.757117928 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.761196215 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.759862587 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.764320766 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.7664602 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.758653175 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.762612196 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.759769788 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.76413006 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.760200945 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.760615801 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.758276815 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.757112228 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.759805204 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.761119761 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.76108113 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.764222058 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.76184364 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.760953024 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.763037653 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.761855737 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.763761992 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.770657033 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.768702045 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.758265273 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.761435807 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.762926136 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.764153627 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.760886992 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.76162493 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.761622669 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.76406291 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.761757772 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.762013736 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.761943931 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.763979528 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.7771398 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.763308065 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.762769067 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.762671297 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.767701978 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.761553757 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.763366011 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.763054745 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.76428422 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.765925079 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.770980249 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.762623937 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768827836 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.762202718 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.764447793 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.768197498 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.766602728 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.772175445 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.765614863 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.76378033 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.763531361 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.767463472 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.778383533 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763895032 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.772022725 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.793218513 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.763877638 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.765134928 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.763409816 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.763366312 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.764414944 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.765139492 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.76394528 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.764756211 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.764673362 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.762899264 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.765731885 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.770004645 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.765385966 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.76431531 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.765107435 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.765218363 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.765469006 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.761120932 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.764184914 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.763757094 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.765665254 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.7641751 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.765301152 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.765990195 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.776861448 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.776617799 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.76532346 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.765499277 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.761559798 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.766841922 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.767510379 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77699459 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.771277881 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.765298069 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.764998191 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.76682665 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.764385191 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.763065194 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.765054368 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.765614038 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.764653618 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.760750877 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.777737433 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.773137499 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.770426132 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.766228866 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.765697978 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.765887121 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.769323963 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.764765517 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766247349 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.767562288 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.767035628 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.770186226 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.76682198 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.765684936 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.769166628 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.772999855 seconds)
  done (took 1046.395566472 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.76403324 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764979878 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.76345699 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.764445655 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76492761 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763783935 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763936894 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.764455445 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.764464454 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.763556803 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.764070184 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76331977 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.763978579 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.763614361 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76407406 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.764463921 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.764284367 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.764380561 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.765115523 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763765628 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.764593734 seconds)
  done (took 38.745827816 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.767128082 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.766250555 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.76484953 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.767756914 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764469535 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.768408541 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.765117271 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768001562 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767439714 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766120404 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.768251843 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768203204 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.7648825 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.764508161 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766886594 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.76847818 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.768746984 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765719026 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.767999265 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.765071824 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767941049 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.766133586 seconds)
  done (took 40.567656542 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.768428583 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.768668153 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.768592035 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.766252722 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.768250778 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.766215528 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.770569196 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.768889037 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.769534828 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.769911372 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.769360737 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.770883714 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.776662675 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.773914344 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.77051452 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.770818558 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.912290614 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.769796646 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.77138744 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.769609541 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.76650586 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.77508476 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.767317817 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.767786182 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.769505363 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.769172948 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.770707386 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.770786407 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.771264202 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.771613981 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.774574445 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.771558186 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.770434319 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.774418898 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.771295741 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.771432224 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.774418245 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.773240329 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.769038351 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.77163035 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.780987692 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.791566284 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.771227675 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.778106348 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.773020442 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.769842374 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.775284007 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.779709118 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.768918781 seconds)
  done (took 88.653243358 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.771906171 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.771865552 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.768114446 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.770919473 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.770969058 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.77072165 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.771474192 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.771703803 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.768853021 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.770010039 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.771025374 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.767443495 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.768435758 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.7722215 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.772948368 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.768265988 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.769941363 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.769449592 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.768596035 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.769091218 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.76901848 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.771707366 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.772697239 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.769380382 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.772471801 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.770815824 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.768664288 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.771991112 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.76906423 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.771071558 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.773470971 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.772568252 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.773157081 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.770581998 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.771064558 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.7744169 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.774422123 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.771944491 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.771247375 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.771028086 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.772892461 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.776263929 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.774163795 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.775676276 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.772402645 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.772768082 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.77169751 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.772140426 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.773910791 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.774223733 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.774597826 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.773028854 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.775591711 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.772022064 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.77436027 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.776565472 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.772573001 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.771274538 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.776725682 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.77402743 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.772959393 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.775715074 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.772614031 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.775259631 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.776908107 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.771323878 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.773713308 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.775656089 seconds)
  done (took 122.21116149 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.77839544 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.777289421 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775653988 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.775609464 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.776192037 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.776473985 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.77856409 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.77607085 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.775857376 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.776489432 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.776114033 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.775746447 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.775840646 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.775885688 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.775891526 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.773980484 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.775827551 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.777354054 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.776145067 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776818173 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.776464106 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.77592711 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.776265594 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.776640234 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.777070531 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.777224062 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.778087583 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.777106746 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.778290072 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.776379829 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.77819799 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.77731313 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.776221643 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.776918626 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.778830129 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.778021963 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.777506287 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778242655 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.77820965 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.777832403 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.777831314 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.777182429 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.777553059 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.777643699 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.778764467 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.777446759 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.77697384 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.779432739 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.779490025 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.778262118 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.776753955 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777488722 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778245446 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.778314556 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.778124856 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.778172483 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778710601 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.78117534 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78130688 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.779750705 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777986114 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.778786794 seconds)
  done (took 111.907413203 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777967193 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777671036 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.775194712 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.7760728 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.778438608 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.775568984 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.776912473 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.77810214 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.77879791 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.77922344 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778883564 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774920689 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776361863 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778607427 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.775875078 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776756813 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777530731 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.776938414 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779239933 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777256843 seconds)
  done (took 37.257020095 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.777233684 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.779535745 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.777399618 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.778316684 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.77850092 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.777288734 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.780780278 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778506611 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777801587 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779962924 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.779998712 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.780474812 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778015586 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.776797756 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.780080246 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.777752198 seconds)
  done (took 30.171070308 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.77792925 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.780060775 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.780525903 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.781065905 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.777853356 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.778210341 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.780749192 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.777630932 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.777828593 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.780842843 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.78071303 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.780896747 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.781022877 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.780666945 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.778696029 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.780589879 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.777992773 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.778836518 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.782038115 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.780631271 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.778552361 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.778277999 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.781642551 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.783381107 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.778815009 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.779938617 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.778268325 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.7800328 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.777455837 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.781284216 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.779566128 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.779889691 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.779469049 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.778746924 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.782551654 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.779683568 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.782057188 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.782344919 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.782447324 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.782102568 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.782970173 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.779775902 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.781585923 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.782607103 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.780982583 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.783215143 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.781486231 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.780203133 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.779526401 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.780450288 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.783944589 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.784664913 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.784389163 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.783362842 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.782616582 seconds)
  done (took 99.646112593 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783516936 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.782004843 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.780003588 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.78204603 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.782925007 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.779609181 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.784200288 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.779443887 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78075273 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.784132227 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.78221183 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.782968537 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780396883 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78488917 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781331071 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783164191 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.782302817 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.781239417 seconds)
  done (took 33.792410691 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.781521939 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.781137986 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.782565731 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.781544224 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.780750854 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.784717346 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781434345 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.782516746 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783966389 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.780977819 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780694259 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.783989219 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784062775 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.784139187 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.78090507 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781842736 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.783847512 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785239583 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.780438149 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782434387 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.78607052 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786547486 seconds)
  done (took 40.93759207 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.78539256 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.784043925 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.800599175 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.80492536 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.807278086 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.819466226 seconds)
  done (took 12.517656761 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784106828 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78440411 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.78366156 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786529335 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786059728 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782014021 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783667063 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781639931 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784894021 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783549414 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782744476 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785836799 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786203047 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783169283 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785377667 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78702797 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783810861 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781981596 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784274027 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785584862 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782032498 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785383589 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782836129 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783252097 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782848785 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785206514 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785296969 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784225041 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783109918 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786537703 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787286644 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783290318 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786753375 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78428013 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788240673 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78530669 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784680663 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786909969 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786800263 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782827724 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.787565939 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787106447 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786283327 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782309418 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786034475 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785068223 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78486786 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785019055 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783037233 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787652885 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787755743 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783606497 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787133863 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788708959 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78652424 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787387592 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784820532 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784241717 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786836681 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786508335 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785076169 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788666347 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785444212 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787479581 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788058366 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785844938 seconds)
  done (took 119.54176769 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784678559 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.784809317 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787325801 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787207269 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784736686 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783259464 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785804353 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78620683 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786256383 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786721682 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78967004 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786372029 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786686399 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786228975 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786560872 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786942714 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787499725 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785220086 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786559556 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790942218 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786339433 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787043567 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78562885 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787483249 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786211904 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78970315 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785377985 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787827619 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786713929 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787876574 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789115778 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787410829 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786395931 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.787268418 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7885844 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787206237 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788745424 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787660421 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787251435 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791673978 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788762602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789224436 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787217322 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789930322 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787786608 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788282235 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788163448 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788252861 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788971149 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788128082 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789788334 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789414611 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789505236 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788716563 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788782589 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789419605 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78848677 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788728257 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78960288 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792260615 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789784884 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789859109 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793477832 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788324559 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790093359 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789456323 seconds)
  done (took 119.722491801 seconds)
done (took 2438.911971593 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.872417558 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.849959049 seconds)
  done (took 15.444633097 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.954562799 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.904478006 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.7913138 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.828017312 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.790847757 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.814428098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.811682223 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.792089893 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.791815606 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.792184607 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.792061433 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.977473937 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.791566692 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.791185211 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.792588595 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.883035268 seconds)
  done (took 51.039055576 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.792809097 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.795311643 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.804607346 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.797656515 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.795034124 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.806253923 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.827134959 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.798985823 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.830715948 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.807220773 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.867699645 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.805967046 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.795685622 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.845381136 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.806203496 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.810903699 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.880604529 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.869871069 seconds)
  done (took 34.463232567 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.872893299 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.801316928 seconds)
  done (took 10.407151118 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.819371341 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.790808916 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.81132583 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.794038489 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.804345639 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.814338074 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.81556742 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.816442994 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.819097513 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.788416083 seconds)
  done (took 69.826580957 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.801842943 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.799005721 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.799232217 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.795118081 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.78738941 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.792412504 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.795672372 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.793458856 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.484294991 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.832806635 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.802614962 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.800764462 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.795586437 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.797183564 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.793670892 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.817315449 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.924804234 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.794039291 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.792300302 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.801596304 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.797762213 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.862945536 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.809297314 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.795759975 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.826342627 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.482802912 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.805793981 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.801896804 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.918481715 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.795363998 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.796460027 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.796946868 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.798346534 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.176448051 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.086587742 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.7962659 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.805379843 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.804977597 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.794058929 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.921670207 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.797199099 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.801865389 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.791563857 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.081924036 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.893453339 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.839797449 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.15401601 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.800743632 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.797239594 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.826595721 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.800653858 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.797177557 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.810413558 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.314609215 seconds)
  done (took 128.712863488 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.793709928 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.082804028 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.947597449 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.793119262 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067466686 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998584389 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.743141305 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842575537 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.794755528 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.995216853 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.957101758 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.900705699 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.794735945 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.793063069 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.793670216 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.792228689 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.954826641 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.861359397 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.795380468 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.792267297 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8223043 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001844964 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.92090643 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.795514882 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.814547258 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.004505121 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.915283533 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.899963307 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.07513976 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.791374972 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.858756507 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.795156884 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.792707054 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.792312575 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950292211 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.891570294 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885445803 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.79766927 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.793132944 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.79234473 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.45437428 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.990042888 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.893566151 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.93833721 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.990639084 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.999255753 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.441281614 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.793753654 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.432954801 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.957995378 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009506569 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.001977695 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.918952528 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.796133355 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.030744113 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.795151382 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.794180783 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.032920667 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.941642082 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.903292634 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.798115649 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.795694812 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.795213321 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.03906112 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.79908896 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.894467604 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.798377538 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.795827148 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.895972706 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.904647549 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.938072862 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010081644 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.830935788 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.695259463 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.306444011 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.010184735 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.865821538 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031471066 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.798149588 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.796141292 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881629941 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.549123479 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.955630744 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.043572339 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.01844065 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832419144 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.392135937 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.795875862 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.991209351 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.982617296 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.99392532 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0036582 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.950500519 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.985848445 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.795569727 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.796964167 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.023981505 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.933898305 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.800040766 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.153202823 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031519428 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.368841135 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.820610826 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.092464258 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930637303 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.17676819 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.428005915 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.796440441 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.965251981 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.837050549 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.798645892 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.796274166 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.98827582 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.604486568 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.798009894 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.319794079 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.861190087 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.798346017 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000141442 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.800355223 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006978688 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.799467854 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032705112 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.895660173 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.833119391 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.972670641 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.005908375 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.591673938 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.043521836 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.042129488 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.917950596 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.019894605 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.391918336 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.798766708 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.074640235 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.798957444 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.797302493 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.966362316 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.798210611 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.94648363 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.803107745 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.026800685 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824715604 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955942344 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.801782169 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.031414727 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.836876872 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.851288346 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.801146073 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.930189714 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.802456749 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.692102618 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.9548196 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.802244776 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.798280246 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.236704958 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.801321989 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.946434822 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.030082826 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823045258 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.869726856 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.325942647 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.798739969 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885856626 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.826958975 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.238798167 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.799629378 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.956602498 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.773775048 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.240774796 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.800663639 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.040722678 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.985599529 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.800041994 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.800967363 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.542586632 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.506755395 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.802127183 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.959892093 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.311733764 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.443707207 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003730287 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.804829021 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930260804 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.802699244 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.877202122 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.144986843 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.798500058 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.801196341 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.800559282 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.800329382 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.800572914 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.008936036 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.834959448 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.297404118 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.939626929 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019503524 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.111434418 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.020910931 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.845886491 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.801570285 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.064364608 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805039224 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.868152074 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.803078849 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.826160919 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033938421 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80553175 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.016443014 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.052959973 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.705079344 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.854651705 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.80482608 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.802511672 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.80265184 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.952315312 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899034133 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.804207755 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.801669386 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.913806001 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.930830853 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998257897 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.38998967 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.977703354 seconds)
  done (took 882.192794508 seconds)
done (took 1193.808299097 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.801164272 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.804998592 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.792382463 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.806381755 seconds)
  done (took 28.943184576 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.811235914 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.808203103 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.810689919 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.812107257 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.81288215 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.809026369 seconds)
  done (took 12.605786197 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.825575378 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.805494574 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.806141919 seconds)
  done (took 21.17780078 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.878089996 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.216789741 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.913694444 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.253534197 seconds)
  done (took 10.002761582 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.812429917 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.812362276 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.813499686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.813059609 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.812892701 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.814899469 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.81126771 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.813532941 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.815241962 seconds)
  done (took 18.061004539 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.15020043 seconds)
done (took 96.676917213 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.934015722 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.173349943 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.791780081 seconds)
    (4/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.14148327 seconds)
    (5/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.725676932 seconds)
    (6/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.687058647 seconds)
    (7/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.871203891 seconds)
    (8/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.721909163 seconds)
    (9/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.013768302 seconds)
    (10/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.901489033 seconds)
    (11/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.893015081 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.87758817 seconds)
    (13/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.318847154 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.944163909 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.795728897 seconds)
    (16/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.842521139 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.845141823 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.689655238 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.832647923 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.866793266 seconds)
    (21/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.889492668 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.103697209 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.896537092 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.032126224 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.781848728 seconds)
    (26/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.88648798 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.472329138 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.105704483 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.911692316 seconds)
    (30/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.820102818 seconds)
    (31/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.1275694 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.161276696 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.204504854 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.991047769 seconds)
    (35/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.792309219 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.835980113 seconds)
    (37/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.040015169 seconds)
    (38/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.840409989 seconds)
    (39/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.792161336 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 9.320458668 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.998048659 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.79404275 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.080298484 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.134822734 seconds)
    (45/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.826131659 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.89278333 seconds)
    (47/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.388836271 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.799627641 seconds)
    (49/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.983498022 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.858251215 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.898993032 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.992431599 seconds)
    (53/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.8729635 seconds)
    (54/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.975795766 seconds)
    (55/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.813997236 seconds)
    (56/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.402514968 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.010788523 seconds)
    (58/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.623253557 seconds)
    (59/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.094303559 seconds)
    (60/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.891877154 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.068499729 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.860815645 seconds)
    (63/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.352513839 seconds)
    (64/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.942539794 seconds)
    (65/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.901778874 seconds)
    (66/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.806133177 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.85401503 seconds)
    (68/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.841633945 seconds)
    (69/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.952567147 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.776149738 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.867465908 seconds)
    (72/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.378065186 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.808779801 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.213369816 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.791816507 seconds)
    (76/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.288504335 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.945568378 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.224717931 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.054895654 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.404259111 seconds)
    (81/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.894345209 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.836863836 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.059235489 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.888557888 seconds)
    (85/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.316757092 seconds)
    (86/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.84144411 seconds)
    (87/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.941724248 seconds)
    (88/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.061306796 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.794121884 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.572714044 seconds)
    (91/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.153770837 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.544507929 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.939829038 seconds)
    (94/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.903222311 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.918061941 seconds)
    (96/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.219756934 seconds)
    (97/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.91749857 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.025916928 seconds)
    (99/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.891567766 seconds)
    (100/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.087312262 seconds)
    (101/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.792872147 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.528780525 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.811428255 seconds)
    (104/309) benchmarking ("sort", BigInt, false)...
    done (took 6.811390051 seconds)
    (105/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.897223971 seconds)
    (106/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.820014329 seconds)
    (107/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.190097239 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.192521788 seconds)
    (109/309) benchmarking ("sort", Float64, false)...
    done (took 5.61419294 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.837149566 seconds)
    (111/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.680996708 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.174839637 seconds)
    (113/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.619523208 seconds)
    (114/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.627396626 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.814539481 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.057256745 seconds)
    (117/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.091468992 seconds)
    (118/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.339983967 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.112560666 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.138360764 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.009916101 seconds)
    (122/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.795419992 seconds)
    (123/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.584482994 seconds)
    (124/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.903877758 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.811966544 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.190324463 seconds)
    (127/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.024706876 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.81464024 seconds)
    (129/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.235255502 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.865110113 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.006889587 seconds)
    (132/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.328419848 seconds)
    (133/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.486730915 seconds)
    (134/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.103870705 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.1068052 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 2.268266731 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.839500554 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.731981981 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.099977228 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.798975492 seconds)
    (141/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.973423384 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.816668948 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.434001017 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.816917164 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.064687277 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.464181025 seconds)
    (147/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.967579321 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.067817148 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.397978432 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.83812518 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.828412407 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.862045843 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.915250273 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.109875179 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.21747204 seconds)
    (156/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.990195077 seconds)
    (157/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.020593032 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.954414065 seconds)
    (159/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.928777696 seconds)
    (160/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.254275725 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.199509011 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.812305087 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.032815347 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.842502019 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.840171907 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.111596664 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.866008104 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.840173155 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.004971595 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.841771442 seconds)
    (171/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.415184108 seconds)
    (172/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.942291449 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.801067178 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.893307943 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.626206803 seconds)
    (176/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.014869258 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.804888117 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.001058893 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.920194387 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.053351585 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.50751282 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.158570967 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.986817894 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.481317396 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.838899515 seconds)
    (186/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.956893236 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.50154437 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.823236556 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.123245353 seconds)
    (190/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.89828978 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.981961343 seconds)
    (192/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.834038769 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.716661626 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.849011207 seconds)
    (195/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.834028477 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.909050642 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.816821493 seconds)
    (198/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.615003662 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.856202906 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.803502134 seconds)
    (201/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.393197392 seconds)
    (202/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.922741279 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.531329934 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.794845271 seconds)
    (205/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.173348847 seconds)
    (206/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.210851619 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.923433802 seconds)
    (208/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.82782898 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.874904224 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.817604068 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.487332648 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.977426282 seconds)
    (213/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.821143404 seconds)
    (214/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.889538036 seconds)
    (215/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.167562535 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.201709075 seconds)
    (217/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.974488489 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.033164251 seconds)
    (219/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.822675591 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.625143745 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.01732327 seconds)
    (222/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.898216166 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.889150411 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.145910901 seconds)
    (225/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.817494563 seconds)
    (226/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.471120842 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.913011172 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.934998036 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.015980146 seconds)
    (230/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.467098051 seconds)
    (231/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.958522292 seconds)
    (232/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.217323975 seconds)
    (233/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.84514923 seconds)
    (234/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.10697497 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.152954866 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.840090151 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.840669413 seconds)
    (238/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.415293484 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.981346888 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.878469436 seconds)
    (241/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.447341659 seconds)
    (242/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.881263716 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.85773989 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.914741664 seconds)
    (245/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.955326552 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.327123895 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.496771946 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.807988307 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.848092416 seconds)
    (250/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.055332073 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.817773899 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.017319333 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.806294061 seconds)
    (254/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.338952173 seconds)
    (255/309) benchmarking ("sort", Float32, false)...
    done (took 5.574498577 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.12097576 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.195950116 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.342912132 seconds)
    (259/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.219286053 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.137375372 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.733643387 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.923549775 seconds)
    (263/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.806873525 seconds)
    (264/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.027079865 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.172067792 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.846663468 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.037724744 seconds)
    (268/309) benchmarking ("sort", Int8, false)...
    done (took 4.90075825 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.202150229 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.841945818 seconds)
    (271/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.043607145 seconds)
    (272/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.419557477 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.050092455 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.824925536 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.883907537 seconds)
    (276/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.549602685 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.822901993 seconds)
    (278/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.165874972 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.47179332 seconds)
    (280/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.147048062 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.1616461 seconds)
    (282/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.328698679 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.114699513 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.076499084 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.807168388 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.917520501 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.903139352 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.207469955 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.174567516 seconds)
    (290/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.968249767 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.926368628 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.936178462 seconds)
    (293/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.880723711 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.821560492 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.821502049 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.931947129 seconds)
    (297/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.023363824 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.610124542 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.115133373 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.828309811 seconds)
    (301/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.045145199 seconds)
    (302/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.742262059 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.625957983 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.870963485 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.110844443 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.812873027 seconds)
    (307/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.858916813 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.847773862 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.931315719 seconds)
  done (took 1001.272705151 seconds)
done (took 1003.076566559 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.857919118 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.849498484 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.834887794 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.855564278 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.944148297 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.865080658 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.844512921 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.838055734 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.882400724 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.882437318 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.831313246 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.864728505 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.834875812 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.836101368 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.834873144 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.848315927 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.142454535 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.857015433 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.851411515 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.841524921 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.850502834 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.83460168 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.885111614 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.866168868 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.834906353 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.836792167 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.83868833 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.855316203 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.946095693 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.837608424 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.836187874 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.846523877 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.14383978 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.856881973 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.830767612 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.855067766 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.846691844 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.848076136 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.838454221 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.866273867 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.277690779 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.840169681 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.837034707 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.838523324 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.835177075 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.838581811 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.835378417 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.841234371 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.84819275 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.847925483 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.274296463 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.855567298 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.840874005 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.836510636 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.847869793 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.83798062 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.838820103 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.850612146 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.855879606 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.855539588 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.134269739 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.868744756 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.840086005 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.852323609 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.844914545 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.313671843 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.837731377 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.84347599 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.282582498 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.84574414 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.317701637 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.848314037 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.83546779 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.851907327 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.866393553 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.143522707 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.853984351 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.835589856 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.843071121 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.830980286 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.84459368 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848760819 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.838889889 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.836094135 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.847253074 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.868229011 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.849387289 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.838015065 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.847291946 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.855250496 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.839657746 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.848572977 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.841458286 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.835599361 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.849737538 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.843862141 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.843121942 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.839409142 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.843140379 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.849266299 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.281913096 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860225129 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.83595579 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.832839085 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.838446125 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.851644823 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.281540451 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.84347932 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.859836854 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.886234247 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.840533947 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.134265725 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.865058866 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.854233457 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.849500087 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.841915974 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.835035241 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.132903513 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.303200693 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.854395251 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.840174523 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.836531172 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.855293888 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.843308877 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.837949203 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.146994205 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.864119493 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852038787 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.959096565 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.851559892 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.874083653 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.836440776 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.844536762 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.865553537 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.854063626 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.867328845 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.841067186 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853519807 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.850299788 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.83499588 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.846218324 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.851262279 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.841229656 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.847686147 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.835493538 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.86944903 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.850022516 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.855100125 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.859218401 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.962867953 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.838088535 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.135841151 seconds)
done (took 288.931116228 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.915087987 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.82824144 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.941835759 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.834199919 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.932526224 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.921303273 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.836307774 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.834225409 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.833277084 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.217665435 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.829039135 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.83946413 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.82930675 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.830233627 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.92590428 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.836692487 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.833780354 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.178164497 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.835876465 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.918115356 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.825569089 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.833542591 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.829441452 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.215268461 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.829013098 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.836100436 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.905342357 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.834679747 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.17825766 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.831222285 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.824950512 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.181342508 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.923048789 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.849541643 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.843708167 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.840543403 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.916362643 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.840075035 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.917083399 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.928989383 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.931806679 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.875237095 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.837469674 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.833228065 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.837125891 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.835825165 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.837734754 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.86164918 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.827822594 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.836626966 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.176375865 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.842294157 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.83324477 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.833205408 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.832532812 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.861398061 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.832288719 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.834911766 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.937423771 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.837050981 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.896110802 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.214082322 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.210314605 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.828833725 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.830347872 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.83558936 seconds)
  done (took 182.044798581 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.90057968 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.909021757 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.902201119 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.836869844 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.885909812 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.345399788 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.841403543 seconds)
  done (took 15.379791595 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.840015897 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.835834556 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.885901345 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.88051928 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.839314769 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.986666599 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.837347976 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.847909913 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.834865351 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.890338403 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.837492149 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.839967838 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.844673515 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.827507092 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.882956544 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.85195852 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.950301809 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.835822953 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.834777792 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.99465435 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835179176 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.845553991 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.890575016 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.852991933 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.84003617 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.84424015 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.418227349 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.839201579 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.829888346 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.838508924 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.83492657 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.880774663 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.837545888 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.832282083 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.836882458 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.960465242 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.838778663 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.834827099 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.836854755 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.836286591 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.837762204 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.83873116 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.838926023 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.832322072 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.835129512 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.865091169 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.839850806 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.841363862 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.840062535 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.841292642 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.888031898 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.840663612 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.838928804 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.83484564 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.895680185 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.844841563 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.841948609 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.831698273 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.842222402 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.838487693 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.990756463 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.885051141 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.838319194 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.886349406 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.840759907 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.83587771 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.836265523 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.839013628 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.889022318 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.839920723 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.887869711 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.839346149 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.002523384 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.86475629 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.842591375 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.839574366 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.842911808 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.836032724 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.835312359 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.846451828 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.837489859 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.838281073 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.841473418 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.837432824 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.83513584 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.953253632 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.95064921 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.837717994 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.85154136 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.844968984 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.837162714 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.889875736 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.835454398 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.837321819 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.889058511 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.953289069 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.896502629 seconds)
  done (took 202.702277632 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.841836447 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.845372789 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.838954847 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.855875698 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.839542262 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.84040682 seconds)
  done (took 12.824608017 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.840787392 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.838968351 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.841195886 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.841937303 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.838851305 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.839225581 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.839947514 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.843023133 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.841693967 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.837956282 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.844122912 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.842137082 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.843917957 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.838750461 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.836435922 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.842485038 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.839443405 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.838629425 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.841799281 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.842277646 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.993527046 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.842279047 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.842413563 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.844431063 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.849052476 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.838715942 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.84768322 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.841772695 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.844794787 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.847130856 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.841475076 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.839422358 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.841137371 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.849139373 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.844154385 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.84425368 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.846784676 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.841179665 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.838519355 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.844071886 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.840817035 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.841121197 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.843363402 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.842284781 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.847061447 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.850845983 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.847624938 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.852175969 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.841997849 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.844215709 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.841213648 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.839867407 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.843355512 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.844297444 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.842404936 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848669304 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.850410556 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.841943205 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.844818726 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.844747083 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.84439894 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.842185918 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.842882523 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.846998079 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.843392777 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.844994885 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.837654132 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.846344919 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.846596206 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.842861439 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.84019319 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.839923895 seconds)
  done (took 135.613249724 seconds)
done (took 550.342863889 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.076492787 seconds)
  done (took 8.846362415 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.993686817 seconds)
  done (took 8.845459696 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.396305409 seconds)
  done (took 10.166201217 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.850440805 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.85923974 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.847992454 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.840007245 seconds)
  done (took 29.181401545 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.896385232 seconds)
  done (took 8.669627269 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.85058614 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.834642976 seconds)
  done (took 15.488671639 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.977108562 seconds)
  done (took 8.745659132 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.051778142 seconds)
  done (took 8.82455835 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.835693381 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.868285929 seconds)
  done (took 15.487557165 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.824836523 seconds)
  done (took 8.594700057 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.521585096 seconds)
  done (took 11.302409587 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.844373126 seconds)
  done (took 8.625629894 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.900553447 seconds)
  done (took 8.672267286 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.026918707 seconds)
  done (took 9.796243805 seconds)
done (took 163.015172709 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.837852079 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.832528694 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.833199094 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.832229897 seconds)
  done (took 29.107448763 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.879394544 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.875955808 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.88239112 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.886161371 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.880410571 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.883092962 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.868761554 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.869973369 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.887571969 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.882942949 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.87908869 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.880255812 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.873542301 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.868890922 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.875247694 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.879749435 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.885988526 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.882153521 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.867581836 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.875429993 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.843096029 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.890812128 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.875462703 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.849313801 seconds)
  done (took 46.793121518 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.04638666 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.916849958 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.99535874 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.89660989 seconds)
  done (took 9.627038725 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.893092584 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.89904242 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.908828989 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.947099165 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.978454611 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.909773764 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.867096196 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.867406176 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.852879786 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.89391449 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.975111374 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.916601685 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.983003238 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.839686594 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.031695952 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.846576689 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.845122556 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.892776281 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.951191201 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.962270872 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.841060544 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.895705446 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.898299331 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.914577764 seconds)
  done (took 47.577117765 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.841726133 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.852807093 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.853799011 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.843343376 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.848274114 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.845031617 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.848331307 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.847691486 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.867892856 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.846028588 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.848410333 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.844721011 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.841393164 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.843473627 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.844268752 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.857442913 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.861023596 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.844618763 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.844853244 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.853349237 seconds)
  done (took 38.748917531 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.841612915 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.776811897 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.191187339 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.094651145 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.837305967 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.841882083 seconds)
  done (took 32.354764041 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.864355031 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.85050148 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.845832451 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.904239009 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.985380645 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.850682949 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.848020955 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.851099157 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.888685581 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.909940383 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.863606328 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.876550945 seconds)
  done (took 24.312142933 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.845252676 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.842691215 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.844606812 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.861419067 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.856751608 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.852795407 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.855295378 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.84116616 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.862752371 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.867594874 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.854251233 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.853923276 seconds)
  done (took 44.016311253 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933177518 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.886187358 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.880051256 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527754538 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.21959611 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052428837 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.45275933 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.187603985 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.849557225 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116969924 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.941943837 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946776094 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09968041 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.350054225 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87363303 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.31627946 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14149336 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056089422 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867450142 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535979911 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906330686 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.041929851 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.660544676 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896842349 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054722481 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.973912184 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.103119949 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.846819305 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979130147 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881495386 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856430268 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843007269 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115588797 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219648401 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953551424 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853540706 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.465516919 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.559101307 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.831000542 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.601771072 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.58671769 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.971381626 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85491728 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842977664 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.781378896 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.013990382 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225309584 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.853443815 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.551281989 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.844618138 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857919815 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937108352 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.846008623 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.657740981 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766942037 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.84602343 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.842332821 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850748462 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.419816585 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.99254183 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.050080098 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.816420499 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.938027647 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.628556281 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24800722 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.99208117 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.847546962 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85148118 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782174226 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.544220835 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902332471 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.176816071 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.864873898 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497168654 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147853621 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.958084935 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.781084027 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121224009 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.395595789 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.818790221 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079286981 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84266753 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783527896 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.793468855 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.778619507 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131321221 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890513673 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.618534586 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891610411 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.18515433 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856358315 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870359596 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871580345 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.074499043 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.731156433 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849400935 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.689621829 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992459321 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868303747 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18656255 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784498534 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.854987894 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104213866 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.059004653 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.939929843 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.354104172 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015149804 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419246351 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.900780002 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.023159104 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894483233 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.110339121 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907316858 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.992026696 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900879947 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.846448797 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146104266 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459876169 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.978667767 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.972037379 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976759025 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.186278743 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881159427 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932474854 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859406076 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.85313605 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.635869444 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404814578 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.850359195 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.855737484 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938853189 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.892884531 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.851668025 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800642456 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.477546531 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959543167 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.86510473 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.070776032 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.445841798 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159815446 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788872928 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179421408 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908849277 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.073662279 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.489067318 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.920621007 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110709476 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.948049292 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.98154039 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902393099 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873592929 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948657553 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877175214 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.021360101 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.145109461 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.856167599 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.857249 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.670160847 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.890265166 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85294583 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.856079317 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602025998 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123524708 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.877983921 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.85858297 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.745391751 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.870269818 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917068063 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858641472 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865880705 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.395315183 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.561704518 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.866715658 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.437750896 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080750615 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865403483 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.628274718 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96831293 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.940758695 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127999993 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914762532 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.790625546 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.567587239 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.545407565 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858065166 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.790435453 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.854829259 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866589173 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865123247 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.051689344 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125596623 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897234807 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.563105954 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.900412651 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868342178 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.861583188 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852087143 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.366392549 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018352811 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.060663873 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.898886913 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000376588 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.872350122 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.792244478 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.860599927 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859287547 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.858115335 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.855472653 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885423817 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.564216104 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238214112 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118838366 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.467784287 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875986967 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.60423741 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.918684494 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.881292733 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.72934727 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03974644 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.895944579 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871000345 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.867884721 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.574554666 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.549884366 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.42827256 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165179835 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160900508 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285857606 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.08659979 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.885751672 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202155269 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796491584 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.414264222 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916627561 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206533232 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805465134 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946854183 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.502196283 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188666899 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873100888 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08886629 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240005604 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.637297921 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006410676 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.070722449 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897530445 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.024896026 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.818122854 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.140954704 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999468075 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.581994695 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064496286 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20478152 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.576025998 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.985804241 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.853020358 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.555077807 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942234921 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.57209028 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.030704985 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.054708184 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.883538298 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344355829 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.866929101 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.087647945 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206420358 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.039656679 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.990918568 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798041994 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.871966527 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.867816795 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.862627408 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.859758564 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.732760922 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.119318079 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874391221 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791937517 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.990064443 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145988542 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.769112136 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.867933327 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861991062 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177786268 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.42701264 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02703513 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.985880321 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.389564805 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867797498 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.796142734 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799451805 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.556535138 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870883169 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.840968939 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074476892 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.968223814 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.774090806 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.959592117 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.111840822 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122503903 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.87503589 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134207661 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135375676 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.555278925 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890153722 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.965431885 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.57140627 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.974903414 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.862227036 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.101635913 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.615501395 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091484264 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.905437745 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.813559215 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.864250641 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080609335 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860908468 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.832848372 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096407025 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.584452811 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.91864804 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168781544 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939830963 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.854581637 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.915077262 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.955904869 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871444534 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946502143 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878133116 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.872966197 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.87807823 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91386945 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.831317402 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.991338554 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.876040149 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960982898 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.013032832 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.391790792 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.872201658 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134948653 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222062467 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.186878502 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921906589 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864629462 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865861429 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796145557 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013442138 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.093093494 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136313191 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.995968144 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.982968328 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889168279 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.590173617 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.104414787 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101317242 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140527324 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.760322647 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.397841772 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.900289354 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.86499307 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876979306 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.074403172 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076958332 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177664018 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007133179 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.98204764 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.234103678 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137910786 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.869156241 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86727247 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.456718354 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.926407259 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.548854536 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.907782985 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.804541624 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141317 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874266648 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245445742 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.888190882 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.027042341 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.637478835 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579328659 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157881123 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.850341206 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.924974687 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134940059 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.246345278 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178385195 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933356575 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874417068 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.980383571 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01590005 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.742981624 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.863866783 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.868815033 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915406998 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.578764677 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.881015452 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138228093 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179324268 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.866017659 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.734375235 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892010856 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.87741435 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092677006 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131244815 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125987141 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880962828 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.874054104 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.686095458 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135203443 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927590927 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805917015 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.868691361 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964760001 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115222342 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890307131 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.316196767 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.575151933 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145936185 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.868951073 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888435229 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.046737881 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224512827 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187900105 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.404666055 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075966785 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.458167159 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.46422928 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166344283 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.876144973 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.046328969 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168872911 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.871200147 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.960175363 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910009846 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.134064478 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177869045 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.915556336 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.59000275 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.841799417 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.21230306 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426433042 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808091582 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873106682 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.927509397 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.868898248 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998254617 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877336504 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.739075056 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039670951 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.651252102 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.153967102 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.869322621 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.860842588 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.668609543 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.179645105 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899598917 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010882119 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86939608 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.541854092 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.216726607 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.122362212 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.968866038 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.872684896 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.876481533 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868348996 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.852106113 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.066140825 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.068441096 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15945244 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.000687059 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.900030112 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875413163 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.082196442 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081192254 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.876354262 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017020144 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.964290509 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908627093 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.773112095 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.378190723 seconds)
  done (took 1670.589351972 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.902413401 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.95000931 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.874731878 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.945369019 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.95424387 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903616658 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.940035168 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.946202116 seconds)
  done (took 57.222482242 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.865880221 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.068997823 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.87577064 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.871495697 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.875470954 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.867599043 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.0357849 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.878615921 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.880787367 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.883620077 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.870725887 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.872797362 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.181411454 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.889005322 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.871940786 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.858004202 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.880988046 seconds)
  done (took 74.35446755 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.91162381 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.949779995 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.900627202 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.882690055 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.842848889 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.884780521 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.702660065 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.905223052 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.87030609 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.106141762 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.506521824 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.896360608 seconds)
  done (took 90.163137287 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.884140492 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.874197464 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.876425109 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.875521241 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.87822145 seconds)
  done (took 11.195405443 seconds)
done (took 2177.861449477 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.126903692 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.084090381 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.097554388 seconds)
  done (took 5.989788021 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.027123262 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.072567161 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.192291445 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.199850794 seconds)
  done (took 10.298028651 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.159110699 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.240686427 seconds)
  done (took 6.206192713 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.281004363 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.883820796 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.257129671 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.874766828 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.87050021 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.87673966 seconds)
  done (took 22.436800142 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.872112917 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.885915485 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.882725279 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.883233059 seconds)
  done (took 9.334246538 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.858536717 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.582914592 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.863498222 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.869084186 seconds)
  done (took 20.982449296 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.626682408 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.633659471 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.626023188 seconds)
  done (took 9.691068913 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.564494296 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.773148936 seconds)
  done (took 9.140771086 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.143413138 seconds)
  done (took 3.95335222 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.008253628 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.194125904 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.389613194 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.406144958 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.492420863 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.582031928 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.196400032 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.123673234 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.287049472 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.333784326 seconds)
  done (took 24.822396546 seconds)
done (took 138.20427754 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.260605206 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.119382488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.08561144 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.221013467 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.098985242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.080656892 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.100219058 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.208771575 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.728244031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.725248193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.21863935 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.094488657 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.048695561 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.114929082 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.042637813 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.115975737 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.096746436 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.286509612 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.917703623 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.117331291 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.103503133 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.865885452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.065045813 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.864824892 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.096429534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.034797597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.435403409 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.117282256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.063620181 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.447947954 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.033222809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.272204931 seconds)
  done (took 172.89024053 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.655021179 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.884565217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.870720127 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.886218882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.388173647 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.869805048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.877173891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.871567598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.115640827 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.113765332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.879824736 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.354201251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.881382051 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.877236072 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.878539849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.875731155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.238084211 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.68716274 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.884664436 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.882321898 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.882627801 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.250859425 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.883727731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.280820794 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.250207443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.88877524 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.882043159 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.899323022 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.887621086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.89262184 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.908621202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.878867582 seconds)
  done (took 208.571742146 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.87556149 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.875006081 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.885734573 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.87965892 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.887300642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.878848164 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.893764105 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.883974701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.479086903 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.495148676 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.903160685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.89471645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.879645822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.890296787 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.897368809 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.898234012 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.897682186 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.917340887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.888978095 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.896291896 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.897936129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.736624111 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.904230255 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.731574004 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.896513512 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.891928391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.882308068 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.890067508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.893945183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.904877841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.896125563 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.880701026 seconds)
  done (took 221.250943461 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.085218172 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.886885386 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.894449389 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.844907633 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.89141744 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.886525175 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.876548307 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.083327368 seconds)
  done (took 19.281099586 seconds)
done (took 623.821056826 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.359667454 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.204890859 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.076619487 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.918352019 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.137110591 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.955637027 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.910694256 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.968968444 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.63307987 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.973483699 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.595256676 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.921539912 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.699504844 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.927802203 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.040992353 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.964854158 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.475387447 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.564876737 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.087976355 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.981900279 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.077671693 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.848473352 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.981500565 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.676584181 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.712031169 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.896481943 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.091279594 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.482968714 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.91607864 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.083072664 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.666716106 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.307864515 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.920195876 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.908451393 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.957119612 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.944363039 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.26960464 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.920869206 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.030803648 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.653056327 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.963957795 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.526153789 seconds)
  done (took 104.047578237 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.880899725 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.871642477 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.878540457 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.883413401 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.885516283 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.881540143 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.879192197 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.880228046 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.881136779 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.880620849 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.878647297 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.877660317 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.881314094 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.87928366 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.877313011 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.881332737 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.88068404 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.878277432 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.883124737 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.877960677 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.884914904 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.879835449 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.872544172 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.879232627 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.879058419 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.881183483 seconds)
  done (took 50.707244988 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.888205474 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.034654956 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.118199414 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.915179168 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.886450408 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.894931393 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.906532706 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.896995386 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.892610247 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.900858724 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.988020367 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.901667911 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.915434946 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.118572811 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.908627866 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.893557905 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.892937096 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.896954863 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.044486722 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.908441021 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.921149036 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.902082915 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.909946149 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.903558728 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.895900895 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.901371076 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.895116827 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.329337645 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.904635747 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.989476585 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.936006808 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.919456825 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.294632 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.134553896 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.947183489 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.899593942 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.8981243 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.998190766 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.899602696 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.894235858 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.910616801 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.904087846 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.121675674 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.390221685 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.904348823 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.893862225 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.342637784 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.997926278 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.931083893 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.899582498 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.121408078 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.910356581 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.890983479 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.895620682 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.934790692 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.900768841 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.894153848 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.203301566 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.905617922 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.915772259 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.901223484 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.889246309 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.052996346 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.900294475 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.038120468 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.908244578 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.901437502 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.898083885 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.120109913 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.908281565 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.394047222 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.906667955 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.899887849 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.99324144 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.045234634 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.371186812 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.909706727 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.051489239 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.307234524 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.923688468 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.909790708 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.318182379 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.929464073 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.906592716 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.898893573 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.899500733 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.897123171 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.934974572 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.91297897 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.335827436 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.39814686 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.213710167 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.917246998 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.909134033 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.891110737 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.198763736 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.903033177 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.897445028 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.110635368 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.401037347 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.905512886 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.908282822 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.376779779 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.914986265 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.913778758 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.907968051 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.122543499 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.907150375 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.946897611 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.892688658 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.90430738 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.909847803 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.918189849 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.904193256 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.895742139 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.370748483 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.009077502 seconds)
  done (took 234.680633898 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.892271511 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.896521096 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.891472644 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.896726097 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.889299828 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.899037398 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.889560188 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.887809756 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.900895579 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.887302687 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.893812252 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.892899515 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.893153194 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.89609288 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.429773927 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.904713576 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.500416795 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.891759462 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.893311017 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.888975588 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.571659288 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.893083757 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.896136835 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.891279277 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.898633139 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.888236447 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.892588273 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.927196134 seconds)
  done (took 168.696316238 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.901833455 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.077969218 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.918323749 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.932419737 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.901525287 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.901817017 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.921244229 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.921244584 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.907242883 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.898389629 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.900311275 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.958129022 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.912251346 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.034534975 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.931484287 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.927988098 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.000612356 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.901294917 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.900911701 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.896601188 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.928607737 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.892170204 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.963177743 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.021148189 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.918499315 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.012632558 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.900542225 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.905765607 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.899998451 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.01426118 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.915947698 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.96479478 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.927607103 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.916645013 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.027795247 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.013678765 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.006590725 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.928412966 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.903023388 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.899232865 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.897852582 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.884929655 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.012613056 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.916111638 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.897619095 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.011863883 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.915951288 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.909770742 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.915134962 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.898384403 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.916251036 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.918348304 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.965823129 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.033051757 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.935067869 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.939600837 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.921539677 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.187712947 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.909484843 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.003472753 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.892094367 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.024430747 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.916085871 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.892505692 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.902970193 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.905353486 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.927208483 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.939492404 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.007748477 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.905574454 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.997885373 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.933209341 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.911442422 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.905012746 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.903646873 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.016145429 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.019712447 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.935470041 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.937896518 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.936460166 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.894401199 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.895874975 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.890206267 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.920510513 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.905099153 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.021485045 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.020015216 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.910897823 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.905237973 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.904520169 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.901518647 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.92510046 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.02658412 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.935331409 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.004960264 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.970566297 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.977087865 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.919083663 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.915311243 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.914700094 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.96519412 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.914357888 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.910008283 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.241076346 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.972716903 seconds)
  done (took 205.996676838 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.38620271 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.956792241 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.961257555 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.182081075 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.325721866 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.734422311 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.943824596 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.947460695 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.977997673 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.109635458 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.006541459 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.964732071 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.939570386 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.922736916 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.950054695 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.972565382 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.950409651 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.243105526 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.073336531 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.101022231 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.926403054 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.256589444 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.270294429 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.336512062 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.985103334 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.286775213 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.624145314 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.19795437 seconds)
  done (took 62.362051534 seconds)
done (took 828.302369539 seconds)
SAVING RESULT...
DONE!
