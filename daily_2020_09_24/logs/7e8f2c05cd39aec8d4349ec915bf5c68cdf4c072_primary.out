cset: moving following pidspec: 14932
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.728828142 seconds)
loading group "shootout"... done (took 1.010279397 seconds)
loading group "string"... done (took 0.397786855 seconds)
loading group "linalg"... done (took 7.64546086 seconds)
loading group "parallel"... done (took 0.159729312 seconds)
loading group "find"... done (took 1.274027541 seconds)
loading group "tuple"... done (took 1.962780609 seconds)
loading group "union"... done (took 12.39030526 seconds)
loading group "dates"... done (took 1.334063607 seconds)
loading group "micro"... done (took 0.202012193 seconds)
loading group "simd"... done (took 4.294461893 seconds)
loading group "io"... done (took 0.999721378 seconds)
loading group "random"... done (took 8.682518283 seconds)
loading group "problem"... done (took 1.460802688 seconds)
loading group "array"... done (took 19.225424535 seconds)
loading group "misc"... done (took 1.463737273 seconds)
loading group "scalar"... done (took 39.066227058 seconds)
loading group "sort"... done (took 3.074739472 seconds)
loading group "sparse"... done (took 11.622135012 seconds)
loading group "collection"... done (took 17.054775478 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.49538404 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118330215 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.122292793 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.114929159 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202458745 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114910025 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120114741 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081153893 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.823498437 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.134917871 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.108908337 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413488419 seconds)
done (took 5.18104908 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.159540628 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086840729 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077565092 seconds)
  done (took 1.267152112 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060067729 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125626747 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061290694 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062688537 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062792973 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062543898 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062246836 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062077095 seconds)
  done (took 1.604769004 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.066778361 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.062297292 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.061374598 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.063706881 seconds)
  done (took 1.361440944 seconds)
done (took 5.57168705 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.229052682 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.094358564 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.273743802 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.430054515 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.587973305 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090501246 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070967193 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066417312 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125124517 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.31130712 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.096437253 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.171082954 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.083917055 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.164144691 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.969720873 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.112517875 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08122603 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.116182007 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089623942 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127273534 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.367216474 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.072292041 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.0684912 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.064884973 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.062691234 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.638993755 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662003539 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.116037024 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080139283 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.159899472 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112187928 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.636378274 seconds)
  done (took 10.469056147 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.08635916 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.083261698 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063774542 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.118240669 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.086492286 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065035716 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070928819 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063979611 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084377403 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.119760813 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087627433 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09278409 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061966337 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065473094 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.069295901 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.191155338 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.074077122 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075102376 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.062550654 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074973317 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.099781164 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.072527126 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.072691964 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.072760213 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.122696231 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.164217882 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09164554 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093325861 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061403454 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07332415 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.110168511 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.119416183 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061750119 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.060276148 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.112828393 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09412095 seconds)
  done (took 4.330987965 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.933688084 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089031736 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.096068389 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.586295635 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061900111 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.144672191 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.228828486 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068682139 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108399803 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.364376382 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.139911794 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.105517175 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.13868403 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.111851373 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064388324 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.15842756 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.113124009 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.445716617 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062786348 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.062551543 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.061058642 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063591502 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06284414 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059101507 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064590146 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088974766 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.081263187 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.149336904 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.909509306 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.27161777 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062516278 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.154481552 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.079782023 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.348368914 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.067036206 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079275244 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.401180942 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117715345 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061254638 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159139058 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.110165884 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06000187 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.112730656 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.072945379 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.064325834 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.065243464 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.060580602 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064821874 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067657041 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077493729 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098661282 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065224714 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061290408 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163859323 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062139612 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063394468 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.063100137 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.146285069 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062114434 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.133490841 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.05988105 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064397221 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09550944 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063795469 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.081669965 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.089204617 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.330267727 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.029280483 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062854701 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.906588265 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074925767 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063424278 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066917851 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061981107 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.06319572 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060237447 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063126551 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069553715 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066700995 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064132962 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103303198 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.061661247 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065499362 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061917765 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067264152 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.092702634 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.060603512 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.463030229 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061587475 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.091897908 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061662154 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.070227794 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.099664986 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062308257 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.066418121 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062229552 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062633891 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061141165 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063847603 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065901668 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.091291183 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065391172 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108137165 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.136649263 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064782783 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062210232 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068483397 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065979793 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06624118 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063961078 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065906615 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06520085 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062577822 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.104465418 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064150568 seconds)
  done (took 20.862857625 seconds)
done (took 37.703892993 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.239048912 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074981307 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07517256 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074932152 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074964279 seconds)
  done (took 1.741400236 seconds)
done (took 2.935551534 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.101598884 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059046745 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.093674294 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.092729975 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.05913808 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.059351196 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.095200477 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060693083 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.093507445 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.095268883 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.09652849 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.095779098 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.0606123 seconds)
  done (took 2.263303105 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065302841 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076103121 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078538029 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.0585325 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068035157 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077637952 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058845517 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077094819 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082553039 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077581537 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077461441 seconds)
  done (took 1.986205082 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064441634 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.075950481 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077304277 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057594788 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067685386 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076198253 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057788724 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.075779648 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.0786469 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077495473 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077319252 seconds)
  done (took 1.966745018 seconds)
done (took 7.398654734 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.061225736 seconds)
  done (took 1.226753545 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.484833474 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.049667638 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.062867034 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.080735219 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181212089 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.087226184 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.188899312 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.067636204 seconds)
  done (took 7.533217271 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094439387 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06271688 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.063076098 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.062997486 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.063640768 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.063552973 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.062500869 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.063969307 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.063286587 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064369604 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.065396948 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066007574 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064272597 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.065606759 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065743025 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066369239 seconds)
  done (took 2.321861771 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093034495 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092216784 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.068421447 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.06901399 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.067732974 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.0669528 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.069402396 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.068739066 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066123375 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.067648735 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.068887049 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.067785935 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.067360032 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059179921 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.068278801 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.069379621 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066298595 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.068511323 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.069297888 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.070377691 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.069066877 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059045873 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067365237 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.067894478 seconds)
  done (took 2.955807852 seconds)
done (took 15.219198987 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.167909028 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069235139 seconds)
  done (took 1.409597366 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.063646102 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.064559889 seconds)
  done (took 1.314805878 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.068253177 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057146393 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.073506916 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.065483783 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058250364 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.057803144 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.073219192 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058198794 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.057774809 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.05779801 seconds)
  done (took 1.816226751 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.058802824 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.064210135 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.062135751 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.063224789 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.062051184 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.057663189 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.059972685 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.058139118 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.063919788 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.05759584 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06196531 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.0767194 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.061590416 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.0788474 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06162009 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.062106451 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.064310286 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.061464368 seconds)
  done (took 2.329441153 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.056863124 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.05721679 seconds)
  done (took 1.313741241 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.059905142 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058013232 seconds)
    (3/7) benchmarking "month"...
    done (took 0.059906347 seconds)
    (4/7) benchmarking "year"...
    done (took 0.059418459 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.057029403 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.056336417 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.057043788 seconds)
  done (took 1.594963356 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38718318 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113655777 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.321024571 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065357428 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.072771819 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.2398491 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059224495 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.063199906 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.063470219 seconds)
  done (took 2.617020525 seconds)
done (took 13.597652309 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075424656 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.16684735 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.082912004 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.389560915 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.085321995 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.061738442 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.107669485 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.158606985 seconds)
done (took 2.336814171 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219984803 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.250078067 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.84995924 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065167546 seconds)
  done (took 3.365465871 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311263802 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.073531216 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072985417 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.062748043 seconds)
  done (took 1.727042643 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060363789 seconds)
    (2/2) benchmarking "read"...
    done (took 0.066532215 seconds)
  done (took 1.330164454 seconds)
done (took 7.851794817 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059706504 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.058884246 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.059145737 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.058969902 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.059720638 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.059135606 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.059045818 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.058847953 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.058831224 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086957018 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.059777666 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060035628 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.059678386 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060153602 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060192125 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060151777 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060216735 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060550571 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060783834 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.059746673 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060323495 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063598668 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060376596 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060524264 seconds)
  done (took 2.696780204 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.073584511 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061225719 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.06195103 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.061635398 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.062561323 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063035949 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063190434 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061849799 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063656075 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.061575142 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064164678 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.063551985 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061857546 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063471542 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062159176 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.063962524 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.063472503 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06237884 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061619856 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063827938 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063595416 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062084287 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063491634 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063119952 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.063469834 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063838287 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.061873962 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062398412 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063558096 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064034301 seconds)
  done (took 3.115489999 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.059827636 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055469199 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057156907 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066016329 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057455987 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057109804 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057763273 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056490742 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.056895436 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.057836333 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057180734 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056441493 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.057583694 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056089504 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056909877 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057709029 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061292279 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074633364 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.056880531 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056749312 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060666249 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057204363 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056760892 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056720724 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058076435 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056669766 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056542743 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057013749 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056761811 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.056988837 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.056679247 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060837254 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061343578 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.064082312 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.064861956 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06037908 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.055568011 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.059557635 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.057888011 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057212435 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056397972 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056612224 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056556636 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.056450253 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066319773 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.056771462 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058166019 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057658886 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057077845 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056793597 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056941709 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058881677 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.061876754 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058250002 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.055518417 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.056331198 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.055558023 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.056362294 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.055566197 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.055760675 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056969835 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060088309 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058205656 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.05756277 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074718436 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.057811531 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.065762156 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059068205 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.057527655 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.059834768 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057352617 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072652232 seconds)
  done (took 5.452472622 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076612359 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079414296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.060391243 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060439437 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056062329 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.056582877 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063201376 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056241118 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061526157 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075903593 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057065829 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061475653 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061821327 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061299863 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057536654 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061745505 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.064283236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057293413 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057026055 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061157059 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057570581 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064495889 seconds)
  done (took 2.604087984 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.129994998 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061044103 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.09728357 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070212359 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063247577 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068877631 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061335504 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062516348 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06254374 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062747167 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063009011 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06280904 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064767509 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063039331 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063268879 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062850687 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06241581 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062688211 seconds)
  done (took 2.467583932 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.071644273 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.061520858 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.080165241 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061577493 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062062024 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062207033 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065972808 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066284717 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.061911307 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06232763 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.065946725 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062173421 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.061592304 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062223111 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06162784 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06261648 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.0614674 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062055519 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06574382 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06559301 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065741944 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066069466 seconds)
  done (took 2.642264436 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070884135 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060865214 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075399201 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062191647 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057138699 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057019019 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.061978932 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061166942 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062124923 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.060496488 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061326693 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057486058 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.062684463 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061469099 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063341421 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061256192 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061241564 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061795897 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061072381 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057273543 seconds)
  done (took 2.462570167 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080086003 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058103243 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058695175 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076638132 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.057841861 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.058676422 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076763349 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.059429851 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.059763545 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079928942 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059544777 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.05939222 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077317301 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07761204 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.059590648 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078064871 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077809837 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077104434 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.057995054 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058441362 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078187216 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.059440385 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078247455 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059549732 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059387415 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.059883748 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059989037 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07850325 seconds)
  done (took 3.108272694 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059173619 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.058587011 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060482259 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060366258 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060305048 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060506754 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060462557 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060079682 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059776987 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060863763 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059864063 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060068542 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059909874 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.05976606 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.05904324 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.059881 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059622702 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060712387 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060295842 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060339241 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.059963437 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059998622 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060300006 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060340204 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060519577 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060015256 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060495638 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060020275 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.05968111 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06029602 seconds)
  done (took 3.032162109 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.068143265 seconds)
    (2/2) benchmarking "in"...
    done (took 0.066620006 seconds)
  done (took 1.365789451 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.057848237 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072310511 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.055678477 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067412434 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06409986 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.059328349 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.063987971 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063372469 seconds)
  done (took 1.728596468 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.062487406 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083082934 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.057697022 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.057779172 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.060375318 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113654461 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.06922639 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072015423 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072446741 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060712605 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.05874255 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070108327 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058081416 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070401523 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059801165 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06724497 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06490499 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069869002 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069963829 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057047377 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070226657 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059154076 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.057546748 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.05945048 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.058468586 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064691544 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072743285 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069701378 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066769069 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056545619 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076035668 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.05797945 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058400239 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066123812 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.061772975 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057702689 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092209296 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.057816047 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063003237 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057309954 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069175245 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076921451 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070690771 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074520114 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059066227 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.05974422 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.056996083 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059416633 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060636374 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066131895 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057275292 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064213717 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056734245 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059194415 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067485937 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057905433 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.062607559 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065783551 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069812295 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067091373 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065591237 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071968194 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065952719 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.065141858 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.058142188 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076326224 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059227296 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069745754 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071605155 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.05898728 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070121051 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057038647 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056281474 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.05731999 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088314891 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.05932208 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.058208578 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057428926 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057814735 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.058831338 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06640962 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062836803 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064314163 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060651316 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071990688 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065960219 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057343452 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.063851154 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074430844 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060561133 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057226742 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073063731 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060564302 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057043591 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073647863 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066351299 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.058972605 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.057945286 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061237223 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070160509 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.058688543 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056199161 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064978208 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058997594 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060368071 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.061484314 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064117784 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057347215 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06632591 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.061045297 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.058388191 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.055779282 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.059834414 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.056515993 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05434071 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063907334 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.055082779 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068338925 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061209406 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.0680406 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068511485 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064653142 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069476774 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.055057108 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054255497 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.071164785 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.063835971 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.056422351 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07114496 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.055018875 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.064405486 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.185438756 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.058824032 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066886806 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057871618 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060545838 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059174016 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064437256 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059568398 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059857434 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062165864 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066098672 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069620612 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.058726789 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066461878 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058224522 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072368394 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06718562 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062748985 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061681792 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058532274 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069342154 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063891511 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066095243 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057371818 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058319504 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057793477 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067603757 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066830339 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059547693 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.064865996 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061774105 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058343786 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.057485837 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059965242 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061056862 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061008408 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058248167 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065159066 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06638276 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073013528 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064979773 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066323485 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.05693385 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057335002 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059376712 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057358898 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061941301 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066684578 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072958727 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068353788 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076867542 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.056601382 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065396341 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.058836252 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071891454 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.067974791 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.058021625 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061845593 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056725787 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059240189 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066757519 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068630878 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071829214 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071301445 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062526488 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061594592 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.056059255 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070432504 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.057438878 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065568427 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066905423 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.061959306 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.05888069 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059560863 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06640549 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062039796 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057610984 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072594346 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064254116 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057385984 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070971293 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058115071 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067621966 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057515427 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061532267 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062300895 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059578417 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066616318 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07172316 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056350321 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.05848327 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072444796 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059671463 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059168318 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065300319 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.072093643 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062179703 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065136176 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067551862 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066739207 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062015923 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066339812 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058164443 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.065931437 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060171952 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068285087 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057131721 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074431956 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056495892 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071396804 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.057526633 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.067491663 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057515563 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065970422 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058108821 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073071917 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.058848422 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.057986394 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067586175 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.055897028 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065174953 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.056445363 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061144879 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.062183512 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.065412234 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.058185166 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.064843674 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.05789708 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.064385045 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.060775446 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.064282591 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065214377 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061165043 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.05613588 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.064457528 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066785597 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.199668254 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060491097 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060419336 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059841611 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067756897 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060270464 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059276753 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066283807 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062367719 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063700216 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059447853 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.059891122 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.059312943 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065876361 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06735561 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075199138 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066502943 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064389744 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06648913 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.057363146 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072811722 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057490238 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065049815 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056593233 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.063415172 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066242997 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058324518 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075808759 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059868381 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064144338 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068103491 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064117931 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06005322 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074243444 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.061074564 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065612379 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065746841 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062318455 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064454631 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.059538567 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065462313 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066929788 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067883359 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.05880543 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064477428 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066082388 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059503157 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.06519423 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059175354 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06535548 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059308363 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056659279 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062461356 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.068585599 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062320778 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062328279 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058365413 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056987184 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.057941835 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.064085697 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062120553 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065279286 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071825422 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056418751 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058708662 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057335532 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063427575 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074466658 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066627511 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064797766 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.061848226 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.05614066 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059159698 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059616997 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058214568 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061098038 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057340446 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057425496 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067881614 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059401316 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061603761 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057813222 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058824422 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066191575 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.060956043 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057130515 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062317221 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.056232398 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061290594 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.055760982 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.058183261 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060557419 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.055898534 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060071385 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066116087 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.071657164 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062455989 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064233211 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.056930266 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.063549965 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071530983 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064744321 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058894966 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065519709 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.055626787 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074099778 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06603865 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065332189 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066696096 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.058706337 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073374245 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06149996 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065623409 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070014271 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.056831049 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.06278432 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.056401676 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071430007 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060340699 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.05611921 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.063002826 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063039176 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.061022543 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.065956318 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.055940909 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.062224229 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060046533 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.058464971 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.056259392 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.05608236 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.062850349 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.070132356 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.055512707 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.05871369 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.062421474 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.062942074 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.05931836 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.205973388 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065413458 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060457952 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060846553 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061915113 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059414741 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07029633 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059218711 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062142733 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062301433 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.05751581 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064205701 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073566183 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067121957 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067184618 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.05761613 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056902754 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.074820603 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061475219 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061219681 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064786575 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066449042 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069680858 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067254725 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073662966 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058506515 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063497965 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069237134 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058818086 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057506795 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060880464 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059015079 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066604865 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067503574 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064832691 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060587791 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064250711 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069949072 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059048538 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062465105 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.062584437 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058433541 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067616876 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.0656718 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066043294 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.05970115 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057174486 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061059764 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066033092 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064722034 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066332799 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059052922 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.064102853 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.070530288 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064583861 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060843992 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057564642 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060648379 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06605553 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.062128676 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057409746 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062095078 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061455505 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064083994 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066214992 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061546389 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057461179 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073059491 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065426374 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066424935 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059466167 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059569918 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058653872 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058989848 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068468271 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057600115 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059715233 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062425855 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059821852 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.073940095 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065452606 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072861681 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058860832 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062477725 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.05773451 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066621895 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062092215 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.057224996 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06807927 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.05605254 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070615961 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.067808274 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.064621735 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056483113 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062228129 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065449265 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071750237 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067598393 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066333951 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061148267 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066581023 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059340492 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067712734 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056612278 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055702419 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.065565532 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064497933 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.067511208 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.056327101 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.065920189 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.057918496 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065205328 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065113645 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.058759384 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.058996145 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.058832925 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06609689 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061675629 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066181167 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.061438953 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072510619 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.057891093 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067014244 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065277166 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067003618 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069791349 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068228571 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.064508732 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.057190476 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062260452 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.063630399 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.056917944 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.060559324 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.058686205 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074686295 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.056487196 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.194171948 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071068225 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065597162 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057256444 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.063513846 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061304146 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.06690473 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059729303 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068000296 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.062601887 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059142347 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062412843 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062105619 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057039026 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.057651831 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058267229 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067507729 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06186194 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058404873 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075860499 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059787189 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065384701 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068391899 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06440789 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059312176 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.056857201 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059423149 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069651853 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072201281 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060920084 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065807999 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059501548 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066462435 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057388838 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066066722 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065704615 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065835152 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.074331121 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058371658 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071843466 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072212945 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062109923 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06688102 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066355 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059076396 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078814574 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066039199 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059146905 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068808681 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060277746 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056900235 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.05696271 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059421472 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068317891 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057259028 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.059900477 seconds)
  done (took 39.534034288 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092383847 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.057964669 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.056591849 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.05637696 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066905348 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.057461721 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.056116688 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058591271 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058651869 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060148726 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0579883 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057883906 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068053779 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07002862 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067207966 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063779843 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057684182 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058547198 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057395222 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058004436 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06759905 seconds)
  done (took 2.65348531 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.062873615 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070567096 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068261037 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071838216 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063987362 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059967759 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066824104 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060094298 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068949009 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066530465 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.067146122 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060331147 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06507059 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065491367 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067086817 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061956655 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068902508 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065918454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.061718118 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068382329 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062042553 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068361432 seconds)
  done (took 2.772228892 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058022244 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058293648 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065781201 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057131669 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057347888 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060363039 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057538424 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060971221 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.060923199 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061121166 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065629906 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058070251 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.056833797 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062437014 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.05684168 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.057696194 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.097954019 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058613633 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058344764 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.056794459 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062310555 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.065484212 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057432445 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0570342 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061585667 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.060221795 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057008608 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.059635249 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.057886952 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.060943544 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058388228 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.05678895 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065647838 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065079423 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061424482 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061681155 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.058866642 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058086244 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057288463 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057071865 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065022988 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059096952 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.05765877 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.058959366 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065558742 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057083906 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057055026 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065481375 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.056548174 seconds)
  done (took 4.301782324 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.065857558 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.105761255 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063364941 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087613179 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070076305 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.063049143 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0630077 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088037455 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.058406163 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059342178 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.070286659 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.070335591 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060156534 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.061259309 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06408746 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059976498 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061601042 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059245524 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.062470646 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059413935 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.062510481 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064175686 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.069110569 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.06960671 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061011913 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06013045 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059537202 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.061352921 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.069841027 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064267952 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.061762887 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06212519 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.069615152 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064690492 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059515326 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.059676074 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.070522984 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.060185118 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.059921973 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058795568 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06017586 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.061258081 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064472395 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.070722123 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060699072 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.064697638 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06057304 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058624705 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.070110186 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.059855232 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.063891114 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.071398428 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061524748 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.060554788 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061404269 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.069990821 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.060095898 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.058981564 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.060644644 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.069656572 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058608859 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061662026 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.070615828 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060076239 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.063706217 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.070978871 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06470349 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061298768 seconds)
  done (took 5.847639126 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065425182 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090150556 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068574084 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068328797 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067428566 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.067784039 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067523495 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.0672157 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.06747107 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067981559 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06772995 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104887096 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064082104 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072606685 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.066996883 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067271572 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.067715762 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067308456 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067406119 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067555591 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.067379613 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.067902023 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067667672 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.066847771 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.068015491 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062490318 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065867555 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.065545858 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067097554 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.06754613 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.070583776 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.067678663 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067329013 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067867118 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.069951912 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.067377652 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058117197 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066914842 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.067442587 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06722628 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063827906 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067762914 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067346419 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064074713 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067367714 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.067554707 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068497696 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.069983234 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074646865 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067191287 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.066019019 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06644879 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065981738 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066070438 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.066593757 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.072643448 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067918649 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068245249 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067496666 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069117133 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068887825 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.074356727 seconds)
  done (took 5.609657774 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06922648 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062989338 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075515041 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059858638 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057454569 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066393487 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057383463 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057595363 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064263743 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0639779 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065964166 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066543451 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068327457 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065884159 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066534255 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068321848 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066633372 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066623407 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06394327 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066235593 seconds)
  done (took 2.65901062 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070433209 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074647218 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.062948432 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066601391 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.062651666 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066109739 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.061827354 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062873128 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063477883 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06242889 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067404886 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067349685 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06298449 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06616404 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067411477 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066023953 seconds)
  done (took 2.394815406 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063035081 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.062985735 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.062823886 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.057712776 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061000027 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.056600787 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.057065381 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.055853443 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.056943193 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07092691 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058777939 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070134992 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.05832088 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057682768 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.057934023 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064150946 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.057886938 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.058366411 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058493676 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063185539 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.064602329 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.059566223 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062086309 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058186638 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063167659 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065209384 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.059922241 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062084061 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058311334 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.058586118 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063854362 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.064730093 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058459324 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059263156 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057641115 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058846664 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058332415 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0591894 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.063964119 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058584238 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.05724586 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.062875505 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.058777488 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059100707 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.057537139 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059234693 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.05754335 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064283294 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.058781673 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063321343 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058694798 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060595374 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059019335 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065568413 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.060690268 seconds)
  done (took 4.673849941 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074369243 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062812778 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057404578 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057618063 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062361265 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06368444 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062930214 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063053227 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062948234 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056995426 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06498897 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.061955935 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063376687 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062837261 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063005661 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06285387 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057371507 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.062760435 seconds)
  done (took 2.480217595 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067075609 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062003082 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.066291812 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061568393 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063081986 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061980106 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058048523 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057820449 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057755436 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061847173 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061944358 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062049482 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057930045 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.061443768 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062516608 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062222358 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061510199 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057903244 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0623474 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057743461 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061497249 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057930997 seconds)
  done (took 2.694539402 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.082256997 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.079984659 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.120789534 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076524366 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08441096 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068624902 seconds)
  done (took 1.862947447 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086691548 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098716918 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062230434 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062909936 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070693507 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065621911 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065364637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065732741 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070967575 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069245325 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065683175 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071111647 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070922864 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06739894 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070265576 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073268975 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065652406 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065433047 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062743965 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073371141 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065434597 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070881688 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065337483 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064986261 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06538214 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06694437 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073512812 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069430253 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067584912 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070880592 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072941141 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065447016 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070591387 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069262934 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062256174 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070615546 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065334174 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073321752 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071233295 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067526689 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061869407 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071084526 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07073187 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070435572 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073377044 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064730988 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066295676 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064147856 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063906077 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073552173 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069099547 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065517267 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069132518 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072003344 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071209281 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073160406 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067907493 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065779454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069148546 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06757588 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065530242 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069436769 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065691185 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068286173 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071175006 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06595027 seconds)
  done (took 5.908225312 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092447249 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061669123 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064525476 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067790351 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065735389 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064177564 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064141691 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065335818 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064958342 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063245363 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099262881 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065520888 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067590524 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067532002 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065676495 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065676508 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065309705 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067283257 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063099044 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07481622 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065303513 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067496143 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066917107 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066908332 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06903653 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07321568 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065467278 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065420924 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065247356 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065114599 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066709206 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065427278 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067012593 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062536567 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067422419 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065358319 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064961035 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067276836 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065400824 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070774016 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066942854 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073105021 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065482878 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065454637 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069042686 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065448778 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065332518 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063006431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065427125 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062644289 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069539798 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069563604 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070150383 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067611815 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06599221 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065703477 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066012774 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065675764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065638246 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073815424 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067295809 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065439752 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075547247 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065251485 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064742697 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065891425 seconds)
  done (took 5.833186529 seconds)
done (took 121.10956784 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203721649 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179386846 seconds)
  done (took 1.725554893 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069205639 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.089849976 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.070418587 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129994315 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066389132 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100407549 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098820651 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.06985535 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066336449 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066972164 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067972501 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069869766 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133362585 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066681377 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06642985 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068518983 seconds)
  done (took 2.661758796 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099689549 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171548964 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107437955 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066176474 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101503802 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072813289 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065714987 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07615422 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069403076 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067673144 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072631498 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071136048 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067591754 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071165208 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069374486 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072580247 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067699318 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072342004 seconds)
  done (took 2.825918829 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.08800047 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.079785858 seconds)
  done (took 1.533457807 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.147301915 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100025556 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.135956857 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.30370739 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.123576213 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.119938851 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.123580733 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.119551164 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.104488791 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.116793466 seconds)
  done (took 2.753626302 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098742655 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.16691458 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296351545 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115444452 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072802158 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094885816 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116994789 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078312645 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076547189 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.075510603 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077739126 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.072886641 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09636179 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072351011 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071315585 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072552345 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099392498 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070443423 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071174664 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072125514 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100551072 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067020353 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07240114 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.070414701 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073849091 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073643747 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067950537 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066429935 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072044795 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070836235 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073903135 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091582463 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074171864 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.093008139 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069083806 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.093346289 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.068987214 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.068411374 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.069234423 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068445164 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.070728412 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.071089436 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073400196 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.070657679 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066499568 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.068720082 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066404784 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065205343 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.072934645 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065639064 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.072891308 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072184599 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.091769223 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065974131 seconds)
  done (took 5.84704853 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100054829 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.098491462 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065188162 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106128599 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098115518 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066550191 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099335924 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095073761 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103969069 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066561961 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065699676 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065955251 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073200899 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.074496177 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108202509 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099672882 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066253458 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064140733 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099730673 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.099328666 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064013604 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093901739 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092310853 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.098749798 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063318784 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06452019 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063310006 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.063804767 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069691641 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.070648945 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068743255 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071914747 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08002277 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.069667845 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063052931 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064209983 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064820791 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.072018787 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071628595 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071329271 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.069872413 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062590985 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063357394 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063734964 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064386958 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.062517205 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.06889689 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.070268695 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.069114207 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063499038 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.063721961 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.062645699 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064125778 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072025921 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.0711237 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.072978573 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071207311 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063157795 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064917459 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066625705 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073588895 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073624445 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072862201 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065912156 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073357721 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064565445 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0739787 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077037887 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06520484 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065033894 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064663919 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065121395 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065822972 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070618954 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.071043631 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065686031 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064686469 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064793346 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.073008821 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071735016 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064430031 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069480598 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.062698504 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063565672 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064053362 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063901776 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.068942596 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.070274836 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064119922 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063207138 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063462277 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063367406 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063002108 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.068765261 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.069756761 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.069979831 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.069301446 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064064349 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.069271581 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.068950751 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064048193 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.068627275 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.062742446 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063120167 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062630865 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.067728921 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.067269846 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.070290069 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062226544 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063174372 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.070111972 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072331623 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064599725 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.068278528 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071004711 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.204073126 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.064575816 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076022552 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064809993 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074323879 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064198802 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073371469 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066477558 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072497535 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065990631 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065025227 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065866767 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.072094106 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066020252 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0658719 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066099079 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065823296 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.071744922 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075228769 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066927387 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071801605 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.072376704 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066230978 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071649105 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065577934 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072894175 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066318112 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065681674 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065180112 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074283124 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065418978 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065542615 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065217769 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07423605 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06353964 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.071724624 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.068716949 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063232471 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072509366 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.071937357 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.069381493 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.072604186 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064762898 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065217091 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065557991 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065377675 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070635991 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072270697 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065659214 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065253762 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070403959 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.073607611 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065201092 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.071152436 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071343609 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072016547 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065741001 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065121394 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07436549 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074093254 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.072675214 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.071232948 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072363172 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065682937 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070896452 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071807221 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064980975 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077254922 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066133162 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.075486048 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072093528 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071346116 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072115868 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.073187323 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.074119193 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.072615919 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.073500678 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063346068 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063497584 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.069533149 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063649175 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063316987 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.069278786 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064350837 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.063973563 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.073975706 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063665541 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07189332 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063411936 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.070725685 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063099844 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064178705 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074321302 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063991876 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064113954 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.069372896 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063379121 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.069387974 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.071852622 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.069453807 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063699782 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064130993 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07117989 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070506506 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063184368 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063319672 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063184548 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.067841851 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.066938862 seconds)
  done (took 17.204083417 seconds)
done (took 35.929665903 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2072455 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158056014 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190733539 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.108415373 seconds)
  done (took 2.127431152 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.085782464 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.092807645 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.07102849 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060101756 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.077432667 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061965384 seconds)
  done (took 1.854473367 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.239461132 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179397687 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166120888 seconds)
  done (took 1.98537655 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202354905 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.183689358 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.466474488 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282523356 seconds)
  done (took 2.634439724 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.12079892 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.071879771 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.058630447 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.068219369 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.099361475 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.126767396 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.082791996 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.103157704 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071303148 seconds)
  done (took 2.261472333 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.12353508 seconds)
done (took 12.417027862 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.19060068 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.114855334 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094787462 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.064952638 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.2507263 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065742074 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.0888397 seconds)
    (8/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.070860126 seconds)
    (9/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075379066 seconds)
    (10/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073050846 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073505393 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072657464 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089133962 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.227296203 seconds)
    (15/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.202592112 seconds)
    (16/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102988102 seconds)
    (17/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.072910021 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071209964 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.193807327 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087657899 seconds)
    (21/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073097603 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070469558 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080185363 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071641854 seconds)
    (25/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.286798122 seconds)
    (26/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.190173962 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.229059722 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073408024 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068325283 seconds)
    (30/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.070215391 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147360019 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087858529 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.090898604 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07052768 seconds)
    (35/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.086888969 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.060950229 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.218226635 seconds)
    (38/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.168601711 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.221419122 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.191050184 seconds)
    (41/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.075120686 seconds)
    (42/309) benchmarking ("sort", Bool, false)...
    done (took 0.143011454 seconds)
    (43/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.244296499 seconds)
    (44/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.219031747 seconds)
    (45/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.215490483 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06607356 seconds)
    (47/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.189592428 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.206379391 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069907317 seconds)
    (50/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.189958301 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.064292878 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.078885462 seconds)
    (53/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156531472 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062878876 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062067762 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071472653 seconds)
    (57/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078672725 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085140864 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.154407479 seconds)
    (60/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.066590498 seconds)
    (61/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.132462603 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06133047 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063217908 seconds)
    (64/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.132430622 seconds)
    (65/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070720453 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.084816782 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091196053 seconds)
    (68/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.063103516 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.083755368 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072779553 seconds)
    (71/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120706428 seconds)
    (72/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.159721386 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.060733112 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.168164083 seconds)
    (75/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069244006 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.074928959 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.181797771 seconds)
    (78/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069925505 seconds)
    (79/309) benchmarking ("sort", Float32, false)...
    done (took 0.127581487 seconds)
    (80/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.186566242 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.063922916 seconds)
    (82/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070251287 seconds)
    (83/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068402405 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.083638912 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.219164048 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13770659 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.063485501 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062723981 seconds)
    (89/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160532373 seconds)
    (90/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074765749 seconds)
    (91/309) benchmarking ("sort", BigInt, false)...
    done (took 0.256107812 seconds)
    (92/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063905909 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.158736336 seconds)
    (94/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.137744298 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.153706008 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116001905 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086752361 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069930313 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173052676 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084303782 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.062233709 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.154385148 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085988834 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.0710364 seconds)
    (105/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063341175 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142014918 seconds)
    (107/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.135223068 seconds)
    (108/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.063664615 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14544614 seconds)
    (110/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.137838931 seconds)
    (111/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.061665767 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.062185644 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062365474 seconds)
    (114/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06347125 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06904503 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072147595 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.061899446 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070904076 seconds)
    (119/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.063714863 seconds)
    (120/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136776933 seconds)
    (121/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.074450084 seconds)
    (122/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.076842727 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063888028 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.061203726 seconds)
    (125/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.069446984 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08604849 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.062134921 seconds)
    (128/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063859542 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072154198 seconds)
    (130/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.074893894 seconds)
    (131/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072110024 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071930023 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163462454 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.218625801 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.079699449 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06226089 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065181641 seconds)
    (138/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07029808 seconds)
    (139/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069839876 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069852298 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.109880619 seconds)
    (142/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064947985 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109043746 seconds)
    (144/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.134472792 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069931119 seconds)
    (146/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.17841238 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.164372114 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08733348 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.076759622 seconds)
    (150/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.061216018 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062306742 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.063621216 seconds)
    (153/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089106171 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061379953 seconds)
    (155/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.156756614 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.09392482 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084289768 seconds)
    (158/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.061487439 seconds)
    (159/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.062998508 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120132299 seconds)
    (161/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.132070863 seconds)
    (162/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063259539 seconds)
    (163/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064580065 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141759844 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.142525454 seconds)
    (166/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.130820893 seconds)
    (167/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.219047729 seconds)
    (168/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063280407 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14166478 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076509508 seconds)
    (171/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072638232 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071506351 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120473575 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063901549 seconds)
    (175/309) benchmarking ("sort", Int8, false)...
    done (took 0.159624599 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062225036 seconds)
    (177/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062372159 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.134587445 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14598613 seconds)
    (180/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066544226 seconds)
    (181/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.133153374 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.061778045 seconds)
    (183/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089465981 seconds)
    (184/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.200852941 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.075815485 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.081239592 seconds)
    (187/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.060585352 seconds)
    (188/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.061671429 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.060800409 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062568786 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069416355 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061621013 seconds)
    (193/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071036637 seconds)
    (194/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066161821 seconds)
    (195/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.068747368 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.20321845 seconds)
    (197/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.227719387 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086456671 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066034129 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064816858 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065261255 seconds)
    (202/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.062935147 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062916984 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064778722 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070851139 seconds)
    (206/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137370227 seconds)
    (207/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064606887 seconds)
    (208/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063960558 seconds)
    (209/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072302496 seconds)
    (210/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.063469426 seconds)
    (211/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.063737606 seconds)
    (212/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.062655427 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069711652 seconds)
    (214/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.077375906 seconds)
    (215/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062235122 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.063400348 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074112131 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072793916 seconds)
    (219/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155726012 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13843475 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.063832435 seconds)
    (222/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070245857 seconds)
    (223/309) benchmarking ("sort", Float64, false)...
    done (took 0.130983802 seconds)
    (224/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.165519446 seconds)
    (225/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.062652299 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070512641 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174267318 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070014906 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.171677999 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062843844 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.062578687 seconds)
    (232/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.062110365 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062688828 seconds)
    (234/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070840829 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162588962 seconds)
    (236/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.073595741 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064213241 seconds)
    (238/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.062683913 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110872775 seconds)
    (240/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.063612559 seconds)
    (241/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061175937 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063091022 seconds)
    (243/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.063676566 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07078734 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063193545 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117736117 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062961748 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072532832 seconds)
    (249/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069700777 seconds)
    (250/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.062350565 seconds)
    (251/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.063529501 seconds)
    (252/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.061608074 seconds)
    (253/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064270653 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074327541 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.061413858 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157801349 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14607925 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06275817 seconds)
    (259/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063720926 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063183024 seconds)
    (261/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063340173 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116595333 seconds)
    (263/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175826806 seconds)
    (264/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069568682 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119002951 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.13827548 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.062908633 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.061767481 seconds)
    (269/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.063399317 seconds)
    (270/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06166285 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.085808011 seconds)
    (272/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.064026004 seconds)
    (273/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.061294916 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0621548 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061426252 seconds)
    (276/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.061048383 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126887223 seconds)
    (278/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.064784989 seconds)
    (279/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.066875739 seconds)
    (280/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.131037451 seconds)
    (281/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.063437333 seconds)
    (282/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.088063393 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123785058 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063012613 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.082728249 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124374167 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068671415 seconds)
    (288/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.062826886 seconds)
    (289/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064544534 seconds)
    (290/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.062580025 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072977846 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061550414 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06492664 seconds)
    (294/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.063814101 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.061552529 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070154011 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064716398 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061435878 seconds)
    (299/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070059821 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08824788 seconds)
    (301/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061640437 seconds)
    (302/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.064800068 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062465767 seconds)
    (304/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070189562 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.062977199 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.062945725 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061793997 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062212571 seconds)
    (309/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.061854895 seconds)
  done (took 31.749168042 seconds)
done (took 33.166878091 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080970824 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08420359 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.068363481 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.078924137 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07523207 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093468769 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.067903233 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.072354731 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.074380396 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.073680483 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07280729 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067450329 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071632331 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071653495 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069734248 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084900411 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077081422 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.070741207 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070639988 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062071301 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.070645172 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062383945 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.061540468 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069504287 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07378593 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069062781 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07174638 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07182285 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062727292 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063119861 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067774141 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071232708 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064563083 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073980454 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071282128 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071024395 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072193515 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075461782 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062197122 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062964506 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072868823 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062540767 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070717875 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.06924384 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068118671 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069509924 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071244704 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073895032 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08474314 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067482127 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073431249 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073286131 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073277575 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068465074 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068023253 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070040452 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069209576 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083968655 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070840034 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067233337 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072618828 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071312371 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068729576 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070139615 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070401813 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073241792 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073142877 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069879717 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073012252 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069567393 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062447539 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070414753 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067174699 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062413695 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07400497 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07597745 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061624694 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066996456 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070492926 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070783408 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062392223 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066769822 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061684425 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067221475 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066629646 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069286482 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068020852 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069359934 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061646051 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07059871 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069780387 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070433971 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061820859 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073896355 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062059821 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06915915 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062890232 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062727839 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061345822 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068093033 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062042566 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066890733 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070375913 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061232539 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067504072 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075389534 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062502099 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069871107 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061850706 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061641072 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07293523 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072969622 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062867077 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067292143 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061474156 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068163786 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060800919 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061130361 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062376748 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062243803 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066981523 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062609123 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067120347 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068067397 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.073921827 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062010968 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06635892 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064397402 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061287635 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068273703 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061034808 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060488657 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.059443413 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073626179 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064877916 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061212115 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.066014611 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066842427 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070401774 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060686851 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070012181 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067722421 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.066025966 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.0682641 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060544657 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072759561 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066292114 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06612923 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.202002082 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062072808 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062369526 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06318362 seconds)
done (took 12.120546592 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.062043889 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.098420406 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.067859604 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.076440477 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.071957001 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06187477 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.064412069 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.078446458 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065804156 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.081315288 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086901447 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.082753046 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.088047471 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061474666 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062648141 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0638685 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.061731708 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070558577 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.076909726 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084332089 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.090564294 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063204776 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.071631414 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.078634785 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.073314772 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.079017549 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064349696 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06418454 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065378354 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079273449 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086705738 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062658909 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063927699 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.076451216 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076464173 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.070202521 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063992465 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066830769 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063882393 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063183109 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064969315 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.076816481 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.067221348 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.06904926 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063972279 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064197873 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063284278 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.066618431 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.076063784 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.066155485 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.07050095 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.074818323 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065141631 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063529845 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061332038 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.067091124 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063477062 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063940021 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063613717 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063556332 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063439177 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066057128 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064304249 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063507848 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066613759 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.065749898 seconds)
  done (took 6.099858014 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.078144567 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089576386 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078841843 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079783115 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062997395 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064018778 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063632582 seconds)
  done (took 2.046833996 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063823123 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075697917 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077649065 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078989127 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.071561148 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.080392953 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06386554 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092777594 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062658905 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075092235 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.1062974 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079224631 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066409609 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074449817 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063602278 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070451836 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0638426 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072052372 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070932075 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07886707 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067342718 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090747366 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076823347 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063812647 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.08252344 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.067609496 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.06270482 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063665568 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064547834 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.0645477 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063874967 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.100639161 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.067632329 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074909194 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064650009 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063102274 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.068869658 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066875478 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.065891329 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07169571 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067941061 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06432509 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061956471 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06459188 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.06573513 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067479537 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062420943 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064788843 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.063965938 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074321515 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062499629 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.067614357 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066456328 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067665288 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069791609 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067950872 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071509345 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065033619 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074248774 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.07072835 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063956614 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.071788982 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.070819582 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.099528069 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.071235858 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.067808271 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066706178 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.067561741 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062794213 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065161464 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.064569278 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070665554 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.062890656 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065247939 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066515501 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065015059 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.066868836 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078916164 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.07815959 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074801047 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065835066 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064452642 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06717672 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.078938203 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068181249 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064358009 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066861042 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062520115 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068190862 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064673017 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.0696391 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06523194 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071706026 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065855923 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067239257 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071569758 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063674231 seconds)
  done (took 8.307080392 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064220187 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064904172 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065612945 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065231528 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064677515 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064840161 seconds)
  done (took 1.948240791 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.08332461 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062588974 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078470116 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064462389 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.09798483 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070351274 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070339203 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071967445 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.076673489 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076608496 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070552716 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073049554 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069873406 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.065884305 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.0704038 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.064729656 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.070126595 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066876188 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.075215631 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065448421 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.076004049 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.065520543 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065451073 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.074739102 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.066443814 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.064462019 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064374674 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075716025 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077213445 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.071163008 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.065101976 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.066538964 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071454963 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.070847502 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.069999634 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071750482 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063546628 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069624847 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065999508 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.066368115 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072186787 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065757563 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065851207 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068899485 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.071214408 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071558371 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068730953 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.06761413 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069942058 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.069168982 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.069038399 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.064607298 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.066389891 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068604228 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071271139 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071735581 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.069079481 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.07006208 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065406567 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071650763 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.063805805 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066430195 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07105347 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.066112906 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069061931 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068731794 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071309709 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06575916 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065581511 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06374798 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068720586 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.063628756 seconds)
  done (took 6.528921956 seconds)
done (took 26.445242265 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.532566284 seconds)
  done (took 2.030592836 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.547124654 seconds)
  done (took 2.08175878 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.703092413 seconds)
  done (took 8.23543206 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.283214858 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.306712514 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.693044367 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.123175858 seconds)
  done (took 2.977286472 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.718429111 seconds)
  done (took 2.262993432 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.223847432 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.216126341 seconds)
  done (took 1.995534091 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.333999772 seconds)
  done (took 1.871908004 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.086493 seconds)
  done (took 2.622810645 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.213442968 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.153132096 seconds)
  done (took 1.916786104 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.462760345 seconds)
  done (took 2.003143675 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.085417205 seconds)
  done (took 5.631757834 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224457933 seconds)
  done (took 1.804924876 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228392807 seconds)
  done (took 1.774415845 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.821138908 seconds)
  done (took 3.363094953 seconds)
done (took 42.117802372 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077629576 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081033205 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080235723 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075741082 seconds)
  done (took 1.834002663 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.068520718 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.064429667 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.069863038 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070571117 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069791757 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069636917 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069763954 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06649555 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068181254 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.066714103 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.065352218 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066651639 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.069091763 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.06589834 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069084259 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.070731365 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.066786924 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066360439 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.068887536 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.066691871 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069335383 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.06602983 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065180333 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.06706679 seconds)
  done (took 3.168140583 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.072798475 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.067703995 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071093923 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068909311 seconds)
  done (took 1.835524242 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.070770123 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.079978414 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.081203084 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.085636523 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072856492 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072687046 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.079692918 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.080206212 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063150741 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.082104896 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064881443 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063408894 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063593502 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.081661555 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.079130489 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059967477 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061272624 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072751392 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072329206 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074131244 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065408563 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062639076 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072955207 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072116932 seconds)
  done (took 3.287332009 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.073028309 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061036526 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.072839173 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.084606948 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.086699668 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061422943 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075711759 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08859876 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.117734111 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062682305 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068404563 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062499392 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099551464 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062437611 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076920067 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.099924413 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.101008975 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.064267848 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.090932912 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.060654049 seconds)
  done (took 3.129379553 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071058675 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.064438476 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065571095 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.060872602 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.072008939 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.068567911 seconds)
  done (took 1.968615244 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06359336 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063508761 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06247837 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.061953416 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.066891996 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.062648852 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061159128 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.062736903 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.062893158 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063483912 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063607513 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062925752 seconds)
  done (took 2.315870085 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157269001 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064582781 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065232891 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063445557 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.06638961 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062005524 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076318495 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064532736 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.081191186 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063518768 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063778814 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066735487 seconds)
  done (took 2.457111583 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092086853 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093543654 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13597281 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109166228 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090733441 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.091417424 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.150184033 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.12875134 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111145311 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.066621988 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082860274 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094446922 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092130833 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124711138 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104094245 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.067442326 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.103625332 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074756983 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106171082 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113881608 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106851909 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113522178 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086079831 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09350258 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101957012 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112081303 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.06799768 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067523323 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141947561 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.096544918 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.087776572 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092542293 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103503151 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.064055759 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080033206 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.100459286 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077307993 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107897863 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08225565 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092016205 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074591672 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.122944221 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098549584 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096158543 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122908559 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086530452 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103077386 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098701776 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076397641 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.110353851 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091789284 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084667396 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076848048 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.152131903 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085392442 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.1060633 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107485795 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.077366105 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083852265 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09659766 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.121500235 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.100722851 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105782607 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.249644572 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.08895373 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088797451 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.125473139 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08102568 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096311764 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125684461 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.08851378 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072519996 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.092986383 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066684994 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093325396 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101864532 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088496815 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105826579 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073047877 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119153534 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101637363 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070188895 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.11245293 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094482067 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149259189 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091839664 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097344489 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087931566 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.142923285 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081405164 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076668984 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09415794 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12276498 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088879339 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09236815 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124325244 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092720983 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082870768 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07229225 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.085909383 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097345996 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103424829 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096742841 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083533123 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080888145 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089421218 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.06949838 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.074892927 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094038243 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081199408 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116429841 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101739589 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115350403 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074046355 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098372547 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.090787574 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124430095 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.111069783 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.078389728 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101616603 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131821589 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106403286 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079458479 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094679121 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103369306 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099779946 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089018141 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128965332 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110693722 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084860931 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089078866 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.239397922 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.109748278 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147692345 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086978188 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.101297663 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133790251 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.109627696 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089175874 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080763658 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091007616 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101872565 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135551833 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092025943 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068056154 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088299258 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125616119 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073336935 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095847803 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089052896 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.080299442 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078382409 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.065841073 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09893972 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131293122 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107673566 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093437918 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.096593165 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.064323038 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094156373 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099046631 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135865611 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109607678 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091305886 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.091695509 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097331902 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073734923 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.124413724 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.124359542 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085890129 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084835531 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11557458 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.089200419 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.098634686 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107194577 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096929933 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.094863572 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133058788 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112092744 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.115390427 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098165486 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116301697 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076140012 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108155121 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.069187277 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09692881 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.071611858 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099789699 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.07583914 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.105407725 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075444375 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096195856 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.066535016 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.070083278 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.10484872 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.239606764 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08246547 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.127044688 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.123093289 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.0767136 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094875854 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09470726 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09760615 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.103455828 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.084504101 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085976795 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073136182 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.075367557 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091317771 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087660286 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101832644 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072670129 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070621532 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130729552 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09715536 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085249235 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089496065 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.114160024 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.085161193 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083665149 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099527947 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133378971 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.114233561 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077540504 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.087779639 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.067077882 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080977323 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.073029631 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104808797 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072233976 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107632604 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066012321 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.124045262 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083575453 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097418709 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093444046 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123137072 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086868284 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124604678 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083714956 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103555375 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089910727 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091526836 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104096462 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.09187398 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100010502 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105331121 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088803637 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084709092 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113953545 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099881855 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110762221 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100301643 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127706948 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104877657 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072380513 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100425205 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095382534 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147226128 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095642641 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084879931 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.090684412 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097119018 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0768593 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.286099359 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082251391 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.080910042 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10695747 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.084589976 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090634853 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071466142 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.094108449 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087644296 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106657202 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.092072565 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.088777956 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101867892 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103741053 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080051538 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081295145 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115715597 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.120483142 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.095848322 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089229516 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082883062 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093265295 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08762817 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.102168421 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074779841 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.070596026 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.063494292 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067707886 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.110706013 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103316686 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09450616 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094103926 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098591737 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069308081 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083797037 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086408051 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.078652066 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085309414 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110403407 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099315953 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.124478676 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098536167 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088141977 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133438374 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122331398 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084980167 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08712356 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094209173 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07246739 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13997023 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111993692 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.072522998 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076944259 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.073394763 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080844521 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067648253 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098092896 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098951964 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070916101 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096032977 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091301985 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116139964 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090219715 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071153155 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.074598359 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.069661381 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.069768398 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.095547711 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.072260457 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07117583 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119687181 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095353803 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100122425 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077076203 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069162414 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.277176196 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065616124 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125473812 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077553967 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103042736 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.075229259 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074324996 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084399593 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098741421 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099089605 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105929103 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.06623034 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098249614 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147415253 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072658136 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071142431 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070329882 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104804536 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083601016 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133662727 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084490443 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085992399 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071849918 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119943134 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097066089 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079621419 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123714225 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076705042 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068540563 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082890223 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.106639099 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.069659288 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.072332428 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109812853 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.627546429 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087121594 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.072740503 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085502999 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124028288 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08003962 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104082739 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.112020969 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100594437 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.173562313 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.068956832 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085437183 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.0967685 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091376243 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085658156 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074010347 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.082979796 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081657316 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.078586332 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100008572 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.075267504 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084982504 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.074454291 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.096601224 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.121905717 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080757781 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.095588288 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081449172 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085022637 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092489281 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104663192 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.098335322 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.081726095 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08152 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101093653 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077130191 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.225974236 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094778792 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.072349948 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073719634 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11100937 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.079575874 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.087872616 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09758125 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.086168303 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107198081 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109823671 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104394669 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.091299045 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074321304 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080177843 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.081934231 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069228738 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07397482 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.069908338 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.065943562 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100269374 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080187476 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076547684 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.093372704 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.102471031 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093653382 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099717212 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084665481 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090743968 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094658212 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.120951516 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149108598 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096870872 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.116165469 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124111494 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.071777579 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.070457189 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.075309009 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.123192371 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.075789808 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08620914 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.224825073 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072994454 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075793309 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085709067 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100421204 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077370192 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074635695 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092769911 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104242815 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079003258 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076247185 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08736134 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.099683602 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.120596315 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083159519 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.070455269 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102594419 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096090708 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116062051 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.068844591 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075924713 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121272175 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082754046 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098273522 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074616025 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117849872 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123795056 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068841598 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083808006 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066083522 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082150882 seconds)
  done (took 48.557489173 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.144485174 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.138451401 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077539605 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.093231952 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.180767862 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.190063589 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.112776253 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.089300834 seconds)
  done (took 2.747348372 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.063800911 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077503764 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.094512852 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.077393062 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062247661 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063656879 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.188717175 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078566285 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063065124 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101365288 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072225402 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065222249 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.337533018 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.061401735 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062597967 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069477774 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062449917 seconds)
  done (took 3.27788489 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.348879897 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602498646 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.31030411 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070286635 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.693365773 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087222429 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.084733022 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131284554 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076388632 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.511630163 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.363701276 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123296373 seconds)
  done (took 18.083330839 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.070711753 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070882266 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074892291 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.075328747 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071170284 seconds)
  done (took 2.039392023 seconds)
done (took 96.269404817 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076780512 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.162168867 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065221051 seconds)
  done (took 1.935266348 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.076892795 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.075521807 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076202051 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.073372123 seconds)
  done (took 1.991316459 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.069571686 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072053814 seconds)
  done (took 1.825575603 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222623229 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158785216 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086937501 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.077229229 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076002013 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075570289 seconds)
  done (took 1.917921317 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067228477 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.066237496 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067229403 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.06770865 seconds)
  done (took 1.944906695 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.062935135 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0625917 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066043171 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.068956467 seconds)
  done (took 1.940382054 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.07767249 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077776369 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.072806939 seconds)
  done (took 1.909927456 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102568294 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090858548 seconds)
  done (took 1.871637038 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.074623237 seconds)
  done (took 1.763027102 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.083880685 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.090666031 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133884744 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.100050085 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.133084779 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118770534 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.071519469 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.072761942 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.068284724 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.06720622 seconds)
  done (took 2.627984362 seconds)
done (took 21.94872257 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073344153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361590551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356536253 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082801157 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667835369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354633532 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.96826218 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087969906 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094984945 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066139444 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082183514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645922695 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.954600322 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323178413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943040442 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318521459 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645029273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064869853 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.062648749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063605042 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.948344191 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062742506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064463849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064973323 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.644503948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367263165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.063751447 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32115486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063280676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068067128 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354296805 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067339456 seconds)
  done (took 15.968936184 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06513938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.113848967 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068696984 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079803165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066059451 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06586805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069085992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067223286 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106220609 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066526227 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082389415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065909142 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070604525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068022919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086045292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066822834 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068020169 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067733194 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06908032 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067812985 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08360415 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063761254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064338238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064614865 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064522234 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076160443 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065039092 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064497765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064341698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066643605 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067931719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065619719 seconds)
  done (took 3.99617453 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113986802 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117778438 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068969385 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101898823 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110503311 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067338222 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143697289 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088522937 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109217752 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066875307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083637914 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067004146 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101394951 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068756152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086686643 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067578578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068791364 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065920335 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064762146 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064546748 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081489946 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066280616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067482449 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067215394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068333282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081475215 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068359008 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066818446 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066941707 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069913686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071246514 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068834009 seconds)
  done (took 4.271335559 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.064872729 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.067220255 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.074834395 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.07680485 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063486684 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064272273 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.065590476 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.062258917 seconds)
  done (took 2.239514803 seconds)
done (took 28.178096953 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.073730495 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063689951 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066710288 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082121547 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.068927235 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.06590809 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060891124 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071628293 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068906003 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069912839 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070190248 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064556224 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067997808 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062553509 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069627421 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065065167 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.070642266 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068381157 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069295334 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070176456 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066500485 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069257079 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072550851 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069081964 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069003096 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.06904867 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.072583681 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070009077 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.064726875 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067091363 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067005564 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078975433 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070555157 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.070468203 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064460604 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064555509 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068249679 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066621762 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.074174528 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.072870428 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066306158 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073109857 seconds)
  done (took 4.564289489 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082759926 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089159732 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082483196 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079816191 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102787674 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080394235 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087594491 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07758685 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074727548 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087472275 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071550665 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.076765096 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077568737 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069983641 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076006186 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.072023849 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077690594 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072339876 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076350713 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07653363 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088650058 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071001835 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076665699 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078009967 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072518967 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078303555 seconds)
  done (took 3.766491681 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.067734501 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082928295 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087381204 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132944382 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103144208 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078636641 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07898994 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098332529 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096485872 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06597846 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.06940942 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091426728 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092173603 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072832748 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.102782258 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082695872 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.076700344 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067600293 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071514974 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097890675 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087953604 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083407828 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096494458 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085286171 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064904302 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073911366 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072454782 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082205975 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072212466 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076665807 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068944771 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068524258 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066281171 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076991889 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069025603 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063526365 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086119931 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075830697 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076576541 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.102524433 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072115583 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.064189446 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090602016 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123153547 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065227603 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067887591 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068669575 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076825839 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066566644 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093257121 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082574867 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064734227 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.082547128 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06607159 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066280159 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080572908 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066562292 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066916574 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076465736 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071071531 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084838846 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069715112 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084456741 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06532512 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075384491 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064872705 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06510676 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062041984 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096225882 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069407868 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110673896 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065517542 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063167811 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077095868 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075826274 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071844272 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064636137 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082443868 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076289046 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068449681 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076022142 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067546413 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068128772 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099003224 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063963098 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063345709 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06337345 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067533619 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067858991 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065616298 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078444818 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064663158 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068430275 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079511627 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064864479 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065863757 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067471403 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066176009 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064289187 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07536264 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068881558 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06723605 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076540269 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066055967 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068342022 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079493453 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074334819 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064273526 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.06649817 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067766054 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066859234 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06952421 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068352043 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067000173 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071077117 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072768593 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070573003 seconds)
  done (took 10.568539051 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.152423933 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.143491614 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.064874598 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.13794696 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073038793 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.069959452 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.141930067 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084371595 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065955115 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066680345 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065020316 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.09154055 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.086942059 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.096435755 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.067249729 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063970844 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087593416 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.094433515 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.140986626 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.136546696 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086136741 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.070614894 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.065914966 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065051337 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065258242 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07263727 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.07927639 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071617423 seconds)
  done (took 4.259958799 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.070637021 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103318956 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068660785 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.0887858 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084188083 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066355758 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067701682 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066962908 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081851231 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072792349 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065322052 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070138849 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069143919 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068584064 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066658618 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071779988 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07164461 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064794845 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069258323 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070489095 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075330723 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090053736 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.0701394 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065828546 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067659136 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065303358 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072840056 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075172138 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06510237 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094464215 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062937029 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069866628 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.0797154 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066533582 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065261974 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066387566 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065571795 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065855998 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065824141 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064046248 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063830617 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069654113 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064696259 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.071740265 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078828974 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073057385 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.0670583 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067662749 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067257517 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062293701 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068302264 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068287657 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067829988 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073518609 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069147352 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067706254 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068827938 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09483018 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071345321 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.065069829 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064707416 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064862402 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066583645 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073528265 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081057223 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066648559 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064030442 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065550379 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070451343 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078704725 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065435723 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070103672 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062911366 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065819251 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068030721 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068273943 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06746818 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064278247 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065428213 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065286535 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065772969 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06525351 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065182511 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.068268335 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063457977 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063958038 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066026298 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066805506 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.070398991 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062229896 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066075067 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064511154 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062499445 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.065857046 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068543121 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0663709 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083498282 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.072338369 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.063691822 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061465228 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.076965748 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065227255 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06299324 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069270208 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.06740191 seconds)
  done (took 9.04925534 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.084728085 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065025144 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08168578 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088614289 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073342137 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.068676011 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07703604 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.064617613 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.078679096 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.062741822 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072160028 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062018608 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075274594 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.071868847 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.064935236 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073125245 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066040999 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082267362 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077422329 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062269057 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071535306 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.074724168 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.075371546 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079801539 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080924242 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082430445 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077113241 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067947432 seconds)
  done (took 3.810407708 seconds)
done (took 37.710968734 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.785869421 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.949839945 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.771489824 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.962299355 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.834811692 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.899526134 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.886773927 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.770393837 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.977814382 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.801731248 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.079564928 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.202295081 seconds)
done (took 66.687156438 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.803358597 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.921597449 seconds)
    (2/2) benchmarking "String"...
    done (took 1.987715822 seconds)
  done (took 5.618878098 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.978814718 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.416108113 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.049199239 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.772120392 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.779216734 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.265600384 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.577844467 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.254757963 seconds)
  done (took 30.824667183 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.909659132 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.000284347 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.473095851 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.512170232 seconds)
  done (took 15.655217273 seconds)
done (took 63.685400505 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.812747002 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.771524849 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.818625433 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.802799323 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.771623608 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.775332246 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.773233262 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.774288375 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.80978844 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.90161111 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.774543104 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.778396489 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.774880213 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.793767772 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.476814331 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.836641735 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.788753632 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.778869821 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.778562629 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.798794218 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.778639783 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.776306289 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.235019843 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.959069244 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.380442347 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.110551782 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.810086683 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.170970592 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.774981169 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.772640469 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.856330971 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.104130786 seconds)
  done (took 204.032074834 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.773890797 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.626520184 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.711442172 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.819781761 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.12042043 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.950990303 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.871775978 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.167320751 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.781956285 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.79973454 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.935183259 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.774319827 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.965085787 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.71232683 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.809330318 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.866328006 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.931400607 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.979234936 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.813576703 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.921677552 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.796773982 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.781866733 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.736980461 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.921881803 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.782097421 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.87571165 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.780554274 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.800574703 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.959859546 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.905551942 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.820871389 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.792463112 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.936635133 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.643718443 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.778794396 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.79494504 seconds)
  done (took 169.154589183 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.970343434 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.78013918 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.774455732 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.828744896 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.895356018 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.777351432 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.421793879 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.785903667 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.776351068 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.55030165 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.779647653 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.774511116 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.775834363 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.775867787 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.787011698 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.851175578 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.778984904 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.790784782 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.777913862 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.800057259 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.780338544 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.776809767 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.776403629 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.776867014 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.77712675 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.775518101 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.775704118 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.246180834 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.011302539 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.782029036 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.776017775 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.30459028 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.790099572 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.037729261 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.780567583 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.875555754 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.835111869 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.89576737 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.781857852 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.998395981 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.849906483 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.779743736 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.779704975 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.847146526 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.79140293 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.77933984 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.778753197 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.780455038 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.785394964 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.850103722 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.034131836 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.780141984 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.902400292 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.263031187 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.778773109 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.779736189 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.779315645 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.366191852 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.782994758 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.777678402 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.784897938 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.783799858 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.777440522 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.779312704 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.164707224 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.852407686 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.392357346 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.352830358 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.969115116 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.894000836 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.95434281 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.766434046 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.766867902 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.767283213 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.768408805 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.766274588 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.767292588 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.770815888 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.936024077 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.781593431 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.879628193 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.848237787 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.889396566 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.772065003 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.779208429 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.605049537 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.836741081 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.807569407 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.768788324 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.587207065 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.768552871 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.139461868 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.536186841 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.76772783 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.767407475 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.780324224 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.768896578 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.769330778 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.769162924 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.848030098 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.768793251 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.889487834 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.502312094 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.212982719 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.772719794 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.769120577 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.77751006 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.850413158 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.891032123 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.773049137 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.836229388 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.77484565 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.77104453 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.906166953 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.769514296 seconds)
  done (took 401.788940068 seconds)
done (took 778.719216573 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.348580649 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.323196292 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.4333337 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.339322178 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.313522896 seconds)
  done (took 13.465540749 seconds)
done (took 15.171894953 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.783261288 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.775416883 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.833685922 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.85440584 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.785821592 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.787507785 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.850719718 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.789693085 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.819429689 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.825298693 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.853446562 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.853875246 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.793736603 seconds)
  done (took 25.314376816 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.779176977 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.929655037 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.986996095 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.811807749 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.778917835 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.00142154 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.83686773 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.908944635 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.913289231 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.997658815 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.024817742 seconds)
  done (took 22.679592931 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.779312513 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.917415031 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.000083087 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.815942032 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.780837719 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.994300648 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.842674034 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.916691759 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.915765283 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.001532669 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.005039485 seconds)
  done (took 22.688954233 seconds)
done (took 72.390791388 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.774518187 seconds)
  done (took 3.485081183 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.792316325 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.918039552 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773500066 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.775386244 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.77472598 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.775052957 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.776146828 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.774758754 seconds)
  done (took 16.06990913 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.775237464 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.774232896 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.775679566 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.774746235 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.775543004 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.775427434 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.774461668 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.774767758 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.775877436 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.774636809 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.775172402 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.775314749 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.77492256 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.775164941 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.775887948 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.776086942 seconds)
  done (took 30.114911955 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.777428664 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.775363172 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.775277983 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.775724618 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.775129951 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.776122321 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.776527686 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.776199188 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.775045848 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.775817767 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.77719738 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.775857001 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.776227441 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.777687376 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.776057941 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.777080434 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.777060212 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.77671017 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.781447776 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.777003335 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.776692042 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.77763279 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.776285421 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.776926669 seconds)
  done (took 44.351454235 seconds)
done (took 95.740673198 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.583981875 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.545616926 seconds)
  done (took 9.841955522 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.777102625 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.777659333 seconds)
  done (took 5.27086968 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.778615976 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.777083004 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.777997357 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.777469524 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.777447667 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.776853767 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.77676311 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.777365125 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.777925235 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.77749937 seconds)
  done (took 19.489116087 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.777126081 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.777520865 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.778628801 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.778145089 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.778196704 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.778266704 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.77817889 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.778787148 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.778661755 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.779079284 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.778039541 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.77811681 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.778960062 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.77915759 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.778181268 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.778770799 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.778653123 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.779135426 seconds)
  done (took 33.726098008 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.778780359 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.779615965 seconds)
  done (took 5.271868188 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.781563893 seconds)
    (2/7) benchmarking "second"...
    done (took 1.777892912 seconds)
    (3/7) benchmarking "month"...
    done (took 1.779598816 seconds)
    (4/7) benchmarking "year"...
    done (took 1.779424615 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.778932692 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.779097421 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.779066799 seconds)
  done (took 14.170695695 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.780523369 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.928066379 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.982775415 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.365987042 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.77970427 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.78144343 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.673359772 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.78332378 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.784171664 seconds)
  done (took 19.574151995 seconds)
done (took 109.056071099 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.586128293 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.781129033 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.067193375 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.854444629 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.796252142 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.075485335 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.795582265 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.42309331 seconds)
done (took 42.094416451 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.86138309 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.778438484 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.821507929 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.824001103 seconds)
  done (took 22.139007247 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.780259745 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.096407245 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.80641275 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.640789802 seconds)
  done (took 22.059023095 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.1597262 seconds)
    (2/2) benchmarking "read"...
    done (took 2.136520055 seconds)
  done (took 6.016937643 seconds)
done (took 58.795011976 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781028248 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.780813146 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.780564859 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.78059008 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.782341055 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.781281984 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.781636015 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.783759065 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.7809701 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.781649607 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.784373905 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781097002 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.781744348 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781399883 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781879453 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781456888 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.785200041 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782206753 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.781341799 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.782684073 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781439263 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784134466 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.782458388 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.782519429 seconds)
  done (took 44.487823644 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.781800515 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.781012459 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.785069436 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.782742549 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.782827869 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.78247191 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.78274929 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.78283077 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.784777552 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.782773793 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.782294504 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.782859771 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.782457207 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.786160758 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783403437 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.783578937 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.783769904 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78271139 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783274545 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.786445496 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.784060583 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783450939 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.78425458 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782649791 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.785917324 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.784013809 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.783878209 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.784539004 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783180469 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.784871771 seconds)
  done (took 55.227672996 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.783769814 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.783981388 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.784596859 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.783723548 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.784259297 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.786812284 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.78440224 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.78438433 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.784213451 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.785080072 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.786077353 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.784654541 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.78516708 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.784647595 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.784836223 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.783829929 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.790951808 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.784428198 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.785017426 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.784554941 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.784126314 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.785829047 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.784324702 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.78604685 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.784931056 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.784701826 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.785576136 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.788708234 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.785617258 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.785785052 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.785411113 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.785663118 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.785234486 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.78763079 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.784872151 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.78550289 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.787077013 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.785639015 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.788305738 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.787287511 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.786967836 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.787568975 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.786838517 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.786172044 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.788737706 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.787982188 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.787079415 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.787039176 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.787399609 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.788518318 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.788850324 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.788570301 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.78750442 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.787786905 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.787980278 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.789332721 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.78773266 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.787075423 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.787194987 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.787720313 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.788439633 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.789204378 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.787953071 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.786688611 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.787204051 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.787342602 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.789020986 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.788059023 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.788324454 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.788711324 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.789076163 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.787353655 seconds)
  done (took 130.352761358 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.788177529 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.787926675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.787918895 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.786681862 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787947399 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.787944723 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.787405788 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787645163 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78798661 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.787693388 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787657403 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.788349584 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788164585 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.792289119 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.79039517 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.788257881 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.790162843 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.788551987 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.788499154 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.789577705 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789791058 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.790699756 seconds)
  done (took 41.076709616 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788755879 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.788663971 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.789088059 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.788727508 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78916418 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.789108794 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.789451816 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.793719114 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789662992 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790203284 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789796045 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789760031 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.789948485 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790806724 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789690118 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.789836033 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789648388 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.790238143 seconds)
  done (took 33.940211235 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.789622926 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.789970192 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.79000795 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.789052255 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.790016949 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.793707029 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78988318 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.791223227 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.789618179 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.790098126 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.790200943 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789458861 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.790441128 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791584172 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790817654 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.791193579 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.790479062 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790280064 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791880295 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791328768 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.791053685 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790834888 seconds)
  done (took 41.118909289 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790000751 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.79181765 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790985978 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.790753953 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.790417526 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.791434779 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.791746984 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.792392275 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.791918857 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.790997209 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792325883 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.791543384 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.793216101 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.792349365 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.791858154 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794075555 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.793428539 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793917211 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795119776 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.791874167 seconds)
  done (took 37.571567462 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792710986 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791585471 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.793906122 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793293267 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792250736 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.792822799 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792729765 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.793430836 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793519833 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.792532395 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.792282067 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.795507872 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792620552 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792534159 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.794175727 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79299495 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792755862 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.792994137 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.793443196 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79515625 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.792668177 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792596094 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793636544 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.793478609 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.793519171 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797102913 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793344988 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.793809728 seconds)
  done (took 51.941785852 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793535533 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795103538 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.793790625 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.793786535 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.793312023 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.793035073 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.793855231 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.794592848 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.793493878 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.794385734 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.794297744 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.793877818 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795221959 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.793879637 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.794415745 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.794737006 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79688984 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.794963536 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796212825 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795302989 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.796201078 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794422684 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.795016851 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.795115211 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795722967 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.795515495 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795736697 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.79644819 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794971457 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796922866 seconds)
  done (took 55.576405503 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.815555802 seconds)
    (2/2) benchmarking "in"...
    done (took 1.815899724 seconds)
  done (took 5.360024759 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.795702997 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797377106 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.796623359 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.79592536 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.796110717 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.795824726 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.799218637 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79636459 seconds)
  done (took 16.104329741 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.795795117 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.798739453 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.795930037 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.797307365 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.795638416 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804576363 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.799341769 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.797132132 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.798526114 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.797289785 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.799544604 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.799471425 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.803566571 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.800524445 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.799668717 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.797474959 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798092443 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799186235 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.798086096 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.796769126 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.801553805 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797505157 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.79706371 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.798840099 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.797656543 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.800538083 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.806113946 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.798401861 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.798336528 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.797466402 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.805006313 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.799324978 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.79714822 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79817557 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.798311233 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.798216685 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.805294651 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.797840963 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.797914401 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.798608788 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.802505662 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.804876849 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.809961153 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.81084093 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.8032461 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.803334414 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.802425367 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.803028688 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.803771307 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.806123606 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.810079622 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802722343 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.802592651 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.803610188 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.805623006 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.802637142 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.804627091 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.804796787 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810830567 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.811375392 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.806283588 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.823450916 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.811598233 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.803570347 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.8040957 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812933439 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.826370399 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.805830496 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.805358328 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.803986882 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.811761314 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.804186303 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.804304034 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.804867772 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818310364 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.811259356 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.804117488 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.803599968 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.803786558 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.804316398 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.805382285 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.805030664 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805319936 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.804807478 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813486949 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.828395473 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.806865396 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.803847758 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.806969761 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.80736023 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.80982737 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.808255696 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.807019868 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.805773188 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.806629246 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.808354145 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.805978118 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.806075892 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.805312384 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.816297969 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.807056697 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.805966261 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809310199 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.814157662 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.804950677 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.805736234 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.806432817 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.805814089 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.814208309 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.806297495 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.8061042 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.806762487 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.80714658 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.809422863 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.808323509 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80942539 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.812915583 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.814378505 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.808425651 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.810492821 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.810898364 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.809332532 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.816270581 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.831446748 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.806814063 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.810725137 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.811190704 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.817856581 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.810665996 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.807882265 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.811539746 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.808069726 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.807405216 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.810342234 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.807523485 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.807586669 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.808508122 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.807584127 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.807464938 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.809137245 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.811091224 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.812523345 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.810339547 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.808381693 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.811721819 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.80775021 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.81015022 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.818586482 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.808464274 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.808214028 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.808766072 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.810968231 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.811698661 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.810482839 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.809425402 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.808580961 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.81041408 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.809405398 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.813670146 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.809274007 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.80893289 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.810035171 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.812721993 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.809936052 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.809426531 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.809420437 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809001411 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.809271063 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.809936345 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.81282392 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.81225529 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.80914896 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.813770058 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.812194389 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.810903222 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.811774034 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.809752575 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.809482018 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.813203601 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.820528513 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.814519041 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.818789987 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.810160702 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.818284567 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.810774455 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.811428046 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.812223482 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.810337649 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.810488763 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.811705548 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.810643056 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.815093449 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831672993 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.821010062 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.812319245 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.811938394 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.815857577 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.815421993 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.816431289 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.811672049 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812092532 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.813790397 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.811111467 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.811543485 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.812074987 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.813458767 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.811550784 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.812295585 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.815698676 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.813255299 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.811620885 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.812547349 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.812832016 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.816444571 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.812592 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.812383286 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.81241372 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.811690109 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.820278448 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815860425 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.812444455 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.811963771 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.815979421 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.81287419 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.814431839 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.813965931 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.816444036 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.812335225 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.814205878 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820803383 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.816796412 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.812695172 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.813558629 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.812012254 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.815423567 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.816346546 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.815880802 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.821111405 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.815955616 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.815804637 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.818640399 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.81605759 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.815673869 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.81390927 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.814946433 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.813453433 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.817294042 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.81386429 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.813732823 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.821524938 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.813749663 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.815000116 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.816695697 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.817413038 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.815304491 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.816753361 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.814885725 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818825583 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.821849883 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.819706059 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.814855078 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.817893736 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.815618951 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.816510635 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.817998251 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.815067383 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.828267911 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.823779827 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.816450511 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.81531105 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.815089349 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.817876833 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.817113895 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.815197027 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823293766 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.816570506 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.816543124 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.81971361 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.815504182 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.815636549 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823055875 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816745737 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.819416463 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.816879322 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.816929462 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.816755467 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.81659777 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.818670068 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.816026766 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.81783834 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.819923657 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.816574897 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.817028317 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.816550011 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.825986715 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.816723459 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.816587111 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825098657 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.817311265 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.816760421 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.817662076 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.81650975 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.817030816 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.817952058 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.816511226 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.819487227 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.81727481 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.821310172 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.827197362 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.821153125 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.827411295 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.818770465 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.827912369 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.81737525 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.817943149 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.817850978 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.821451114 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.825521513 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.818397239 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.818371013 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.825782944 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.819545098 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.820295379 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.821868532 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.817896171 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.818518539 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.81769178 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.81911297 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.823367538 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.821788241 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.818315372 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.817452724 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.818309669 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.817811151 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.821573189 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.8209374 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.819762104 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.819801505 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.818427859 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.818029541 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.819298613 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.81850887 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.818259947 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.819204919 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.818888179 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827357954 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.819654938 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.819498197 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822950775 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.820177509 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.827793833 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.820261738 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.819184201 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.820408959 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.819974986 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.823813063 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.822739888 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.819745309 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.82025522 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.819788825 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.821413407 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.831747331 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.829695122 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.825409634 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.822000241 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.821539863 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.822014575 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831071301 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.844916127 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822133166 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.82288294 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.82973349 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.829853671 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.824260955 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.826823816 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.824602227 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.828595854 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.823359694 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.821792592 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.825084351 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.833062716 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821699408 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.821290632 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.822392838 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.826335959 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.824028359 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.822071182 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.822825805 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.828150226 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.82327876 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.832916973 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.821834437 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.824391433 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.822335958 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.822616087 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.821954565 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.821758407 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.823478219 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.82406797 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.822998311 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.824979556 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.823945679 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.827870444 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.822351729 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.830584848 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.833363495 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823586344 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.822894264 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.826008372 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.822409753 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.824670996 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824091615 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.823072289 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.825115765 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.823385592 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.824508157 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.827697535 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.831692545 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824884556 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.824068153 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.824802263 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.830005541 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.829742396 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.824088579 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.825414347 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.833577197 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.827327843 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.835399282 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.83257643 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.824872597 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.826292818 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831826062 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.83254197 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.825895835 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.824428703 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.825095361 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.828060748 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.829939 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.826744235 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824968031 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.826054285 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.830041151 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.825133583 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.826618708 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.826752147 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.824999532 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.827900922 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.827112987 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.83076133 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.827048433 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.826036697 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.824243989 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.827228407 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.827828726 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.830556457 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827524039 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.826751418 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.827745485 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.828550879 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.830485868 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.826893539 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.826569903 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.828562377 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.826693451 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.826335789 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.827388715 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.828331704 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.827339321 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.82975824 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.834471633 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.829896909 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.828585567 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.827087175 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.830833077 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.826364699 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.827409489 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.827056456 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.830235298 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.835668583 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.827857924 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.828635834 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.827125556 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.828840772 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.834069503 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.828808452 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.83248872 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.829404645 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.829009138 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.828489123 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.832156854 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.836047387 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.832245499 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.831559877 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.835409483 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.832343768 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.830104955 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.827655016 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.828154427 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.828621636 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.829465381 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.831870119 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.830310044 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.82985216 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.831192904 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.830964249 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.828956188 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.831136659 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.829606547 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.829177825 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.833147697 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.837871848 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.839881799 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.830342085 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.831106995 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.82807287 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.832494864 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.840579637 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.829308336 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.828128615 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.831255716 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.830569744 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.83044145 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.837372452 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.83846255 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.833039025 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.829378108 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.835522268 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.847535499 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.832347038 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.840014966 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.861737119 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.833170403 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.830560818 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.830545897 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.831433731 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.831757465 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.834774483 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.830697749 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.83770765 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.830705658 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.830816178 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.837942323 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.831855512 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.831303964 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.831541028 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.831923614 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.836189725 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.83167562 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.838811818 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.83103085 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.831515181 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.831369059 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.835839466 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.833902828 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.832815409 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.831419655 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.833831531 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.832445031 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.832281292 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.841273736 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.832419868 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.832764347 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.844948729 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.843016613 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.832735447 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.832768076 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.832774386 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.838156644 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.836820663 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.834365165 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.835748644 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.839946324 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.83666293 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.840812792 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.834264095 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.83329738 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833745223 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.83302226 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832912479 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.846467286 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.845130822 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.832644502 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.83435381 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.839215289 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.834271436 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.842030772 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.842980773 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833464353 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.835184124 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833706142 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.8342108 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.83460815 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.834152326 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.837713392 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.841524493 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.834492315 seconds)
  done (took 1086.081411541 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.836030954 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834884709 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835093661 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.833987945 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836872492 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835534167 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834843342 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.83427875 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.834097854 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.83422225 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.836615609 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835180519 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.835312784 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.834354312 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834563024 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.834602495 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835519544 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.835215854 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.834060017 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834744355 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.835684871 seconds)
  done (took 40.30427316 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.834874819 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.834569592 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834444102 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836094621 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.834998792 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.835019984 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.835176182 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835028021 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.8348179 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835745349 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.836197962 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835224809 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.836098477 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.835578551 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835417522 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837654041 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.835596371 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.835168864 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.836177071 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835066906 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.835911756 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.836844591 seconds)
  done (took 42.152720017 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.835750753 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.836483762 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.836748961 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.836799094 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.836929186 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.835907102 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.836512719 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.838112964 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.838344934 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.836864922 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.842864343 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.843997734 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.83542529 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.840782558 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.83651863 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.837689667 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.983078581 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.837253569 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.836491303 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.837882869 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.838189932 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.844332666 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.837072319 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.83751678 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.836902947 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.838197746 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.837592578 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.837707357 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.838311833 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.838858092 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.842301165 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.838012233 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.838277266 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.841487703 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.838582412 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.838583301 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.842349973 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.838178338 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.838157219 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.839125393 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.848061734 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.86121845 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.839097505 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.839064465 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.846412738 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.838361566 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.838726021 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.842315082 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.846866408 seconds)
  done (took 92.052594303 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.838945041 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.838783337 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.83834091 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.841715398 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.839889814 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.838927404 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.839295907 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.839984646 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.840357079 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.839223247 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.839480231 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.83937296 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.8387662 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.84040362 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.838879003 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.839671226 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.839426052 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.840537137 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.839637757 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.839915193 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.839794381 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.839564196 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.839505938 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.840694886 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.842090763 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.839229728 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839962391 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.839702612 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.840841073 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.841135672 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.840219995 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.840273683 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.839537759 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.840698523 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.840901946 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.840863656 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.840608676 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.840916118 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839777466 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.84103337 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.842528595 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.842521348 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.840680139 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.840417215 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.840303518 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.841238851 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.841856085 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.841480328 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.840906647 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.840703052 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.84161448 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.841879742 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841208302 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.841684605 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841853311 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.841714886 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.843739878 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.842363108 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.843443911 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.842515575 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.842518305 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.842747389 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.84305218 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.84158168 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.842445004 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.843260213 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.843174494 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.84283404 seconds)
  done (took 126.951181747 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.842578139 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.843018851 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842999838 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843829221 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845167517 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.843703611 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842345496 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.842715376 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.843656055 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.843140551 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844445335 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.843607399 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.842346428 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.843262199 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.84372758 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.844312259 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.84312569 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.843203068 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.843341687 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843390714 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.846257686 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.844183474 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.84446432 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.844541842 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.844540576 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844188235 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845058836 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.844618377 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844492028 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.844180369 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844658424 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.844848768 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.844294544 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.844166461 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.845009572 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.84467453 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.845448998 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844219727 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.844559546 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.844961848 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.84521427 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.845452278 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846092917 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.844551593 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844594857 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.845003043 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.84566537 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.846047112 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.845741135 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.845699133 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.845553006 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844664464 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845075244 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.846736027 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846049009 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.846413728 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846585598 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845813045 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846263854 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.846943537 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845751277 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.846685691 seconds)
  done (took 116.146955985 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84532756 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.845749054 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.845782172 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.846619755 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.846296563 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.846244819 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.847803984 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.84621087 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.84617092 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.846578367 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846806802 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846502014 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8482121 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847081663 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.846193375 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847912559 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847826688 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.848064908 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84628635 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.846678583 seconds)
  done (took 38.714313472 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.846964993 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.847713264 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.847974493 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.847512392 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.848274547 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.847396845 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.847074157 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847923807 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848219443 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84744509 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.84666056 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.847407696 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84825446 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.84819606 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.848484516 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.848277603 seconds)
  done (took 31.344212744 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.849053836 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.847773236 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.847571863 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.848517548 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.848598004 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.84816674 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.849638654 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.848319503 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.849197192 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.848700907 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.849303048 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.848176133 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.849024159 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.848809484 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.848599084 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.848867026 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.848860076 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.849578657 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.849082294 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.849208203 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.848613051 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.849027114 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.849528063 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.84902835 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.849313296 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.849557657 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.849883103 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.849500686 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.85054956 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.850047686 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.849003839 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.85051868 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.850150696 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.8501256 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.849610269 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.849476611 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.849827933 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.849641882 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.849584405 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.850418169 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.85064799 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.85034151 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.850678906 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.849836867 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.851239692 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.850890434 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.851107006 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.849548134 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.850275696 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.853319169 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.851649265 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.85062509 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.851543222 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.851654045 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.850905845 seconds)
  done (took 103.51669502 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850341568 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.851586207 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.850691242 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.851095585 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.851450969 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.850474546 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.850764031 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.851378286 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850749335 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.852057634 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.855469045 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.851568544 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850918703 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.850867901 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.851956567 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851835369 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.852119852 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.851620411 seconds)
  done (took 35.112500553 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.852113999 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.852480343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.852658367 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.852471611 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.851684551 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.851737346 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852054179 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.856926916 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852749035 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.852372223 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852618417 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.852439743 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853194928 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.851797472 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.851724149 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853005382 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.852008141 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852584049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.853296702 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.852421757 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851971809 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.852179579 seconds)
  done (took 42.542123443 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.858458538 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.852405289 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.867043678 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.873339498 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.873488746 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.887733834 seconds)
  done (took 12.998691148 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853768403 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85332274 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853616088 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854104257 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857730455 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854540096 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853916348 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85418622 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853477936 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858355632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855376131 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854673014 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854069973 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854161116 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854539203 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854018553 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8551749 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854276898 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854067739 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854241752 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855674015 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854693956 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854893099 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854449906 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85476945 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856644687 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856695544 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855355287 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855067081 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855184695 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853740957 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855285941 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855906921 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855456108 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855676557 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85505819 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855644764 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855530647 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855593681 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855769363 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.85584349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857194403 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860538785 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855218459 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856061655 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856366147 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855453628 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856946794 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85574216 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856000734 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856026496 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856279248 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856790557 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856944056 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856339835 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85676894 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856979389 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857654419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85990406 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858322578 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857954392 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857217846 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857596711 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857504403 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856772549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857200118 seconds)
  done (took 124.270393307 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857391138 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856282913 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85740194 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857154334 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857122427 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85660131 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857305346 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859588699 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856991903 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856897595 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85766104 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857703326 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857717496 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857377016 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857759394 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857799335 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857442146 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858391483 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858193794 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857581198 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858216671 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858273369 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857512946 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862156043 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858667474 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858230159 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858409752 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858408214 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85838208 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859541439 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858250868 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858650312 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858397564 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.857815468 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859869097 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858898589 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858115784 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859265175 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859246287 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861105469 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859239443 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859503138 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859209436 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860106894 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860363823 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859310715 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859228959 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859757294 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85953334 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86069647 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86233354 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861207471 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861134102 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860215254 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860301258 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861033095 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86208361 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860967243 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860122382 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86071491 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860448523 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860042847 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860947373 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860398784 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860687596 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860921431 seconds)
  done (took 124.492139307 seconds)
done (took 2531.161862315 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.908831603 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.940361815 seconds)
  done (took 15.641972727 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.028283505 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.979676381 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.864988694 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.907081498 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.865609731 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.886368568 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.883857429 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.864263007 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.865860177 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.864882866 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.866000043 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.051673425 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.86535508 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.866495312 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.866333487 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.957508808 seconds)
  done (took 52.285073289 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.871351313 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.868551087 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.881320575 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.869604196 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.871390051 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.884127824 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.89851019 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.874779664 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.908227459 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.884981021 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.941568078 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.881633578 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.870796111 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.922691878 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.884602899 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.886467579 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.964514641 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.948721524 seconds)
  done (took 35.910665818 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.949839673 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.87484302 seconds)
  done (took 10.626178128 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.861279425 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.86735684 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.874557673 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.878818142 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.862705962 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.889714709 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.886275159 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.879717311 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.885399212 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.880061953 seconds)
  done (took 70.565064621 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.871551477 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.871775539 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.869065186 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.866057522 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.863450394 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.868868221 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.866809089 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.864234524 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.556743262 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.908615042 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.879489927 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.875662496 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.866792652 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.867467637 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.864270777 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.893264478 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.973262963 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.864501341 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.863376439 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.873283009 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.867284423 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.94390188 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.881736795 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.868531338 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.902091243 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.56422717 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.880862312 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.873241311 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.987268964 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.864966595 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.866949842 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.078965038 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.874707878 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.331667124 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.146020529 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.874410845 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.87918504 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.877786551 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.866244348 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.014027955 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.869272186 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.874631184 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.796841392 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.115739128 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.964072175 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.914478677 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.208573816 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.872464956 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.868254971 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.902122677 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.873994068 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.869047299 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.886855953 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.386017701 seconds)
  done (took 132.874758871 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.867453932 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.229718451 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.031337588 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.867445646 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.153498111 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071775429 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.868313265 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912415206 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.868075137 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.097897256 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.119381185 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.971234881 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868773634 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.867107913 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.866140212 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.865981792 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010212242 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.936950224 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.870447894 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.866443474 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893537415 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106771203 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.987773944 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.868759228 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.893007305 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.073790744 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.988161466 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.971688045 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.645219162 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.86663568 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.927783793 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.869262566 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.868766319 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.866124379 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.019593846 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.960267408 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949630497 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.869142569 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.867575415 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.866242736 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.615028536 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063863097 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.960378194 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.992987338 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.117390353 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07056085 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.645215418 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.86672456 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.601569868 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029681965 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.094807064 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.100366341 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.98584225 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.870623186 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.204613416 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.867087254 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.867722396 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.113296912 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095875357 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.965706806 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872148506 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.868757902 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.86839202 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.156441008 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.870107719 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.962864144 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872147657 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.868655334 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.964865611 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.965176604 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.099931243 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080769123 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.901467939 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.230379262 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.380667101 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.113917368 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.9330409 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118517088 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.87196858 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868445261 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952765897 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.703960219 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.120969654 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.148690068 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11369241 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904165814 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.58617101 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.869321397 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.093297822 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.08818968 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.119062966 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.119499759 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.107872591 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.191907871 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.869003078 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.869678009 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.111242527 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.988468379 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.876840772 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.217311681 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09872471 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.414503906 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.896029966 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.175966472 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998246935 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.872661686 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.495377172 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.872322732 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.091291823 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.909923158 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.872229707 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.872030406 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.089351883 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.843106808 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874736362 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.771088718 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.930726541 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.87367726 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102174301 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.87493794 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.133552535 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872989334 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101361489 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.334184117 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900339412 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.044619896 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.116430041 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.874020051 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116091038 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.108248569 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.985777659 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.142533479 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.772181906 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.87305226 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.1569666 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.874931226 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.873481175 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.038268381 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.873712638 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.012934936 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.875625978 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.153082286 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894300378 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.105931048 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875075901 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.127852618 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.903806651 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.922017932 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.876140732 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.002897011 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.874640961 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.702023276 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.027886448 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873074623 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.872018973 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.425384778 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.875513332 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020907433 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.096291525 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893466498 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.945241219 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.532967439 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.871689071 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95739535 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895343206 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.271649506 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.874483054 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.122874488 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.875538969 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.872387988 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.873184208 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.15303035 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.106109211 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.873790084 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.871626736 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.766112958 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.869527555 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.866311145 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.043132594 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.75887552 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.86389764 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056900156 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.86267909 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983786937 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.861134563 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.922460725 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.185972256 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.851406227 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.852596008 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.847439549 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.847388649 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.846419056 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.049286509 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.868143482 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.367974302 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.978050818 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.107321248 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.150023146 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.083448586 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.881853701 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.845081843 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094437041 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.839469859 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.898151988 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.839985657 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.854534965 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066565224 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839911392 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040856032 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.104730044 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.837119325 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.879238152 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.834187273 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.828769991 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.828374557 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.965297917 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914029646 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.82877128 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.82484545 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.937140937 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.942329001 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.031315632 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.823347619 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.894496557 seconds)
  done (took 902.632668412 seconds)
done (took 1222.332084486 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.819443058 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.819590423 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.817723078 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.81671795 seconds)
  done (took 29.027543445 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.815424159 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.812524943 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.813940133 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.813764386 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.812298644 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.811692185 seconds)
  done (took 12.627106229 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.811771819 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.812138051 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.811489906 seconds)
  done (took 22.181279715 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.886241258 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.21410199 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.95053786 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.240816463 seconds)
  done (took 10.034352457 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.809270009 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.80815445 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.811095159 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.809911047 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.813424907 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.812142002 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.808943427 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.809683222 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.814017753 seconds)
  done (took 18.040525819 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.871265317 seconds)
done (took 97.537569966 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.060976214 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.729311293 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.952861991 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.977405078 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.173504248 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.94144389 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.878360364 seconds)
    (8/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.012328052 seconds)
    (9/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.878410666 seconds)
    (10/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.105198723 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.179984349 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.89554202 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.521970271 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.274160923 seconds)
    (15/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.87862639 seconds)
    (16/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.519241447 seconds)
    (17/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.017053963 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.029575628 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.162538996 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.26118719 seconds)
    (21/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.651157294 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.002229413 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.345650402 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.013538807 seconds)
    (25/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.672061897 seconds)
    (26/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.153611425 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.87858839 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.990232919 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.981137322 seconds)
    (30/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.96647406 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.87856731 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.285023889 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.202647725 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.02502787 seconds)
    (35/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.568469395 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.974829771 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.128053715 seconds)
    (38/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.070258793 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.187575911 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.0924741 seconds)
    (41/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.300196104 seconds)
    (42/309) benchmarking ("sort", Bool, false)...
    done (took 2.544243531 seconds)
    (43/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.646109107 seconds)
    (44/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.217440399 seconds)
    (45/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.193162491 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.941644383 seconds)
    (47/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.256386565 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.87932074 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.109797087 seconds)
    (50/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.061823467 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.541181637 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.133537151 seconds)
    (53/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.984619004 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.548401199 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.153495304 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.904307624 seconds)
    (57/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.884541744 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.776217459 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.026486552 seconds)
    (60/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.032648594 seconds)
    (61/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.352689563 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.964374829 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.093915893 seconds)
    (64/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.984677199 seconds)
    (65/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.965811107 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.989865226 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.887924733 seconds)
    (68/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.97563503 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.177339572 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.903455476 seconds)
    (71/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.883738347 seconds)
    (72/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.331976952 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.889516209 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.084630317 seconds)
    (75/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.962876386 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.424045263 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.066939664 seconds)
    (78/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.542802951 seconds)
    (79/309) benchmarking ("sort", Float32, false)...
    done (took 5.667846701 seconds)
    (80/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.635260954 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.884262778 seconds)
    (82/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.924841982 seconds)
    (83/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.981419368 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.883075942 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.966392145 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.88511512 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.201838648 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.276126298 seconds)
    (89/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.996449186 seconds)
    (90/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.885511037 seconds)
    (91/309) benchmarking ("sort", BigInt, false)...
    done (took 6.940306646 seconds)
    (92/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.887104479 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.266035228 seconds)
    (94/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.884595102 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 4.087628873 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.009939041 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.643067062 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.91091704 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.88420182 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.745171618 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.25501524 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.979693276 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.744772455 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.917611869 seconds)
    (105/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.885117908 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.936873863 seconds)
    (107/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.141766758 seconds)
    (108/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.989571851 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.923457982 seconds)
    (110/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.085304189 seconds)
    (111/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.256342463 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.973337873 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.279546543 seconds)
    (114/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.88696016 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.074035351 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.18186052 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.982221704 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.91491766 seconds)
    (119/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.188463674 seconds)
    (120/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.26642259 seconds)
    (121/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.047038279 seconds)
    (122/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.372309268 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.886213104 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.866543554 seconds)
    (125/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.278022635 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.483194613 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.199276528 seconds)
    (128/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.200419034 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.919106801 seconds)
    (130/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.885103029 seconds)
    (131/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.978056176 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.209597269 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.155203719 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.798171983 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.314148242 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.177358461 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.953315618 seconds)
    (138/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.587243199 seconds)
    (139/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.028401023 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.984679521 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.016677496 seconds)
    (142/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.966253617 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.896851186 seconds)
    (144/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.147585981 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.912283649 seconds)
    (146/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.786029704 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.958291731 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.482975494 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.206354252 seconds)
    (150/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.028898518 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.271093009 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.889275852 seconds)
    (153/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.661642747 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.011458545 seconds)
    (155/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.143700003 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.855309315 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.907527588 seconds)
    (158/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.071439248 seconds)
    (159/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.574111037 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.98669746 seconds)
    (161/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.022142274 seconds)
    (162/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.136317854 seconds)
    (163/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.952423356 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.888574331 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.889626717 seconds)
    (166/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.043208181 seconds)
    (167/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.296771482 seconds)
    (168/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.335352907 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.889518123 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.216961567 seconds)
    (171/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.504033673 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.261272341 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.995661883 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.981538637 seconds)
    (175/309) benchmarking ("sort", Int8, false)...
    done (took 4.86269541 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.235487529 seconds)
    (177/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.679697107 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.019069289 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.89133218 seconds)
    (180/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.034438236 seconds)
    (181/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.173717849 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.105234968 seconds)
    (183/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.921763954 seconds)
    (184/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.890769 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.697009367 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.792123513 seconds)
    (187/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.050176536 seconds)
    (188/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.030826418 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.047135619 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.116620218 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.920610948 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.131652083 seconds)
    (193/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.899993127 seconds)
    (194/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.906577121 seconds)
    (195/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.89484071 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.891465995 seconds)
    (197/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.96995926 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.833148084 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.149387318 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.232144088 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.316629078 seconds)
    (202/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.97518143 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.031479863 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.114361254 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.957313927 seconds)
    (206/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.012621068 seconds)
    (207/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.031396515 seconds)
    (208/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.066125966 seconds)
    (209/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.909879995 seconds)
    (210/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.521156288 seconds)
    (211/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.977422106 seconds)
    (212/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.65761944 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.119035497 seconds)
    (214/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.789992406 seconds)
    (215/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.197334029 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.644229708 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.621285132 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.207950159 seconds)
    (219/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.152208849 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.889456325 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.206492084 seconds)
    (222/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.898720858 seconds)
    (223/309) benchmarking ("sort", Float64, false)...
    done (took 5.598169372 seconds)
    (224/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.097923899 seconds)
    (225/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.018127859 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.907859384 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.886096026 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.900420063 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.087857668 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.194864874 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.146420261 seconds)
    (232/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.997132558 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.196407358 seconds)
    (234/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.914389122 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.886693289 seconds)
    (236/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.36518441 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.896390741 seconds)
    (238/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 8.443799687 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.066141851 seconds)
    (240/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.150580344 seconds)
    (241/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.987707211 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.12460523 seconds)
    (243/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.207042586 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.920449934 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.884702556 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.84184983 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.079460904 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.985743016 seconds)
    (249/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.958696835 seconds)
    (250/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.272656443 seconds)
    (251/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.988488874 seconds)
    (252/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.398568811 seconds)
    (253/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.294874686 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.656841294 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.993324164 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.959089194 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.919159222 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.206533875 seconds)
    (259/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.199637061 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.88181774 seconds)
    (261/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.146106364 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.877548467 seconds)
    (263/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.934165097 seconds)
    (264/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.88635958 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.752449656 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.097927096 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.866347966 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.322161668 seconds)
    (269/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.944850777 seconds)
    (270/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.13692138 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.631943249 seconds)
    (272/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.287713889 seconds)
    (273/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.30317268 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.997135157 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.007458163 seconds)
    (276/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.988142166 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.978318312 seconds)
    (278/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.936313913 seconds)
    (279/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.931175513 seconds)
    (280/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.992586632 seconds)
    (281/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.942536041 seconds)
    (282/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.891351081 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.97775189 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.184320158 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.00529662 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.984927319 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.863273569 seconds)
    (288/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.95282069 seconds)
    (289/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.852344355 seconds)
    (290/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.270972268 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.816836053 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.027511086 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.853296007 seconds)
    (294/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 4.273905984 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.929333403 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.87817314 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.933616319 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.141970087 seconds)
    (299/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.8859307 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.849479926 seconds)
    (301/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.007767979 seconds)
    (302/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.507675353 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.391107462 seconds)
    (304/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.92255362 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.230617769 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.895635494 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.737076366 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.288522547 seconds)
    (309/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.263228564 seconds)
  done (took 1016.887378626 seconds)
done (took 1018.777764164 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.920553366 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.915398708 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.89792842 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.919709537 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.010288338 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.942438473 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.911227001 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.90187556 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.949582157 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.947429966 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.896643123 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.938640004 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.89804001 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.898501438 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.898073968 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.915972125 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.212875327 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.931481932 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.915950601 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.910505445 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.916155446 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.896946035 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.947972133 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.940921503 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.90322896 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.902595908 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.901471673 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.918122807 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.011395007 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.901998232 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.903923679 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.911330443 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.21280597 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.93035837 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.897098292 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.918868041 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.911711099 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.909829801 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.90296836 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.933652551 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.368057984 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.905942417 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.899183551 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.900620728 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.899581495 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.907598322 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.899843697 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.908265158 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.915620742 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.916224713 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.359093184 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.922510989 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.902270488 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.900983031 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.914384884 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.900470676 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.904617319 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.915812482 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.920134347 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916448529 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.202247205 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.941618964 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.904020442 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.918225088 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.910446112 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.395990931 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.906679869 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.908071863 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.366688552 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.917873024 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.395902198 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.918068911 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.903997621 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.91689041 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.93511392 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.212319637 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.932736831 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.901315847 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.909499148 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.900808006 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.914442782 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917757948 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.907332409 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.904873935 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917940842 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.945770097 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.915152975 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.901781689 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.91390088 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.9213174 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.910229623 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.91461971 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.905427075 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.90222033 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.91434284 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.906097769 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.904540708 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.905153933 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.907592869 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.91588772 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.368305407 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.926136922 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.900406097 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.900486824 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.902615085 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.917966265 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.364825163 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.910537509 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.925857337 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.953544642 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.904445281 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.203594564 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.937948822 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.920446404 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.915559737 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.909178636 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.902957179 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.205161347 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.395842364 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.926198709 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.903863443 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.901580802 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.92123789 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.906249695 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.90249019 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.214089831 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.94040594 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.920254503 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.026422093 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.91793224 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.940438913 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.902777932 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.907770922 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.950534813 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.922274196 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.938061532 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.907131866 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.921848879 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.922571597 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.901722392 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.917007742 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.918156583 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.905043807 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.912771358 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.902660936 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.950993702 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.924088091 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.92017853 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.925941712 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.02726234 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.90419874 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.206661016 seconds)
done (took 299.33977485 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.0057869 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.902477207 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.997663859 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.903035464 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.995999104 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.987595465 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.902962892 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.902109425 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.902102217 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.466419234 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.902287692 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.908217428 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.9011301 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.903849868 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.977654591 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.904141121 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.903419189 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.189941759 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.906171024 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.991954962 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.901183234 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.904120504 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.903823104 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.421934006 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.903261278 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.90172055 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.987171935 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.904399532 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.196506585 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.90447785 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.901986522 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.19388252 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.988465324 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.913533321 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.905223539 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.908031685 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.991111092 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.909789109 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.968307214 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.969374897 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.991976564 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.928675614 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.897988877 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.893045175 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.893820404 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.892290862 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.892068082 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.920963474 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.889147151 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.894736035 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.203434531 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.890909098 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.890032528 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.885318481 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.884878808 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.902461236 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.881936557 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.882106423 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.974566845 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.883578779 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.954262985 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.400731161 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.407605023 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.879911638 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.879385326 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.877743954 seconds)
  done (took 186.643507093 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.941757942 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.954077332 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.939325621 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.879352972 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.927511778 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.941880979 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.879723274 seconds)
  done (took 15.271656215 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.877955514 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.870933025 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.930728224 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.930193799 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.87048757 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.053004483 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.882797295 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.876978257 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.89860724 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.871920208 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.506391877 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.931480022 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.881390857 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.871338485 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.883159684 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.934898984 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.875019086 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.872365272 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.982804388 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.020049104 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.877698 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.880359394 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.899269131 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.884319045 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.87318242 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.875145565 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.872203631 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.881455365 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.873338281 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.873553848 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.873687447 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.923814905 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.873312429 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.871716261 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.873335711 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.874934493 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.872867374 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.874010519 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.874385311 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.87113553 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.874309596 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.873779346 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.874144853 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.873729392 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.87304431 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.897339785 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.873421813 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.873600561 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.87399992 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.873487454 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.900503855 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.874418595 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.875490577 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.879285676 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.917305429 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.882150368 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.874224973 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.874800289 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.875039796 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.875401223 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.87394249 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.022715399 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.933962979 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.87462252 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.934976079 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.03116247 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.874996303 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.876817675 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.874960694 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.967759434 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.870980456 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.931075531 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.870706256 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.988731122 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.872209751 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.04695546 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.890969518 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.871299785 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.870940612 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.866884027 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.872430473 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.863335133 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.86812267 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.867770898 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.866499939 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.862205845 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.861758274 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.862830009 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.86829212 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.860881072 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.91114618 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.862049004 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.862279999 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.001609716 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.86209358 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.970383099 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.892006855 seconds)
  done (took 206.156444948 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.870161747 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.869283452 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.863835092 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.878432958 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.863697258 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.862748949 seconds)
  done (took 13.003001233 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.865799659 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.866302733 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.862776193 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.862821315 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.862942478 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.863212084 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.863172561 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865504464 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.868387546 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.863315882 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.863393132 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.862493526 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.863820841 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.862773629 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.863890392 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.863200406 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.863564979 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.863174461 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.863681687 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863898923 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.998779043 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.863917177 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.863761366 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.870948062 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.867259368 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.863696342 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.876662819 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.863914087 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.863708061 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.872420604 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.86843798 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.863409306 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.868770144 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.870388925 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.868763103 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.869297791 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.868248734 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.864337546 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.864253168 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.866062196 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.864549532 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.864994078 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.864870643 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.865454758 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.865838866 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.873453215 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.868878743 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.877060645 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.866398294 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.865395239 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.864483339 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.865258214 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.865328168 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.862227023 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.869290075 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.87096368 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.86677003 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.863269295 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.858697812 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.864721754 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.863516024 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.860151751 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.865218861 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.861268309 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.864730151 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.85709304 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.861701332 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.861600904 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857277308 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.853682091 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.853977751 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.854586948 seconds)
  done (took 137.19678343 seconds)
done (took 560.124357809 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.932052108 seconds)
  done (took 8.717453392 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.00474743 seconds)
  done (took 8.883898008 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.784188868 seconds)
  done (took 10.567565735 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.863230019 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.895490832 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.870637541 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.853932302 seconds)
  done (took 29.280351046 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.140730214 seconds)
  done (took 8.92659013 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.865269782 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.850294408 seconds)
  done (took 15.572951532 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.960425356 seconds)
  done (took 8.745591512 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.289523712 seconds)
  done (took 9.08878078 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.866574446 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.880632602 seconds)
  done (took 15.555085572 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.858231951 seconds)
  done (took 8.643211472 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.504156846 seconds)
  done (took 9.383998417 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.872053463 seconds)
  done (took 8.67887772 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.905820323 seconds)
  done (took 8.690529144 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.993871542 seconds)
  done (took 8.778850582 seconds)
done (took 161.298425041 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.86104377 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.85657811 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.856833689 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.855644547 seconds)
  done (took 29.215271974 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.889534795 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.888954538 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.898259575 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.889119501 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.879535509 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.879379627 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.889123196 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.889443234 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.881973791 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.887490336 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.890512632 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.886809017 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.88928157 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.898902161 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.898870104 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.887443543 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.889526963 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.890530847 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.880905631 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.898784477 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.88820056 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.890081831 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.855745125 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.856357997 seconds)
  done (took 47.061024313 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.042189079 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.921666808 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.009473043 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.901595578 seconds)
  done (took 9.66245448 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.855493354 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.919534467 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.907563943 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.90057182 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.940940711 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.959566684 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.908659825 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.066480034 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.97120555 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.982817502 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.863770306 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.87726984 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.87740686 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.904739725 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.960485479 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.85678208 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.856702989 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.972457869 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.91778531 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.067905821 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.85691599 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.911244131 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.942719673 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.909165705 seconds)
  done (took 47.976080259 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.858341509 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.865158325 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.864312859 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.858812217 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.858812772 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.857681152 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.864411407 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.860219552 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.8798076 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.860162192 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.857709389 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.858503933 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.865546208 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.858148043 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.857963593 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.871730761 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.873292872 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.860882709 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.862597238 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.865598281 seconds)
  done (took 39.049808213 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.855931624 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.702065411 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.200200404 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.108572741 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.85658091 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.858959415 seconds)
  done (took 31.371996112 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.87109445 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.867282943 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.857893735 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.917141256 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.99879571 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.86650627 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.859156964 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.869300797 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.907529104 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.928487716 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.87999215 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.891342156 seconds)
  done (took 24.505476889 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.859412218 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.883615355 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.861753489 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.872387727 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.870823122 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.869586134 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.8698316 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.856953908 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.873404742 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.880228653 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.86723445 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.870670398 seconds)
  done (took 44.231519198 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.073170174 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.084328202 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.080658522 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.496505327 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.861347086 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.758439565 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.586556038 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.61331479 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.148837271 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.839058469 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.826012637 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.742791139 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.101941187 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.86162773 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.112040606 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.788211601 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.861215393 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13167475 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.86219332 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.867797061 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.144634453 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.916568926 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.073423735 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.907256003 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.073787951 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.345644363 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.112492901 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.117798263 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.191993242 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.930274426 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.086415525 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.912386776 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.869084045 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.87131041 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.862682328 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.872013757 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131940776 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.862504317 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.871734143 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.850131209 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.788970015 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.183834099 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.983061291 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.271637092 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.992708855 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.102835625 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.866270907 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.07747691 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.92609683 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.116840336 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.974687317 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.074816115 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.786116724 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.222463525 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.993298192 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.863096824 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.866085745 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.56206096 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.102011653 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.944094324 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.203168737 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.982927439 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.864061346 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.950248253 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.862945238 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.974228023 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.052882655 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.867471013 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.861817826 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.870374027 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.959653754 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.076397037 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.863875239 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863677147 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.879468744 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.864886613 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.214520205 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.45117243 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.862940038 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.419513282 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.370994141 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.835942212 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.365686851 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.913197316 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.140884317 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.086281444 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.943116447 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.108404744 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.727656342 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.868537326 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.6691859 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.944625285 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.928974312 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.863958237 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.080426679 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.161474083 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.988398528 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.864450081 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.789729789 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.875704062 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.067750319 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.363972195 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.926206336 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.865619945 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.865152908 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.868532517 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.867165616 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.881613266 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.878826727 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.78298847 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.146133961 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.97064334 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.117126447 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.858007178 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.547958188 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.131663556 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.993902111 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.47146881 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.99945985 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.865237402 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00690158 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.876985813 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.869026502 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.055815167 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.274163793 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.08200014 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.114527026 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.937093209 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.895323653 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.871220438 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.949442035 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.091796023 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.86628403 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.112339013 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.114031831 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.549301217 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.9381287 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.942828758 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.876203855 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.081197977 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.949159151 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.417419687 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.084198972 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.462845353 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.860737053 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.367306718 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.12085808 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256535512 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.883007739 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.086329823 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.904401299 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.572120347 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.792859473 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.874839451 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.200306613 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.90373863 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.969554676 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.868639847 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.870123356 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.876653243 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.948989756 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.937988273 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.942551449 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.794745081 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.870998525 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.872373146 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.869215605 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.40669942 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.554301824 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.159980095 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.869096915 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.942303585 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.871979622 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.46420751 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.873139042 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.991534882 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.896501611 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.615111925 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.898965323 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.128052728 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.271862882 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.99086169 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.870577062 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.871617341 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.569290981 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.878773887 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.569605671 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.152312736 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.87129844 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.309235994 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.935538493 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.951154566 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.884550021 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.871020911 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.872662956 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.871725376 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.072921811 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.408600098 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.194780775 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.211964272 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.954699267 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.136232107 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.062681261 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.371216881 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.557306495 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.391669103 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.097365758 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.87189543 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.872953293 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.516627762 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.879842926 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.087092768 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.073410036 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.14480963 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.165412648 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.292629852 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.876323252 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.887728004 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.113284021 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.871537263 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.302685278 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.946219669 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.222806159 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.689665735 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.132061414 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.939075335 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.884542796 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.515422894 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009888976 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.831249183 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.999881942 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.798850577 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.555206397 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169821224 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.142931161 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.855161319 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.20603558 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.169227539 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.128978685 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.510295381 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.872914785 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.920073029 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.953347343 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.872514301 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.430796171 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.919705139 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.922005762 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.877965453 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.872509918 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.876041689 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.548178911 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.95276165 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.006167122 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.618253453 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.403303505 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.789387464 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.137567526 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.930812135 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.31511379 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.920618602 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.087403765 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.878497981 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.476056082 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.928535242 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.145549884 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.833738445 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.087720754 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.081865531 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.899819416 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.880365288 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.799895967 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.748812321 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.877585899 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.100009164 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.762460005 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.877108774 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.170073691 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.516504975 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.917310778 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.87667414 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.210652361 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.281959356 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.065513753 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.883881595 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.089001194 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.994456298 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.795185214 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.361624973 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.455646977 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.576872381 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.886715281 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.079635229 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.229720363 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.202146335 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.919232463 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.954804513 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.144517943 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.856719143 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.876108371 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.396848861 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.97367489 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.121332759 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.186008574 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.421786709 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.28631206 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.125349089 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.867107326 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.087911049 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.242521044 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.12271215 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.883852427 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.968358431 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.091407458 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.15669391 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.755526257 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.586907014 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.119981368 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.883249241 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.804917677 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.087201144 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.379460322 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.239096965 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.418520922 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.100919827 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.911441637 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.361674503 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.894174406 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.812707635 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.881670311 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.82694421 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.092550623 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.097831538 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.922950217 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.434460239 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.144558983 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.282780062 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.151745022 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.924727518 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.804408589 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.617209749 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.829534624 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.951242283 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.921067454 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.950559475 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.881364878 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.082082479 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.320313591 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.925538491 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.409343113 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.082000982 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183526709 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.149869163 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.177295788 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.839127527 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152414078 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.829841425 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.540037449 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.970457506 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.972166159 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.879314455 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.88240813 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15126862 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.223308872 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.505876231 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.92133462 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.216449092 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.987044643 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.882658418 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.885844506 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.397347718 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.121282599 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.096304012 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.958811444 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.088744957 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.955781902 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.397225599 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.887899331 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.886788168 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.019729947 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.883897149 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.682873831 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.17964001 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.665993489 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.086618509 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.40289361 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.78867637 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.10292933 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.93447101 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.88455878 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.950099579 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.888618597 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.123813012 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.151454514 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.646425249 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.88899491 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.885275926 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.771833092 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.607213282 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.123179021 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.897555976 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.947504392 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.887786675 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.002088709 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.884289315 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.144175263 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.939850767 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.884799455 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.888447992 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.098879863 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.400070712 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.901179559 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.58497777 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.088161007 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.889461659 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.370150918 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.324697061 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.183448578 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.934311005 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.111694268 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.138806989 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.407934736 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.112889896 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.887066076 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.111350384 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.887867619 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15720147 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161650971 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.888787538 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.102415869 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.399018077 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182389976 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.8997083 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.79824771 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.891767352 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.146728758 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.942697783 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.886288804 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.895169988 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.425619221 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.636379502 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.362286098 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.037314165 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.201552277 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.72448063 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.646498372 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.889833132 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.891016608 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.561873054 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.622898476 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.10166867 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.174279381 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.834207676 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.09087377 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.596821603 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.888318372 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.152425613 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.814859912 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.891130649 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.548546613 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.165497649 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.828136741 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.89453698 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.47241921 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.887383056 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.973148736 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.889463491 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.015650499 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.156179935 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.276044584 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.008423702 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.528183082 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.624968147 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.829994522 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.932852881 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.69567491 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.449431027 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.61382324 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91358481 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.905785121 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.815460252 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.893852199 seconds)
  done (took 1642.475382746 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.933748644 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.914686742 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.898993706 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.90782324 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.890792386 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.907399782 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.916504261 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.90059759 seconds)
  done (took 57.090056006 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.888837778 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.90472777 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.893643543 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.890386516 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.902081581 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.889808779 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.060975316 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.901096603 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.894051835 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.895943465 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.890836432 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.888828172 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.164704743 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.911349331 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.8902522 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.891797802 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.894900906 seconds)
  done (took 74.475576957 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.892336434 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.034313618 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.940429717 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.89246757 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.357819866 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.896102229 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.746076909 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.899264624 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.950092169 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.131139836 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.189102447 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.913320176 seconds)
  done (took 89.666736367 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.896443987 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.891537511 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.891395838 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.890341761 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.891413041 seconds)
  done (took 11.290893797 seconds)
done (took 2149.926957138 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.155398288 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.949370184 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.991711252 seconds)
  done (took 5.765192547 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.038887487 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.085327368 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.197712344 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.959931049 seconds)
  done (took 10.110942396 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.158141012 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.270050595 seconds)
  done (took 6.250362821 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.257116943 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.912213918 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.25865461 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.892513571 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.897979014 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.897089838 seconds)
  done (took 22.514508342 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.895085654 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.89410873 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.893101581 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.893008509 seconds)
  done (took 9.399971115 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.892932424 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.59201103 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.891233046 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.908482027 seconds)
  done (took 21.106679215 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.038110821 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.005105045 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.0316986 seconds)
  done (took 7.898053445 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.046152227 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.108521766 seconds)
  done (took 6.977174591 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.040091098 seconds)
  done (took 3.863545641 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.921116062 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.1653355 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.367240702 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.657710943 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.479798926 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.668512166 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.219320125 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.143643908 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.293859009 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.332859007 seconds)
  done (took 25.075318231 seconds)
done (took 134.366621158 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.238583027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.90644596 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.099323986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.247182418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.117198491 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.092674256 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.107308934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.239583192 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.925781653 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.909328511 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.248357957 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.120213856 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.056460354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.913379133 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.062832649 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.914151678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.118239498 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.252716889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.936593464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.15803408 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.117878991 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.898296714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.095422342 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.91064776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.120118187 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.048330637 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.442834586 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.917252759 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.084306419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.452557458 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.047011814 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.299641104 seconds)
  done (took 168.92606451 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.896204843 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.895820491 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.895778682 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.896122306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.210620183 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.895232565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.898957105 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.895876317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.096328276 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.087774846 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.896963707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.189777275 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.898554363 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.896498864 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.896667765 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.896992653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.248780616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.897287783 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.898179035 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.896845854 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.896313454 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.040912192 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.896868764 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.055198017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.241345694 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.896944891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.897683617 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.897472915 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.898092565 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.897513843 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.898593595 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.898194384 seconds)
  done (took 208.529727927 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.897184142 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.896714448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.899420802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.898428225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.898618752 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.899859081 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.900790903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.897675765 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.574835049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.560976772 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.897052876 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.899396367 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.901004743 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.900164777 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.899846388 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.896955797 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.897993652 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.912435677 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.897723229 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.899328454 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.901222024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.509721738 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.901890075 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.515217845 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.898705421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.900883852 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.901888514 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.899692871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.897862447 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.898388583 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.899631498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.900263714 seconds)
  done (took 221.184324325 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.139441202 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.901111387 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.900682579 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.945858374 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.90163814 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.90047942 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.907856808 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.146683424 seconds)
  done (took 19.573022413 seconds)
done (took 620.051276728 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.263967545 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.660929748 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.042372161 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.92469766 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.15019289 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.969146428 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.919358607 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.981364139 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.75048949 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.000168525 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.329178706 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.929854388 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.693750153 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.949066279 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.041540767 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.978505911 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.280124997 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.594336565 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.064102183 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.583062703 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.085156676 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.839379732 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.004855607 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.783921817 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.350521182 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.884886781 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.930720671 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.290455363 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.925719363 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.079944793 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.517865893 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.177702392 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.937980031 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.922480543 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.97490372 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.952391957 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.119787572 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.935910938 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.043856741 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.634716507 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.578724582 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.633244087 seconds)
  done (took 101.542616586 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.911145927 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.908167142 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.908441123 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.908361873 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.917627415 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.909177314 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.908764138 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.909764492 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.908815408 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.908566303 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.907861784 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.917702831 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.908832795 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.918497115 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.908233012 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.9092277 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.909847621 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.917829658 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.909917103 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.909146314 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.909260248 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.909707491 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.90547497 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.910553924 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.909977631 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.910319447 seconds)
  done (took 51.519814722 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.905811891 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.093014493 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.147471164 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.925855508 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.905518207 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.90732761 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.933619905 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.915045868 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.908036827 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.907269278 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.019704571 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.909351104 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.920777549 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.149164106 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.922501415 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.905446749 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.903882614 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.906339464 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.102250676 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.920737488 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.93569628 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.913760892 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.935225853 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.921363321 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.90775385 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907379295 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.909526106 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.3825502 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.918400217 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.022236934 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.950882944 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.938526035 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.255309119 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.162460941 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.962065995 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.912279425 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.906714575 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.026919953 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.912954459 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.906994799 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.935645745 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.915180268 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.153121908 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.431948838 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.921862612 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.90698878 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.376202159 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.039291581 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.94811989 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.916811232 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.160370198 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.924614294 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.907570583 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.908656122 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.94407985 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.919389096 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.907374312 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.20024988 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.92357426 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.934948591 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.915351475 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.908391677 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.109729998 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.917318596 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.097812502 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.917480088 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.913837346 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.909205242 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.154799612 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925830693 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.442382374 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.922868998 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.910718422 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.024547406 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.102968831 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.402481977 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.922498204 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.111913297 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.267925615 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.945708265 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.920807173 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.361939021 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.949802102 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.918926195 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.908495513 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.909038972 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.909467154 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.957076361 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.935012399 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.359627753 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.440668574 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.217292455 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.950728045 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.923678778 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.912800687 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.201781426 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.922253813 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.910254921 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.145963324 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.453358471 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.925724013 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.919427694 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.422438672 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.926212862 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.938126592 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.92294985 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.165926588 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.927781778 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.957008949 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.910723407 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.917703598 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.913173478 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.940600167 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.921058972 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.910812855 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.412137365 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.049698103 seconds)
  done (took 237.129190126 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.911155266 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.909405212 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.90962494 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.910102167 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.90947534 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.911085814 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.909417354 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.909684684 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.911459649 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.908748733 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.910824285 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.911811565 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.910790123 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.915922026 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.959907658 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.912608646 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.401442031 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.911608126 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.911661044 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.911295334 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.471790618 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.915207424 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.911577201 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.911276178 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.91089464 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.914722953 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.911507522 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.956820945 seconds)
  done (took 168.507478768 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.912070299 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.967173593 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.922712116 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.961083722 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.92571644 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.913414814 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.007221925 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.930694951 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.917888647 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.914038661 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.913492707 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.944639321 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.921574184 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.009864792 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.944563787 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.017892222 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.01449659 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.921724249 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.91428165 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.91434201 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.961453229 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.92647738 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.944770184 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.975610051 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.926213579 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.969730039 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.926942262 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.914631922 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.913335361 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.026640538 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.932156704 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.946057356 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.949191884 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.934840041 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.030951523 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.026138722 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.018295126 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.018180363 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.921836033 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.915974506 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.914660883 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.917204019 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.971174064 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.929130283 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.916918483 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.031978052 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.933390898 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.916040583 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.916427452 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.915492495 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.928116861 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.931974938 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.951083094 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.039236879 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.960115789 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.942626449 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.009513796 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.038123951 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.91631067 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.009854454 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.925076317 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.029065733 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.933839498 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.91689273 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.917210114 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.919323606 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.966379589 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.024929964 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.019580126 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.924694427 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.012291338 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.971918943 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.930104226 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.917306277 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.917502115 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.971642326 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.024688199 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.972723671 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.977448732 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.952848327 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.926307606 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.917440889 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.91860021 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.944628287 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.925479967 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.031448403 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.028984561 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.924672735 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.9179458 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.917845821 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.917969744 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.94270114 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.980538105 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.958578658 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.022703915 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.956488509 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.957875861 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.928412318 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.931941487 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.923711615 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.952495203 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.926650116 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.93095942 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.205177366 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.95019113 seconds)
  done (took 207.170856883 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.268230975 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.965989154 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.992940763 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.170424044 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.268636477 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.821767496 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.957680781 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.967209075 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.976822078 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.097231746 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.029165497 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.009475314 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.957433574 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.940631523 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.962127253 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.980303543 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.99235994 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.283954427 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.163891459 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.457050832 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.957882782 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.23797209 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.282175331 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.31839295 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.020189013 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.342694825 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.563633643 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.064058156 seconds)
  done (took 63.904674755 seconds)
done (took 831.605832102 seconds)
SAVING RESULT...
DONE!
